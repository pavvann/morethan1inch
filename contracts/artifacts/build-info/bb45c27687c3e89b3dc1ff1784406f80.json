{"id":"bb45c27687c3e89b3dc1ff1784406f80","_format":"hh-sol-build-info-1","solcVersion":"0.8.23","solcLongVersion":"0.8.23+commit.f704f362","input":{"language":"Solidity","sources":{"contracts/Resolver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity =0.8.23 ^0.8.0 ^0.8.20;\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/libraries/AddressLib.sol\n\ntype Address is uint256;\n\n/**\n* @notice AddressLib\n* @notice Library for working with addresses encoded as uint256 values, which can include flags in the highest bits.\n*/\nlibrary AddressLib {\n    uint256 private constant _LOW_160_BIT_MASK = (1 << 160) - 1;\n\n    /**\n    * @notice Returns the address representation of a uint256.\n    * @param a The uint256 value to convert to an address.\n    * @return The address representation of the provided uint256 value.\n    */\n    function get(Address a) internal pure returns (address) {\n        return address(uint160(Address.unwrap(a) & _LOW_160_BIT_MASK));\n    }\n\n    /**\n    * @notice Checks if a given flag is set for the provided address.\n    * @param a The address to check for the flag.\n    * @param flag The flag to check for in the provided address.\n    * @return True if the provided flag is set in the address, false otherwise.\n    */\n    function getFlag(Address a, uint256 flag) internal pure returns (bool) {\n        return (Address.unwrap(a) & flag) != 0;\n    }\n\n    /**\n    * @notice Returns a uint32 value stored at a specific bit offset in the provided address.\n    * @param a The address containing the uint32 value.\n    * @param offset The bit offset at which the uint32 value is stored.\n    * @return The uint32 value stored in the address at the specified bit offset.\n    */\n    function getUint32(Address a, uint256 offset) internal pure returns (uint32) {\n        return uint32(Address.unwrap(a) >> offset);\n    }\n\n    /**\n    * @notice Returns a uint64 value stored at a specific bit offset in the provided address.\n    * @param a The address containing the uint64 value.\n    * @param offset The bit offset at which the uint64 value is stored.\n    * @return The uint64 value stored in the address at the specified bit offset.\n    */\n    function getUint64(Address a, uint256 offset) internal pure returns (uint64) {\n        return uint64(Address.unwrap(a) >> offset);\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/utils/Context.sol\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/libraries/MakerTraitsLib.sol\n\ntype MakerTraits is uint256;\n\n/**\n * @title MakerTraitsLib\n * @notice A library to manage and check MakerTraits, which are used to encode the maker's preferences for an order in a single uint256.\n * @dev\n * The MakerTraits type is a uint256 and different parts of the number are used to encode different traits.\n * High bits are used for flags\n * 255 bit `NO_PARTIAL_FILLS_FLAG`          - if set, the order does not allow partial fills\n * 254 bit `ALLOW_MULTIPLE_FILLS_FLAG`      - if set, the order permits multiple fills\n * 253 bit                                  - unused\n * 252 bit `PRE_INTERACTION_CALL_FLAG`      - if set, the order requires pre-interaction call\n * 251 bit `POST_INTERACTION_CALL_FLAG`     - if set, the order requires post-interaction call\n * 250 bit `NEED_CHECK_EPOCH_MANAGER_FLAG`  - if set, the order requires to check the epoch manager\n * 249 bit `HAS_EXTENSION_FLAG`             - if set, the order has extension(s)\n * 248 bit `USE_PERMIT2_FLAG`               - if set, the order uses permit2\n * 247 bit `UNWRAP_WETH_FLAG`               - if set, the order requires to unwrap WETH\n\n * Low 200 bits are used for allowed sender, expiration, nonceOrEpoch, and series\n * uint80 last 10 bytes of allowed sender address (0 if any)\n * uint40 expiration timestamp (0 if none)\n * uint40 nonce or epoch\n * uint40 series\n */\nlibrary MakerTraitsLib {\n    // Low 200 bits are used for allowed sender, expiration, nonceOrEpoch, and series\n    uint256 private constant _ALLOWED_SENDER_MASK = type(uint80).max;\n    uint256 private constant _EXPIRATION_OFFSET = 80;\n    uint256 private constant _EXPIRATION_MASK = type(uint40).max;\n    uint256 private constant _NONCE_OR_EPOCH_OFFSET = 120;\n    uint256 private constant _NONCE_OR_EPOCH_MASK = type(uint40).max;\n    uint256 private constant _SERIES_OFFSET = 160;\n    uint256 private constant _SERIES_MASK = type(uint40).max;\n\n    uint256 private constant _NO_PARTIAL_FILLS_FLAG = 1 << 255;\n    uint256 private constant _ALLOW_MULTIPLE_FILLS_FLAG = 1 << 254;\n    uint256 private constant _PRE_INTERACTION_CALL_FLAG = 1 << 252;\n    uint256 private constant _POST_INTERACTION_CALL_FLAG = 1 << 251;\n    uint256 private constant _NEED_CHECK_EPOCH_MANAGER_FLAG = 1 << 250;\n    uint256 private constant _HAS_EXTENSION_FLAG = 1 << 249;\n    uint256 private constant _USE_PERMIT2_FLAG = 1 << 248;\n    uint256 private constant _UNWRAP_WETH_FLAG = 1 << 247;\n\n    /**\n     * @notice Checks if the order has the extension flag set.\n     * @dev If the `HAS_EXTENSION_FLAG` is set in the makerTraits, then the protocol expects that the order has extension(s).\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the flag is set.\n     */\n    function hasExtension(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _HAS_EXTENSION_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the maker allows a specific taker to fill the order.\n     * @param makerTraits The traits of the maker.\n     * @param sender The address of the taker to be checked.\n     * @return result A boolean indicating whether the taker is allowed.\n     */\n    function isAllowedSender(MakerTraits makerTraits, address sender) internal pure returns (bool) {\n        uint160 allowedSender = uint160(MakerTraits.unwrap(makerTraits) & _ALLOWED_SENDER_MASK);\n        return allowedSender == 0 || allowedSender == uint160(sender) & _ALLOWED_SENDER_MASK;\n    }\n\n    /**\n     * @notice Checks if the order has expired.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the order has expired.\n     */\n    function isExpired(MakerTraits makerTraits) internal view returns (bool) {\n        uint256 expiration = (MakerTraits.unwrap(makerTraits) >> _EXPIRATION_OFFSET) & _EXPIRATION_MASK;\n        return expiration != 0 && expiration < block.timestamp;  // solhint-disable-line not-rely-on-time\n    }\n\n    /**\n     * @notice Returns the nonce or epoch of the order.\n     * @param makerTraits The traits of the maker.\n     * @return result The nonce or epoch of the order.\n     */\n    function nonceOrEpoch(MakerTraits makerTraits) internal pure returns (uint256) {\n        return (MakerTraits.unwrap(makerTraits) >> _NONCE_OR_EPOCH_OFFSET) & _NONCE_OR_EPOCH_MASK;\n    }\n\n    /**\n     * @notice Returns the series of the order.\n     * @param makerTraits The traits of the maker.\n     * @return result The series of the order.\n     */\n    function series(MakerTraits makerTraits) internal pure returns (uint256) {\n        return (MakerTraits.unwrap(makerTraits) >> _SERIES_OFFSET) & _SERIES_MASK;\n    }\n\n    /**\n      * @notice Determines if the order allows partial fills.\n      * @dev If the _NO_PARTIAL_FILLS_FLAG is not set in the makerTraits, then the order allows partial fills.\n      * @param makerTraits The traits of the maker, determining their preferences for the order.\n      * @return result A boolean indicating whether the maker allows partial fills.\n      */\n    function allowPartialFills(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _NO_PARTIAL_FILLS_FLAG) == 0;\n    }\n\n    /**\n     * @notice Checks if the maker needs pre-interaction call.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the maker needs a pre-interaction call.\n     */\n    function needPreInteractionCall(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _PRE_INTERACTION_CALL_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the maker needs post-interaction call.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the maker needs a post-interaction call.\n     */\n    function needPostInteractionCall(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _POST_INTERACTION_CALL_FLAG) != 0;\n    }\n\n    /**\n      * @notice Determines if the order allows multiple fills.\n      * @dev If the _ALLOW_MULTIPLE_FILLS_FLAG is set in the makerTraits, then the maker allows multiple fills.\n      * @param makerTraits The traits of the maker, determining their preferences for the order.\n      * @return result A boolean indicating whether the maker allows multiple fills.\n      */\n    function allowMultipleFills(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _ALLOW_MULTIPLE_FILLS_FLAG) != 0;\n    }\n\n    /**\n      * @notice Determines if an order should use the bit invalidator or remaining amount validator.\n      * @dev The bit invalidator can be used if the order does not allow partial or multiple fills.\n      * @param makerTraits The traits of the maker, determining their preferences for the order.\n      * @return result A boolean indicating whether the bit invalidator should be used.\n      * True if the order requires the use of the bit invalidator.\n      */\n    function useBitInvalidator(MakerTraits makerTraits) internal pure returns (bool) {\n        return !allowPartialFills(makerTraits) || !allowMultipleFills(makerTraits);\n    }\n\n    /**\n     * @notice Checks if the maker needs to check the epoch.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the maker needs to check the epoch manager.\n     */\n    function needCheckEpochManager(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _NEED_CHECK_EPOCH_MANAGER_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the maker uses permit2.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the maker uses permit2.\n     */\n    function usePermit2(MakerTraits makerTraits) internal pure returns (bool) {\n        return MakerTraits.unwrap(makerTraits) & _USE_PERMIT2_FLAG != 0;\n    }\n\n    /**\n     * @notice Checks if the maker needs to unwraps WETH.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the maker needs to unwrap WETH.\n     */\n    function unwrapWeth(MakerTraits makerTraits) internal pure returns (bool) {\n        return MakerTraits.unwrap(makerTraits) & _UNWRAP_WETH_FLAG != 0;\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/libraries/RevertReasonForwarder.sol\n\n/**\n * @title RevertReasonForwarder\n * @notice Provides utilities for forwarding and retrieving revert reasons from failed external calls.\n */\nlibrary RevertReasonForwarder {\n    /**\n     * @dev Forwards the revert reason from the latest external call.\n     * This method allows propagating the revert reason of a failed external call to the caller.\n     */\n    function reRevert() internal pure {\n        // bubble up revert reason from latest external call\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n            returndatacopy(ptr, 0, returndatasize())\n            revert(ptr, returndatasize())\n        }\n    }\n\n    /**\n     * @dev Retrieves the revert reason from the latest external call.\n     * This method enables capturing the revert reason of a failed external call for inspection or processing.\n     * @return reason The latest external call revert reason.\n     */\n    function reReason() internal pure returns (bytes memory reason) {\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            reason := mload(0x40)\n            let length := returndatasize()\n            mstore(reason, length)\n            returndatacopy(add(reason, 0x20), 0, length)\n            mstore(0x40, add(reason, add(0x20, length)))\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/libraries/TakerTraitsLib.sol\n\ntype TakerTraits is uint256;\n\n/**\n * @title TakerTraitsLib\n * @notice This library to manage and check TakerTraits, which are used to encode the taker's preferences for an order in a single uint256.\n * @dev The TakerTraits are structured as follows:\n * High bits are used for flags\n * 255 bit `_MAKER_AMOUNT_FLAG`           - If set, the taking amount is calculated based on making amount, otherwise making amount is calculated based on taking amount.\n * 254 bit `_UNWRAP_WETH_FLAG`            - If set, the WETH will be unwrapped into ETH before sending to taker.\n * 253 bit `_SKIP_ORDER_PERMIT_FLAG`      - If set, the order skips maker's permit execution.\n * 252 bit `_USE_PERMIT2_FLAG`            - If set, the order uses the permit2 function for authorization.\n * 251 bit `_ARGS_HAS_TARGET`             - If set, then first 20 bytes of args are treated as target address for maker’s funds transfer.\n * 224-247 bits `ARGS_EXTENSION_LENGTH`   - The length of the extension calldata in the args.\n * 200-223 bits `ARGS_INTERACTION_LENGTH` - The length of the interaction calldata in the args.\n * 0-184 bits                             - The threshold amount (the maximum amount a taker agrees to give in exchange for a making amount).\n */\nlibrary TakerTraitsLib {\n    uint256 private constant _MAKER_AMOUNT_FLAG = 1 << 255;\n    uint256 private constant _UNWRAP_WETH_FLAG = 1 << 254;\n    uint256 private constant _SKIP_ORDER_PERMIT_FLAG = 1 << 253;\n    uint256 private constant _USE_PERMIT2_FLAG = 1 << 252;\n    uint256 private constant _ARGS_HAS_TARGET = 1 << 251;\n\n    uint256 private constant _ARGS_EXTENSION_LENGTH_OFFSET = 224;\n    uint256 private constant _ARGS_EXTENSION_LENGTH_MASK = 0xffffff;\n    uint256 private constant _ARGS_INTERACTION_LENGTH_OFFSET = 200;\n    uint256 private constant _ARGS_INTERACTION_LENGTH_MASK = 0xffffff;\n\n    uint256 private constant _AMOUNT_MASK = 0x000000000000000000ffffffffffffffffffffffffffffffffffffffffffffff;\n\n    /**\n     * @notice Checks if the args should contain target address.\n     * @param takerTraits The traits of the taker.\n     * @return result A boolean indicating whether the args should contain target address.\n     */\n    function argsHasTarget(TakerTraits takerTraits) internal pure returns (bool) {\n        return (TakerTraits.unwrap(takerTraits) & _ARGS_HAS_TARGET) != 0;\n    }\n\n    /**\n     * @notice Retrieves the length of the extension calldata from the takerTraits.\n     * @param takerTraits The traits of the taker.\n     * @return result The length of the extension calldata encoded in the takerTraits.\n     */\n    function argsExtensionLength(TakerTraits takerTraits) internal pure returns (uint256) {\n        return (TakerTraits.unwrap(takerTraits) >> _ARGS_EXTENSION_LENGTH_OFFSET) & _ARGS_EXTENSION_LENGTH_MASK;\n    }\n\n    /**\n     * @notice Retrieves the length of the interaction calldata from the takerTraits.\n     * @param takerTraits The traits of the taker.\n     * @return result The length of the interaction calldata encoded in the takerTraits.\n     */\n    function argsInteractionLength(TakerTraits takerTraits) internal pure returns (uint256) {\n        return (TakerTraits.unwrap(takerTraits) >> _ARGS_INTERACTION_LENGTH_OFFSET) & _ARGS_INTERACTION_LENGTH_MASK;\n    }\n\n    /**\n     * @notice Checks if the taking amount should be calculated based on making amount.\n     * @param takerTraits The traits of the taker.\n     * @return result A boolean indicating whether the taking amount should be calculated based on making amount.\n     */\n    function isMakingAmount(TakerTraits takerTraits) internal pure returns (bool) {\n        return (TakerTraits.unwrap(takerTraits) & _MAKER_AMOUNT_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the order should unwrap WETH and send ETH to taker.\n     * @param takerTraits The traits of the taker.\n     * @return result A boolean indicating whether the order should unwrap WETH.\n     */\n    function unwrapWeth(TakerTraits takerTraits) internal pure returns (bool) {\n        return (TakerTraits.unwrap(takerTraits) & _UNWRAP_WETH_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the order should skip maker's permit execution.\n     * @param takerTraits The traits of the taker.\n     * @return result A boolean indicating whether the order don't apply permit.\n     */\n    function skipMakerPermit(TakerTraits takerTraits) internal pure returns (bool) {\n        return (TakerTraits.unwrap(takerTraits) & _SKIP_ORDER_PERMIT_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the order uses the permit2 instead of permit.\n     * @param takerTraits The traits of the taker.\n     * @return result A boolean indicating whether the order uses the permit2.\n     */\n    function usePermit2(TakerTraits takerTraits) internal pure returns (bool) {\n        return (TakerTraits.unwrap(takerTraits) & _USE_PERMIT2_FLAG) != 0;\n    }\n\n    /**\n     * @notice Retrieves the threshold amount from the takerTraits.\n     * The maximum amount a taker agrees to give in exchange for a making amount.\n     * @param takerTraits The traits of the taker.\n     * @return result The threshold amount encoded in the takerTraits.\n     */\n    function threshold(TakerTraits takerTraits) internal pure returns (uint256) {\n        return TakerTraits.unwrap(takerTraits) & _AMOUNT_MASK;\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/libraries/TimelocksLib.sol\n\n/**\n * @dev Timelocks for the source and the destination chains plus the deployment timestamp.\n * Timelocks store the number of seconds from the time the contract is deployed to the start of a specific period.\n * For illustrative purposes, it is possible to describe timelocks by two structures:\n * struct SrcTimelocks {\n *     uint256 withdrawal;\n *     uint256 publicWithdrawal;\n *     uint256 cancellation;\n *     uint256 publicCancellation;\n * }\n *\n * struct DstTimelocks {\n *     uint256 withdrawal;\n *     uint256 publicWithdrawal;\n *     uint256 cancellation;\n * }\n *\n * withdrawal: Period when only the taker with a secret can withdraw tokens for taker (source chain) or maker (destination chain).\n * publicWithdrawal: Period when anyone with a secret can withdraw tokens for taker (source chain) or maker (destination chain).\n * cancellation: Period when escrow can only be cancelled by the taker.\n * publicCancellation: Period when escrow can be cancelled by anyone.\n *\n * @custom:security-contact security@1inch.io\n */\ntype Timelocks is uint256;\n\n/**\n * @title Timelocks library for compact storage of timelocks in a uint256.\n */\nlibrary TimelocksLib {\n    enum Stage {\n        SrcWithdrawal,\n        SrcPublicWithdrawal,\n        SrcCancellation,\n        SrcPublicCancellation,\n        DstWithdrawal,\n        DstPublicWithdrawal,\n        DstCancellation\n    }\n\n    uint256 private constant _DEPLOYED_AT_MASK = 0xffffffff00000000000000000000000000000000000000000000000000000000;\n    uint256 private constant _DEPLOYED_AT_OFFSET = 224;\n\n    /**\n     * @notice Sets the Escrow deployment timestamp.\n     * @param timelocks The timelocks to set the deployment timestamp to.\n     * @param value The new Escrow deployment timestamp.\n     * @return The timelocks with the deployment timestamp set.\n     */\n    function setDeployedAt(Timelocks timelocks, uint256 value) internal pure returns (Timelocks) {\n        return Timelocks.wrap((Timelocks.unwrap(timelocks) & ~uint256(_DEPLOYED_AT_MASK)) | value << _DEPLOYED_AT_OFFSET);\n    }\n\n    /**\n     * @notice Returns the start of the rescue period.\n     * @param timelocks The timelocks to get the rescue delay from.\n     * @return The start of the rescue period.\n     */\n    function rescueStart(Timelocks timelocks, uint256 rescueDelay) internal pure returns (uint256) {\n        unchecked {\n            return rescueDelay + (Timelocks.unwrap(timelocks) >> _DEPLOYED_AT_OFFSET);\n        }\n    }\n\n    /**\n     * @notice Returns the timelock value for the given stage.\n     * @param timelocks The timelocks to get the value from.\n     * @param stage The stage to get the value for.\n     * @return The timelock value for the given stage.\n     */\n    function get(Timelocks timelocks, Stage stage) internal pure returns (uint256) {\n        uint256 data = Timelocks.unwrap(timelocks);\n        uint256 bitShift = uint256(stage) * 32;\n        // The maximum uint32 value will be reached in 2106.\n        return (data >> _DEPLOYED_AT_OFFSET) + uint32(data >> bitShift);\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/access/Ownable.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/interfaces/IBaseEscrow.sol\n\n/**\n * @title Base Escrow interface for cross-chain atomic swap.\n * @notice Interface implies locking funds initially and then unlocking them with verification of the secret presented.\n * @custom:security-contact security@1inch.io\n */\ninterface IBaseEscrow {\n    struct Immutables {\n        bytes32 orderHash;\n        bytes32 hashlock;  // Hash of the secret.\n        Address maker;\n        Address taker;\n        Address token;\n        uint256 amount;\n        uint256 safetyDeposit;\n        Timelocks timelocks;\n    }\n\n    /**\n     * @notice Emitted on escrow cancellation.\n     */\n    event EscrowCancelled();\n\n    /**\n     * @notice Emitted when funds are rescued.\n     * @param token The address of the token rescued. Zero address for native token.\n     * @param amount The amount of tokens rescued.\n     */\n    event FundsRescued(address token, uint256 amount);\n\n    /**\n     * @notice Emitted on successful withdrawal.\n     * @param secret The secret that unlocks the escrow.\n     */\n    event Withdrawal(bytes32 secret);\n\n    error InvalidCaller();\n    error InvalidImmutables();\n    error InvalidSecret();\n    error InvalidTime();\n    error NativeTokenSendingFailure();\n\n    /* solhint-disable func-name-mixedcase */\n    /// @notice Returns the delay for rescuing funds from the escrow.\n    function RESCUE_DELAY() external view returns (uint256);\n    /// @notice Returns the address of the factory that created the escrow.\n    function FACTORY() external view returns (address);\n    /* solhint-enable func-name-mixedcase */\n\n    /**\n     * @notice Withdraws funds to a predetermined recipient.\n     * @dev Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock.\n     * The safety deposit is sent to the caller.\n     * @param secret The secret that unlocks the escrow.\n     * @param immutables The immutables of the escrow contract.\n     */\n    function withdraw(bytes32 secret, Immutables calldata immutables) external;\n\n    /**\n     * @notice Cancels the escrow and returns tokens to a predetermined recipient.\n     * @dev The escrow can only be cancelled during the cancellation period.\n     * The safety deposit is sent to the caller.\n     * @param immutables The immutables of the escrow contract.\n     */\n    function cancel(Immutables calldata immutables) external;\n\n    /**\n     * @notice Rescues funds from the escrow.\n     * @dev Funds can only be rescued by the taker after the rescue delay.\n     * @param token The address of the token to rescue. Zero address for native token.\n     * @param amount The amount of tokens to rescue.\n     * @param immutables The immutables of the escrow contract.\n     */\n    function rescueFunds(address token, uint256 amount, Immutables calldata immutables) external;\n}\n\n// contracts/lib/cross-chain-swap/contracts/interfaces/IEscrow.sol\n\n/**\n * @title Escrow interface for cross-chain atomic swap.\n * @notice Interface implies locking funds initially and then unlocking them with verification of the secret presented.\n * @custom:security-contact security@1inch.io\n */\ninterface IEscrow is IBaseEscrow {\n    /// @notice Returns the bytecode hash of the proxy contract.\n    function PROXY_BYTECODE_HASH() external view returns (bytes32); // solhint-disable-line func-name-mixedcase\n}\n\n// contracts/lib/cross-chain-swap/contracts/interfaces/IEscrowFactory.sol\n\n/**\n * @title Escrow Factory interface for cross-chain atomic swap.\n * @notice Interface to deploy escrow contracts for the destination chain and to get the deterministic address of escrow on both chains.\n * @custom:security-contact security@1inch.io\n */\ninterface IEscrowFactory {\n    struct ExtraDataArgs {\n        bytes32 hashlockInfo; // Hash of the secret or the Merkle tree root if multiple fills are allowed\n        uint256 dstChainId;\n        Address dstToken;\n        uint256 deposits;\n        Timelocks timelocks;\n    }\n\n    struct DstImmutablesComplement {\n        Address maker;\n        uint256 amount;\n        Address token;\n        uint256 safetyDeposit;\n        uint256 chainId;\n    }\n\n    error InsufficientEscrowBalance();\n    error InvalidCreationTime();\n    error InvalidPartialFill();\n    error InvalidSecretsAmount();\n\n    /**\n     * @notice Emitted on EscrowSrc deployment to recreate EscrowSrc and EscrowDst immutables off-chain.\n     * @param srcImmutables The immutables of the escrow contract that are used in deployment on the source chain.\n     * @param dstImmutablesComplement Additional immutables related to the escrow contract on the destination chain.\n     */\n    event SrcEscrowCreated(IBaseEscrow.Immutables srcImmutables, DstImmutablesComplement dstImmutablesComplement);\n    /**\n     * @notice Emitted on EscrowDst deployment.\n     * @param escrow The address of the created escrow.\n     * @param hashlock The hash of the secret.\n     * @param taker The address of the taker.\n     */\n    event DstEscrowCreated(address escrow, bytes32 hashlock, Address taker);\n\n    /* solhint-disable func-name-mixedcase */\n    /// @notice Returns the address of implementation on the source chain.\n    function ESCROW_SRC_IMPLEMENTATION() external view returns (address);\n    /// @notice Returns the address of implementation on the destination chain.\n    function ESCROW_DST_IMPLEMENTATION() external view returns (address);\n    /* solhint-enable func-name-mixedcase */\n\n    /**\n     * @notice Creates a new escrow contract for taker on the destination chain.\n     * @dev The caller must send the safety deposit in the native token along with the function call\n     * and approve the destination token to be transferred to the created escrow.\n     * @param dstImmutables The immutables of the escrow contract that are used in deployment.\n     * @param srcCancellationTimestamp The start of the cancellation period for the source chain.\n     */\n    function createDstEscrow(IBaseEscrow.Immutables calldata dstImmutables, uint256 srcCancellationTimestamp) external payable;\n\n    /**\n     * @notice Returns the deterministic address of the source escrow based on the salt.\n     * @param immutables The immutable arguments used to compute salt for escrow deployment.\n     * @return The computed address of the escrow.\n     */\n    function addressOfEscrowSrc(IBaseEscrow.Immutables calldata immutables) external view returns (address);\n\n    /**\n     * @notice Returns the deterministic address of the destination escrow based on the salt.\n     * @param immutables The immutable arguments used to compute salt for escrow deployment.\n     * @return The computed address of the escrow.\n     */\n    function addressOfEscrowDst(IBaseEscrow.Immutables calldata immutables) external view returns (address);\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/IOrderMixin.sol\n\ninterface IOrderMixin {\n    struct Order {\n        uint256 salt;\n        Address maker;\n        Address receiver;\n        Address makerAsset;\n        Address takerAsset;\n        uint256 makingAmount;\n        uint256 takingAmount;\n        MakerTraits makerTraits;\n    }\n\n    error InvalidatedOrder();\n    error TakingAmountExceeded();\n    error PrivateOrder();\n    error BadSignature();\n    error OrderExpired();\n    error WrongSeriesNonce();\n    error SwapWithZeroAmount();\n    error PartialFillNotAllowed();\n    error OrderIsNotSuitableForMassInvalidation();\n    error EpochManagerAndBitInvalidatorsAreIncompatible();\n    error ReentrancyDetected();\n    error PredicateIsNotTrue();\n    error TakingAmountTooHigh();\n    error MakingAmountTooLow();\n    error TransferFromMakerToTakerFailed();\n    error TransferFromTakerToMakerFailed();\n    error MismatchArraysLengths();\n    error InvalidPermit2Transfer();\n    error SimulationResults(bool success, bytes res);\n\n    /**\n     * @notice Emitted when order gets filled\n     * @param orderHash Hash of the order\n     * @param remainingAmount Amount of the maker asset that remains to be filled\n     */\n    event OrderFilled(\n        bytes32 orderHash,\n        uint256 remainingAmount\n    );\n\n    /**\n     * @notice Emitted when order without `useBitInvalidator` gets cancelled\n     * @param orderHash Hash of the order\n     */\n    event OrderCancelled(\n        bytes32 orderHash\n    );\n\n    /**\n     * @notice Emitted when order with `useBitInvalidator` gets cancelled\n     * @param maker Maker address\n     * @param slotIndex Slot index that was updated\n     * @param slotValue New slot value\n     */\n    event BitInvalidatorUpdated(\n        address indexed maker,\n        uint256 slotIndex,\n        uint256 slotValue\n    );\n\n    /**\n     * @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n     * @param maker Maker address\n     * @param slot Slot number to return bitmask for\n     * @return result Each bit represents whether corresponding was already invalidated\n     */\n    function bitInvalidatorForOrder(address maker, uint256 slot) external view returns(uint256 result);\n\n    /**\n     * @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n     * @param orderHash Hash of the order\n     * @return remaining Remaining amount of the order\n     */\n    function remainingInvalidatorForOrder(address maker, bytes32 orderHash) external view returns(uint256 remaining);\n\n    /**\n     * @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n     * @param orderHash Hash of the order\n     * @return remainingRaw Inverse of the remaining amount of the order if order was filled at least once, otherwise 0\n     */\n    function rawRemainingInvalidatorForOrder(address maker, bytes32 orderHash) external view returns(uint256 remainingRaw);\n\n    /**\n     * @notice Cancels order's quote\n     * @param makerTraits Order makerTraits\n     * @param orderHash Hash of the order to cancel\n     */\n    function cancelOrder(MakerTraits makerTraits, bytes32 orderHash) external;\n\n    /**\n     * @notice Cancels orders' quotes\n     * @param makerTraits Orders makerTraits\n     * @param orderHashes Hashes of the orders to cancel\n     */\n    function cancelOrders(MakerTraits[] calldata makerTraits, bytes32[] calldata orderHashes) external;\n\n    /**\n     * @notice Cancels all quotes of the maker (works for bit-invalidating orders only)\n     * @param makerTraits Order makerTraits\n     * @param additionalMask Additional bitmask to invalidate orders\n     */\n    function bitsInvalidateForOrder(MakerTraits makerTraits, uint256 additionalMask) external;\n\n    /**\n     * @notice Returns order hash, hashed with limit order protocol contract EIP712\n     * @param order Order\n     * @return orderHash Hash of the order\n     */\n    function hashOrder(IOrderMixin.Order calldata order) external view returns(bytes32 orderHash);\n\n    /**\n     * @notice Delegates execution to custom implementation. Could be used to validate if `transferFrom` works properly\n     * @dev The function always reverts and returns the simulation results in revert data.\n     * @param target Addresses that will be delegated\n     * @param data Data that will be passed to delegatee\n     */\n    function simulate(address target, bytes calldata data) external;\n\n    /**\n     * @notice Fills order's quote, fully or partially (whichever is possible).\n     * @param order Order quote to fill\n     * @param r R component of signature\n     * @param vs VS component of signature\n     * @param amount Taker amount to fill\n     * @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n     * minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n     * @return makingAmount Actual amount transferred from maker to taker\n     * @return takingAmount Actual amount transferred from taker to maker\n     * @return orderHash Hash of the filled order\n     */\n    function fillOrder(\n        Order calldata order,\n        bytes32 r,\n        bytes32 vs,\n        uint256 amount,\n        TakerTraits takerTraits\n    ) external payable returns(uint256 makingAmount, uint256 takingAmount, bytes32 orderHash);\n\n    /**\n     * @notice Same as `fillOrder` but allows to specify arguments that are used by the taker.\n     * @param order Order quote to fill\n     * @param r R component of signature\n     * @param vs VS component of signature\n     * @param amount Taker amount to fill\n     * @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n     * minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n     * @param args Arguments that are used by the taker (target, extension, interaction, permit)\n     * @return makingAmount Actual amount transferred from maker to taker\n     * @return takingAmount Actual amount transferred from taker to maker\n     * @return orderHash Hash of the filled order\n     */\n    function fillOrderArgs(\n        IOrderMixin.Order calldata order,\n        bytes32 r,\n        bytes32 vs,\n        uint256 amount,\n        TakerTraits takerTraits,\n        bytes calldata args\n    ) external payable returns(uint256 makingAmount, uint256 takingAmount, bytes32 orderHash);\n\n    /**\n     * @notice Same as `fillOrder` but uses contract-based signatures.\n     * @param order Order quote to fill\n     * @param signature Signature to confirm quote ownership\n     * @param amount Taker amount to fill\n     * @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n     * minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n     * @return makingAmount Actual amount transferred from maker to taker\n     * @return takingAmount Actual amount transferred from taker to maker\n     * @return orderHash Hash of the filled order\n     * @dev See tests for examples\n     */\n    function fillContractOrder(\n        Order calldata order,\n        bytes calldata signature,\n        uint256 amount,\n        TakerTraits takerTraits\n    ) external returns(uint256 makingAmount, uint256 takingAmount, bytes32 orderHash);\n\n    /**\n     * @notice Same as `fillContractOrder` but allows to specify arguments that are used by the taker.\n     * @param order Order quote to fill\n     * @param signature Signature to confirm quote ownership\n     * @param amount Taker amount to fill\n     * @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n     * minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n     * @param args Arguments that are used by the taker (target, extension, interaction, permit)\n     * @return makingAmount Actual amount transferred from maker to taker\n     * @return takingAmount Actual amount transferred from taker to maker\n     * @return orderHash Hash of the filled order\n     * @dev See tests for examples\n     */\n    function fillContractOrderArgs(\n        Order calldata order,\n        bytes calldata signature,\n        uint256 amount,\n        TakerTraits takerTraits,\n        bytes calldata args\n    ) external returns(uint256 makingAmount, uint256 takingAmount, bytes32 orderHash);\n}\n\n// contracts/lib/cross-chain-swap/contracts/libraries/ImmutablesLib.sol\n\n/**\n * @title Library for escrow immutables.\n * @custom:security-contact security@1inch.io\n */\nlibrary ImmutablesLib {\n    uint256 internal constant ESCROW_IMMUTABLES_SIZE = 0x100;\n\n    /**\n     * @notice Returns the hash of the immutables.\n     * @param immutables The immutables to hash.\n     * @return ret The computed hash.\n     */\n    function hash(IBaseEscrow.Immutables calldata immutables) internal pure returns(bytes32 ret) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, immutables, ESCROW_IMMUTABLES_SIZE)\n            ret := keccak256(ptr, ESCROW_IMMUTABLES_SIZE)\n        }\n    }\n\n    /**\n     * @notice Returns the hash of the immutables.\n     * @param immutables The immutables to hash.\n     * @return ret The computed hash.\n     */\n    function hashMem(IBaseEscrow.Immutables memory immutables) internal pure returns(bytes32 ret) {\n        assembly (\"memory-safe\") {\n            ret := keccak256(immutables, ESCROW_IMMUTABLES_SIZE)\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/interfaces/IResolverExample.sol\n\n/**\n * @title Interface for the sample implementation of a Resolver contract for cross-chain swap.\n * @custom:security-contact security@1inch.io\n */\ninterface IResolverExample {\n    error InvalidLength();\n    error LengthMismatch();\n\n    /**\n     * @notice Deploys a new escrow contract for maker on the source chain.\n     * @param immutables The immutables of the escrow contract that are used in deployment.\n     * @param order Order quote to fill.\n     * @param r R component of signature.\n     * @param vs VS component of signature.\n     * @param amount Taker amount to fill\n     * @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n     * minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n     * @param args Arguments that are used by the taker (target, extension, interaction, permit).\n     */\n    function deploySrc(\n        IBaseEscrow.Immutables calldata immutables,\n        IOrderMixin.Order calldata order,\n        bytes32 r,\n        bytes32 vs,\n        uint256 amount,\n        TakerTraits takerTraits,\n        bytes calldata args\n    ) external;\n\n    /**\n     * @notice Deploys a new escrow contract for taker on the destination chain.\n     * @param dstImmutables The immutables of the escrow contract that are used in deployment.\n     * @param srcCancellationTimestamp The start of the cancellation period for the source chain.\n     */\n    function deployDst(IBaseEscrow.Immutables calldata dstImmutables, uint256 srcCancellationTimestamp) external payable;\n\n    /**\n     * @notice Allows the owner to make arbitrary calls to other contracts on behalf of this contract.\n     * @param targets The addresses of the contracts to call.\n     * @param arguments The arguments to pass to the contract calls.\n     */\n    function arbitraryCalls(address[] calldata targets, bytes[] calldata arguments) external;\n}\n\n// contracts/src/Resolver.sol\n\n/**\n * @title Sample implementation of a Resolver contract for cross-chain swap.\n * @dev It is important when deploying an escrow on the source chain to send the safety deposit and deploy the escrow in the same\n * transaction, since the address of the escrow depends on the block.timestamp.\n * You can find sample code for this in the {ResolverExample-deploySrc}.\n *\n * @custom:security-contact security@1inch.io\n */\ncontract Resolver is Ownable {\n    using ImmutablesLib for IBaseEscrow.Immutables;\n    using TimelocksLib for Timelocks;\n\n    error InvalidLength();\n    error LengthMismatch();\n\n    IEscrowFactory private immutable _FACTORY;\n    IOrderMixin private immutable _LOP;\n\n    constructor(IEscrowFactory factory, IOrderMixin lop, address initialOwner) Ownable(initialOwner) {\n        _FACTORY = factory;\n        _LOP = lop;\n    }\n\n    receive() external payable {} // solhint-disable-line no-empty-blocks\n\n    /**\n     * @notice See {IResolverExample-deploySrc}.\n     */\n    function deploySrc(\n        IBaseEscrow.Immutables calldata immutables,\n        IOrderMixin.Order calldata order,\n        bytes32 r,\n        bytes32 vs,\n        uint256 amount,\n        TakerTraits takerTraits,\n        bytes calldata args\n    ) external payable onlyOwner {\n\n        IBaseEscrow.Immutables memory immutablesMem = immutables;\n        immutablesMem.timelocks = TimelocksLib.setDeployedAt(immutables.timelocks, block.timestamp);\n        address computed = _FACTORY.addressOfEscrowSrc(immutablesMem);\n\n        (bool success,) = address(computed).call{value: immutablesMem.safetyDeposit}(\"\");\n        if (!success) revert IBaseEscrow.NativeTokenSendingFailure();\n\n        // _ARGS_HAS_TARGET = 1 << 251\n        takerTraits = TakerTraits.wrap(TakerTraits.unwrap(takerTraits) | uint256(1 << 251));\n        bytes memory argsMem = abi.encodePacked(computed, args);\n        _LOP.fillOrderArgs(order, r, vs, amount, takerTraits, argsMem);\n    }\n\n    /**\n     * @notice See {IResolverExample-deployDst}.\n     */\n    function deployDst(IBaseEscrow.Immutables calldata dstImmutables, uint256 srcCancellationTimestamp) external onlyOwner payable {\n        _FACTORY.createDstEscrow{value: msg.value}(dstImmutables, srcCancellationTimestamp);\n    }\n\n    function withdraw(IEscrow escrow, bytes32 secret, IBaseEscrow.Immutables calldata immutables) external {\n        escrow.withdraw(secret, immutables);\n    }\n\n    function cancel(IEscrow escrow, IBaseEscrow.Immutables calldata immutables) external {\n        escrow.cancel(immutables);\n    }\n\n    /**\n     * @notice See {IResolverExample-arbitraryCalls}.\n     */\n    function arbitraryCalls(address[] calldata targets, bytes[] calldata arguments) external onlyOwner {\n        uint256 length = targets.length;\n        if (targets.length != arguments.length) revert LengthMismatch();\n        for (uint256 i = 0; i < length; ++i) {\n            // solhint-disable-next-line avoid-low-level-calls\n            (bool success,) = targets[i].call(arguments[i]);\n            if (!success) RevertReasonForwarder.reRevert();\n        }\n    }\n}\n\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000000},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"contracts/Resolver.sol":{"ast":{"absolutePath":"contracts/Resolver.sol","exportedSymbols":{"Address":[3],"AddressLib":[102],"Context":[130],"IBaseEscrow":[1059],"IEscrow":[1069],"IEscrowFactory":[1163],"IOrderMixin":[1413],"IResolverExample":[1486],"ImmutablesLib":[1440],"MakerTraits":[132],"MakerTraitsLib":[497],"Ownable":[972],"Resolver":[1757],"RevertReasonForwarder":[513],"TakerTraits":[515],"TakerTraitsLib":[714],"Timelocks":[716],"TimelocksLib":[828]},"id":1758,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","=","0.8",".23","^","0.8",".0","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:39:0"},{"canonicalName":"Address","id":3,"name":"Address","nameLocation":"167:7:0","nodeType":"UserDefinedValueTypeDefinition","src":"162:24:0","underlyingType":{"id":2,"name":"uint256","nodeType":"ElementaryTypeName","src":"178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"abstract":false,"baseContracts":[],"canonicalName":"AddressLib","contractDependencies":[],"contractKind":"library","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"188:144:0","text":" @notice AddressLib\n @notice Library for working with addresses encoded as uint256 values, which can include flags in the highest bits."},"fullyImplemented":true,"id":102,"linearizedBaseContracts":[102],"name":"AddressLib","nameLocation":"341:10:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":12,"mutability":"constant","name":"_LOW_160_BIT_MASK","nameLocation":"383:17:0","nodeType":"VariableDeclaration","scope":102,"src":"358:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"358:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"},"id":11,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":8,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"404:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"409:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"404:8:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":9,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"403:10:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"416:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"403:14:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"}},"visibility":"private"},{"body":{"id":34,"nodeType":"Block","src":"689:79:0","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":27,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"737:1:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}],"expression":{"id":25,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"722:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$3_$","typeString":"type(Address)"}},"id":26,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"730:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"722:14:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":28,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"722:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":29,"name":"_LOW_160_BIT_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"742:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"722:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":24,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"714:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":23,"name":"uint160","nodeType":"ElementaryTypeName","src":"714:7:0","typeDescriptions":{}}},"id":31,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"714:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":22,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"706:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","typeDescriptions":{}}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"706:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":20,"id":33,"nodeType":"Return","src":"699:62:0"}]},"documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"424:204:0","text":" @notice Returns the address representation of a uint256.\n @param a The uint256 value to convert to an address.\n @return The address representation of the provided uint256 value."},"id":35,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"642:3:0","nodeType":"FunctionDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"a","nameLocation":"654:1:0","nodeType":"VariableDeclaration","scope":35,"src":"646:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":15,"nodeType":"UserDefinedTypeName","pathNode":{"id":14,"name":"Address","nameLocations":["646:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"646:7:0"},"referencedDeclaration":3,"src":"646:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"}],"src":"645:11:0"},"returnParameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35,"src":"680:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"679:9:0"},"scope":102,"src":"633:135:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":56,"nodeType":"Block","src":"1125:55:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":48,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1158:1:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}],"expression":{"id":46,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"1143:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$3_$","typeString":"type(Address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1151:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"1143:14:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1143:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":50,"name":"flag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1163:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1143:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":52,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1142:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1172:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1142:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":45,"id":55,"nodeType":"Return","src":"1135:38:0"}]},"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"774:275:0","text":" @notice Checks if a given flag is set for the provided address.\n @param a The address to check for the flag.\n @param flag The flag to check for in the provided address.\n @return True if the provided flag is set in the address, false otherwise."},"id":57,"implemented":true,"kind":"function","modifiers":[],"name":"getFlag","nameLocation":"1063:7:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"a","nameLocation":"1079:1:0","nodeType":"VariableDeclaration","scope":57,"src":"1071:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":38,"nodeType":"UserDefinedTypeName","pathNode":{"id":37,"name":"Address","nameLocations":["1071:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"1071:7:0"},"referencedDeclaration":3,"src":"1071:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"flag","nameLocation":"1090:4:0","nodeType":"VariableDeclaration","scope":57,"src":"1082:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1070:25:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":57,"src":"1119:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"1119:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1118:6:0"},"scope":102,"src":"1054:126:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":78,"nodeType":"Block","src":"1582:59:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":72,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1621:1:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}],"expression":{"id":70,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"1606:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$3_$","typeString":"type(Address)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1614:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"1606:14:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":74,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1627:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1606:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1599:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":68,"name":"uint32","nodeType":"ElementaryTypeName","src":"1599:6:0","typeDescriptions":{}}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1599:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":67,"id":77,"nodeType":"Return","src":"1592:42:0"}]},"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"1186:314:0","text":" @notice Returns a uint32 value stored at a specific bit offset in the provided address.\n @param a The address containing the uint32 value.\n @param offset The bit offset at which the uint32 value is stored.\n @return The uint32 value stored in the address at the specified bit offset."},"id":79,"implemented":true,"kind":"function","modifiers":[],"name":"getUint32","nameLocation":"1514:9:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"a","nameLocation":"1532:1:0","nodeType":"VariableDeclaration","scope":79,"src":"1524:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":60,"nodeType":"UserDefinedTypeName","pathNode":{"id":59,"name":"Address","nameLocations":["1524:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"1524:7:0"},"referencedDeclaration":3,"src":"1524:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"offset","nameLocation":"1543:6:0","nodeType":"VariableDeclaration","scope":79,"src":"1535:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"1535:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1523:27:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"1574:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":65,"name":"uint32","nodeType":"ElementaryTypeName","src":"1574:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1573:8:0"},"scope":102,"src":"1505:136:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":100,"nodeType":"Block","src":"2043:59:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":94,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2082:1:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}],"expression":{"id":92,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"2067:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$3_$","typeString":"type(Address)"}},"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2075:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"2067:14:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":96,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2088:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2067:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":91,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2060:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":90,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:0","typeDescriptions":{}}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":89,"id":99,"nodeType":"Return","src":"2053:42:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"1647:314:0","text":" @notice Returns a uint64 value stored at a specific bit offset in the provided address.\n @param a The address containing the uint64 value.\n @param offset The bit offset at which the uint64 value is stored.\n @return The uint64 value stored in the address at the specified bit offset."},"id":101,"implemented":true,"kind":"function","modifiers":[],"name":"getUint64","nameLocation":"1975:9:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"a","nameLocation":"1993:1:0","nodeType":"VariableDeclaration","scope":101,"src":"1985:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":82,"nodeType":"UserDefinedTypeName","pathNode":{"id":81,"name":"Address","nameLocations":["1985:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"1985:7:0"},"referencedDeclaration":3,"src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"offset","nameLocation":"2004:6:0","nodeType":"VariableDeclaration","scope":101,"src":"1996:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"1996:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1984:27:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101,"src":"2035:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":87,"name":"uint64","nodeType":"ElementaryTypeName","src":"2035:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2034:8:0"},"scope":102,"src":"1966:136:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1758,"src":"333:1771:0","usedErrors":[],"usedEvents":[]},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":103,"nodeType":"StructuredDocumentation","src":"2265:496:0","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":130,"linearizedBaseContracts":[130],"name":"Context","nameLocation":"2780:7:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":111,"nodeType":"Block","src":"2856:34:0","statements":[{"expression":{"expression":{"id":108,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2873:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2877:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2873:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":107,"id":110,"nodeType":"Return","src":"2866:17:0"}]},"id":112,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"2803:10:0","nodeType":"FunctionDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[],"src":"2813:2:0"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":112,"src":"2847:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"2847:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:9:0"},"scope":130,"src":"2794:96:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":120,"nodeType":"Block","src":"2963:32:0","statements":[{"expression":{"expression":{"id":117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2980:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2984:4:0","memberName":"data","nodeType":"MemberAccess","src":"2980:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":116,"id":119,"nodeType":"Return","src":"2973:15:0"}]},"id":121,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"2905:8:0","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[],"src":"2913:2:0"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":121,"src":"2947:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":114,"name":"bytes","nodeType":"ElementaryTypeName","src":"2947:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2946:16:0"},"scope":130,"src":"2896:99:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":128,"nodeType":"Block","src":"3073:25:0","statements":[{"expression":{"hexValue":"30","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3090:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":125,"id":127,"nodeType":"Return","src":"3083:8:0"}]},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"3010:20:0","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[],"src":"3030:2:0"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3064:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"3064:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3063:9:0"},"scope":130,"src":"3001:97:0","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1758,"src":"2762:338:0","usedErrors":[],"usedEvents":[]},{"canonicalName":"MakerTraits","id":132,"name":"MakerTraits","nameLocation":"3206:11:0","nodeType":"UserDefinedValueTypeDefinition","src":"3201:28:0","underlyingType":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3221:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"abstract":false,"baseContracts":[],"canonicalName":"MakerTraitsLib","contractDependencies":[],"contractKind":"library","documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"3231:1314:0","text":" @title MakerTraitsLib\n @notice A library to manage and check MakerTraits, which are used to encode the maker's preferences for an order in a single uint256.\n @dev\n The MakerTraits type is a uint256 and different parts of the number are used to encode different traits.\n High bits are used for flags\n 255 bit `NO_PARTIAL_FILLS_FLAG`          - if set, the order does not allow partial fills\n 254 bit `ALLOW_MULTIPLE_FILLS_FLAG`      - if set, the order permits multiple fills\n 253 bit                                  - unused\n 252 bit `PRE_INTERACTION_CALL_FLAG`      - if set, the order requires pre-interaction call\n 251 bit `POST_INTERACTION_CALL_FLAG`     - if set, the order requires post-interaction call\n 250 bit `NEED_CHECK_EPOCH_MANAGER_FLAG`  - if set, the order requires to check the epoch manager\n 249 bit `HAS_EXTENSION_FLAG`             - if set, the order has extension(s)\n 248 bit `USE_PERMIT2_FLAG`               - if set, the order uses permit2\n 247 bit `UNWRAP_WETH_FLAG`               - if set, the order requires to unwrap WETH\n Low 200 bits are used for allowed sender, expiration, nonceOrEpoch, and series\n uint80 last 10 bytes of allowed sender address (0 if any)\n uint40 expiration timestamp (0 if none)\n uint40 nonce or epoch\n uint40 series"},"fullyImplemented":true,"id":497,"linearizedBaseContracts":[497],"name":"MakerTraitsLib","nameLocation":"4554:14:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":140,"mutability":"constant","name":"_ALLOWED_SENDER_MASK","nameLocation":"4686:20:0","nodeType":"VariableDeclaration","scope":497,"src":"4661:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"4661:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4714:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":136,"name":"uint80","nodeType":"ElementaryTypeName","src":"4714:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":135,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4709:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4709:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4722:3:0","memberName":"max","nodeType":"MemberAccess","src":"4709:16:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"private"},{"constant":true,"id":143,"mutability":"constant","name":"_EXPIRATION_OFFSET","nameLocation":"4756:18:0","nodeType":"VariableDeclaration","scope":497,"src":"4731:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"4731:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3830","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4777:2:0","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"visibility":"private"},{"constant":true,"id":150,"mutability":"constant","name":"_EXPIRATION_MASK","nameLocation":"4810:16:0","nodeType":"VariableDeclaration","scope":497,"src":"4785:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"4785:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4834:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":146,"name":"uint40","nodeType":"ElementaryTypeName","src":"4834:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":145,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4829:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4829:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4842:3:0","memberName":"max","nodeType":"MemberAccess","src":"4829:16:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"private"},{"constant":true,"id":153,"mutability":"constant","name":"_NONCE_OR_EPOCH_OFFSET","nameLocation":"4876:22:0","nodeType":"VariableDeclaration","scope":497,"src":"4851:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"4851:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313230","id":152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4901:3:0","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},"visibility":"private"},{"constant":true,"id":160,"mutability":"constant","name":"_NONCE_OR_EPOCH_MASK","nameLocation":"4935:20:0","nodeType":"VariableDeclaration","scope":497,"src":"4910:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4910:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4963:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":156,"name":"uint40","nodeType":"ElementaryTypeName","src":"4963:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":155,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4958:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4958:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4971:3:0","memberName":"max","nodeType":"MemberAccess","src":"4958:16:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"private"},{"constant":true,"id":163,"mutability":"constant","name":"_SERIES_OFFSET","nameLocation":"5005:14:0","nodeType":"VariableDeclaration","scope":497,"src":"4980:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"4980:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313630","id":162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5022:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"visibility":"private"},{"constant":true,"id":170,"mutability":"constant","name":"_SERIES_MASK","nameLocation":"5056:12:0","nodeType":"VariableDeclaration","scope":497,"src":"5031:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"5031:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5076:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":166,"name":"uint40","nodeType":"ElementaryTypeName","src":"5076:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":165,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5071:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5071:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5084:3:0","memberName":"max","nodeType":"MemberAccess","src":"5071:16:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"private"},{"constant":true,"id":175,"mutability":"constant","name":"_NO_PARTIAL_FILLS_FLAG","nameLocation":"5119:22:0","nodeType":"VariableDeclaration","scope":497,"src":"5094:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"5094:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5144:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323535","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5149:3:0","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"5144:8:0","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"constant":true,"id":180,"mutability":"constant","name":"_ALLOW_MULTIPLE_FILLS_FLAG","nameLocation":"5183:26:0","nodeType":"VariableDeclaration","scope":497,"src":"5158:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"5158:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"},"id":179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323534","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5217:3:0","typeDescriptions":{"typeIdentifier":"t_rational_254_by_1","typeString":"int_const 254"},"value":"254"},"src":"5212:8:0","typeDescriptions":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"}},"visibility":"private"},{"constant":true,"id":185,"mutability":"constant","name":"_PRE_INTERACTION_CALL_FLAG","nameLocation":"5251:26:0","nodeType":"VariableDeclaration","scope":497,"src":"5226:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"5226:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_7237005577332262213973186563042994240829374041602535252466099000494570602496_by_1","typeString":"int_const 7237...(68 digits omitted)...2496"},"id":184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5280:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323532","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5285:3:0","typeDescriptions":{"typeIdentifier":"t_rational_252_by_1","typeString":"int_const 252"},"value":"252"},"src":"5280:8:0","typeDescriptions":{"typeIdentifier":"t_rational_7237005577332262213973186563042994240829374041602535252466099000494570602496_by_1","typeString":"int_const 7237...(68 digits omitted)...2496"}},"visibility":"private"},{"constant":true,"id":190,"mutability":"constant","name":"_POST_INTERACTION_CALL_FLAG","nameLocation":"5319:27:0","nodeType":"VariableDeclaration","scope":497,"src":"5294:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"5294:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1","typeString":"int_const 3618...(68 digits omitted)...1248"},"id":189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5349:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323531","id":188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5354:3:0","typeDescriptions":{"typeIdentifier":"t_rational_251_by_1","typeString":"int_const 251"},"value":"251"},"src":"5349:8:0","typeDescriptions":{"typeIdentifier":"t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1","typeString":"int_const 3618...(68 digits omitted)...1248"}},"visibility":"private"},{"constant":true,"id":195,"mutability":"constant","name":"_NEED_CHECK_EPOCH_MANAGER_FLAG","nameLocation":"5388:30:0","nodeType":"VariableDeclaration","scope":497,"src":"5363:66:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5363:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1","typeString":"int_const 1809...(68 digits omitted)...0624"},"id":194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5421:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323530","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5426:3:0","typeDescriptions":{"typeIdentifier":"t_rational_250_by_1","typeString":"int_const 250"},"value":"250"},"src":"5421:8:0","typeDescriptions":{"typeIdentifier":"t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1","typeString":"int_const 1809...(68 digits omitted)...0624"}},"visibility":"private"},{"constant":true,"id":200,"mutability":"constant","name":"_HAS_EXTENSION_FLAG","nameLocation":"5460:19:0","nodeType":"VariableDeclaration","scope":497,"src":"5435:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_904625697166532776746648320380374280103671755200316906558262375061821325312_by_1","typeString":"int_const 9046...(67 digits omitted)...5312"},"id":199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5482:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323439","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5487:3:0","typeDescriptions":{"typeIdentifier":"t_rational_249_by_1","typeString":"int_const 249"},"value":"249"},"src":"5482:8:0","typeDescriptions":{"typeIdentifier":"t_rational_904625697166532776746648320380374280103671755200316906558262375061821325312_by_1","typeString":"int_const 9046...(67 digits omitted)...5312"}},"visibility":"private"},{"constant":true,"id":205,"mutability":"constant","name":"_USE_PERMIT2_FLAG","nameLocation":"5521:17:0","nodeType":"VariableDeclaration","scope":497,"src":"5496:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5496:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1","typeString":"int_const 4523...(67 digits omitted)...2656"},"id":204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5541:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323438","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5546:3:0","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},"src":"5541:8:0","typeDescriptions":{"typeIdentifier":"t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1","typeString":"int_const 4523...(67 digits omitted)...2656"}},"visibility":"private"},{"constant":true,"id":210,"mutability":"constant","name":"_UNWRAP_WETH_FLAG","nameLocation":"5580:17:0","nodeType":"VariableDeclaration","scope":497,"src":"5555:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"5555:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_226156424291633194186662080095093570025917938800079226639565593765455331328_by_1","typeString":"int_const 2261...(67 digits omitted)...1328"},"id":209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5600:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323437","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:3:0","typeDescriptions":{"typeIdentifier":"t_rational_247_by_1","typeString":"int_const 247"},"value":"247"},"src":"5600:8:0","typeDescriptions":{"typeIdentifier":"t_rational_226156424291633194186662080095093570025917938800079226639565593765455331328_by_1","typeString":"int_const 2261...(67 digits omitted)...1328"}},"visibility":"private"},{"body":{"id":229,"nodeType":"Block","src":"6015:84:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":221,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6052:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":219,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"6033:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6045:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"6033:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6033:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":223,"name":"_HAS_EXTENSION_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6067:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6033:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6032:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6091:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6032:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":218,"id":228,"nodeType":"Return","src":"6025:67:0"}]},"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"5615:319:0","text":" @notice Checks if the order has the extension flag set.\n @dev If the `HAS_EXTENSION_FLAG` is set in the makerTraits, then the protocol expects that the order has extension(s).\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the flag is set."},"id":230,"implemented":true,"kind":"function","modifiers":[],"name":"hasExtension","nameLocation":"5948:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"makerTraits","nameLocation":"5973:11:0","nodeType":"VariableDeclaration","scope":230,"src":"5961:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":213,"nodeType":"UserDefinedTypeName","pathNode":{"id":212,"name":"MakerTraits","nameLocations":["5961:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"5961:11:0"},"referencedDeclaration":132,"src":"5961:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"5960:25:0"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":230,"src":"6009:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":216,"name":"bool","nodeType":"ElementaryTypeName","src":"6009:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6008:6:0"},"scope":497,"src":"5939:160:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":266,"nodeType":"Block","src":"6479:198:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"allowedSender","nameLocation":"6497:13:0","nodeType":"VariableDeclaration","scope":266,"src":"6489:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":241,"name":"uint160","nodeType":"ElementaryTypeName","src":"6489:7:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":252,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":247,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"6540:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":245,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"6521:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6533:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"6521:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6521:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":249,"name":"_ALLOWED_SENDER_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"6555:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6521:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6513:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":243,"name":"uint160","nodeType":"ElementaryTypeName","src":"6513:7:0","typeDescriptions":{}}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"VariableDeclarationStatement","src":"6489:87:0"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":253,"name":"allowedSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6593:13:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6610:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6593:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":256,"name":"allowedSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6615:13:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":259,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"6640:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6632:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":257,"name":"uint160","nodeType":"ElementaryTypeName","src":"6632:7:0","typeDescriptions":{}}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6632:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":261,"name":"_ALLOWED_SENDER_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"6650:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6632:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6615:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6593:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":240,"id":265,"nodeType":"Return","src":"6586:84:0"}]},"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"6105:274:0","text":" @notice Checks if the maker allows a specific taker to fill the order.\n @param makerTraits The traits of the maker.\n @param sender The address of the taker to be checked.\n @return result A boolean indicating whether the taker is allowed."},"id":267,"implemented":true,"kind":"function","modifiers":[],"name":"isAllowedSender","nameLocation":"6393:15:0","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"makerTraits","nameLocation":"6421:11:0","nodeType":"VariableDeclaration","scope":267,"src":"6409:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":233,"nodeType":"UserDefinedTypeName","pathNode":{"id":232,"name":"MakerTraits","nameLocations":["6409:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"6409:11:0"},"referencedDeclaration":132,"src":"6409:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"sender","nameLocation":"6442:6:0","nodeType":"VariableDeclaration","scope":267,"src":"6434:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"6434:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6408:41:0"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"6473:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":238,"name":"bool","nodeType":"ElementaryTypeName","src":"6473:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6472:6:0"},"scope":497,"src":"6384:293:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":297,"nodeType":"Block","src":"6945:218:0","statements":[{"assignments":[277],"declarations":[{"constant":false,"id":277,"mutability":"mutable","name":"expiration","nameLocation":"6963:10:0","nodeType":"VariableDeclaration","scope":297,"src":"6955:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"6955:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":287,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":280,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"6996:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":278,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"6977:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6989:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"6977:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":282,"name":"_EXPIRATION_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"7012:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6977:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6976:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":285,"name":"_EXPIRATION_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"7034:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6976:74:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6955:95:0"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":288,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"7067:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7081:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7067:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":291,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"7086:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":292,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7099:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7105:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"7099:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7086:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7067:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":275,"id":296,"nodeType":"Return","src":"7060:54:0"}]},"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"6683:184:0","text":" @notice Checks if the order has expired.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the order has expired."},"id":298,"implemented":true,"kind":"function","modifiers":[],"name":"isExpired","nameLocation":"6881:9:0","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"makerTraits","nameLocation":"6903:11:0","nodeType":"VariableDeclaration","scope":298,"src":"6891:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":270,"nodeType":"UserDefinedTypeName","pathNode":{"id":269,"name":"MakerTraits","nameLocations":["6891:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"6891:11:0"},"referencedDeclaration":132,"src":"6891:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"6890:25:0"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":298,"src":"6939:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":273,"name":"bool","nodeType":"ElementaryTypeName","src":"6939:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6938:6:0"},"scope":497,"src":"6872:291:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"7426:106:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":309,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"7463:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":307,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"7444:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7456:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"7444:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7444:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":311,"name":"_NONCE_OR_EPOCH_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"7479:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7444:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7443:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":314,"name":"_NONCE_OR_EPOCH_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"7505:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7443:82:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":306,"id":316,"nodeType":"Return","src":"7436:89:0"}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"7169:173:0","text":" @notice Returns the nonce or epoch of the order.\n @param makerTraits The traits of the maker.\n @return result The nonce or epoch of the order."},"id":318,"implemented":true,"kind":"function","modifiers":[],"name":"nonceOrEpoch","nameLocation":"7356:12:0","nodeType":"FunctionDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"makerTraits","nameLocation":"7381:11:0","nodeType":"VariableDeclaration","scope":318,"src":"7369:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":301,"nodeType":"UserDefinedTypeName","pathNode":{"id":300,"name":"MakerTraits","nameLocations":["7369:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"7369:11:0"},"referencedDeclaration":132,"src":"7369:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"7368:25:0"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":318,"src":"7417:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"7417:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7416:9:0"},"scope":497,"src":"7347:185:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":337,"nodeType":"Block","src":"7773:90:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":329,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"7810:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":327,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"7791:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7803:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"7791:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7791:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":331,"name":"_SERIES_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"7826:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7791:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7790:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":334,"name":"_SERIES_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"7844:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7790:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":326,"id":336,"nodeType":"Return","src":"7783:73:0"}]},"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"7538:157:0","text":" @notice Returns the series of the order.\n @param makerTraits The traits of the maker.\n @return result The series of the order."},"id":338,"implemented":true,"kind":"function","modifiers":[],"name":"series","nameLocation":"7709:6:0","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"makerTraits","nameLocation":"7728:11:0","nodeType":"VariableDeclaration","scope":338,"src":"7716:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":321,"nodeType":"UserDefinedTypeName","pathNode":{"id":320,"name":"MakerTraits","nameLocations":["7716:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"7716:11:0"},"referencedDeclaration":132,"src":"7716:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"7715:25:0"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":338,"src":"7764:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"7764:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7763:9:0"},"scope":497,"src":"7700:163:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":357,"nodeType":"Block","src":"8321:87:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":349,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"8358:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":347,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"8339:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8351:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"8339:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8339:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":351,"name":"_NO_PARTIAL_FILLS_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"8373:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8339:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8338:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8400:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8338:63:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":346,"id":356,"nodeType":"Return","src":"8331:70:0"}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"7869:366:0","text":" @notice Determines if the order allows partial fills.\n @dev If the _NO_PARTIAL_FILLS_FLAG is not set in the makerTraits, then the order allows partial fills.\n @param makerTraits The traits of the maker, determining their preferences for the order.\n @return result A boolean indicating whether the maker allows partial fills."},"id":358,"implemented":true,"kind":"function","modifiers":[],"name":"allowPartialFills","nameLocation":"8249:17:0","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"makerTraits","nameLocation":"8279:11:0","nodeType":"VariableDeclaration","scope":358,"src":"8267:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":341,"nodeType":"UserDefinedTypeName","pathNode":{"id":340,"name":"MakerTraits","nameLocations":["8267:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"8267:11:0"},"referencedDeclaration":132,"src":"8267:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"8266:25:0"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":358,"src":"8315:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":344,"name":"bool","nodeType":"ElementaryTypeName","src":"8315:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8314:6:0"},"scope":497,"src":"8240:168:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":377,"nodeType":"Block","src":"8721:91:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":369,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"8758:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":367,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"8739:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8751:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"8739:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":371,"name":"_PRE_INTERACTION_CALL_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"8773:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8739:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8738:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8804:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8738:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":366,"id":376,"nodeType":"Return","src":"8731:74:0"}]},"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"8414:216:0","text":" @notice Checks if the maker needs pre-interaction call.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the maker needs a pre-interaction call."},"id":378,"implemented":true,"kind":"function","modifiers":[],"name":"needPreInteractionCall","nameLocation":"8644:22:0","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"makerTraits","nameLocation":"8679:11:0","nodeType":"VariableDeclaration","scope":378,"src":"8667:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":361,"nodeType":"UserDefinedTypeName","pathNode":{"id":360,"name":"MakerTraits","nameLocations":["8667:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"8667:11:0"},"referencedDeclaration":132,"src":"8667:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"8666:25:0"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":378,"src":"8715:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":364,"name":"bool","nodeType":"ElementaryTypeName","src":"8715:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8714:6:0"},"scope":497,"src":"8635:177:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":397,"nodeType":"Block","src":"9128:92:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":389,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"9165:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":387,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"9146:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9158:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"9146:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9146:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":391,"name":"_POST_INTERACTION_CALL_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"9180:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:61:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9145:63:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9145:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":386,"id":396,"nodeType":"Return","src":"9138:75:0"}]},"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"8818:218:0","text":" @notice Checks if the maker needs post-interaction call.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the maker needs a post-interaction call."},"id":398,"implemented":true,"kind":"function","modifiers":[],"name":"needPostInteractionCall","nameLocation":"9050:23:0","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"makerTraits","nameLocation":"9086:11:0","nodeType":"VariableDeclaration","scope":398,"src":"9074:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":381,"nodeType":"UserDefinedTypeName","pathNode":{"id":380,"name":"MakerTraits","nameLocations":["9074:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"9074:11:0"},"referencedDeclaration":132,"src":"9074:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"9073:25:0"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":398,"src":"9122:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":384,"name":"bool","nodeType":"ElementaryTypeName","src":"9122:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9121:6:0"},"scope":497,"src":"9041:179:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":417,"nodeType":"Block","src":"9682:91:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":409,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"9719:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":407,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"9700:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9712:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"9700:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9700:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":411,"name":"_ALLOW_MULTIPLE_FILLS_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"9734:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9700:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9699:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9765:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9699:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":406,"id":416,"nodeType":"Return","src":"9692:74:0"}]},"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"9226:369:0","text":" @notice Determines if the order allows multiple fills.\n @dev If the _ALLOW_MULTIPLE_FILLS_FLAG is set in the makerTraits, then the maker allows multiple fills.\n @param makerTraits The traits of the maker, determining their preferences for the order.\n @return result A boolean indicating whether the maker allows multiple fills."},"id":418,"implemented":true,"kind":"function","modifiers":[],"name":"allowMultipleFills","nameLocation":"9609:18:0","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"makerTraits","nameLocation":"9640:11:0","nodeType":"VariableDeclaration","scope":418,"src":"9628:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":401,"nodeType":"UserDefinedTypeName","pathNode":{"id":400,"name":"MakerTraits","nameLocations":["9628:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"9628:11:0"},"referencedDeclaration":132,"src":"9628:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"9627:25:0"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":418,"src":"9676:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":404,"name":"bool","nodeType":"ElementaryTypeName","src":"9676:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9675:6:0"},"scope":497,"src":"9600:173:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"10330:91:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10347:31:0","subExpression":{"arguments":[{"id":428,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"10366:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"id":427,"name":"allowPartialFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"10348:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_bool_$","typeString":"function (MakerTraits) pure returns (bool)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10348:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10382:32:0","subExpression":{"arguments":[{"id":432,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"10402:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"id":431,"name":"allowMultipleFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"10383:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_bool_$","typeString":"function (MakerTraits) pure returns (bool)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10383:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10347:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":426,"id":436,"nodeType":"Return","src":"10340:74:0"}]},"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"9779:465:0","text":" @notice Determines if an order should use the bit invalidator or remaining amount validator.\n @dev The bit invalidator can be used if the order does not allow partial or multiple fills.\n @param makerTraits The traits of the maker, determining their preferences for the order.\n @return result A boolean indicating whether the bit invalidator should be used.\n True if the order requires the use of the bit invalidator."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"useBitInvalidator","nameLocation":"10258:17:0","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"makerTraits","nameLocation":"10288:11:0","nodeType":"VariableDeclaration","scope":438,"src":"10276:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":421,"nodeType":"UserDefinedTypeName","pathNode":{"id":420,"name":"MakerTraits","nameLocations":["10276:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"10276:11:0"},"referencedDeclaration":132,"src":"10276:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"10275:25:0"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"10324:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":424,"name":"bool","nodeType":"ElementaryTypeName","src":"10324:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10323:6:0"},"scope":497,"src":"10249:172:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"10735:95:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":449,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"10772:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":447,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"10753:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10765:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"10753:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10753:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":451,"name":"_NEED_CHECK_EPOCH_MANAGER_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"10787:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10753:64:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10752:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10822:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10752:71:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":446,"id":456,"nodeType":"Return","src":"10745:78:0"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"10427:218:0","text":" @notice Checks if the maker needs to check the epoch.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the maker needs to check the epoch manager."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"needCheckEpochManager","nameLocation":"10659:21:0","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"makerTraits","nameLocation":"10693:11:0","nodeType":"VariableDeclaration","scope":458,"src":"10681:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":441,"nodeType":"UserDefinedTypeName","pathNode":{"id":440,"name":"MakerTraits","nameLocations":["10681:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"10681:11:0"},"referencedDeclaration":132,"src":"10681:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"10680:25:0"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":458,"src":"10729:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":444,"name":"bool","nodeType":"ElementaryTypeName","src":"10729:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10728:6:0"},"scope":497,"src":"10650:180:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"11101:80:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":469,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"11137:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":467,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"11118:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11130:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"11118:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11118:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":471,"name":"_USE_PERMIT2_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"11152:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11118:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11173:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11118:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":466,"id":475,"nodeType":"Return","src":"11111:63:0"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"10836:186:0","text":" @notice Checks if the maker uses permit2.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the maker uses permit2."},"id":477,"implemented":true,"kind":"function","modifiers":[],"name":"usePermit2","nameLocation":"11036:10:0","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"makerTraits","nameLocation":"11059:11:0","nodeType":"VariableDeclaration","scope":477,"src":"11047:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":461,"nodeType":"UserDefinedTypeName","pathNode":{"id":460,"name":"MakerTraits","nameLocations":["11047:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"11047:11:0"},"referencedDeclaration":132,"src":"11047:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"11046:25:0"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":477,"src":"11095:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":464,"name":"bool","nodeType":"ElementaryTypeName","src":"11095:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11094:6:0"},"scope":497,"src":"11027:154:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"11469:80:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":488,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"11505:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}],"expression":{"id":486,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"11486:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$132_$","typeString":"type(MakerTraits)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11498:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"11486:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$132_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11486:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":490,"name":"_UNWRAP_WETH_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"11520:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11486:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11541:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11486:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":485,"id":494,"nodeType":"Return","src":"11479:63:0"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"11187:203:0","text":" @notice Checks if the maker needs to unwraps WETH.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the maker needs to unwrap WETH."},"id":496,"implemented":true,"kind":"function","modifiers":[],"name":"unwrapWeth","nameLocation":"11404:10:0","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"makerTraits","nameLocation":"11427:11:0","nodeType":"VariableDeclaration","scope":496,"src":"11415:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":480,"nodeType":"UserDefinedTypeName","pathNode":{"id":479,"name":"MakerTraits","nameLocations":["11415:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"11415:11:0"},"referencedDeclaration":132,"src":"11415:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"11414:25:0"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":496,"src":"11463:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":483,"name":"bool","nodeType":"ElementaryTypeName","src":"11463:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11462:6:0"},"scope":497,"src":"11395:154:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1758,"src":"4546:7005:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"RevertReasonForwarder","contractDependencies":[],"contractKind":"library","documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"11653:142:0","text":" @title RevertReasonForwarder\n @notice Provides utilities for forwarding and retrieving revert reasons from failed external calls."},"fullyImplemented":true,"id":513,"linearizedBaseContracts":[513],"name":"RevertReasonForwarder","nameLocation":"11804:21:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":503,"nodeType":"Block","src":"12049:286:0","statements":[{"AST":{"nativeSrc":"12145:184:0","nodeType":"YulBlock","src":"12145:184:0","statements":[{"nativeSrc":"12202:22:0","nodeType":"YulVariableDeclaration","src":"12202:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"12219:4:0","nodeType":"YulLiteral","src":"12219:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"12213:5:0","nodeType":"YulIdentifier","src":"12213:5:0"},"nativeSrc":"12213:11:0","nodeType":"YulFunctionCall","src":"12213:11:0"},"variables":[{"name":"ptr","nativeSrc":"12206:3:0","nodeType":"YulTypedName","src":"12206:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"12252:3:0","nodeType":"YulIdentifier","src":"12252:3:0"},{"kind":"number","nativeSrc":"12257:1:0","nodeType":"YulLiteral","src":"12257:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"12260:14:0","nodeType":"YulIdentifier","src":"12260:14:0"},"nativeSrc":"12260:16:0","nodeType":"YulFunctionCall","src":"12260:16:0"}],"functionName":{"name":"returndatacopy","nativeSrc":"12237:14:0","nodeType":"YulIdentifier","src":"12237:14:0"},"nativeSrc":"12237:40:0","nodeType":"YulFunctionCall","src":"12237:40:0"},"nativeSrc":"12237:40:0","nodeType":"YulExpressionStatement","src":"12237:40:0"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"12297:3:0","nodeType":"YulIdentifier","src":"12297:3:0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"12302:14:0","nodeType":"YulIdentifier","src":"12302:14:0"},"nativeSrc":"12302:16:0","nodeType":"YulFunctionCall","src":"12302:16:0"}],"functionName":{"name":"revert","nativeSrc":"12290:6:0","nodeType":"YulIdentifier","src":"12290:6:0"},"nativeSrc":"12290:29:0","nodeType":"YulFunctionCall","src":"12290:29:0"},"nativeSrc":"12290:29:0","nodeType":"YulExpressionStatement","src":"12290:29:0"}]},"evmVersion":"paris","externalReferences":[],"flags":["memory-safe"],"id":502,"nodeType":"InlineAssembly","src":"12120:209:0"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"11832:178:0","text":" @dev Forwards the revert reason from the latest external call.\n This method allows propagating the revert reason of a failed external call to the caller."},"id":504,"implemented":true,"kind":"function","modifiers":[],"name":"reRevert","nameLocation":"12024:8:0","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"12032:2:0"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[],"src":"12049:0:0"},"scope":513,"src":"12015:320:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":511,"nodeType":"Block","src":"12665:321:0","statements":[{"AST":{"nativeSrc":"12700:280:0","nodeType":"YulBlock","src":"12700:280:0","statements":[{"nativeSrc":"12757:21:0","nodeType":"YulAssignment","src":"12757:21:0","value":{"arguments":[{"kind":"number","nativeSrc":"12773:4:0","nodeType":"YulLiteral","src":"12773:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"12767:5:0","nodeType":"YulIdentifier","src":"12767:5:0"},"nativeSrc":"12767:11:0","nodeType":"YulFunctionCall","src":"12767:11:0"},"variableNames":[{"name":"reason","nativeSrc":"12757:6:0","nodeType":"YulIdentifier","src":"12757:6:0"}]},{"nativeSrc":"12791:30:0","nodeType":"YulVariableDeclaration","src":"12791:30:0","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"12805:14:0","nodeType":"YulIdentifier","src":"12805:14:0"},"nativeSrc":"12805:16:0","nodeType":"YulFunctionCall","src":"12805:16:0"},"variables":[{"name":"length","nativeSrc":"12795:6:0","nodeType":"YulTypedName","src":"12795:6:0","type":""}]},{"expression":{"arguments":[{"name":"reason","nativeSrc":"12841:6:0","nodeType":"YulIdentifier","src":"12841:6:0"},{"name":"length","nativeSrc":"12849:6:0","nodeType":"YulIdentifier","src":"12849:6:0"}],"functionName":{"name":"mstore","nativeSrc":"12834:6:0","nodeType":"YulIdentifier","src":"12834:6:0"},"nativeSrc":"12834:22:0","nodeType":"YulFunctionCall","src":"12834:22:0"},"nativeSrc":"12834:22:0","nodeType":"YulExpressionStatement","src":"12834:22:0"},{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"12888:6:0","nodeType":"YulIdentifier","src":"12888:6:0"},{"kind":"number","nativeSrc":"12896:4:0","nodeType":"YulLiteral","src":"12896:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12884:3:0","nodeType":"YulIdentifier","src":"12884:3:0"},"nativeSrc":"12884:17:0","nodeType":"YulFunctionCall","src":"12884:17:0"},{"kind":"number","nativeSrc":"12903:1:0","nodeType":"YulLiteral","src":"12903:1:0","type":"","value":"0"},{"name":"length","nativeSrc":"12906:6:0","nodeType":"YulIdentifier","src":"12906:6:0"}],"functionName":{"name":"returndatacopy","nativeSrc":"12869:14:0","nodeType":"YulIdentifier","src":"12869:14:0"},"nativeSrc":"12869:44:0","nodeType":"YulFunctionCall","src":"12869:44:0"},"nativeSrc":"12869:44:0","nodeType":"YulExpressionStatement","src":"12869:44:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12933:4:0","nodeType":"YulLiteral","src":"12933:4:0","type":"","value":"0x40"},{"arguments":[{"name":"reason","nativeSrc":"12943:6:0","nodeType":"YulIdentifier","src":"12943:6:0"},{"arguments":[{"kind":"number","nativeSrc":"12955:4:0","nodeType":"YulLiteral","src":"12955:4:0","type":"","value":"0x20"},{"name":"length","nativeSrc":"12961:6:0","nodeType":"YulIdentifier","src":"12961:6:0"}],"functionName":{"name":"add","nativeSrc":"12951:3:0","nodeType":"YulIdentifier","src":"12951:3:0"},"nativeSrc":"12951:17:0","nodeType":"YulFunctionCall","src":"12951:17:0"}],"functionName":{"name":"add","nativeSrc":"12939:3:0","nodeType":"YulIdentifier","src":"12939:3:0"},"nativeSrc":"12939:30:0","nodeType":"YulFunctionCall","src":"12939:30:0"}],"functionName":{"name":"mstore","nativeSrc":"12926:6:0","nodeType":"YulIdentifier","src":"12926:6:0"},"nativeSrc":"12926:44:0","nodeType":"YulFunctionCall","src":"12926:44:0"},"nativeSrc":"12926:44:0","nodeType":"YulExpressionStatement","src":"12926:44:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":508,"isOffset":false,"isSlot":false,"src":"12757:6:0","valueSize":1},{"declaration":508,"isOffset":false,"isSlot":false,"src":"12841:6:0","valueSize":1},{"declaration":508,"isOffset":false,"isSlot":false,"src":"12888:6:0","valueSize":1},{"declaration":508,"isOffset":false,"isSlot":false,"src":"12943:6:0","valueSize":1}],"flags":["memory-safe"],"id":510,"nodeType":"InlineAssembly","src":"12675:305:0"}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"12341:255:0","text":" @dev Retrieves the revert reason from the latest external call.\n This method enables capturing the revert reason of a failed external call for inspection or processing.\n @return reason The latest external call revert reason."},"id":512,"implemented":true,"kind":"function","modifiers":[],"name":"reReason","nameLocation":"12610:8:0","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"12618:2:0"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"reason","nameLocation":"12657:6:0","nodeType":"VariableDeclaration","scope":512,"src":"12644:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":507,"name":"bytes","nodeType":"ElementaryTypeName","src":"12644:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12643:21:0"},"scope":513,"src":"12601:385:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1758,"src":"11796:1192:0","usedErrors":[],"usedEvents":[]},{"canonicalName":"TakerTraits","id":515,"name":"TakerTraits","nameLocation":"13094:11:0","nodeType":"UserDefinedValueTypeDefinition","src":"13089:28:0","underlyingType":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"13109:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"abstract":false,"baseContracts":[],"canonicalName":"TakerTraitsLib","contractDependencies":[],"contractKind":"library","documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"13119:1211:0","text":" @title TakerTraitsLib\n @notice This library to manage and check TakerTraits, which are used to encode the taker's preferences for an order in a single uint256.\n @dev The TakerTraits are structured as follows:\n High bits are used for flags\n 255 bit `_MAKER_AMOUNT_FLAG`           - If set, the taking amount is calculated based on making amount, otherwise making amount is calculated based on taking amount.\n 254 bit `_UNWRAP_WETH_FLAG`            - If set, the WETH will be unwrapped into ETH before sending to taker.\n 253 bit `_SKIP_ORDER_PERMIT_FLAG`      - If set, the order skips maker's permit execution.\n 252 bit `_USE_PERMIT2_FLAG`            - If set, the order uses the permit2 function for authorization.\n 251 bit `_ARGS_HAS_TARGET`             - If set, then first 20 bytes of args are treated as target address for maker’s funds transfer.\n 224-247 bits `ARGS_EXTENSION_LENGTH`   - The length of the extension calldata in the args.\n 200-223 bits `ARGS_INTERACTION_LENGTH` - The length of the interaction calldata in the args.\n 0-184 bits                             - The threshold amount (the maximum amount a taker agrees to give in exchange for a making amount)."},"fullyImplemented":true,"id":714,"linearizedBaseContracts":[714],"name":"TakerTraitsLib","nameLocation":"14339:14:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":521,"mutability":"constant","name":"_MAKER_AMOUNT_FLAG","nameLocation":"14385:18:0","nodeType":"VariableDeclaration","scope":714,"src":"14360:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"14360:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323535","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14411:3:0","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"14406:8:0","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"constant":true,"id":526,"mutability":"constant","name":"_UNWRAP_WETH_FLAG","nameLocation":"14445:17:0","nodeType":"VariableDeclaration","scope":714,"src":"14420:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"14420:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"},"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14465:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323534","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14470:3:0","typeDescriptions":{"typeIdentifier":"t_rational_254_by_1","typeString":"int_const 254"},"value":"254"},"src":"14465:8:0","typeDescriptions":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"}},"visibility":"private"},{"constant":true,"id":531,"mutability":"constant","name":"_SKIP_ORDER_PERMIT_FLAG","nameLocation":"14504:23:0","nodeType":"VariableDeclaration","scope":714,"src":"14479:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"14479:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_14474011154664524427946373126085988481658748083205070504932198000989141204992_by_1","typeString":"int_const 1447...(69 digits omitted)...4992"},"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14530:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323533","id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14535:3:0","typeDescriptions":{"typeIdentifier":"t_rational_253_by_1","typeString":"int_const 253"},"value":"253"},"src":"14530:8:0","typeDescriptions":{"typeIdentifier":"t_rational_14474011154664524427946373126085988481658748083205070504932198000989141204992_by_1","typeString":"int_const 1447...(69 digits omitted)...4992"}},"visibility":"private"},{"constant":true,"id":536,"mutability":"constant","name":"_USE_PERMIT2_FLAG","nameLocation":"14569:17:0","nodeType":"VariableDeclaration","scope":714,"src":"14544:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"14544:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_7237005577332262213973186563042994240829374041602535252466099000494570602496_by_1","typeString":"int_const 7237...(68 digits omitted)...2496"},"id":535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323532","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14594:3:0","typeDescriptions":{"typeIdentifier":"t_rational_252_by_1","typeString":"int_const 252"},"value":"252"},"src":"14589:8:0","typeDescriptions":{"typeIdentifier":"t_rational_7237005577332262213973186563042994240829374041602535252466099000494570602496_by_1","typeString":"int_const 7237...(68 digits omitted)...2496"}},"visibility":"private"},{"constant":true,"id":541,"mutability":"constant","name":"_ARGS_HAS_TARGET","nameLocation":"14628:16:0","nodeType":"VariableDeclaration","scope":714,"src":"14603:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"14603:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1","typeString":"int_const 3618...(68 digits omitted)...1248"},"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323531","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14652:3:0","typeDescriptions":{"typeIdentifier":"t_rational_251_by_1","typeString":"int_const 251"},"value":"251"},"src":"14647:8:0","typeDescriptions":{"typeIdentifier":"t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1","typeString":"int_const 3618...(68 digits omitted)...1248"}},"visibility":"private"},{"constant":true,"id":544,"mutability":"constant","name":"_ARGS_EXTENSION_LENGTH_OFFSET","nameLocation":"14687:29:0","nodeType":"VariableDeclaration","scope":714,"src":"14662:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"14662:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323234","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14719:3:0","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},"visibility":"private"},{"constant":true,"id":547,"mutability":"constant","name":"_ARGS_EXTENSION_LENGTH_MASK","nameLocation":"14753:27:0","nodeType":"VariableDeclaration","scope":714,"src":"14728:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"14728:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078666666666666","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14783:8:0","typeDescriptions":{"typeIdentifier":"t_rational_16777215_by_1","typeString":"int_const 16777215"},"value":"0xffffff"},"visibility":"private"},{"constant":true,"id":550,"mutability":"constant","name":"_ARGS_INTERACTION_LENGTH_OFFSET","nameLocation":"14822:31:0","nodeType":"VariableDeclaration","scope":714,"src":"14797:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"14797:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323030","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14856:3:0","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"private"},{"constant":true,"id":553,"mutability":"constant","name":"_ARGS_INTERACTION_LENGTH_MASK","nameLocation":"14890:29:0","nodeType":"VariableDeclaration","scope":714,"src":"14865:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"14865:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078666666666666","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14922:8:0","typeDescriptions":{"typeIdentifier":"t_rational_16777215_by_1","typeString":"int_const 16777215"},"value":"0xffffff"},"visibility":"private"},{"constant":true,"id":556,"mutability":"constant","name":"_AMOUNT_MASK","nameLocation":"14962:12:0","nodeType":"VariableDeclaration","scope":714,"src":"14937:106:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"14937:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307830303030303030303030303030303030303066666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14977:66:0","typeDescriptions":{"typeIdentifier":"t_rational_24519928653854221733733552434404946937899825954937634815_by_1","typeString":"int_const 2451...(48 digits omitted)...4815"},"value":"0x000000000000000000ffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"private"},{"body":{"id":575,"nodeType":"Block","src":"15350:81:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":567,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"15387:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}],"expression":{"id":565,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"15368:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$515_$","typeString":"type(TakerTraits)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15380:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"15368:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$515_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15368:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":569,"name":"_ARGS_HAS_TARGET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"15402:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15368:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15367:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15423:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15367:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":564,"id":574,"nodeType":"Return","src":"15360:64:0"}]},"documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"15050:218:0","text":" @notice Checks if the args should contain target address.\n @param takerTraits The traits of the taker.\n @return result A boolean indicating whether the args should contain target address."},"id":576,"implemented":true,"kind":"function","modifiers":[],"name":"argsHasTarget","nameLocation":"15282:13:0","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"takerTraits","nameLocation":"15308:11:0","nodeType":"VariableDeclaration","scope":576,"src":"15296:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":559,"nodeType":"UserDefinedTypeName","pathNode":{"id":558,"name":"TakerTraits","nameLocations":["15296:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"15296:11:0"},"referencedDeclaration":515,"src":"15296:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"15295:25:0"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"15344:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":562,"name":"bool","nodeType":"ElementaryTypeName","src":"15344:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15343:6:0"},"scope":714,"src":"15273:158:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":595,"nodeType":"Block","src":"15761:120:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":587,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"15798:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}],"expression":{"id":585,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"15779:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$515_$","typeString":"type(TakerTraits)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15791:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"15779:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$515_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15779:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":589,"name":"_ARGS_EXTENSION_LENGTH_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"15814:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15779:64:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15778:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":592,"name":"_ARGS_EXTENSION_LENGTH_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"15847:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15778:96:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":584,"id":594,"nodeType":"Return","src":"15771:103:0"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"15437:233:0","text":" @notice Retrieves the length of the extension calldata from the takerTraits.\n @param takerTraits The traits of the taker.\n @return result The length of the extension calldata encoded in the takerTraits."},"id":596,"implemented":true,"kind":"function","modifiers":[],"name":"argsExtensionLength","nameLocation":"15684:19:0","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"takerTraits","nameLocation":"15716:11:0","nodeType":"VariableDeclaration","scope":596,"src":"15704:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":579,"nodeType":"UserDefinedTypeName","pathNode":{"id":578,"name":"TakerTraits","nameLocations":["15704:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"15704:11:0"},"referencedDeclaration":515,"src":"15704:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"15703:25:0"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":596,"src":"15752:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"15752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15751:9:0"},"scope":714,"src":"15675:206:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"16217:124:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":607,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"16254:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}],"expression":{"id":605,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"16235:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$515_$","typeString":"type(TakerTraits)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16247:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"16235:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$515_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16235:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":609,"name":"_ARGS_INTERACTION_LENGTH_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"16270:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16235:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16234:68:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":612,"name":"_ARGS_INTERACTION_LENGTH_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"16305:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16234:100:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":604,"id":614,"nodeType":"Return","src":"16227:107:0"}]},"documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"15887:237:0","text":" @notice Retrieves the length of the interaction calldata from the takerTraits.\n @param takerTraits The traits of the taker.\n @return result The length of the interaction calldata encoded in the takerTraits."},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"argsInteractionLength","nameLocation":"16138:21:0","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"takerTraits","nameLocation":"16172:11:0","nodeType":"VariableDeclaration","scope":616,"src":"16160:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":599,"nodeType":"UserDefinedTypeName","pathNode":{"id":598,"name":"TakerTraits","nameLocations":["16160:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"16160:11:0"},"referencedDeclaration":515,"src":"16160:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"16159:25:0"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":616,"src":"16208:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"16208:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16207:9:0"},"scope":714,"src":"16129:212:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":635,"nodeType":"Block","src":"16694:83:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":627,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"16731:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}],"expression":{"id":625,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"16712:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$515_$","typeString":"type(TakerTraits)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16724:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"16712:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$515_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16712:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":629,"name":"_MAKER_AMOUNT_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"16746:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16712:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16769:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16711:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":624,"id":634,"nodeType":"Return","src":"16704:66:0"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"16347:264:0","text":" @notice Checks if the taking amount should be calculated based on making amount.\n @param takerTraits The traits of the taker.\n @return result A boolean indicating whether the taking amount should be calculated based on making amount."},"id":636,"implemented":true,"kind":"function","modifiers":[],"name":"isMakingAmount","nameLocation":"16625:14:0","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"takerTraits","nameLocation":"16652:11:0","nodeType":"VariableDeclaration","scope":636,"src":"16640:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":619,"nodeType":"UserDefinedTypeName","pathNode":{"id":618,"name":"TakerTraits","nameLocations":["16640:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"16640:11:0"},"referencedDeclaration":515,"src":"16640:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"16639:25:0"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":636,"src":"16688:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":622,"name":"bool","nodeType":"ElementaryTypeName","src":"16688:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16687:6:0"},"scope":714,"src":"16616:161:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"17082:82:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":647,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"17119:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}],"expression":{"id":645,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"17100:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$515_$","typeString":"type(TakerTraits)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17112:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"17100:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$515_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17100:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":649,"name":"_UNWRAP_WETH_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"17134:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17100:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17099:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17156:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17099:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":644,"id":654,"nodeType":"Return","src":"17092:65:0"}]},"documentation":{"id":637,"nodeType":"StructuredDocumentation","src":"16783:220:0","text":" @notice Checks if the order should unwrap WETH and send ETH to taker.\n @param takerTraits The traits of the taker.\n @return result A boolean indicating whether the order should unwrap WETH."},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"unwrapWeth","nameLocation":"17017:10:0","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"takerTraits","nameLocation":"17040:11:0","nodeType":"VariableDeclaration","scope":656,"src":"17028:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":639,"nodeType":"UserDefinedTypeName","pathNode":{"id":638,"name":"TakerTraits","nameLocations":["17028:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"17028:11:0"},"referencedDeclaration":515,"src":"17028:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"17027:25:0"},"returnParameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":656,"src":"17076:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":642,"name":"bool","nodeType":"ElementaryTypeName","src":"17076:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17075:6:0"},"scope":714,"src":"17008:156:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"17470:88:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":667,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"17507:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}],"expression":{"id":665,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"17488:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$515_$","typeString":"type(TakerTraits)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17500:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"17488:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$515_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17488:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":669,"name":"_SKIP_ORDER_PERMIT_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"17522:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17488:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17487:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17550:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17487:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":664,"id":674,"nodeType":"Return","src":"17480:71:0"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"17170:216:0","text":" @notice Checks if the order should skip maker's permit execution.\n @param takerTraits The traits of the taker.\n @return result A boolean indicating whether the order don't apply permit."},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"skipMakerPermit","nameLocation":"17400:15:0","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"takerTraits","nameLocation":"17428:11:0","nodeType":"VariableDeclaration","scope":676,"src":"17416:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":659,"nodeType":"UserDefinedTypeName","pathNode":{"id":658,"name":"TakerTraits","nameLocations":["17416:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"17416:11:0"},"referencedDeclaration":515,"src":"17416:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"17415:25:0"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"17464:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":662,"name":"bool","nodeType":"ElementaryTypeName","src":"17464:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17463:6:0"},"scope":714,"src":"17391:167:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"17855:82:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":687,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"17892:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}],"expression":{"id":685,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"17873:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$515_$","typeString":"type(TakerTraits)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17885:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"17873:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$515_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17873:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":689,"name":"_USE_PERMIT2_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"17907:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17873:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17872:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17929:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17872:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":684,"id":694,"nodeType":"Return","src":"17865:65:0"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"17564:212:0","text":" @notice Checks if the order uses the permit2 instead of permit.\n @param takerTraits The traits of the taker.\n @return result A boolean indicating whether the order uses the permit2."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"usePermit2","nameLocation":"17790:10:0","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"takerTraits","nameLocation":"17813:11:0","nodeType":"VariableDeclaration","scope":696,"src":"17801:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":679,"nodeType":"UserDefinedTypeName","pathNode":{"id":678,"name":"TakerTraits","nameLocations":["17801:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"17801:11:0"},"referencedDeclaration":515,"src":"17801:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"17800:25:0"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"17849:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":682,"name":"bool","nodeType":"ElementaryTypeName","src":"17849:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17848:6:0"},"scope":714,"src":"17781:156:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":712,"nodeType":"Block","src":"18307:70:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":707,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"18343:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}],"expression":{"id":705,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"18324:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$515_$","typeString":"type(TakerTraits)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18336:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"18324:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$515_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18324:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":709,"name":"_AMOUNT_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"18358:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18324:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":704,"id":711,"nodeType":"Return","src":"18317:53:0"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"17943:283:0","text":" @notice Retrieves the threshold amount from the takerTraits.\n The maximum amount a taker agrees to give in exchange for a making amount.\n @param takerTraits The traits of the taker.\n @return result The threshold amount encoded in the takerTraits."},"id":713,"implemented":true,"kind":"function","modifiers":[],"name":"threshold","nameLocation":"18240:9:0","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"takerTraits","nameLocation":"18262:11:0","nodeType":"VariableDeclaration","scope":713,"src":"18250:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":699,"nodeType":"UserDefinedTypeName","pathNode":{"id":698,"name":"TakerTraits","nameLocations":["18250:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"18250:11:0"},"referencedDeclaration":515,"src":"18250:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"18249:25:0"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"18298:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"18298:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18297:9:0"},"scope":714,"src":"18231:146:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1758,"src":"14331:4048:0","usedErrors":[],"usedEvents":[]},{"canonicalName":"Timelocks","id":716,"name":"Timelocks","nameLocation":"19488:9:0","nodeType":"UserDefinedValueTypeDefinition","src":"19483:26:0","underlyingType":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"19501:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"abstract":false,"baseContracts":[],"canonicalName":"TimelocksLib","contractDependencies":[],"contractKind":"library","documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"19511:82:0","text":" @title Timelocks library for compact storage of timelocks in a uint256."},"fullyImplemented":true,"id":828,"linearizedBaseContracts":[828],"name":"TimelocksLib","nameLocation":"19602:12:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"TimelocksLib.Stage","id":725,"members":[{"id":718,"name":"SrcWithdrawal","nameLocation":"19642:13:0","nodeType":"EnumValue","src":"19642:13:0"},{"id":719,"name":"SrcPublicWithdrawal","nameLocation":"19665:19:0","nodeType":"EnumValue","src":"19665:19:0"},{"id":720,"name":"SrcCancellation","nameLocation":"19694:15:0","nodeType":"EnumValue","src":"19694:15:0"},{"id":721,"name":"SrcPublicCancellation","nameLocation":"19719:21:0","nodeType":"EnumValue","src":"19719:21:0"},{"id":722,"name":"DstWithdrawal","nameLocation":"19750:13:0","nodeType":"EnumValue","src":"19750:13:0"},{"id":723,"name":"DstPublicWithdrawal","nameLocation":"19773:19:0","nodeType":"EnumValue","src":"19773:19:0"},{"id":724,"name":"DstCancellation","nameLocation":"19802:15:0","nodeType":"EnumValue","src":"19802:15:0"}],"name":"Stage","nameLocation":"19626:5:0","nodeType":"EnumDefinition","src":"19621:202:0"},{"constant":true,"id":728,"mutability":"constant","name":"_DEPLOYED_AT_MASK","nameLocation":"19854:17:0","nodeType":"VariableDeclaration","scope":828,"src":"19829:111:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"19829:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307866666666666666663030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19874:66:0","typeDescriptions":{"typeIdentifier":"t_rational_115792089210356248756420345214020892766250353992003419616917011526809519390720_by_1","typeString":"int_const 1157...(70 digits omitted)...0720"},"value":"0xffffffff00000000000000000000000000000000000000000000000000000000"},"visibility":"private"},{"constant":true,"id":731,"mutability":"constant","name":"_DEPLOYED_AT_OFFSET","nameLocation":"19971:19:0","nodeType":"VariableDeclaration","scope":828,"src":"19946:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"19946:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323234","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19993:3:0","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},"visibility":"private"},{"body":{"id":762,"nodeType":"Block","src":"20360:130:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":747,"name":"timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"20410:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}],"expression":{"id":745,"name":"Timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"20393:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Timelocks_$716_$","typeString":"type(Timelocks)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20403:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"20393:16:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Timelocks_$716_$returns$_t_uint256_$","typeString":"function (Timelocks) pure returns (uint256)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20393:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"20423:27:0","subExpression":{"arguments":[{"id":751,"name":"_DEPLOYED_AT_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"20432:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20424:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"20424:7:0","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20424:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20393:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20392:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"20454:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":757,"name":"_DEPLOYED_AT_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"20463:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20454:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20392:90:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":743,"name":"Timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"20377:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Timelocks_$716_$","typeString":"type(Timelocks)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20387:4:0","memberName":"wrap","nodeType":"MemberAccess","src":"20377:14:0","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_Timelocks_$716_$","typeString":"function (uint256) pure returns (Timelocks)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20377:106:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}},"functionReturnParameters":742,"id":761,"nodeType":"Return","src":"20370:113:0"}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"20003:259:0","text":" @notice Sets the Escrow deployment timestamp.\n @param timelocks The timelocks to set the deployment timestamp to.\n @param value The new Escrow deployment timestamp.\n @return The timelocks with the deployment timestamp set."},"id":763,"implemented":true,"kind":"function","modifiers":[],"name":"setDeployedAt","nameLocation":"20276:13:0","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"timelocks","nameLocation":"20300:9:0","nodeType":"VariableDeclaration","scope":763,"src":"20290:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"},"typeName":{"id":734,"nodeType":"UserDefinedTypeName","pathNode":{"id":733,"name":"Timelocks","nameLocations":["20290:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":716,"src":"20290:9:0"},"referencedDeclaration":716,"src":"20290:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"value","nameLocation":"20319:5:0","nodeType":"VariableDeclaration","scope":763,"src":"20311:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"20311:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20289:36:0"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":763,"src":"20349:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"},"typeName":{"id":740,"nodeType":"UserDefinedTypeName","pathNode":{"id":739,"name":"Timelocks","nameLocations":["20349:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":716,"src":"20349:9:0"},"referencedDeclaration":716,"src":"20349:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}},"visibility":"internal"}],"src":"20348:11:0"},"scope":828,"src":"20267:223:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":785,"nodeType":"Block","src":"20777:124:0","statements":[{"id":784,"nodeType":"UncheckedBlock","src":"20787:108:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"rescueDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"20818:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":777,"name":"timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"20850:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}],"expression":{"id":775,"name":"Timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"20833:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Timelocks_$716_$","typeString":"type(Timelocks)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20843:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"20833:16:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Timelocks_$716_$returns$_t_uint256_$","typeString":"function (Timelocks) pure returns (uint256)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20833:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":779,"name":"_DEPLOYED_AT_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"20864:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20833:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20832:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20818:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":773,"id":783,"nodeType":"Return","src":"20811:73:0"}]}]},"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"20496:181:0","text":" @notice Returns the start of the rescue period.\n @param timelocks The timelocks to get the rescue delay from.\n @return The start of the rescue period."},"id":786,"implemented":true,"kind":"function","modifiers":[],"name":"rescueStart","nameLocation":"20691:11:0","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"timelocks","nameLocation":"20713:9:0","nodeType":"VariableDeclaration","scope":786,"src":"20703:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"},"typeName":{"id":766,"nodeType":"UserDefinedTypeName","pathNode":{"id":765,"name":"Timelocks","nameLocations":["20703:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":716,"src":"20703:9:0"},"referencedDeclaration":716,"src":"20703:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"rescueDelay","nameLocation":"20732:11:0","nodeType":"VariableDeclaration","scope":786,"src":"20724:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"20724:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20702:42:0"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"20768:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"20768:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20767:9:0"},"scope":828,"src":"20682:219:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":826,"nodeType":"Block","src":"21233:241:0","statements":[{"assignments":[799],"declarations":[{"constant":false,"id":799,"mutability":"mutable","name":"data","nameLocation":"21251:4:0","nodeType":"VariableDeclaration","scope":826,"src":"21243:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"21243:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":804,"initialValue":{"arguments":[{"id":802,"name":"timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"21275:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}],"expression":{"id":800,"name":"Timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"21258:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Timelocks_$716_$","typeString":"type(Timelocks)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21268:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"21258:16:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Timelocks_$716_$returns$_t_uint256_$","typeString":"function (Timelocks) pure returns (uint256)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21258:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21243:42:0"},{"assignments":[806],"declarations":[{"constant":false,"id":806,"mutability":"mutable","name":"bitShift","nameLocation":"21303:8:0","nodeType":"VariableDeclaration","scope":826,"src":"21295:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"21295:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":813,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":809,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"21322:5:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$725","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$725","typeString":"enum TimelocksLib.Stage"}],"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21314:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"21314:7:0","typeDescriptions":{}}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21314:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21331:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21314:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21295:38:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"21412:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":815,"name":"_DEPLOYED_AT_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"21420:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21412:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21411:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":820,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"21450:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":821,"name":"bitShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"21458:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21450:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21443:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":818,"name":"uint32","nodeType":"ElementaryTypeName","src":"21443:6:0","typeDescriptions":{}}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21443:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"21411:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":797,"id":825,"nodeType":"Return","src":"21404:63:0"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"20907:242:0","text":" @notice Returns the timelock value for the given stage.\n @param timelocks The timelocks to get the value from.\n @param stage The stage to get the value for.\n @return The timelock value for the given stage."},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"21163:3:0","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"timelocks","nameLocation":"21177:9:0","nodeType":"VariableDeclaration","scope":827,"src":"21167:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"},"typeName":{"id":789,"nodeType":"UserDefinedTypeName","pathNode":{"id":788,"name":"Timelocks","nameLocations":["21167:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":716,"src":"21167:9:0"},"referencedDeclaration":716,"src":"21167:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"stage","nameLocation":"21194:5:0","nodeType":"VariableDeclaration","scope":827,"src":"21188:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$725","typeString":"enum TimelocksLib.Stage"},"typeName":{"id":792,"nodeType":"UserDefinedTypeName","pathNode":{"id":791,"name":"Stage","nameLocations":["21188:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"21188:5:0"},"referencedDeclaration":725,"src":"21188:5:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$725","typeString":"enum TimelocksLib.Stage"}},"visibility":"internal"}],"src":"21166:34:0"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"21224:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"21224:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21223:9:0"},"scope":828,"src":"21154:320:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1758,"src":"19594:1882:0","usedErrors":[],"usedEvents":[]},{"abstract":true,"baseContracts":[{"baseName":{"id":830,"name":"Context","nameLocations":["22156:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":130,"src":"22156:7:0"},"id":831,"nodeType":"InheritanceSpecifier","src":"22156:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"21639:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":972,"linearizedBaseContracts":[972,130],"name":"Ownable","nameLocation":"22145:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":833,"mutability":"mutable","name":"_owner","nameLocation":"22186:6:0","nodeType":"VariableDeclaration","scope":972,"src":"22170:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"22170:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"22199:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":838,"name":"OwnableUnauthorizedAccount","nameLocation":"22295:26:0","nodeType":"ErrorDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"account","nameLocation":"22330:7:0","nodeType":"VariableDeclaration","scope":838,"src":"22322:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"22322:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22321:17:0"},"src":"22289:50:0"},{"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"22345:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":843,"name":"OwnableInvalidOwner","nameLocation":"22438:19:0","nodeType":"ErrorDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"owner","nameLocation":"22466:5:0","nodeType":"VariableDeclaration","scope":843,"src":"22458:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"22458:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22457:15:0"},"src":"22432:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":849,"name":"OwnershipTransferred","nameLocation":"22485:20:0","nodeType":"EventDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"22522:13:0","nodeType":"VariableDeclaration","scope":849,"src":"22506:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"22506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"22553:8:0","nodeType":"VariableDeclaration","scope":849,"src":"22537:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"22537:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22505:57:0"},"src":"22479:84:0"},{"body":{"id":874,"nodeType":"Block","src":"22723:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":855,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"22737:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22761:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22753:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"22753:7:0","typeDescriptions":{}}},"id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22753:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22737:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":869,"nodeType":"IfStatement","src":"22733:95:0","trueBody":{"id":868,"nodeType":"Block","src":"22765:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22814:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22806:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"22806:7:0","typeDescriptions":{}}},"id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22806:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":861,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"22786:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22786:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"RevertStatement","src":"22779:38:0"}]}},{"expression":{"arguments":[{"id":871,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"22856:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":870,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"22837:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22837:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":873,"nodeType":"ExpressionStatement","src":"22837:32:0"}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"22569:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":875,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"initialOwner","nameLocation":"22709:12:0","nodeType":"VariableDeclaration","scope":875,"src":"22701:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"22701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22700:22:0"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[],"src":"22723:0:0"},"scope":972,"src":"22689:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":882,"nodeType":"Block","src":"22985:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":878,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"22995:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22995:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":880,"nodeType":"ExpressionStatement","src":"22995:13:0"},{"id":881,"nodeType":"PlaceholderStatement","src":"23018:1:0"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"22882:77:0","text":" @dev Throws if called by any account other than the owner."},"id":883,"name":"onlyOwner","nameLocation":"22973:9:0","nodeType":"ModifierDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"22982:2:0"},"src":"22964:62:0","virtual":false,"visibility":"internal"},{"body":{"id":891,"nodeType":"Block","src":"23157:30:0","statements":[{"expression":{"id":889,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"23174:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":888,"id":890,"nodeType":"Return","src":"23167:13:0"}]},"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"23032:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":892,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"23111:5:0","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"23116:2:0"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":892,"src":"23148:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"23148:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23147:9:0"},"scope":972,"src":"23102:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":908,"nodeType":"Block","src":"23305:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":896,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"23319:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23319:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":898,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"23330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23330:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23319:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":907,"nodeType":"IfStatement","src":"23315:101:0","trueBody":{"id":906,"nodeType":"Block","src":"23344:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":902,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"23392:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23392:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":901,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"23365:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23365:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":905,"nodeType":"RevertStatement","src":"23358:47:0"}]}}]},"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"23193:62:0","text":" @dev Throws if the sender is not the owner."},"id":909,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"23269:11:0","nodeType":"FunctionDefinition","parameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"23280:2:0"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"23305:0:0"},"scope":972,"src":"23260:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":922,"nodeType":"Block","src":"23811:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23848:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23840:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"23840:7:0","typeDescriptions":{}}},"id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23840:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":915,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"23821:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23821:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":921,"nodeType":"ExpressionStatement","src":"23821:30:0"}]},"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"23428:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":923,"implemented":true,"kind":"function","modifiers":[{"id":913,"kind":"modifierInvocation","modifierName":{"id":912,"name":"onlyOwner","nameLocations":["23801:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"23801:9:0"},"nodeType":"ModifierInvocation","src":"23801:9:0"}],"name":"renounceOwnership","nameLocation":"23766:17:0","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"23783:2:0"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[],"src":"23811:0:0"},"scope":972,"src":"23757:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":950,"nodeType":"Block","src":"24077:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":931,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"24091:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24111:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24103:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"24103:7:0","typeDescriptions":{}}},"id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24103:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24091:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":945,"nodeType":"IfStatement","src":"24087:91:0","trueBody":{"id":944,"nodeType":"Block","src":"24115:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24156:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"24156:7:0","typeDescriptions":{}}},"id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24156:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":937,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"24136:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24136:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":943,"nodeType":"RevertStatement","src":"24129:38:0"}]}},{"expression":{"arguments":[{"id":947,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"24206:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":946,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"24187:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24187:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"24187:28:0"}]},"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"23864:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":951,"implemented":true,"kind":"function","modifiers":[{"id":929,"kind":"modifierInvocation","modifierName":{"id":928,"name":"onlyOwner","nameLocations":["24067:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"24067:9:0"},"nodeType":"ModifierInvocation","src":"24067:9:0"}],"name":"transferOwnership","nameLocation":"24016:17:0","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"newOwner","nameLocation":"24042:8:0","nodeType":"VariableDeclaration","scope":951,"src":"24034:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"24034:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24033:18:0"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"24077:0:0"},"scope":972,"src":"24007:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":970,"nodeType":"Block","src":"24439:124:0","statements":[{"assignments":[958],"declarations":[{"constant":false,"id":958,"mutability":"mutable","name":"oldOwner","nameLocation":"24457:8:0","nodeType":"VariableDeclaration","scope":970,"src":"24449:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"24449:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":960,"initialValue":{"id":959,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"24468:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"24449:25:0"},{"expression":{"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":961,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"24484:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":962,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"24493:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24484:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":964,"nodeType":"ExpressionStatement","src":"24484:17:0"},{"eventCall":{"arguments":[{"id":966,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"24537:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":967,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"24547:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":965,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"24516:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24516:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":969,"nodeType":"EmitStatement","src":"24511:45:0"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"24228:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":971,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"24385:18:0","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"newOwner","nameLocation":"24412:8:0","nodeType":"VariableDeclaration","scope":971,"src":"24404:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"24404:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24403:18:0"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"24439:0:0"},"scope":972,"src":"24376:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1758,"src":"22127:2438:0","usedErrors":[838,843],"usedEvents":[849]},{"abstract":false,"baseContracts":[],"canonicalName":"IBaseEscrow","contractDependencies":[],"contractKind":"interface","documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"24639:234:0","text":" @title Base Escrow interface for cross-chain atomic swap.\n @notice Interface implies locking funds initially and then unlocking them with verification of the secret presented.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":1059,"linearizedBaseContracts":[1059],"name":"IBaseEscrow","nameLocation":"24884:11:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaseEscrow.Immutables","id":994,"members":[{"constant":false,"id":975,"mutability":"mutable","name":"orderHash","nameLocation":"24938:9:0","nodeType":"VariableDeclaration","scope":994,"src":"24930:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24930:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"hashlock","nameLocation":"24965:8:0","nodeType":"VariableDeclaration","scope":994,"src":"24957:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"maker","nameLocation":"25015:5:0","nodeType":"VariableDeclaration","scope":994,"src":"25007:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":979,"nodeType":"UserDefinedTypeName","pathNode":{"id":978,"name":"Address","nameLocations":["25007:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"25007:7:0"},"referencedDeclaration":3,"src":"25007:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"taker","nameLocation":"25038:5:0","nodeType":"VariableDeclaration","scope":994,"src":"25030:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":982,"nodeType":"UserDefinedTypeName","pathNode":{"id":981,"name":"Address","nameLocations":["25030:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"25030:7:0"},"referencedDeclaration":3,"src":"25030:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"token","nameLocation":"25061:5:0","nodeType":"VariableDeclaration","scope":994,"src":"25053:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":985,"nodeType":"UserDefinedTypeName","pathNode":{"id":984,"name":"Address","nameLocations":["25053:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"25053:7:0"},"referencedDeclaration":3,"src":"25053:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"amount","nameLocation":"25084:6:0","nodeType":"VariableDeclaration","scope":994,"src":"25076:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"25076:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"safetyDeposit","nameLocation":"25108:13:0","nodeType":"VariableDeclaration","scope":994,"src":"25100:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"25100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"timelocks","nameLocation":"25141:9:0","nodeType":"VariableDeclaration","scope":994,"src":"25131:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"},"typeName":{"id":992,"nodeType":"UserDefinedTypeName","pathNode":{"id":991,"name":"Timelocks","nameLocations":["25131:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":716,"src":"25131:9:0"},"referencedDeclaration":716,"src":"25131:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}},"visibility":"internal"}],"name":"Immutables","nameLocation":"24909:10:0","nodeType":"StructDefinition","scope":1059,"src":"24902:255:0","visibility":"public"},{"anonymous":false,"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"25163:58:0","text":" @notice Emitted on escrow cancellation."},"eventSelector":"6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a9","id":997,"name":"EscrowCancelled","nameLocation":"25232:15:0","nodeType":"EventDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"25247:2:0"},"src":"25226:24:0"},{"anonymous":false,"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"25256:194:0","text":" @notice Emitted when funds are rescued.\n @param token The address of the token rescued. Zero address for native token.\n @param amount The amount of tokens rescued."},"eventSelector":"c4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac","id":1004,"name":"FundsRescued","nameLocation":"25461:12:0","nodeType":"EventDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"25482:5:0","nodeType":"VariableDeclaration","scope":1004,"src":"25474:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"25474:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"25497:6:0","nodeType":"VariableDeclaration","scope":1004,"src":"25489:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"25489:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25473:31:0"},"src":"25455:50:0"},{"anonymous":false,"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"25511:117:0","text":" @notice Emitted on successful withdrawal.\n @param secret The secret that unlocks the escrow."},"eventSelector":"0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b","id":1009,"name":"Withdrawal","nameLocation":"25639:10:0","nodeType":"EventDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"25658:6:0","nodeType":"VariableDeclaration","scope":1009,"src":"25650:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25650:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25649:16:0"},"src":"25633:33:0"},{"errorSelector":"48f5c3ed","id":1011,"name":"InvalidCaller","nameLocation":"25678:13:0","nodeType":"ErrorDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"25691:2:0"},"src":"25672:22:0"},{"errorSelector":"a269484a","id":1013,"name":"InvalidImmutables","nameLocation":"25705:17:0","nodeType":"ErrorDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[],"src":"25722:2:0"},"src":"25699:26:0"},{"errorSelector":"abab6bd7","id":1015,"name":"InvalidSecret","nameLocation":"25736:13:0","nodeType":"ErrorDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"25749:2:0"},"src":"25730:22:0"},{"errorSelector":"6f7eac26","id":1017,"name":"InvalidTime","nameLocation":"25763:11:0","nodeType":"ErrorDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"25774:2:0"},"src":"25757:20:0"},{"errorSelector":"8a0332d5","id":1019,"name":"NativeTokenSendingFailure","nameLocation":"25788:25:0","nodeType":"ErrorDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"25813:2:0"},"src":"25782:34:0"},{"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"25868:65:0","text":"@notice Returns the delay for rescuing funds from the escrow."},"functionSelector":"f56cd69c","id":1025,"implemented":false,"kind":"function","modifiers":[],"name":"RESCUE_DELAY","nameLocation":"25947:12:0","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[],"src":"25959:2:0"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1025,"src":"25985:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"25985:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25984:9:0"},"scope":1059,"src":"25938:56:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"25999:71:0","text":"@notice Returns the address of the factory that created the escrow."},"functionSelector":"2dd31000","id":1031,"implemented":false,"kind":"function","modifiers":[],"name":"FACTORY","nameLocation":"26084:7:0","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"26091:2:0"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"26117:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"26117:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26116:9:0"},"scope":1059,"src":"26075:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"26177:359:0","text":" @notice Withdraws funds to a predetermined recipient.\n @dev Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock.\n The safety deposit is sent to the caller.\n @param secret The secret that unlocks the escrow.\n @param immutables The immutables of the escrow contract."},"functionSelector":"23305703","id":1040,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"26550:8:0","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"secret","nameLocation":"26567:6:0","nodeType":"VariableDeclaration","scope":1040,"src":"26559:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26559:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"immutables","nameLocation":"26595:10:0","nodeType":"VariableDeclaration","scope":1040,"src":"26575:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1036,"nodeType":"UserDefinedTypeName","pathNode":{"id":1035,"name":"Immutables","nameLocations":["26575:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"26575:10:0"},"referencedDeclaration":994,"src":"26575:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"26558:48:0"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"26615:0:0"},"scope":1059,"src":"26541:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"26622:284:0","text":" @notice Cancels the escrow and returns tokens to a predetermined recipient.\n @dev The escrow can only be cancelled during the cancellation period.\n The safety deposit is sent to the caller.\n @param immutables The immutables of the escrow contract."},"functionSelector":"90d3252f","id":1047,"implemented":false,"kind":"function","modifiers":[],"name":"cancel","nameLocation":"26920:6:0","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"immutables","nameLocation":"26947:10:0","nodeType":"VariableDeclaration","scope":1047,"src":"26927:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1043,"nodeType":"UserDefinedTypeName","pathNode":{"id":1042,"name":"Immutables","nameLocations":["26927:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"26927:10:0"},"referencedDeclaration":994,"src":"26927:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"26926:32:0"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"26967:0:0"},"scope":1059,"src":"26911:57:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"26974:336:0","text":" @notice Rescues funds from the escrow.\n @dev Funds can only be rescued by the taker after the rescue delay.\n @param token The address of the token to rescue. Zero address for native token.\n @param amount The amount of tokens to rescue.\n @param immutables The immutables of the escrow contract."},"functionSelector":"4649088b","id":1058,"implemented":false,"kind":"function","modifiers":[],"name":"rescueFunds","nameLocation":"27324:11:0","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"token","nameLocation":"27344:5:0","nodeType":"VariableDeclaration","scope":1058,"src":"27336:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"27336:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"amount","nameLocation":"27359:6:0","nodeType":"VariableDeclaration","scope":1058,"src":"27351:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"27351:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"immutables","nameLocation":"27387:10:0","nodeType":"VariableDeclaration","scope":1058,"src":"27367:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1054,"nodeType":"UserDefinedTypeName","pathNode":{"id":1053,"name":"Immutables","nameLocations":["27367:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"27367:10:0"},"referencedDeclaration":994,"src":"27367:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"27335:63:0"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[],"src":"27407:0:0"},"scope":1059,"src":"27315:93:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1758,"src":"24874:2536:0","usedErrors":[1011,1013,1015,1017,1019],"usedEvents":[997,1004,1009]},{"abstract":false,"baseContracts":[{"baseName":{"id":1061,"name":"IBaseEscrow","nameLocations":["27731:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":1059,"src":"27731:11:0"},"id":1062,"nodeType":"InheritanceSpecifier","src":"27731:11:0"}],"canonicalName":"IEscrow","contractDependencies":[],"contractKind":"interface","documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"27480:229:0","text":" @title Escrow interface for cross-chain atomic swap.\n @notice Interface implies locking funds initially and then unlocking them with verification of the secret presented.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":1069,"linearizedBaseContracts":[1069,1059],"name":"IEscrow","nameLocation":"27720:7:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"27749:60:0","text":"@notice Returns the bytecode hash of the proxy contract."},"functionSelector":"34862b6a","id":1068,"implemented":false,"kind":"function","modifiers":[],"name":"PROXY_BYTECODE_HASH","nameLocation":"27823:19:0","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"27842:2:0"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1068,"src":"27868:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27868:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"27867:9:0"},"scope":1069,"src":"27814:63:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1758,"src":"27710:213:0","usedErrors":[1011,1013,1015,1017,1019],"usedEvents":[997,1004,1009]},{"abstract":false,"baseContracts":[],"canonicalName":"IEscrowFactory","contractDependencies":[],"contractKind":"interface","documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"28000:254:0","text":" @title Escrow Factory interface for cross-chain atomic swap.\n @notice Interface to deploy escrow contracts for the destination chain and to get the deterministic address of escrow on both chains.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":1163,"linearizedBaseContracts":[1163],"name":"IEscrowFactory","nameLocation":"28265:14:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IEscrowFactory.ExtraDataArgs","id":1083,"members":[{"constant":false,"id":1072,"mutability":"mutable","name":"hashlockInfo","nameLocation":"28325:12:0","nodeType":"VariableDeclaration","scope":1083,"src":"28317:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"dstChainId","nameLocation":"28431:10:0","nodeType":"VariableDeclaration","scope":1083,"src":"28423:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"28423:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"dstToken","nameLocation":"28459:8:0","nodeType":"VariableDeclaration","scope":1083,"src":"28451:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":1076,"nodeType":"UserDefinedTypeName","pathNode":{"id":1075,"name":"Address","nameLocations":["28451:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"28451:7:0"},"referencedDeclaration":3,"src":"28451:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"deposits","nameLocation":"28485:8:0","nodeType":"VariableDeclaration","scope":1083,"src":"28477:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"28477:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"timelocks","nameLocation":"28513:9:0","nodeType":"VariableDeclaration","scope":1083,"src":"28503:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"},"typeName":{"id":1081,"nodeType":"UserDefinedTypeName","pathNode":{"id":1080,"name":"Timelocks","nameLocations":["28503:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":716,"src":"28503:9:0"},"referencedDeclaration":716,"src":"28503:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}},"visibility":"internal"}],"name":"ExtraDataArgs","nameLocation":"28293:13:0","nodeType":"StructDefinition","scope":1163,"src":"28286:243:0","visibility":"public"},{"canonicalName":"IEscrowFactory.DstImmutablesComplement","id":1096,"members":[{"constant":false,"id":1086,"mutability":"mutable","name":"maker","nameLocation":"28584:5:0","nodeType":"VariableDeclaration","scope":1096,"src":"28576:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":1085,"nodeType":"UserDefinedTypeName","pathNode":{"id":1084,"name":"Address","nameLocations":["28576:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"28576:7:0"},"referencedDeclaration":3,"src":"28576:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"amount","nameLocation":"28607:6:0","nodeType":"VariableDeclaration","scope":1096,"src":"28599:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"28599:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"token","nameLocation":"28631:5:0","nodeType":"VariableDeclaration","scope":1096,"src":"28623:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":1090,"nodeType":"UserDefinedTypeName","pathNode":{"id":1089,"name":"Address","nameLocations":["28623:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"28623:7:0"},"referencedDeclaration":3,"src":"28623:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"safetyDeposit","nameLocation":"28654:13:0","nodeType":"VariableDeclaration","scope":1096,"src":"28646:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"28646:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"chainId","nameLocation":"28685:7:0","nodeType":"VariableDeclaration","scope":1096,"src":"28677:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"28677:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"DstImmutablesComplement","nameLocation":"28542:23:0","nodeType":"StructDefinition","scope":1163,"src":"28535:164:0","visibility":"public"},{"errorSelector":"34f5151d","id":1098,"name":"InsufficientEscrowBalance","nameLocation":"28711:25:0","nodeType":"ErrorDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"28736:2:0"},"src":"28705:34:0"},{"errorSelector":"f4840e96","id":1100,"name":"InvalidCreationTime","nameLocation":"28750:19:0","nodeType":"ErrorDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"28769:2:0"},"src":"28744:28:0"},{"errorSelector":"eab3a174","id":1102,"name":"InvalidPartialFill","nameLocation":"28783:18:0","nodeType":"ErrorDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[],"src":"28801:2:0"},"src":"28777:27:0"},{"errorSelector":"10d629d3","id":1104,"name":"InvalidSecretsAmount","nameLocation":"28815:20:0","nodeType":"ErrorDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[],"src":"28835:2:0"},"src":"28809:29:0"},{"anonymous":false,"documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"28844:348:0","text":" @notice Emitted on EscrowSrc deployment to recreate EscrowSrc and EscrowDst immutables off-chain.\n @param srcImmutables The immutables of the escrow contract that are used in deployment on the source chain.\n @param dstImmutablesComplement Additional immutables related to the escrow contract on the destination chain."},"eventSelector":"0e534c62f0afd2fa0f0fa71198e8aa2d549f24daf2bb47de0d5486c7ce9288ca","id":1113,"name":"SrcEscrowCreated","nameLocation":"29203:16:0","nodeType":"EventDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"indexed":false,"mutability":"mutable","name":"srcImmutables","nameLocation":"29243:13:0","nodeType":"VariableDeclaration","scope":1113,"src":"29220:36:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_memory_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1107,"nodeType":"UserDefinedTypeName","pathNode":{"id":1106,"name":"IBaseEscrow.Immutables","nameLocations":["29220:11:0","29232:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"29220:22:0"},"referencedDeclaration":994,"src":"29220:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"},{"constant":false,"id":1111,"indexed":false,"mutability":"mutable","name":"dstImmutablesComplement","nameLocation":"29282:23:0","nodeType":"VariableDeclaration","scope":1113,"src":"29258:47:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_DstImmutablesComplement_$1096_memory_ptr","typeString":"struct IEscrowFactory.DstImmutablesComplement"},"typeName":{"id":1110,"nodeType":"UserDefinedTypeName","pathNode":{"id":1109,"name":"DstImmutablesComplement","nameLocations":["29258:23:0"],"nodeType":"IdentifierPath","referencedDeclaration":1096,"src":"29258:23:0"},"referencedDeclaration":1096,"src":"29258:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_DstImmutablesComplement_$1096_storage_ptr","typeString":"struct IEscrowFactory.DstImmutablesComplement"}},"visibility":"internal"}],"src":"29219:87:0"},"src":"29197:110:0"},{"anonymous":false,"documentation":{"id":1114,"nodeType":"StructuredDocumentation","src":"29312:208:0","text":" @notice Emitted on EscrowDst deployment.\n @param escrow The address of the created escrow.\n @param hashlock The hash of the secret.\n @param taker The address of the taker."},"eventSelector":"c30e111dcc74fddc2c3a4d98ffb97adec4485c0a687946bf5b22c2a99c7ff96d","id":1123,"name":"DstEscrowCreated","nameLocation":"29531:16:0","nodeType":"EventDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"indexed":false,"mutability":"mutable","name":"escrow","nameLocation":"29556:6:0","nodeType":"VariableDeclaration","scope":1123,"src":"29548:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"29548:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1118,"indexed":false,"mutability":"mutable","name":"hashlock","nameLocation":"29572:8:0","nodeType":"VariableDeclaration","scope":1123,"src":"29564:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29564:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1121,"indexed":false,"mutability":"mutable","name":"taker","nameLocation":"29590:5:0","nodeType":"VariableDeclaration","scope":1123,"src":"29582:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":1120,"nodeType":"UserDefinedTypeName","pathNode":{"id":1119,"name":"Address","nameLocations":["29582:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"29582:7:0"},"referencedDeclaration":3,"src":"29582:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"}],"src":"29547:49:0"},"src":"29525:72:0"},{"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"29649:70:0","text":"@notice Returns the address of implementation on the source chain."},"functionSelector":"7040f173","id":1129,"implemented":false,"kind":"function","modifiers":[],"name":"ESCROW_SRC_IMPLEMENTATION","nameLocation":"29733:25:0","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"29758:2:0"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1129,"src":"29784:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"29784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29783:9:0"},"scope":1163,"src":"29724:69:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"29798:75:0","text":"@notice Returns the address of implementation on the destination chain."},"functionSelector":"ba551177","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"ESCROW_DST_IMPLEMENTATION","nameLocation":"29887:25:0","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"29912:2:0"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"29938:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"29938:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29937:9:0"},"scope":1163,"src":"29878:69:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"29998:468:0","text":" @notice Creates a new escrow contract for taker on the destination chain.\n @dev The caller must send the safety deposit in the native token along with the function call\n and approve the destination token to be transferred to the created escrow.\n @param dstImmutables The immutables of the escrow contract that are used in deployment.\n @param srcCancellationTimestamp The start of the cancellation period for the source chain."},"functionSelector":"dea024e4","id":1144,"implemented":false,"kind":"function","modifiers":[],"name":"createDstEscrow","nameLocation":"30480:15:0","nodeType":"FunctionDefinition","parameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"dstImmutables","nameLocation":"30528:13:0","nodeType":"VariableDeclaration","scope":1144,"src":"30496:45:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1138,"nodeType":"UserDefinedTypeName","pathNode":{"id":1137,"name":"IBaseEscrow.Immutables","nameLocations":["30496:11:0","30508:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"30496:22:0"},"referencedDeclaration":994,"src":"30496:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"srcCancellationTimestamp","nameLocation":"30551:24:0","nodeType":"VariableDeclaration","scope":1144,"src":"30543:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"30543:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30495:81:0"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[],"src":"30593:0:0"},"scope":1163,"src":"30471:123:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"30600:244:0","text":" @notice Returns the deterministic address of the source escrow based on the salt.\n @param immutables The immutable arguments used to compute salt for escrow deployment.\n @return The computed address of the escrow."},"functionSelector":"fb6bd47e","id":1153,"implemented":false,"kind":"function","modifiers":[],"name":"addressOfEscrowSrc","nameLocation":"30858:18:0","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"immutables","nameLocation":"30909:10:0","nodeType":"VariableDeclaration","scope":1153,"src":"30877:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1147,"nodeType":"UserDefinedTypeName","pathNode":{"id":1146,"name":"IBaseEscrow.Immutables","nameLocations":["30877:11:0","30889:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"30877:22:0"},"referencedDeclaration":994,"src":"30877:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"30876:44:0"},"returnParameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1153,"src":"30944:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"30944:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30943:9:0"},"scope":1163,"src":"30849:104:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"30959:249:0","text":" @notice Returns the deterministic address of the destination escrow based on the salt.\n @param immutables The immutable arguments used to compute salt for escrow deployment.\n @return The computed address of the escrow."},"functionSelector":"be58e91c","id":1162,"implemented":false,"kind":"function","modifiers":[],"name":"addressOfEscrowDst","nameLocation":"31222:18:0","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"immutables","nameLocation":"31273:10:0","nodeType":"VariableDeclaration","scope":1162,"src":"31241:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1156,"nodeType":"UserDefinedTypeName","pathNode":{"id":1155,"name":"IBaseEscrow.Immutables","nameLocations":["31241:11:0","31253:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"31241:22:0"},"referencedDeclaration":994,"src":"31241:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"31240:44:0"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1162,"src":"31308:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"31308:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31307:9:0"},"scope":1163,"src":"31213:104:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1758,"src":"28255:3064:0","usedErrors":[1098,1100,1102,1104],"usedEvents":[1113,1123]},{"abstract":false,"baseContracts":[],"canonicalName":"IOrderMixin","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1413,"linearizedBaseContracts":[1413],"name":"IOrderMixin","nameLocation":"31428:11:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IOrderMixin.Order","id":1185,"members":[{"constant":false,"id":1165,"mutability":"mutable","name":"salt","nameLocation":"31477:4:0","nodeType":"VariableDeclaration","scope":1185,"src":"31469:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"31469:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"maker","nameLocation":"31499:5:0","nodeType":"VariableDeclaration","scope":1185,"src":"31491:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":1167,"nodeType":"UserDefinedTypeName","pathNode":{"id":1166,"name":"Address","nameLocations":["31491:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"31491:7:0"},"referencedDeclaration":3,"src":"31491:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"receiver","nameLocation":"31522:8:0","nodeType":"VariableDeclaration","scope":1185,"src":"31514:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":1170,"nodeType":"UserDefinedTypeName","pathNode":{"id":1169,"name":"Address","nameLocations":["31514:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"31514:7:0"},"referencedDeclaration":3,"src":"31514:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"makerAsset","nameLocation":"31548:10:0","nodeType":"VariableDeclaration","scope":1185,"src":"31540:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":1173,"nodeType":"UserDefinedTypeName","pathNode":{"id":1172,"name":"Address","nameLocations":["31540:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"31540:7:0"},"referencedDeclaration":3,"src":"31540:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"takerAsset","nameLocation":"31576:10:0","nodeType":"VariableDeclaration","scope":1185,"src":"31568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":1176,"nodeType":"UserDefinedTypeName","pathNode":{"id":1175,"name":"Address","nameLocations":["31568:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"31568:7:0"},"referencedDeclaration":3,"src":"31568:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"makingAmount","nameLocation":"31604:12:0","nodeType":"VariableDeclaration","scope":1185,"src":"31596:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"31596:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"takingAmount","nameLocation":"31634:12:0","nodeType":"VariableDeclaration","scope":1185,"src":"31626:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"31626:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"makerTraits","nameLocation":"31668:11:0","nodeType":"VariableDeclaration","scope":1185,"src":"31656:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":1183,"nodeType":"UserDefinedTypeName","pathNode":{"id":1182,"name":"MakerTraits","nameLocations":["31656:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"31656:11:0"},"referencedDeclaration":132,"src":"31656:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"}],"name":"Order","nameLocation":"31453:5:0","nodeType":"StructDefinition","scope":1413,"src":"31446:240:0","visibility":"public"},{"errorSelector":"f71fbda2","id":1187,"name":"InvalidatedOrder","nameLocation":"31698:16:0","nodeType":"ErrorDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"31714:2:0"},"src":"31692:25:0"},{"errorSelector":"7f902a93","id":1189,"name":"TakingAmountExceeded","nameLocation":"31728:20:0","nodeType":"ErrorDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[],"src":"31748:2:0"},"src":"31722:29:0"},{"errorSelector":"d4dfdafe","id":1191,"name":"PrivateOrder","nameLocation":"31762:12:0","nodeType":"ErrorDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"31774:2:0"},"src":"31756:21:0"},{"errorSelector":"5cd5d233","id":1193,"name":"BadSignature","nameLocation":"31788:12:0","nodeType":"ErrorDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"31800:2:0"},"src":"31782:21:0"},{"errorSelector":"c56873ba","id":1195,"name":"OrderExpired","nameLocation":"31814:12:0","nodeType":"ErrorDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[],"src":"31826:2:0"},"src":"31808:21:0"},{"errorSelector":"e3e8b052","id":1197,"name":"WrongSeriesNonce","nameLocation":"31840:16:0","nodeType":"ErrorDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"31856:2:0"},"src":"31834:25:0"},{"errorSelector":"fba5a276","id":1199,"name":"SwapWithZeroAmount","nameLocation":"31870:18:0","nodeType":"ErrorDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[],"src":"31888:2:0"},"src":"31864:27:0"},{"errorSelector":"8ef0017c","id":1201,"name":"PartialFillNotAllowed","nameLocation":"31902:21:0","nodeType":"ErrorDefinition","parameters":{"id":1200,"nodeType":"ParameterList","parameters":[],"src":"31923:2:0"},"src":"31896:30:0"},{"errorSelector":"86bffaca","id":1203,"name":"OrderIsNotSuitableForMassInvalidation","nameLocation":"31937:37:0","nodeType":"ErrorDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[],"src":"31974:2:0"},"src":"31931:46:0"},{"errorSelector":"9e744e25","id":1205,"name":"EpochManagerAndBitInvalidatorsAreIncompatible","nameLocation":"31988:45:0","nodeType":"ErrorDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"32033:2:0"},"src":"31982:54:0"},{"errorSelector":"c5f2be51","id":1207,"name":"ReentrancyDetected","nameLocation":"32047:18:0","nodeType":"ErrorDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[],"src":"32065:2:0"},"src":"32041:27:0"},{"errorSelector":"b6629c02","id":1209,"name":"PredicateIsNotTrue","nameLocation":"32079:18:0","nodeType":"ErrorDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"32097:2:0"},"src":"32073:27:0"},{"errorSelector":"fb8ae129","id":1211,"name":"TakingAmountTooHigh","nameLocation":"32111:19:0","nodeType":"ErrorDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[],"src":"32130:2:0"},"src":"32105:28:0"},{"errorSelector":"481ea392","id":1213,"name":"MakingAmountTooLow","nameLocation":"32144:18:0","nodeType":"ErrorDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[],"src":"32162:2:0"},"src":"32138:27:0"},{"errorSelector":"70a03f48","id":1215,"name":"TransferFromMakerToTakerFailed","nameLocation":"32176:30:0","nodeType":"ErrorDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[],"src":"32206:2:0"},"src":"32170:39:0"},{"errorSelector":"478a5205","id":1217,"name":"TransferFromTakerToMakerFailed","nameLocation":"32220:30:0","nodeType":"ErrorDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[],"src":"32250:2:0"},"src":"32214:39:0"},{"errorSelector":"d97cd9d8","id":1219,"name":"MismatchArraysLengths","nameLocation":"32264:21:0","nodeType":"ErrorDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[],"src":"32285:2:0"},"src":"32258:30:0"},{"errorSelector":"2aefd060","id":1221,"name":"InvalidPermit2Transfer","nameLocation":"32299:22:0","nodeType":"ErrorDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[],"src":"32321:2:0"},"src":"32293:31:0"},{"errorSelector":"1934afc8","id":1227,"name":"SimulationResults","nameLocation":"32335:17:0","nodeType":"ErrorDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"success","nameLocation":"32358:7:0","nodeType":"VariableDeclaration","scope":1227,"src":"32353:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1222,"name":"bool","nodeType":"ElementaryTypeName","src":"32353:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"res","nameLocation":"32373:3:0","nodeType":"VariableDeclaration","scope":1227,"src":"32367:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1224,"name":"bytes","nodeType":"ElementaryTypeName","src":"32367:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32352:25:0"},"src":"32329:49:0"},{"anonymous":false,"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"32384:181:0","text":" @notice Emitted when order gets filled\n @param orderHash Hash of the order\n @param remainingAmount Amount of the maker asset that remains to be filled"},"eventSelector":"fec331350fce78ba658e082a71da20ac9f8d798a99b3c79681c8440cbfe77e07","id":1234,"name":"OrderFilled","nameLocation":"32576:11:0","nodeType":"EventDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"indexed":false,"mutability":"mutable","name":"orderHash","nameLocation":"32605:9:0","nodeType":"VariableDeclaration","scope":1234,"src":"32597:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32597:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1232,"indexed":false,"mutability":"mutable","name":"remainingAmount","nameLocation":"32632:15:0","nodeType":"VariableDeclaration","scope":1234,"src":"32624:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"32624:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32587:66:0"},"src":"32570:84:0"},{"anonymous":false,"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"32660:130:0","text":" @notice Emitted when order without `useBitInvalidator` gets cancelled\n @param orderHash Hash of the order"},"eventSelector":"5152abf959f6564662358c2e52b702259b78bac5ee7842a0f01937e670efcc7d","id":1239,"name":"OrderCancelled","nameLocation":"32801:14:0","nodeType":"EventDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"indexed":false,"mutability":"mutable","name":"orderHash","nameLocation":"32833:9:0","nodeType":"VariableDeclaration","scope":1239,"src":"32825:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32825:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"32815:33:0"},"src":"32795:54:0"},{"anonymous":false,"documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"32855:210:0","text":" @notice Emitted when order with `useBitInvalidator` gets cancelled\n @param maker Maker address\n @param slotIndex Slot index that was updated\n @param slotValue New slot value"},"eventSelector":"cda0f7e73d07bdb14b141f2cf4745926629a1b63e7c6a3dd8a80232cb459a850","id":1248,"name":"BitInvalidatorUpdated","nameLocation":"33076:21:0","nodeType":"EventDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"indexed":true,"mutability":"mutable","name":"maker","nameLocation":"33123:5:0","nodeType":"VariableDeclaration","scope":1248,"src":"33107:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"33107:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1244,"indexed":false,"mutability":"mutable","name":"slotIndex","nameLocation":"33146:9:0","nodeType":"VariableDeclaration","scope":1248,"src":"33138:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"33138:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1246,"indexed":false,"mutability":"mutable","name":"slotValue","nameLocation":"33173:9:0","nodeType":"VariableDeclaration","scope":1248,"src":"33165:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"33165:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33097:91:0"},"src":"33070:119:0"},{"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"33195:300:0","text":" @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n @param maker Maker address\n @param slot Slot number to return bitmask for\n @return result Each bit represents whether corresponding was already invalidated"},"functionSelector":"143e86a7","id":1258,"implemented":false,"kind":"function","modifiers":[],"name":"bitInvalidatorForOrder","nameLocation":"33509:22:0","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"maker","nameLocation":"33540:5:0","nodeType":"VariableDeclaration","scope":1258,"src":"33532:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"33532:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"slot","nameLocation":"33555:4:0","nodeType":"VariableDeclaration","scope":1258,"src":"33547:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"33547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33531:29:0"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"result","nameLocation":"33591:6:0","nodeType":"VariableDeclaration","scope":1258,"src":"33583:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"33583:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33582:16:0"},"scope":1413,"src":"33500:99:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"33605:222:0","text":" @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n @param orderHash Hash of the order\n @return remaining Remaining amount of the order"},"functionSelector":"435b9789","id":1268,"implemented":false,"kind":"function","modifiers":[],"name":"remainingInvalidatorForOrder","nameLocation":"33841:28:0","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"maker","nameLocation":"33878:5:0","nodeType":"VariableDeclaration","scope":1268,"src":"33870:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"33870:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"orderHash","nameLocation":"33893:9:0","nodeType":"VariableDeclaration","scope":1268,"src":"33885:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"33885:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"33869:34:0"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"remaining","nameLocation":"33934:9:0","nodeType":"VariableDeclaration","scope":1268,"src":"33926:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"33926:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33925:19:0"},"scope":1413,"src":"33832:113:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"33951:287:0","text":" @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n @param orderHash Hash of the order\n @return remainingRaw Inverse of the remaining amount of the order if order was filled at least once, otherwise 0"},"functionSelector":"c2a40753","id":1278,"implemented":false,"kind":"function","modifiers":[],"name":"rawRemainingInvalidatorForOrder","nameLocation":"34252:31:0","nodeType":"FunctionDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"maker","nameLocation":"34292:5:0","nodeType":"VariableDeclaration","scope":1278,"src":"34284:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"34284:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"orderHash","nameLocation":"34307:9:0","nodeType":"VariableDeclaration","scope":1278,"src":"34299:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34299:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"34283:34:0"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"remainingRaw","nameLocation":"34348:12:0","nodeType":"VariableDeclaration","scope":1278,"src":"34340:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"34340:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34339:22:0"},"scope":1413,"src":"34243:119:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"34368:144:0","text":" @notice Cancels order's quote\n @param makerTraits Order makerTraits\n @param orderHash Hash of the order to cancel"},"functionSelector":"b68fb020","id":1287,"implemented":false,"kind":"function","modifiers":[],"name":"cancelOrder","nameLocation":"34526:11:0","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"makerTraits","nameLocation":"34550:11:0","nodeType":"VariableDeclaration","scope":1287,"src":"34538:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":1281,"nodeType":"UserDefinedTypeName","pathNode":{"id":1280,"name":"MakerTraits","nameLocations":["34538:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"34538:11:0"},"referencedDeclaration":132,"src":"34538:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"orderHash","nameLocation":"34571:9:0","nodeType":"VariableDeclaration","scope":1287,"src":"34563:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34563:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"34537:44:0"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[],"src":"34590:0:0"},"scope":1413,"src":"34517:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"34597:151:0","text":" @notice Cancels orders' quotes\n @param makerTraits Orders makerTraits\n @param orderHashes Hashes of the orders to cancel"},"functionSelector":"89e7c650","id":1298,"implemented":false,"kind":"function","modifiers":[],"name":"cancelOrders","nameLocation":"34762:12:0","nodeType":"FunctionDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"makerTraits","nameLocation":"34798:11:0","nodeType":"VariableDeclaration","scope":1298,"src":"34775:34:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_userDefinedValueType$_MakerTraits_$132_$dyn_calldata_ptr","typeString":"MakerTraits[]"},"typeName":{"baseType":{"id":1290,"nodeType":"UserDefinedTypeName","pathNode":{"id":1289,"name":"MakerTraits","nameLocations":["34775:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"34775:11:0"},"referencedDeclaration":132,"src":"34775:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"id":1291,"nodeType":"ArrayTypeName","src":"34775:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_userDefinedValueType$_MakerTraits_$132_$dyn_storage_ptr","typeString":"MakerTraits[]"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"orderHashes","nameLocation":"34830:11:0","nodeType":"VariableDeclaration","scope":1298,"src":"34811:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34811:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1294,"nodeType":"ArrayTypeName","src":"34811:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"34774:68:0"},"returnParameters":{"id":1297,"nodeType":"ParameterList","parameters":[],"src":"34851:0:0"},"scope":1413,"src":"34753:99:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"34858:212:0","text":" @notice Cancels all quotes of the maker (works for bit-invalidating orders only)\n @param makerTraits Order makerTraits\n @param additionalMask Additional bitmask to invalidate orders"},"functionSelector":"05b1ea03","id":1307,"implemented":false,"kind":"function","modifiers":[],"name":"bitsInvalidateForOrder","nameLocation":"35084:22:0","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"makerTraits","nameLocation":"35119:11:0","nodeType":"VariableDeclaration","scope":1307,"src":"35107:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"},"typeName":{"id":1301,"nodeType":"UserDefinedTypeName","pathNode":{"id":1300,"name":"MakerTraits","nameLocations":["35107:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"35107:11:0"},"referencedDeclaration":132,"src":"35107:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$132","typeString":"MakerTraits"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"additionalMask","nameLocation":"35140:14:0","nodeType":"VariableDeclaration","scope":1307,"src":"35132:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"35132:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35106:49:0"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"35164:0:0"},"scope":1413,"src":"35075:90:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"35171:164:0","text":" @notice Returns order hash, hashed with limit order protocol contract EIP712\n @param order Order\n @return orderHash Hash of the order"},"functionSelector":"802b2ef1","id":1316,"implemented":false,"kind":"function","modifiers":[],"name":"hashOrder","nameLocation":"35349:9:0","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"order","nameLocation":"35386:5:0","nodeType":"VariableDeclaration","scope":1316,"src":"35359:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":1310,"nodeType":"UserDefinedTypeName","pathNode":{"id":1309,"name":"IOrderMixin.Order","nameLocations":["35359:11:0","35371:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"35359:17:0"},"referencedDeclaration":1185,"src":"35359:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"}],"src":"35358:34:0"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"orderHash","nameLocation":"35423:9:0","nodeType":"VariableDeclaration","scope":1316,"src":"35415:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35415:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"35414:19:0"},"scope":1413,"src":"35340:94:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"35440:333:0","text":" @notice Delegates execution to custom implementation. Could be used to validate if `transferFrom` works properly\n @dev The function always reverts and returns the simulation results in revert data.\n @param target Addresses that will be delegated\n @param data Data that will be passed to delegatee"},"functionSelector":"bd61951d","id":1324,"implemented":false,"kind":"function","modifiers":[],"name":"simulate","nameLocation":"35787:8:0","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"target","nameLocation":"35804:6:0","nodeType":"VariableDeclaration","scope":1324,"src":"35796:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"35796:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"data","nameLocation":"35827:4:0","nodeType":"VariableDeclaration","scope":1324,"src":"35812:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1320,"name":"bytes","nodeType":"ElementaryTypeName","src":"35812:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35795:37:0"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"35841:0:0"},"scope":1413,"src":"35778:64:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"35848:707:0","text":" @notice Fills order's quote, fully or partially (whichever is possible).\n @param order Order quote to fill\n @param r R component of signature\n @param vs VS component of signature\n @param amount Taker amount to fill\n @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n @return makingAmount Actual amount transferred from maker to taker\n @return takingAmount Actual amount transferred from taker to maker\n @return orderHash Hash of the filled order"},"functionSelector":"9fda64bd","id":1346,"implemented":false,"kind":"function","modifiers":[],"name":"fillOrder","nameLocation":"36569:9:0","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"order","nameLocation":"36603:5:0","nodeType":"VariableDeclaration","scope":1346,"src":"36588:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":1327,"nodeType":"UserDefinedTypeName","pathNode":{"id":1326,"name":"Order","nameLocations":["36588:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"36588:5:0"},"referencedDeclaration":1185,"src":"36588:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"r","nameLocation":"36626:1:0","nodeType":"VariableDeclaration","scope":1346,"src":"36618:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36618:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"vs","nameLocation":"36645:2:0","nodeType":"VariableDeclaration","scope":1346,"src":"36637:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36637:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"amount","nameLocation":"36665:6:0","nodeType":"VariableDeclaration","scope":1346,"src":"36657:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"36657:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"takerTraits","nameLocation":"36693:11:0","nodeType":"VariableDeclaration","scope":1346,"src":"36681:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":1336,"nodeType":"UserDefinedTypeName","pathNode":{"id":1335,"name":"TakerTraits","nameLocations":["36681:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"36681:11:0"},"referencedDeclaration":515,"src":"36681:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"36578:132:0"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"makingAmount","nameLocation":"36744:12:0","nodeType":"VariableDeclaration","scope":1346,"src":"36736:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"36736:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"takingAmount","nameLocation":"36766:12:0","nodeType":"VariableDeclaration","scope":1346,"src":"36758:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"36758:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"orderHash","nameLocation":"36788:9:0","nodeType":"VariableDeclaration","scope":1346,"src":"36780:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36780:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36735:63:0"},"scope":1413,"src":"36560:239:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"36805:819:0","text":" @notice Same as `fillOrder` but allows to specify arguments that are used by the taker.\n @param order Order quote to fill\n @param r R component of signature\n @param vs VS component of signature\n @param amount Taker amount to fill\n @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n @param args Arguments that are used by the taker (target, extension, interaction, permit)\n @return makingAmount Actual amount transferred from maker to taker\n @return takingAmount Actual amount transferred from taker to maker\n @return orderHash Hash of the filled order"},"functionSelector":"f497df75","id":1370,"implemented":false,"kind":"function","modifiers":[],"name":"fillOrderArgs","nameLocation":"37638:13:0","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"order","nameLocation":"37688:5:0","nodeType":"VariableDeclaration","scope":1370,"src":"37661:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":1349,"nodeType":"UserDefinedTypeName","pathNode":{"id":1348,"name":"IOrderMixin.Order","nameLocations":["37661:11:0","37673:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"37661:17:0"},"referencedDeclaration":1185,"src":"37661:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"r","nameLocation":"37711:1:0","nodeType":"VariableDeclaration","scope":1370,"src":"37703:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37703:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"vs","nameLocation":"37730:2:0","nodeType":"VariableDeclaration","scope":1370,"src":"37722:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37722:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"amount","nameLocation":"37750:6:0","nodeType":"VariableDeclaration","scope":1370,"src":"37742:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"37742:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"takerTraits","nameLocation":"37778:11:0","nodeType":"VariableDeclaration","scope":1370,"src":"37766:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":1358,"nodeType":"UserDefinedTypeName","pathNode":{"id":1357,"name":"TakerTraits","nameLocations":["37766:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"37766:11:0"},"referencedDeclaration":515,"src":"37766:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"args","nameLocation":"37814:4:0","nodeType":"VariableDeclaration","scope":1370,"src":"37799:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1360,"name":"bytes","nodeType":"ElementaryTypeName","src":"37799:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37651:173:0"},"returnParameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"makingAmount","nameLocation":"37858:12:0","nodeType":"VariableDeclaration","scope":1370,"src":"37850:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"37850:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"takingAmount","nameLocation":"37880:12:0","nodeType":"VariableDeclaration","scope":1370,"src":"37872:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"37872:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"orderHash","nameLocation":"37902:9:0","nodeType":"VariableDeclaration","scope":1370,"src":"37894:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37894:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"37849:63:0"},"scope":1413,"src":"37629:284:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"37919:710:0","text":" @notice Same as `fillOrder` but uses contract-based signatures.\n @param order Order quote to fill\n @param signature Signature to confirm quote ownership\n @param amount Taker amount to fill\n @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n @return makingAmount Actual amount transferred from maker to taker\n @return takingAmount Actual amount transferred from taker to maker\n @return orderHash Hash of the filled order\n @dev See tests for examples"},"functionSelector":"cc713a04","id":1390,"implemented":false,"kind":"function","modifiers":[],"name":"fillContractOrder","nameLocation":"38643:17:0","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"order","nameLocation":"38685:5:0","nodeType":"VariableDeclaration","scope":1390,"src":"38670:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":1373,"nodeType":"UserDefinedTypeName","pathNode":{"id":1372,"name":"Order","nameLocations":["38670:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"38670:5:0"},"referencedDeclaration":1185,"src":"38670:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"signature","nameLocation":"38715:9:0","nodeType":"VariableDeclaration","scope":1390,"src":"38700:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1375,"name":"bytes","nodeType":"ElementaryTypeName","src":"38700:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"amount","nameLocation":"38742:6:0","nodeType":"VariableDeclaration","scope":1390,"src":"38734:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"38734:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"takerTraits","nameLocation":"38770:11:0","nodeType":"VariableDeclaration","scope":1390,"src":"38758:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":1380,"nodeType":"UserDefinedTypeName","pathNode":{"id":1379,"name":"TakerTraits","nameLocations":["38758:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"38758:11:0"},"referencedDeclaration":515,"src":"38758:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"38660:127:0"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"makingAmount","nameLocation":"38813:12:0","nodeType":"VariableDeclaration","scope":1390,"src":"38805:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"38805:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"takingAmount","nameLocation":"38835:12:0","nodeType":"VariableDeclaration","scope":1390,"src":"38827:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"38827:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"orderHash","nameLocation":"38857:9:0","nodeType":"VariableDeclaration","scope":1390,"src":"38849:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"38849:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"38804:63:0"},"scope":1413,"src":"38634:234:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"38874:839:0","text":" @notice Same as `fillContractOrder` but allows to specify arguments that are used by the taker.\n @param order Order quote to fill\n @param signature Signature to confirm quote ownership\n @param amount Taker amount to fill\n @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n @param args Arguments that are used by the taker (target, extension, interaction, permit)\n @return makingAmount Actual amount transferred from maker to taker\n @return takingAmount Actual amount transferred from taker to maker\n @return orderHash Hash of the filled order\n @dev See tests for examples"},"functionSelector":"56a75868","id":1412,"implemented":false,"kind":"function","modifiers":[],"name":"fillContractOrderArgs","nameLocation":"39727:21:0","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"order","nameLocation":"39773:5:0","nodeType":"VariableDeclaration","scope":1412,"src":"39758:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":1393,"nodeType":"UserDefinedTypeName","pathNode":{"id":1392,"name":"Order","nameLocations":["39758:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"39758:5:0"},"referencedDeclaration":1185,"src":"39758:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"signature","nameLocation":"39803:9:0","nodeType":"VariableDeclaration","scope":1412,"src":"39788:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1395,"name":"bytes","nodeType":"ElementaryTypeName","src":"39788:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"amount","nameLocation":"39830:6:0","nodeType":"VariableDeclaration","scope":1412,"src":"39822:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"39822:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"takerTraits","nameLocation":"39858:11:0","nodeType":"VariableDeclaration","scope":1412,"src":"39846:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":1400,"nodeType":"UserDefinedTypeName","pathNode":{"id":1399,"name":"TakerTraits","nameLocations":["39846:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"39846:11:0"},"referencedDeclaration":515,"src":"39846:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"args","nameLocation":"39894:4:0","nodeType":"VariableDeclaration","scope":1412,"src":"39879:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1402,"name":"bytes","nodeType":"ElementaryTypeName","src":"39879:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39748:156:0"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"makingAmount","nameLocation":"39930:12:0","nodeType":"VariableDeclaration","scope":1412,"src":"39922:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"39922:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"takingAmount","nameLocation":"39952:12:0","nodeType":"VariableDeclaration","scope":1412,"src":"39944:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"39944:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"orderHash","nameLocation":"39974:9:0","nodeType":"VariableDeclaration","scope":1412,"src":"39966:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"39966:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"39921:63:0"},"scope":1413,"src":"39718:267:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1758,"src":"31418:8569:0","usedErrors":[1187,1189,1191,1193,1195,1197,1199,1201,1203,1205,1207,1209,1211,1213,1215,1217,1219,1221,1227],"usedEvents":[1234,1239,1248]},{"abstract":false,"baseContracts":[],"canonicalName":"ImmutablesLib","contractDependencies":[],"contractKind":"library","documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"40062:94:0","text":" @title Library for escrow immutables.\n @custom:security-contact security@1inch.io"},"fullyImplemented":true,"id":1440,"linearizedBaseContracts":[1440],"name":"ImmutablesLib","nameLocation":"40165:13:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1417,"mutability":"constant","name":"ESCROW_IMMUTABLES_SIZE","nameLocation":"40211:22:0","nodeType":"VariableDeclaration","scope":1440,"src":"40185:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"40185:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078313030","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40236:5:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"visibility":"internal"},{"body":{"id":1427,"nodeType":"Block","src":"40495:211:0","statements":[{"AST":{"nativeSrc":"40530:170:0","nodeType":"YulBlock","src":"40530:170:0","statements":[{"nativeSrc":"40544:22:0","nodeType":"YulVariableDeclaration","src":"40544:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"40561:4:0","nodeType":"YulLiteral","src":"40561:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"40555:5:0","nodeType":"YulIdentifier","src":"40555:5:0"},"nativeSrc":"40555:11:0","nodeType":"YulFunctionCall","src":"40555:11:0"},"variables":[{"name":"ptr","nativeSrc":"40548:3:0","nodeType":"YulTypedName","src":"40548:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"40592:3:0","nodeType":"YulIdentifier","src":"40592:3:0"},{"name":"immutables","nativeSrc":"40597:10:0","nodeType":"YulIdentifier","src":"40597:10:0"},{"name":"ESCROW_IMMUTABLES_SIZE","nativeSrc":"40609:22:0","nodeType":"YulIdentifier","src":"40609:22:0"}],"functionName":{"name":"calldatacopy","nativeSrc":"40579:12:0","nodeType":"YulIdentifier","src":"40579:12:0"},"nativeSrc":"40579:53:0","nodeType":"YulFunctionCall","src":"40579:53:0"},"nativeSrc":"40579:53:0","nodeType":"YulExpressionStatement","src":"40579:53:0"},{"nativeSrc":"40645:45:0","nodeType":"YulAssignment","src":"40645:45:0","value":{"arguments":[{"name":"ptr","nativeSrc":"40662:3:0","nodeType":"YulIdentifier","src":"40662:3:0"},{"name":"ESCROW_IMMUTABLES_SIZE","nativeSrc":"40667:22:0","nodeType":"YulIdentifier","src":"40667:22:0"}],"functionName":{"name":"keccak256","nativeSrc":"40652:9:0","nodeType":"YulIdentifier","src":"40652:9:0"},"nativeSrc":"40652:38:0","nodeType":"YulFunctionCall","src":"40652:38:0"},"variableNames":[{"name":"ret","nativeSrc":"40645:3:0","nodeType":"YulIdentifier","src":"40645:3:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1417,"isOffset":false,"isSlot":false,"src":"40609:22:0","valueSize":1},{"declaration":1417,"isOffset":false,"isSlot":false,"src":"40667:22:0","valueSize":1},{"declaration":1421,"isOffset":false,"isSlot":false,"src":"40597:10:0","valueSize":1},{"declaration":1424,"isOffset":false,"isSlot":false,"src":"40645:3:0","valueSize":1}],"flags":["memory-safe"],"id":1426,"nodeType":"InlineAssembly","src":"40505:195:0"}]},"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"40248:149:0","text":" @notice Returns the hash of the immutables.\n @param immutables The immutables to hash.\n @return ret The computed hash."},"id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"40411:4:0","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"immutables","nameLocation":"40448:10:0","nodeType":"VariableDeclaration","scope":1428,"src":"40416:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1420,"nodeType":"UserDefinedTypeName","pathNode":{"id":1419,"name":"IBaseEscrow.Immutables","nameLocations":["40416:11:0","40428:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"40416:22:0"},"referencedDeclaration":994,"src":"40416:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"40415:44:0"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"ret","nameLocation":"40490:3:0","nodeType":"VariableDeclaration","scope":1428,"src":"40482:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40482:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"40481:13:0"},"scope":1440,"src":"40402:304:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1438,"nodeType":"Block","src":"40960:117:0","statements":[{"AST":{"nativeSrc":"40995:76:0","nodeType":"YulBlock","src":"40995:76:0","statements":[{"nativeSrc":"41009:52:0","nodeType":"YulAssignment","src":"41009:52:0","value":{"arguments":[{"name":"immutables","nativeSrc":"41026:10:0","nodeType":"YulIdentifier","src":"41026:10:0"},{"name":"ESCROW_IMMUTABLES_SIZE","nativeSrc":"41038:22:0","nodeType":"YulIdentifier","src":"41038:22:0"}],"functionName":{"name":"keccak256","nativeSrc":"41016:9:0","nodeType":"YulIdentifier","src":"41016:9:0"},"nativeSrc":"41016:45:0","nodeType":"YulFunctionCall","src":"41016:45:0"},"variableNames":[{"name":"ret","nativeSrc":"41009:3:0","nodeType":"YulIdentifier","src":"41009:3:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1417,"isOffset":false,"isSlot":false,"src":"41038:22:0","valueSize":1},{"declaration":1432,"isOffset":false,"isSlot":false,"src":"41026:10:0","valueSize":1},{"declaration":1435,"isOffset":false,"isSlot":false,"src":"41009:3:0","valueSize":1}],"flags":["memory-safe"],"id":1437,"nodeType":"InlineAssembly","src":"40970:101:0"}]},"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"40712:149:0","text":" @notice Returns the hash of the immutables.\n @param immutables The immutables to hash.\n @return ret The computed hash."},"id":1439,"implemented":true,"kind":"function","modifiers":[],"name":"hashMem","nameLocation":"40875:7:0","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"immutables","nameLocation":"40913:10:0","nodeType":"VariableDeclaration","scope":1439,"src":"40883:40:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_memory_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1431,"nodeType":"UserDefinedTypeName","pathNode":{"id":1430,"name":"IBaseEscrow.Immutables","nameLocations":["40883:11:0","40895:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"40883:22:0"},"referencedDeclaration":994,"src":"40883:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"40882:42:0"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"ret","nameLocation":"40955:3:0","nodeType":"VariableDeclaration","scope":1439,"src":"40947:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"40946:13:0"},"scope":1440,"src":"40866:211:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1758,"src":"40157:922:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IResolverExample","contractDependencies":[],"contractKind":"interface","documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"41158:148:0","text":" @title Interface for the sample implementation of a Resolver contract for cross-chain swap.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":1486,"linearizedBaseContracts":[1486],"name":"IResolverExample","nameLocation":"41317:16:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"947d5a84","id":1443,"name":"InvalidLength","nameLocation":"41346:13:0","nodeType":"ErrorDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[],"src":"41359:2:0"},"src":"41340:22:0"},{"errorSelector":"ff633a38","id":1445,"name":"LengthMismatch","nameLocation":"41373:14:0","nodeType":"ErrorDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[],"src":"41387:2:0"},"src":"41367:23:0"},{"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"41396:698:0","text":" @notice Deploys a new escrow contract for maker on the source chain.\n @param immutables The immutables of the escrow contract that are used in deployment.\n @param order Order quote to fill.\n @param r R component of signature.\n @param vs VS component of signature.\n @param amount Taker amount to fill\n @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n @param args Arguments that are used by the taker (target, extension, interaction, permit)."},"functionSelector":"ca218276","id":1466,"implemented":false,"kind":"function","modifiers":[],"name":"deploySrc","nameLocation":"42108:9:0","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"immutables","nameLocation":"42159:10:0","nodeType":"VariableDeclaration","scope":1466,"src":"42127:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1448,"nodeType":"UserDefinedTypeName","pathNode":{"id":1447,"name":"IBaseEscrow.Immutables","nameLocations":["42127:11:0","42139:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"42127:22:0"},"referencedDeclaration":994,"src":"42127:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"order","nameLocation":"42206:5:0","nodeType":"VariableDeclaration","scope":1466,"src":"42179:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":1451,"nodeType":"UserDefinedTypeName","pathNode":{"id":1450,"name":"IOrderMixin.Order","nameLocations":["42179:11:0","42191:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"42179:17:0"},"referencedDeclaration":1185,"src":"42179:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"r","nameLocation":"42229:1:0","nodeType":"VariableDeclaration","scope":1466,"src":"42221:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"42221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"vs","nameLocation":"42248:2:0","nodeType":"VariableDeclaration","scope":1466,"src":"42240:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"42240:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"amount","nameLocation":"42268:6:0","nodeType":"VariableDeclaration","scope":1466,"src":"42260:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"42260:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"takerTraits","nameLocation":"42296:11:0","nodeType":"VariableDeclaration","scope":1466,"src":"42284:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":1460,"nodeType":"UserDefinedTypeName","pathNode":{"id":1459,"name":"TakerTraits","nameLocations":["42284:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"42284:11:0"},"referencedDeclaration":515,"src":"42284:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"args","nameLocation":"42332:4:0","nodeType":"VariableDeclaration","scope":1466,"src":"42317:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1462,"name":"bytes","nodeType":"ElementaryTypeName","src":"42317:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42117:225:0"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"42351:0:0"},"scope":1486,"src":"42099:253:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"42358:285:0","text":" @notice Deploys a new escrow contract for taker on the destination chain.\n @param dstImmutables The immutables of the escrow contract that are used in deployment.\n @param srcCancellationTimestamp The start of the cancellation period for the source chain."},"functionSelector":"318b0562","id":1475,"implemented":false,"kind":"function","modifiers":[],"name":"deployDst","nameLocation":"42657:9:0","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"dstImmutables","nameLocation":"42699:13:0","nodeType":"VariableDeclaration","scope":1475,"src":"42667:45:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1469,"nodeType":"UserDefinedTypeName","pathNode":{"id":1468,"name":"IBaseEscrow.Immutables","nameLocations":["42667:11:0","42679:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"42667:22:0"},"referencedDeclaration":994,"src":"42667:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"srcCancellationTimestamp","nameLocation":"42722:24:0","nodeType":"VariableDeclaration","scope":1475,"src":"42714:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"42714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42666:81:0"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[],"src":"42764:0:0"},"scope":1486,"src":"42648:117:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"42771:245:0","text":" @notice Allows the owner to make arbitrary calls to other contracts on behalf of this contract.\n @param targets The addresses of the contracts to call.\n @param arguments The arguments to pass to the contract calls."},"functionSelector":"1f3177ba","id":1485,"implemented":false,"kind":"function","modifiers":[],"name":"arbitraryCalls","nameLocation":"43030:14:0","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"targets","nameLocation":"43064:7:0","nodeType":"VariableDeclaration","scope":1485,"src":"43045:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"43045:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1478,"nodeType":"ArrayTypeName","src":"43045:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1482,"mutability":"mutable","name":"arguments","nameLocation":"43090:9:0","nodeType":"VariableDeclaration","scope":1485,"src":"43073:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1480,"name":"bytes","nodeType":"ElementaryTypeName","src":"43073:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1481,"nodeType":"ArrayTypeName","src":"43073:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"43044:56:0"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[],"src":"43109:0:0"},"scope":1486,"src":"43021:89:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1758,"src":"41307:1805:0","usedErrors":[1443,1445],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":1488,"name":"Ownable","nameLocations":["43583:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":972,"src":"43583:7:0"},"id":1489,"nodeType":"InheritanceSpecifier","src":"43583:7:0"}],"canonicalName":"Resolver","contractDependencies":[],"contractKind":"contract","documentation":{"id":1487,"nodeType":"StructuredDocumentation","src":"43145:416:0","text":" @title Sample implementation of a Resolver contract for cross-chain swap.\n @dev It is important when deploying an escrow on the source chain to send the safety deposit and deploy the escrow in the same\n transaction, since the address of the escrow depends on the block.timestamp.\n You can find sample code for this in the {ResolverExample-deploySrc}.\n @custom:security-contact security@1inch.io"},"fullyImplemented":true,"id":1757,"linearizedBaseContracts":[1757,972,130],"name":"Resolver","nameLocation":"43571:8:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1493,"libraryName":{"id":1490,"name":"ImmutablesLib","nameLocations":["43603:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"43603:13:0"},"nodeType":"UsingForDirective","src":"43597:47:0","typeName":{"id":1492,"nodeType":"UserDefinedTypeName","pathNode":{"id":1491,"name":"IBaseEscrow.Immutables","nameLocations":["43621:11:0","43633:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"43621:22:0"},"referencedDeclaration":994,"src":"43621:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}}},{"global":false,"id":1497,"libraryName":{"id":1494,"name":"TimelocksLib","nameLocations":["43655:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":828,"src":"43655:12:0"},"nodeType":"UsingForDirective","src":"43649:33:0","typeName":{"id":1496,"nodeType":"UserDefinedTypeName","pathNode":{"id":1495,"name":"Timelocks","nameLocations":["43672:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":716,"src":"43672:9:0"},"referencedDeclaration":716,"src":"43672:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}}},{"errorSelector":"947d5a84","id":1499,"name":"InvalidLength","nameLocation":"43694:13:0","nodeType":"ErrorDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"43707:2:0"},"src":"43688:22:0"},{"errorSelector":"ff633a38","id":1501,"name":"LengthMismatch","nameLocation":"43721:14:0","nodeType":"ErrorDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[],"src":"43735:2:0"},"src":"43715:23:0"},{"constant":false,"id":1504,"mutability":"immutable","name":"_FACTORY","nameLocation":"43777:8:0","nodeType":"VariableDeclaration","scope":1757,"src":"43744:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrowFactory_$1163","typeString":"contract IEscrowFactory"},"typeName":{"id":1503,"nodeType":"UserDefinedTypeName","pathNode":{"id":1502,"name":"IEscrowFactory","nameLocations":["43744:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":1163,"src":"43744:14:0"},"referencedDeclaration":1163,"src":"43744:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrowFactory_$1163","typeString":"contract IEscrowFactory"}},"visibility":"private"},{"constant":false,"id":1507,"mutability":"immutable","name":"_LOP","nameLocation":"43821:4:0","nodeType":"VariableDeclaration","scope":1757,"src":"43791:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IOrderMixin_$1413","typeString":"contract IOrderMixin"},"typeName":{"id":1506,"nodeType":"UserDefinedTypeName","pathNode":{"id":1505,"name":"IOrderMixin","nameLocations":["43791:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":1413,"src":"43791:11:0"},"referencedDeclaration":1413,"src":"43791:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IOrderMixin_$1413","typeString":"contract IOrderMixin"}},"visibility":"private"},{"body":{"id":1529,"nodeType":"Block","src":"43929:55:0","statements":[{"expression":{"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1521,"name":"_FACTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"43939:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrowFactory_$1163","typeString":"contract IEscrowFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1522,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"43950:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrowFactory_$1163","typeString":"contract IEscrowFactory"}},"src":"43939:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrowFactory_$1163","typeString":"contract IEscrowFactory"}},"id":1524,"nodeType":"ExpressionStatement","src":"43939:18:0"},{"expression":{"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1525,"name":"_LOP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"43967:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_IOrderMixin_$1413","typeString":"contract IOrderMixin"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1526,"name":"lop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"43974:3:0","typeDescriptions":{"typeIdentifier":"t_contract$_IOrderMixin_$1413","typeString":"contract IOrderMixin"}},"src":"43967:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IOrderMixin_$1413","typeString":"contract IOrderMixin"}},"id":1528,"nodeType":"ExpressionStatement","src":"43967:10:0"}]},"id":1530,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1518,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"43915:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1519,"kind":"baseConstructorSpecifier","modifierName":{"id":1517,"name":"Ownable","nameLocations":["43907:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":972,"src":"43907:7:0"},"nodeType":"ModifierInvocation","src":"43907:21:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"factory","nameLocation":"43859:7:0","nodeType":"VariableDeclaration","scope":1530,"src":"43844:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrowFactory_$1163","typeString":"contract IEscrowFactory"},"typeName":{"id":1509,"nodeType":"UserDefinedTypeName","pathNode":{"id":1508,"name":"IEscrowFactory","nameLocations":["43844:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":1163,"src":"43844:14:0"},"referencedDeclaration":1163,"src":"43844:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrowFactory_$1163","typeString":"contract IEscrowFactory"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"lop","nameLocation":"43880:3:0","nodeType":"VariableDeclaration","scope":1530,"src":"43868:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IOrderMixin_$1413","typeString":"contract IOrderMixin"},"typeName":{"id":1512,"nodeType":"UserDefinedTypeName","pathNode":{"id":1511,"name":"IOrderMixin","nameLocations":["43868:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":1413,"src":"43868:11:0"},"referencedDeclaration":1413,"src":"43868:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IOrderMixin_$1413","typeString":"contract IOrderMixin"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"initialOwner","nameLocation":"43893:12:0","nodeType":"VariableDeclaration","scope":1530,"src":"43885:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"43885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"43843:63:0"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[],"src":"43929:0:0"},"scope":1757,"src":"43832:152:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1533,"nodeType":"Block","src":"44017:2:0","statements":[]},"id":1534,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[],"src":"43997:2:0"},"returnParameters":{"id":1532,"nodeType":"ParameterList","parameters":[],"src":"44017:0:0"},"scope":1757,"src":"43990:29:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1640,"nodeType":"Block","src":"44401:677:0","statements":[{"assignments":[1561],"declarations":[{"constant":false,"id":1561,"mutability":"mutable","name":"immutablesMem","nameLocation":"44442:13:0","nodeType":"VariableDeclaration","scope":1640,"src":"44412:43:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_memory_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1560,"nodeType":"UserDefinedTypeName","pathNode":{"id":1559,"name":"IBaseEscrow.Immutables","nameLocations":["44412:11:0","44424:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"44412:22:0"},"referencedDeclaration":994,"src":"44412:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"id":1563,"initialValue":{"id":1562,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"44458:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"nodeType":"VariableDeclarationStatement","src":"44412:56:0"},{"expression":{"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1564,"name":"immutablesMem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"44478:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}},"id":1566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"44492:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":993,"src":"44478:23:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1569,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"44531:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44542:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":993,"src":"44531:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}},{"expression":{"id":1571,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"44553:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44559:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"44553:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1567,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"44504:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$828_$","typeString":"type(library TimelocksLib)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44517:13:0","memberName":"setDeployedAt","nodeType":"MemberAccess","referencedDeclaration":763,"src":"44504:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$716_$_t_uint256_$returns$_t_userDefinedValueType$_Timelocks_$716_$","typeString":"function (Timelocks,uint256) pure returns (Timelocks)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44504:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}},"src":"44478:91:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$716","typeString":"Timelocks"}},"id":1575,"nodeType":"ExpressionStatement","src":"44478:91:0"},{"assignments":[1577],"declarations":[{"constant":false,"id":1577,"mutability":"mutable","name":"computed","nameLocation":"44587:8:0","nodeType":"VariableDeclaration","scope":1640,"src":"44579:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"44579:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1582,"initialValue":{"arguments":[{"id":1580,"name":"immutablesMem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"44626:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Immutables_$994_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}],"expression":{"id":1578,"name":"_FACTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"44598:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrowFactory_$1163","typeString":"contract IEscrowFactory"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44607:18:0","memberName":"addressOfEscrowSrc","nodeType":"MemberAccess","referencedDeclaration":1153,"src":"44598:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_struct$_Immutables_$994_memory_ptr_$returns$_t_address_$","typeString":"function (struct IBaseEscrow.Immutables memory) view external returns (address)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44598:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"44579:61:0"},{"assignments":[1584,null],"declarations":[{"constant":false,"id":1584,"mutability":"mutable","name":"success","nameLocation":"44657:7:0","nodeType":"VariableDeclaration","scope":1640,"src":"44652:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1583,"name":"bool","nodeType":"ElementaryTypeName","src":"44652:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1595,"initialValue":{"arguments":[{"hexValue":"","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"44728:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":1587,"name":"computed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"44677:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44669:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"44669:7:0","typeDescriptions":{}}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44669:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44687:4:0","memberName":"call","nodeType":"MemberAccess","src":"44669:22:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1590,"name":"immutablesMem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"44699:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}},"id":1591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"44713:13:0","memberName":"safetyDeposit","nodeType":"MemberAccess","referencedDeclaration":990,"src":"44699:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"44669:58:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44669:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"44651:80:0"},{"condition":{"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"44745:8:0","subExpression":{"id":1596,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"44746:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1603,"nodeType":"IfStatement","src":"44741:60:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1598,"name":"IBaseEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"44762:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaseEscrow_$1059_$","typeString":"type(contract IBaseEscrow)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44774:25:0","memberName":"NativeTokenSendingFailure","nodeType":"MemberAccess","referencedDeclaration":1019,"src":"44762:37:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44762:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1602,"nodeType":"RevertStatement","src":"44755:46:0"}},{"expression":{"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1604,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"44851:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1609,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"44901:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}],"expression":{"id":1607,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"44882:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$515_$","typeString":"type(TakerTraits)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44894:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"44882:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$515_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44882:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1","typeString":"int_const 3618...(68 digits omitted)...1248"},"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44924:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323531","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44929:3:0","typeDescriptions":{"typeIdentifier":"t_rational_251_by_1","typeString":"int_const 251"},"value":"251"},"src":"44924:8:0","typeDescriptions":{"typeIdentifier":"t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1","typeString":"int_const 3618...(68 digits omitted)...1248"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1","typeString":"int_const 3618...(68 digits omitted)...1248"}],"id":1612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44916:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1611,"name":"uint256","nodeType":"ElementaryTypeName","src":"44916:7:0","typeDescriptions":{}}},"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44916:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44882:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1605,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"44865:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$515_$","typeString":"type(TakerTraits)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44877:4:0","memberName":"wrap","nodeType":"MemberAccess","src":"44865:16:0","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_TakerTraits_$515_$","typeString":"function (uint256) pure returns (TakerTraits)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44865:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"src":"44851:83:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"id":1620,"nodeType":"ExpressionStatement","src":"44851:83:0"},{"assignments":[1622],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"argsMem","nameLocation":"44957:7:0","nodeType":"VariableDeclaration","scope":1640,"src":"44944:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1621,"name":"bytes","nodeType":"ElementaryTypeName","src":"44944:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1628,"initialValue":{"arguments":[{"id":1625,"name":"computed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"44984:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1626,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"44994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1623,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"44967:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44971:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"44967:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44967:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"44944:55:0"},{"expression":{"arguments":[{"id":1632,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"45028:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},{"id":1633,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"45035:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1634,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"45038:2:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1635,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"45042:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1636,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"45050:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},{"id":1637,"name":"argsMem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"45063:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$1185_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1629,"name":"_LOP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"45009:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_IOrderMixin_$1413","typeString":"contract IOrderMixin"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45014:13:0","memberName":"fillOrderArgs","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"45009:18:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_Order_$1185_memory_ptr_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_userDefinedValueType$_TakerTraits_$515_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_bytes32_$","typeString":"function (struct IOrderMixin.Order memory,bytes32,bytes32,uint256,TakerTraits,bytes memory) payable external returns (uint256,uint256,bytes32)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45009:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_bytes32_$","typeString":"tuple(uint256,uint256,bytes32)"}},"id":1639,"nodeType":"ExpressionStatement","src":"45009:62:0"}]},"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"44065:60:0","text":" @notice See {IResolverExample-deploySrc}."},"functionSelector":"ca218276","id":1641,"implemented":true,"kind":"function","modifiers":[{"id":1555,"kind":"modifierInvocation","modifierName":{"id":1554,"name":"onlyOwner","nameLocations":["44391:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"44391:9:0"},"nodeType":"ModifierInvocation","src":"44391:9:0"}],"name":"deploySrc","nameLocation":"44139:9:0","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"immutables","nameLocation":"44190:10:0","nodeType":"VariableDeclaration","scope":1641,"src":"44158:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"IBaseEscrow.Immutables","nameLocations":["44158:11:0","44170:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"44158:22:0"},"referencedDeclaration":994,"src":"44158:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"order","nameLocation":"44237:5:0","nodeType":"VariableDeclaration","scope":1641,"src":"44210:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":1540,"nodeType":"UserDefinedTypeName","pathNode":{"id":1539,"name":"IOrderMixin.Order","nameLocations":["44210:11:0","44222:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"44210:17:0"},"referencedDeclaration":1185,"src":"44210:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1185_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"r","nameLocation":"44260:1:0","nodeType":"VariableDeclaration","scope":1641,"src":"44252:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"44252:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"vs","nameLocation":"44279:2:0","nodeType":"VariableDeclaration","scope":1641,"src":"44271:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"44271:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"amount","nameLocation":"44299:6:0","nodeType":"VariableDeclaration","scope":1641,"src":"44291:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"44291:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"takerTraits","nameLocation":"44327:11:0","nodeType":"VariableDeclaration","scope":1641,"src":"44315:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"},"typeName":{"id":1549,"nodeType":"UserDefinedTypeName","pathNode":{"id":1548,"name":"TakerTraits","nameLocations":["44315:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"44315:11:0"},"referencedDeclaration":515,"src":"44315:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$515","typeString":"TakerTraits"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"args","nameLocation":"44363:4:0","nodeType":"VariableDeclaration","scope":1641,"src":"44348:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1551,"name":"bytes","nodeType":"ElementaryTypeName","src":"44348:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"44148:225:0"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[],"src":"44401:0:0"},"scope":1757,"src":"44130:948:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1662,"nodeType":"Block","src":"45276:100:0","statements":[{"expression":{"arguments":[{"id":1658,"name":"dstImmutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"45329:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},{"id":1659,"name":"srcCancellationTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"45344:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1652,"name":"_FACTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"45286:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrowFactory_$1163","typeString":"contract IEscrowFactory"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45295:15:0","memberName":"createDstEscrow","nodeType":"MemberAccess","referencedDeclaration":1144,"src":"45286:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_Immutables_$994_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct IBaseEscrow.Immutables memory,uint256) payable external"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1655,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"45318:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45322:5:0","memberName":"value","nodeType":"MemberAccess","src":"45318:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"45286:42:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_Immutables_$994_memory_ptr_$_t_uint256_$returns$__$value","typeString":"function (struct IBaseEscrow.Immutables memory,uint256) payable external"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45286:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"ExpressionStatement","src":"45286:83:0"}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"45084:60:0","text":" @notice See {IResolverExample-deployDst}."},"functionSelector":"318b0562","id":1663,"implemented":true,"kind":"function","modifiers":[{"id":1650,"kind":"modifierInvocation","modifierName":{"id":1649,"name":"onlyOwner","nameLocations":["45258:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"45258:9:0"},"nodeType":"ModifierInvocation","src":"45258:9:0"}],"name":"deployDst","nameLocation":"45158:9:0","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"dstImmutables","nameLocation":"45200:13:0","nodeType":"VariableDeclaration","scope":1663,"src":"45168:45:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1644,"nodeType":"UserDefinedTypeName","pathNode":{"id":1643,"name":"IBaseEscrow.Immutables","nameLocations":["45168:11:0","45180:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"45168:22:0"},"referencedDeclaration":994,"src":"45168:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"srcCancellationTimestamp","nameLocation":"45223:24:0","nodeType":"VariableDeclaration","scope":1663,"src":"45215:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"45215:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45167:81:0"},"returnParameters":{"id":1651,"nodeType":"ParameterList","parameters":[],"src":"45276:0:0"},"scope":1757,"src":"45149:227:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1681,"nodeType":"Block","src":"45485:52:0","statements":[{"expression":{"arguments":[{"id":1677,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"45511:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1678,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"45519:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}],"expression":{"id":1674,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"45495:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$1069","typeString":"contract IEscrow"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45502:8:0","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":1040,"src":"45495:15:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_struct$_Immutables_$994_memory_ptr_$returns$__$","typeString":"function (bytes32,struct IBaseEscrow.Immutables memory) external"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45495:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"ExpressionStatement","src":"45495:35:0"}]},"functionSelector":"2c3c9a37","id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"45391:8:0","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"escrow","nameLocation":"45408:6:0","nodeType":"VariableDeclaration","scope":1682,"src":"45400:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$1069","typeString":"contract IEscrow"},"typeName":{"id":1665,"nodeType":"UserDefinedTypeName","pathNode":{"id":1664,"name":"IEscrow","nameLocations":["45400:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1069,"src":"45400:7:0"},"referencedDeclaration":1069,"src":"45400:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$1069","typeString":"contract IEscrow"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"secret","nameLocation":"45424:6:0","nodeType":"VariableDeclaration","scope":1682,"src":"45416:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"45416:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1671,"mutability":"mutable","name":"immutables","nameLocation":"45464:10:0","nodeType":"VariableDeclaration","scope":1682,"src":"45432:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1670,"nodeType":"UserDefinedTypeName","pathNode":{"id":1669,"name":"IBaseEscrow.Immutables","nameLocations":["45432:11:0","45444:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"45432:22:0"},"referencedDeclaration":994,"src":"45432:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"45399:76:0"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[],"src":"45485:0:0"},"scope":1757,"src":"45382:155:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1697,"nodeType":"Block","src":"45628:42:0","statements":[{"expression":{"arguments":[{"id":1694,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"45652:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}],"expression":{"id":1691,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"45638:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$1069","typeString":"contract IEscrow"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45645:6:0","memberName":"cancel","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"45638:13:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_Immutables_$994_memory_ptr_$returns$__$","typeString":"function (struct IBaseEscrow.Immutables memory) external"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45638:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1696,"nodeType":"ExpressionStatement","src":"45638:25:0"}]},"functionSelector":"a4fc705a","id":1698,"implemented":true,"kind":"function","modifiers":[],"name":"cancel","nameLocation":"45552:6:0","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"escrow","nameLocation":"45567:6:0","nodeType":"VariableDeclaration","scope":1698,"src":"45559:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$1069","typeString":"contract IEscrow"},"typeName":{"id":1684,"nodeType":"UserDefinedTypeName","pathNode":{"id":1683,"name":"IEscrow","nameLocations":["45559:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1069,"src":"45559:7:0"},"referencedDeclaration":1069,"src":"45559:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$1069","typeString":"contract IEscrow"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"immutables","nameLocation":"45607:10:0","nodeType":"VariableDeclaration","scope":1698,"src":"45575:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":1687,"nodeType":"UserDefinedTypeName","pathNode":{"id":1686,"name":"IBaseEscrow.Immutables","nameLocations":["45575:11:0","45587:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"45575:22:0"},"referencedDeclaration":994,"src":"45575:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$994_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"45558:60:0"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"45628:0:0"},"scope":1757,"src":"45543:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1755,"nodeType":"Block","src":"45845:362:0","statements":[{"assignments":[1711],"declarations":[{"constant":false,"id":1711,"mutability":"mutable","name":"length","nameLocation":"45863:6:0","nodeType":"VariableDeclaration","scope":1755,"src":"45855:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"45855:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1714,"initialValue":{"expression":{"id":1712,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"45872:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45880:6:0","memberName":"length","nodeType":"MemberAccess","src":"45872:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"45855:31:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1715,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"45900:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45908:6:0","memberName":"length","nodeType":"MemberAccess","src":"45900:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1717,"name":"arguments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"45918:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45928:6:0","memberName":"length","nodeType":"MemberAccess","src":"45918:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"45900:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1723,"nodeType":"IfStatement","src":"45896:63:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1720,"name":"LengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"45943:14:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45943:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1722,"nodeType":"RevertStatement","src":"45936:23:0"}},{"body":{"id":1753,"nodeType":"Block","src":"46006:195:0","statements":[{"assignments":[1735,null],"declarations":[{"constant":false,"id":1735,"mutability":"mutable","name":"success","nameLocation":"46089:7:0","nodeType":"VariableDeclaration","scope":1753,"src":"46084:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1734,"name":"bool","nodeType":"ElementaryTypeName","src":"46084:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1744,"initialValue":{"arguments":[{"baseExpression":{"id":1740,"name":"arguments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"46117:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":1742,"indexExpression":{"id":1741,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"46127:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"46117:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"baseExpression":{"id":1736,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"46101:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1738,"indexExpression":{"id":1737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"46109:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"46101:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"46112:4:0","memberName":"call","nodeType":"MemberAccess","src":"46101:15:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46101:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"46083:47:0"},{"condition":{"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"46148:8:0","subExpression":{"id":1745,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"46149:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1752,"nodeType":"IfStatement","src":"46144:46:0","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1747,"name":"RevertReasonForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"46158:21:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RevertReasonForwarder_$513_$","typeString":"type(library RevertReasonForwarder)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"46180:8:0","memberName":"reRevert","nodeType":"MemberAccess","referencedDeclaration":504,"src":"46158:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$__$","typeString":"function () pure"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46158:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1751,"nodeType":"ExpressionStatement","src":"46158:32:0"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"45989:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1729,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"45993:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"45989:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1754,"initializationExpression":{"assignments":[1725],"declarations":[{"constant":false,"id":1725,"mutability":"mutable","name":"i","nameLocation":"45982:1:0","nodeType":"VariableDeclaration","scope":1754,"src":"45974:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"45974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1727,"initialValue":{"hexValue":"30","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45986:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"45974:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"46001:3:0","subExpression":{"id":1731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"46003:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1733,"nodeType":"ExpressionStatement","src":"46001:3:0"},"nodeType":"ForStatement","src":"45969:232:0"}]},"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"45676:65:0","text":" @notice See {IResolverExample-arbitraryCalls}."},"functionSelector":"1f3177ba","id":1756,"implemented":true,"kind":"function","modifiers":[{"id":1708,"kind":"modifierInvocation","modifierName":{"id":1707,"name":"onlyOwner","nameLocations":["45835:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"45835:9:0"},"nodeType":"ModifierInvocation","src":"45835:9:0"}],"name":"arbitraryCalls","nameLocation":"45755:14:0","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"targets","nameLocation":"45789:7:0","nodeType":"VariableDeclaration","scope":1756,"src":"45770:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"45770:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1701,"nodeType":"ArrayTypeName","src":"45770:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"arguments","nameLocation":"45815:9:0","nodeType":"VariableDeclaration","scope":1756,"src":"45798:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1703,"name":"bytes","nodeType":"ElementaryTypeName","src":"45798:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1704,"nodeType":"ArrayTypeName","src":"45798:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"45769:56:0"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[],"src":"45845:0:0"},"scope":1757,"src":"45746:461:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1758,"src":"43562:2647:0","usedErrors":[838,843,1019,1499,1501],"usedEvents":[849]}],"src":"32:46179:0"},"id":0}},"contracts":{"contracts/Resolver.sol":{"AddressLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201ab95e87542d57bed427dea3e1147931fd7c854da59bd13123364e1d00f0c59664736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xB9 0x5E DUP8 SLOAD 0x2D JUMPI 0xBE 0xD4 0x27 0xDE LOG3 0xE1 EQ PUSH26 0x31FD7C854DA59BD13123364E1D00F0C59664736F6C6343000817 STOP CALLER ","sourceMap":"333:1771:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201ab95e87542d57bed427dea3e1147931fd7c854da59bd13123364e1d00f0c59664736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xB9 0x5E DUP8 SLOAD 0x2D JUMPI 0xBE 0xD4 0x27 0xDE LOG3 0xE1 EQ PUSH26 0x31FD7C854DA59BD13123364E1D00F0C59664736F6C6343000817 STOP CALLER ","sourceMap":"333:1771:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"AddressLibLibrary for working with addresses encoded as uint256 values, which can include flags in the highest bits.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"AddressLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"IBaseEscrow":{"abi":[{"inputs":[],"name":"InvalidCaller","type":"error"},{"inputs":[],"name":"InvalidImmutables","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidTime","type":"error"},{"inputs":[],"name":"NativeTokenSendingFailure","type":"error"},{"anonymous":false,"inputs":[],"name":"EscrowCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRescued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"rescueFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"FACTORY()":"2dd31000","RESCUE_DELAY()":"f56cd69c","cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"90d3252f","rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"4649088b","withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"23305703"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The escrow can only be cancelled during the cancellation period. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\"}},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Funds can only be rescued by the taker after the rescue delay.\",\"params\":{\"amount\":\"The amount of tokens to rescue.\",\"immutables\":\"The immutables of the escrow contract.\",\"token\":\"The address of the token to rescue. Zero address for native token.\"}},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\"}}},\"title\":\"Base Escrow interface for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"FACTORY()\":{\"notice\":\"Returns the address of the factory that created the escrow.\"},\"RESCUE_DELAY()\":{\"notice\":\"Returns the delay for rescuing funds from the escrow.\"},\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Cancels the escrow and returns tokens to a predetermined recipient.\"},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Rescues funds from the escrow.\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to a predetermined recipient.\"}},\"notice\":\"Interface implies locking funds initially and then unlocking them with verification of the secret presented.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"IBaseEscrow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"IEscrow":{"abi":[{"inputs":[],"name":"InvalidCaller","type":"error"},{"inputs":[],"name":"InvalidImmutables","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidTime","type":"error"},{"inputs":[],"name":"NativeTokenSendingFailure","type":"error"},{"anonymous":false,"inputs":[],"name":"EscrowCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRescued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROXY_BYTECODE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"rescueFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"FACTORY()":"2dd31000","PROXY_BYTECODE_HASH()":"34862b6a","RESCUE_DELAY()":"f56cd69c","cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"90d3252f","rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"4649088b","withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"23305703"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROXY_BYTECODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The escrow can only be cancelled during the cancellation period. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\"}},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Funds can only be rescued by the taker after the rescue delay.\",\"params\":{\"amount\":\"The amount of tokens to rescue.\",\"immutables\":\"The immutables of the escrow contract.\",\"token\":\"The address of the token to rescue. Zero address for native token.\"}},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\"}}},\"title\":\"Escrow interface for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"FACTORY()\":{\"notice\":\"Returns the address of the factory that created the escrow.\"},\"PROXY_BYTECODE_HASH()\":{\"notice\":\"Returns the bytecode hash of the proxy contract.\"},\"RESCUE_DELAY()\":{\"notice\":\"Returns the delay for rescuing funds from the escrow.\"},\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Cancels the escrow and returns tokens to a predetermined recipient.\"},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Rescues funds from the escrow.\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to a predetermined recipient.\"}},\"notice\":\"Interface implies locking funds initially and then unlocking them with verification of the secret presented.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"IEscrow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"IEscrowFactory":{"abi":[{"inputs":[],"name":"InsufficientEscrowBalance","type":"error"},{"inputs":[],"name":"InvalidCreationTime","type":"error"},{"inputs":[],"name":"InvalidPartialFill","type":"error"},{"inputs":[],"name":"InvalidSecretsAmount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"escrow","type":"address"},{"indexed":false,"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"indexed":false,"internalType":"Address","name":"taker","type":"uint256"}],"name":"DstEscrowCreated","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"indexed":false,"internalType":"struct IBaseEscrow.Immutables","name":"srcImmutables","type":"tuple"},{"components":[{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}],"indexed":false,"internalType":"struct IEscrowFactory.DstImmutablesComplement","name":"dstImmutablesComplement","type":"tuple"}],"name":"SrcEscrowCreated","type":"event"},{"inputs":[],"name":"ESCROW_DST_IMPLEMENTATION","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ESCROW_SRC_IMPLEMENTATION","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"addressOfEscrowDst","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"addressOfEscrowSrc","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"dstImmutables","type":"tuple"},{"internalType":"uint256","name":"srcCancellationTimestamp","type":"uint256"}],"name":"createDstEscrow","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ESCROW_DST_IMPLEMENTATION()":"ba551177","ESCROW_SRC_IMPLEMENTATION()":"7040f173","addressOfEscrowDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"be58e91c","addressOfEscrowSrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"fb6bd47e","createDstEscrow((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)":"dea024e4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientEscrowBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCreationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPartialFill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecretsAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"}],\"name\":\"DstEscrowCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"srcImmutables\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IEscrowFactory.DstImmutablesComplement\",\"name\":\"dstImmutablesComplement\",\"type\":\"tuple\"}],\"name\":\"SrcEscrowCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ESCROW_DST_IMPLEMENTATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ESCROW_SRC_IMPLEMENTATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"addressOfEscrowDst\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"addressOfEscrowSrc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"dstImmutables\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"srcCancellationTimestamp\",\"type\":\"uint256\"}],\"name\":\"createDstEscrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"events\":{\"DstEscrowCreated(address,bytes32,uint256)\":{\"params\":{\"escrow\":\"The address of the created escrow.\",\"hashlock\":\"The hash of the secret.\",\"taker\":\"The address of the taker.\"}},\"SrcEscrowCreated((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"dstImmutablesComplement\":\"Additional immutables related to the escrow contract on the destination chain.\",\"srcImmutables\":\"The immutables of the escrow contract that are used in deployment on the source chain.\"}}},\"kind\":\"dev\",\"methods\":{\"addressOfEscrowDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"immutables\":\"The immutable arguments used to compute salt for escrow deployment.\"},\"returns\":{\"_0\":\"The computed address of the escrow.\"}},\"addressOfEscrowSrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"immutables\":\"The immutable arguments used to compute salt for escrow deployment.\"},\"returns\":{\"_0\":\"The computed address of the escrow.\"}},\"createDstEscrow((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)\":{\"details\":\"The caller must send the safety deposit in the native token along with the function call and approve the destination token to be transferred to the created escrow.\",\"params\":{\"dstImmutables\":\"The immutables of the escrow contract that are used in deployment.\",\"srcCancellationTimestamp\":\"The start of the cancellation period for the source chain.\"}}},\"title\":\"Escrow Factory interface for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"DstEscrowCreated(address,bytes32,uint256)\":{\"notice\":\"Emitted on EscrowDst deployment.\"},\"SrcEscrowCreated((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Emitted on EscrowSrc deployment to recreate EscrowSrc and EscrowDst immutables off-chain.\"}},\"kind\":\"user\",\"methods\":{\"ESCROW_DST_IMPLEMENTATION()\":{\"notice\":\"Returns the address of implementation on the destination chain.\"},\"ESCROW_SRC_IMPLEMENTATION()\":{\"notice\":\"Returns the address of implementation on the source chain.\"},\"addressOfEscrowDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Returns the deterministic address of the destination escrow based on the salt.\"},\"addressOfEscrowSrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Returns the deterministic address of the source escrow based on the salt.\"},\"createDstEscrow((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)\":{\"notice\":\"Creates a new escrow contract for taker on the destination chain.\"}},\"notice\":\"Interface to deploy escrow contracts for the destination chain and to get the deterministic address of escrow on both chains.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"IEscrowFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"IOrderMixin":{"abi":[{"inputs":[],"name":"BadSignature","type":"error"},{"inputs":[],"name":"EpochManagerAndBitInvalidatorsAreIncompatible","type":"error"},{"inputs":[],"name":"InvalidPermit2Transfer","type":"error"},{"inputs":[],"name":"InvalidatedOrder","type":"error"},{"inputs":[],"name":"MakingAmountTooLow","type":"error"},{"inputs":[],"name":"MismatchArraysLengths","type":"error"},{"inputs":[],"name":"OrderExpired","type":"error"},{"inputs":[],"name":"OrderIsNotSuitableForMassInvalidation","type":"error"},{"inputs":[],"name":"PartialFillNotAllowed","type":"error"},{"inputs":[],"name":"PredicateIsNotTrue","type":"error"},{"inputs":[],"name":"PrivateOrder","type":"error"},{"inputs":[],"name":"ReentrancyDetected","type":"error"},{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"res","type":"bytes"}],"name":"SimulationResults","type":"error"},{"inputs":[],"name":"SwapWithZeroAmount","type":"error"},{"inputs":[],"name":"TakingAmountExceeded","type":"error"},{"inputs":[],"name":"TakingAmountTooHigh","type":"error"},{"inputs":[],"name":"TransferFromMakerToTakerFailed","type":"error"},{"inputs":[],"name":"TransferFromTakerToMakerFailed","type":"error"},{"inputs":[],"name":"WrongSeriesNonce","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"maker","type":"address"},{"indexed":false,"internalType":"uint256","name":"slotIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"slotValue","type":"uint256"}],"name":"BitInvalidatorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"OrderCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"remainingAmount","type":"uint256"}],"name":"OrderFilled","type":"event"},{"inputs":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"uint256","name":"slot","type":"uint256"}],"name":"bitInvalidatorForOrder","outputs":[{"internalType":"uint256","name":"result","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"},{"internalType":"uint256","name":"additionalMask","type":"uint256"}],"name":"bitsInvalidateForOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"MakerTraits[]","name":"makerTraits","type":"uint256[]"},{"internalType":"bytes32[]","name":"orderHashes","type":"bytes32[]"}],"name":"cancelOrders","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"TakerTraits","name":"takerTraits","type":"uint256"}],"name":"fillContractOrder","outputs":[{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"TakerTraits","name":"takerTraits","type":"uint256"},{"internalType":"bytes","name":"args","type":"bytes"}],"name":"fillContractOrderArgs","outputs":[{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"TakerTraits","name":"takerTraits","type":"uint256"}],"name":"fillOrder","outputs":[{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"TakerTraits","name":"takerTraits","type":"uint256"},{"internalType":"bytes","name":"args","type":"bytes"}],"name":"fillOrderArgs","outputs":[{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"}],"name":"hashOrder","outputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"rawRemainingInvalidatorForOrder","outputs":[{"internalType":"uint256","name":"remainingRaw","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"remainingInvalidatorForOrder","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"simulate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"bitInvalidatorForOrder(address,uint256)":"143e86a7","bitsInvalidateForOrder(uint256,uint256)":"05b1ea03","cancelOrder(uint256,bytes32)":"b68fb020","cancelOrders(uint256[],bytes32[])":"89e7c650","fillContractOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256)":"cc713a04","fillContractOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256,bytes)":"56a75868","fillOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256)":"9fda64bd","fillOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256,bytes)":"f497df75","hashOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))":"802b2ef1","rawRemainingInvalidatorForOrder(address,bytes32)":"c2a40753","remainingInvalidatorForOrder(address,bytes32)":"435b9789","simulate(address,bytes)":"bd61951d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BadSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EpochManagerAndBitInvalidatorsAreIncompatible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermit2Transfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidatedOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MakingAmountTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchArraysLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderIsNotSuitableForMassInvalidation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PartialFillNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PredicateIsNotTrue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrivateOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyDetected\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"res\",\"type\":\"bytes\"}],\"name\":\"SimulationResults\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapWithZeroAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TakingAmountExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TakingAmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromMakerToTakerFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromTakerToMakerFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongSeriesNonce\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotValue\",\"type\":\"uint256\"}],\"name\":\"BitInvalidatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remainingAmount\",\"type\":\"uint256\"}],\"name\":\"OrderFilled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"bitInvalidatorForOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"additionalMask\",\"type\":\"uint256\"}],\"name\":\"bitsInvalidateForOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"MakerTraits[]\",\"name\":\"makerTraits\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"orderHashes\",\"type\":\"bytes32[]\"}],\"name\":\"cancelOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"TakerTraits\",\"name\":\"takerTraits\",\"type\":\"uint256\"}],\"name\":\"fillContractOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"TakerTraits\",\"name\":\"takerTraits\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"fillContractOrderArgs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"TakerTraits\",\"name\":\"takerTraits\",\"type\":\"uint256\"}],\"name\":\"fillOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"TakerTraits\",\"name\":\"takerTraits\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"fillOrderArgs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"hashOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"rawRemainingInvalidatorForOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remainingRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"remainingInvalidatorForOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"simulate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BitInvalidatorUpdated(address,uint256,uint256)\":{\"params\":{\"maker\":\"Maker address\",\"slotIndex\":\"Slot index that was updated\",\"slotValue\":\"New slot value\"}},\"OrderCancelled(bytes32)\":{\"params\":{\"orderHash\":\"Hash of the order\"}},\"OrderFilled(bytes32,uint256)\":{\"params\":{\"orderHash\":\"Hash of the order\",\"remainingAmount\":\"Amount of the maker asset that remains to be filled\"}}},\"kind\":\"dev\",\"methods\":{\"bitInvalidatorForOrder(address,uint256)\":{\"params\":{\"maker\":\"Maker address\",\"slot\":\"Slot number to return bitmask for\"},\"returns\":{\"result\":\"Each bit represents whether corresponding was already invalidated\"}},\"bitsInvalidateForOrder(uint256,uint256)\":{\"params\":{\"additionalMask\":\"Additional bitmask to invalidate orders\",\"makerTraits\":\"Order makerTraits\"}},\"cancelOrder(uint256,bytes32)\":{\"params\":{\"makerTraits\":\"Order makerTraits\",\"orderHash\":\"Hash of the order to cancel\"}},\"cancelOrders(uint256[],bytes32[])\":{\"params\":{\"makerTraits\":\"Orders makerTraits\",\"orderHashes\":\"Hashes of the orders to cancel\"}},\"fillContractOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256)\":{\"details\":\"See tests for examples\",\"params\":{\"amount\":\"Taker amount to fill\",\"order\":\"Order quote to fill\",\"signature\":\"Signature to confirm quote ownership\",\"takerTraits\":\"Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\"},\"returns\":{\"makingAmount\":\"Actual amount transferred from maker to taker\",\"orderHash\":\"Hash of the filled order\",\"takingAmount\":\"Actual amount transferred from taker to maker\"}},\"fillContractOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256,bytes)\":{\"details\":\"See tests for examples\",\"params\":{\"amount\":\"Taker amount to fill\",\"args\":\"Arguments that are used by the taker (target, extension, interaction, permit)\",\"order\":\"Order quote to fill\",\"signature\":\"Signature to confirm quote ownership\",\"takerTraits\":\"Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\"},\"returns\":{\"makingAmount\":\"Actual amount transferred from maker to taker\",\"orderHash\":\"Hash of the filled order\",\"takingAmount\":\"Actual amount transferred from taker to maker\"}},\"fillOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256)\":{\"params\":{\"amount\":\"Taker amount to fill\",\"order\":\"Order quote to fill\",\"r\":\"R component of signature\",\"takerTraits\":\"Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\",\"vs\":\"VS component of signature\"},\"returns\":{\"makingAmount\":\"Actual amount transferred from maker to taker\",\"orderHash\":\"Hash of the filled order\",\"takingAmount\":\"Actual amount transferred from taker to maker\"}},\"fillOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256,bytes)\":{\"params\":{\"amount\":\"Taker amount to fill\",\"args\":\"Arguments that are used by the taker (target, extension, interaction, permit)\",\"order\":\"Order quote to fill\",\"r\":\"R component of signature\",\"takerTraits\":\"Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\",\"vs\":\"VS component of signature\"},\"returns\":{\"makingAmount\":\"Actual amount transferred from maker to taker\",\"orderHash\":\"Hash of the filled order\",\"takingAmount\":\"Actual amount transferred from taker to maker\"}},\"hashOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"order\":\"Order\"},\"returns\":{\"orderHash\":\"Hash of the order\"}},\"rawRemainingInvalidatorForOrder(address,bytes32)\":{\"params\":{\"orderHash\":\"Hash of the order\"},\"returns\":{\"remainingRaw\":\"Inverse of the remaining amount of the order if order was filled at least once, otherwise 0\"}},\"remainingInvalidatorForOrder(address,bytes32)\":{\"params\":{\"orderHash\":\"Hash of the order\"},\"returns\":{\"remaining\":\"Remaining amount of the order\"}},\"simulate(address,bytes)\":{\"details\":\"The function always reverts and returns the simulation results in revert data.\",\"params\":{\"data\":\"Data that will be passed to delegatee\",\"target\":\"Addresses that will be delegated\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BitInvalidatorUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when order with `useBitInvalidator` gets cancelled\"},\"OrderCancelled(bytes32)\":{\"notice\":\"Emitted when order without `useBitInvalidator` gets cancelled\"},\"OrderFilled(bytes32,uint256)\":{\"notice\":\"Emitted when order gets filled\"}},\"kind\":\"user\",\"methods\":{\"bitInvalidatorForOrder(address,uint256)\":{\"notice\":\"Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\"},\"bitsInvalidateForOrder(uint256,uint256)\":{\"notice\":\"Cancels all quotes of the maker (works for bit-invalidating orders only)\"},\"cancelOrder(uint256,bytes32)\":{\"notice\":\"Cancels order's quote\"},\"cancelOrders(uint256[],bytes32[])\":{\"notice\":\"Cancels orders' quotes\"},\"fillContractOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256)\":{\"notice\":\"Same as `fillOrder` but uses contract-based signatures.\"},\"fillContractOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256,bytes)\":{\"notice\":\"Same as `fillContractOrder` but allows to specify arguments that are used by the taker.\"},\"fillOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256)\":{\"notice\":\"Fills order's quote, fully or partially (whichever is possible).\"},\"fillOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256,bytes)\":{\"notice\":\"Same as `fillOrder` but allows to specify arguments that are used by the taker.\"},\"hashOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Returns order hash, hashed with limit order protocol contract EIP712\"},\"rawRemainingInvalidatorForOrder(address,bytes32)\":{\"notice\":\"Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\"},\"remainingInvalidatorForOrder(address,bytes32)\":{\"notice\":\"Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\"},\"simulate(address,bytes)\":{\"notice\":\"Delegates execution to custom implementation. Could be used to validate if `transferFrom` works properly\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"IOrderMixin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"IResolverExample":{"abi":[{"inputs":[],"name":"InvalidLength","type":"error"},{"inputs":[],"name":"LengthMismatch","type":"error"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"bytes[]","name":"arguments","type":"bytes[]"}],"name":"arbitraryCalls","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"dstImmutables","type":"tuple"},{"internalType":"uint256","name":"srcCancellationTimestamp","type":"uint256"}],"name":"deployDst","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"},{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"TakerTraits","name":"takerTraits","type":"uint256"},{"internalType":"bytes","name":"args","type":"bytes"}],"name":"deploySrc","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"arbitraryCalls(address[],bytes[])":"1f3177ba","deployDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)":"318b0562","deploySrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256,bytes)":"ca218276"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"arguments\",\"type\":\"bytes[]\"}],\"name\":\"arbitraryCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"dstImmutables\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"srcCancellationTimestamp\",\"type\":\"uint256\"}],\"name\":\"deployDst\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"TakerTraits\",\"name\":\"takerTraits\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"deploySrc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"kind\":\"dev\",\"methods\":{\"arbitraryCalls(address[],bytes[])\":{\"params\":{\"arguments\":\"The arguments to pass to the contract calls.\",\"targets\":\"The addresses of the contracts to call.\"}},\"deployDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)\":{\"params\":{\"dstImmutables\":\"The immutables of the escrow contract that are used in deployment.\",\"srcCancellationTimestamp\":\"The start of the cancellation period for the source chain.\"}},\"deploySrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256,bytes)\":{\"params\":{\"amount\":\"Taker amount to fill\",\"args\":\"Arguments that are used by the taker (target, extension, interaction, permit).\",\"immutables\":\"The immutables of the escrow contract that are used in deployment.\",\"order\":\"Order quote to fill.\",\"r\":\"R component of signature.\",\"takerTraits\":\"Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\",\"vs\":\"VS component of signature.\"}}},\"title\":\"Interface for the sample implementation of a Resolver contract for cross-chain swap.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"arbitraryCalls(address[],bytes[])\":{\"notice\":\"Allows the owner to make arbitrary calls to other contracts on behalf of this contract.\"},\"deployDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)\":{\"notice\":\"Deploys a new escrow contract for taker on the destination chain.\"},\"deploySrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256,bytes)\":{\"notice\":\"Deploys a new escrow contract for maker on the source chain.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"IResolverExample\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"ImmutablesLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e8e9ea8c4603fce877237d82e6e10d078f32779c77ce5368a51987d6fd00921364736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xE9 0xEA DUP13 CHAINID SUB 0xFC 0xE8 PUSH24 0x237D82E6E10D078F32779C77CE5368A51987D6FD00921364 PUSH20 0x6F6C634300081700330000000000000000000000 ","sourceMap":"40157:922:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220e8e9ea8c4603fce877237d82e6e10d078f32779c77ce5368a51987d6fd00921364736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xE9 0xEA DUP13 CHAINID SUB 0xFC 0xE8 PUSH24 0x237D82E6E10D078F32779C77CE5368A51987D6FD00921364 PUSH20 0x6F6C634300081700330000000000000000000000 ","sourceMap":"40157:922:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for escrow immutables.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"ImmutablesLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"MakerTraitsLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220cb1c1590693bca418e94349ad693e189199eeea896dba9c9bf688fc462f4d30b64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SHR ISZERO SWAP1 PUSH10 0x3BCA418E94349AD693E1 DUP10 NOT SWAP15 0xEE 0xA8 SWAP7 0xDB 0xA9 0xC9 0xBF PUSH9 0x8FC462F4D30B64736F PUSH13 0x63430008170033000000000000 ","sourceMap":"4546:7005:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220cb1c1590693bca418e94349ad693e189199eeea896dba9c9bf688fc462f4d30b64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SHR ISZERO SWAP1 PUSH10 0x3BCA418E94349AD693E1 DUP10 NOT SWAP15 0xEE 0xA8 SWAP7 0xDB 0xA9 0xC9 0xBF PUSH9 0x8FC462F4D30B64736F PUSH13 0x63430008170033000000000000 ","sourceMap":"4546:7005:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The MakerTraits type is a uint256 and different parts of the number are used to encode different traits. High bits are used for flags 255 bit `NO_PARTIAL_FILLS_FLAG`          - if set, the order does not allow partial fills 254 bit `ALLOW_MULTIPLE_FILLS_FLAG`      - if set, the order permits multiple fills 253 bit                                  - unused 252 bit `PRE_INTERACTION_CALL_FLAG`      - if set, the order requires pre-interaction call 251 bit `POST_INTERACTION_CALL_FLAG`     - if set, the order requires post-interaction call 250 bit `NEED_CHECK_EPOCH_MANAGER_FLAG`  - if set, the order requires to check the epoch manager 249 bit `HAS_EXTENSION_FLAG`             - if set, the order has extension(s) 248 bit `USE_PERMIT2_FLAG`               - if set, the order uses permit2 247 bit `UNWRAP_WETH_FLAG`               - if set, the order requires to unwrap WETH Low 200 bits are used for allowed sender, expiration, nonceOrEpoch, and series uint80 last 10 bytes of allowed sender address (0 if any) uint40 expiration timestamp (0 if none) uint40 nonce or epoch uint40 series\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MakerTraitsLib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library to manage and check MakerTraits, which are used to encode the maker's preferences for an order in a single uint256.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"MakerTraitsLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"Resolver":{"abi":[{"inputs":[{"internalType":"contract IEscrowFactory","name":"factory","type":"address"},{"internalType":"contract IOrderMixin","name":"lop","type":"address"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidLength","type":"error"},{"inputs":[],"name":"LengthMismatch","type":"error"},{"inputs":[],"name":"NativeTokenSendingFailure","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"bytes[]","name":"arguments","type":"bytes[]"}],"name":"arbitraryCalls","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IEscrow","name":"escrow","type":"address"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"dstImmutables","type":"tuple"},{"internalType":"uint256","name":"srcCancellationTimestamp","type":"uint256"}],"name":"deployDst","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"},{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"TakerTraits","name":"takerTraits","type":"uint256"},{"internalType":"bytes","name":"args","type":"bytes"}],"name":"deploySrc","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IEscrow","name":"escrow","type":"address"},{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60c0346100f757601f610e8738819003918201601f19168301916001600160401b038311848410176100fc578084926060946040528339810103126100f75780516001600160a01b03919082811681036100f75760208201519183831683036100f757604001518381168091036100f75780156100de57600080546001600160a01b03198116831782556040519516907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360805260a052610d7490816101138239608051818181610314015261085b015260a051816104c10152f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001f575b5050361561001d57600080fd5b005b600091823560e01c80631f3177ba14610a205780632c3c9a371461090957838163318b05621461080157508063715018a6146107645780638da5cb5b1461071357838163a4fc705a146105ee57508063ca218276146101755763f2fde38b146100885750610010565b346101715760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101715781359173ffffffffffffffffffffffffffffffffffffffff9182841680940361016d576100e2610ced565b831561013e575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8480fd5b8280fd5b50907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601916102a083126105ea576101008093126105ea57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefc3601126105ea576102843567ffffffffffffffff928382116105e657366023830112156105e65781810135948486116105e257602494368688860101116105de57610219610ced565b8451918201908111828210176105b157908493929184528135815260209081810197873589528582019460443586526060998a8401606435815260808501608435815260a086019160a435835260c087019960c4358b528d60e08901954260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff60e4351617875273ffffffffffffffffffffffffffffffffffffffff9d51997ffb6bd47e000000000000000000000000000000000000000000000000000000008b52518c8b015251908901525160448801525160648701525160848601525160a4850152865160c48501525160e48401528a61010496858589818c7f0000000000000000000000000000000000000000000000000000000000000000165afa9485156105a757829561056b575b508180809251875af1610355610c8f565b501561054357928895926103b860348c858f98966101a09e839d9b988f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090519889961b1689860152018484013781018883820152036014810184520182610c4e565b8851998a977ff497df750000000000000000000000000000000000000000000000000000000089526101a4948635908a0152610124908135908a0152610144803560448b015261016490813560648c015261018492833560848d0152873560a48d01526101c4988c60c48b359101528c60e46101e43591015261020435908d015261022435908c015261024435908b01527f08000000000000000000000000000000000000000000000000000000000000006102643517908a015288015280518093880152845b8381106105275750505090847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84868585989786010152011681010301927f0000000000000000000000000000000000000000000000000000000000000000165af190811561051e57506104f3578280f35b813d8311610517575b6105068183610c4e565b810103126105145738808280f35b80fd5b503d6104fc565b513d85823e3d90fd5b8082018301518b82018601528b98508a97508c9550820161047f565b8488517f8a0332d5000000000000000000000000000000000000000000000000000000008152fd5b9094508581813d83116105a0575b6105838183610c4e565b8101031261059c5751888116810361059c579381610344565b5080fd5b503d610579565b8a513d84823e3d90fd5b856041847f4e487b7100000000000000000000000000000000000000000000000000000000600052526000fd5b8780fd5b8680fd5b8580fd5b8380fd5b8084843461070f576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261070f57610629610be8565b6101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261070a5773ffffffffffffffffffffffffffffffffffffffff1691823b1561070a57839082519384917f90d3252f0000000000000000000000000000000000000000000000000000000083526024359083015260443560248301526064356044830152608435606483015260a435608483015260c43560a483015260e43560c4830152818361010492833560e48401525af190811561070157506106f15750f35b6106fa90610c0b565b6105145780f35b513d84823e3d90fd5b505050fd5b5050fd5b83823461059c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261059c5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b833461051457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105145761079b610ced565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8084847ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601610120811261070a576101001361070f5761010491610844610ced565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692833b1561016d576101248592845195869384927fdea024e4000000000000000000000000000000000000000000000000000000008452803590840152602435602484015260443560448401526064356064840152608435608484015260a43560a484015260c43560c484015260e43560e484015280359083015234905af190811561070157506106f15750f35b5034610171576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101715782610943610be8565b6101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc36011261059c5773ffffffffffffffffffffffffffffffffffffffff1692833b1561059c5782519384917f233057030000000000000000000000000000000000000000000000000000000083526024359083015260443560248301526064356044830152608435606483015260a435608483015260c43560a483015260e43560c4830152818361010492833560e4840152610124938435908401525af19081156107015750610a14575080f35b610a1d90610c0b565b80f35b5082903461059c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261059c5767ffffffffffffffff9083358281116105ea57610a719036908601610bb2565b92906024956024358381116105e257610a8d9036908301610bb2565b929091610a98610ced565b838703610b8b57875b878110610aac578880f35b8060051b808401359073ffffffffffffffffffffffffffffffffffffffff82168203610b5c5786831015610b60578501357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe186360301811215610b5c578501803590888211610b58576020018136038113610b585791818c809481948d519384928337810182815203925af1610b40610c8f565b5015610b4e57600101610aa1565b86513d8a823e3d90fd5b8b80fd5b8a80fd5b8b8b6032867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85517fff633a38000000000000000000000000000000000000000000000000000000008152fd5b9181601f84011215610be35782359167ffffffffffffffff8311610be3576020808501948460051b010111610be357565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610be357565b67ffffffffffffffff8111610c1f57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c1f57604052565b3d15610ce8573d9067ffffffffffffffff8211610c1f5760405191610cdc60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610c4e565b82523d6000602084013e565b606090565b73ffffffffffffffffffffffffffffffffffffffff600054163303610d0e57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea26469706673582212207241e63cb77e4361215d8a0e68bf77caa1736ba84c44bca4e9fc09ec0a281c6364736f6c63430008170033","opcodes":"PUSH1 0xC0 CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x1F PUSH2 0xE87 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xFC JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xF7 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 DUP2 AND DUP2 SUB PUSH2 0xF7 JUMPI PUSH1 0x20 DUP3 ADD MLOAD SWAP2 DUP4 DUP4 AND DUP4 SUB PUSH2 0xF7 JUMPI PUSH1 0x40 ADD MLOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xF7 JUMPI DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP6 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH2 0xD74 SWAP1 DUP2 PUSH2 0x113 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x314 ADD MSTORE PUSH2 0x85B ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x4C1 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x1F JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F3177BA EQ PUSH2 0xA20 JUMPI DUP1 PUSH4 0x2C3C9A37 EQ PUSH2 0x909 JUMPI DUP4 DUP2 PUSH4 0x318B0562 EQ PUSH2 0x801 JUMPI POP DUP1 PUSH4 0x715018A6 EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x713 JUMPI DUP4 DUP2 PUSH4 0xA4FC705A EQ PUSH2 0x5EE JUMPI POP DUP1 PUSH4 0xCA218276 EQ PUSH2 0x175 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x88 JUMPI POP PUSH2 0x10 JUMP JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x171 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x16D JUMPI PUSH2 0xE2 PUSH2 0xCED JUMP JUMPDEST DUP4 ISZERO PUSH2 0x13E JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SWAP2 PUSH2 0x2A0 DUP4 SLT PUSH2 0x5EA JUMPI PUSH2 0x100 DUP1 SWAP4 SLT PUSH2 0x5EA JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFC CALLDATASIZE ADD SLT PUSH2 0x5EA JUMPI PUSH2 0x284 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x5E6 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x5E6 JUMPI DUP2 DUP2 ADD CALLDATALOAD SWAP5 DUP5 DUP7 GT PUSH2 0x5E2 JUMPI PUSH1 0x24 SWAP5 CALLDATASIZE DUP7 DUP9 DUP7 ADD ADD GT PUSH2 0x5DE JUMPI PUSH2 0x219 PUSH2 0xCED JUMP JUMPDEST DUP5 MLOAD SWAP2 DUP3 ADD SWAP1 DUP2 GT DUP3 DUP3 LT OR PUSH2 0x5B1 JUMPI SWAP1 DUP5 SWAP4 SWAP3 SWAP2 DUP5 MSTORE DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP2 ADD SWAP8 DUP8 CALLDATALOAD DUP10 MSTORE DUP6 DUP3 ADD SWAP5 PUSH1 0x44 CALLDATALOAD DUP7 MSTORE PUSH1 0x60 SWAP10 DUP11 DUP5 ADD PUSH1 0x64 CALLDATALOAD DUP2 MSTORE PUSH1 0x80 DUP6 ADD PUSH1 0x84 CALLDATALOAD DUP2 MSTORE PUSH1 0xA0 DUP7 ADD SWAP2 PUSH1 0xA4 CALLDATALOAD DUP4 MSTORE PUSH1 0xC0 DUP8 ADD SWAP10 PUSH1 0xC4 CALLDATALOAD DUP12 MSTORE DUP14 PUSH1 0xE0 DUP10 ADD SWAP6 TIMESTAMP PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE4 CALLDATALOAD AND OR DUP8 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP14 MLOAD SWAP10 PUSH32 0xFB6BD47E00000000000000000000000000000000000000000000000000000000 DUP12 MSTORE MLOAD DUP13 DUP12 ADD MSTORE MLOAD SWAP1 DUP10 ADD MSTORE MLOAD PUSH1 0x44 DUP9 ADD MSTORE MLOAD PUSH1 0x64 DUP8 ADD MSTORE MLOAD PUSH1 0x84 DUP7 ADD MSTORE MLOAD PUSH1 0xA4 DUP6 ADD MSTORE DUP7 MLOAD PUSH1 0xC4 DUP6 ADD MSTORE MLOAD PUSH1 0xE4 DUP5 ADD MSTORE DUP11 PUSH2 0x104 SWAP7 DUP6 DUP6 DUP10 DUP2 DUP13 PUSH32 0x0 AND GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x5A7 JUMPI DUP3 SWAP6 PUSH2 0x56B JUMPI JUMPDEST POP DUP2 DUP1 DUP1 SWAP3 MLOAD DUP8 GAS CALL PUSH2 0x355 PUSH2 0xC8F JUMP JUMPDEST POP ISZERO PUSH2 0x543 JUMPI SWAP3 DUP9 SWAP6 SWAP3 PUSH2 0x3B8 PUSH1 0x34 DUP13 DUP6 DUP16 SWAP9 SWAP7 PUSH2 0x1A0 SWAP15 DUP4 SWAP14 SWAP12 SWAP9 DUP16 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 SWAP1 MLOAD SWAP9 DUP10 SWAP7 SHL AND DUP10 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD DUP9 DUP4 DUP3 ADD MSTORE SUB PUSH1 0x14 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xC4E JUMP JUMPDEST DUP9 MLOAD SWAP10 DUP11 SWAP8 PUSH32 0xF497DF7500000000000000000000000000000000000000000000000000000000 DUP10 MSTORE PUSH2 0x1A4 SWAP5 DUP7 CALLDATALOAD SWAP1 DUP11 ADD MSTORE PUSH2 0x124 SWAP1 DUP2 CALLDATALOAD SWAP1 DUP11 ADD MSTORE PUSH2 0x144 DUP1 CALLDATALOAD PUSH1 0x44 DUP12 ADD MSTORE PUSH2 0x164 SWAP1 DUP2 CALLDATALOAD PUSH1 0x64 DUP13 ADD MSTORE PUSH2 0x184 SWAP3 DUP4 CALLDATALOAD PUSH1 0x84 DUP14 ADD MSTORE DUP8 CALLDATALOAD PUSH1 0xA4 DUP14 ADD MSTORE PUSH2 0x1C4 SWAP9 DUP13 PUSH1 0xC4 DUP12 CALLDATALOAD SWAP2 ADD MSTORE DUP13 PUSH1 0xE4 PUSH2 0x1E4 CALLDATALOAD SWAP2 ADD MSTORE PUSH2 0x204 CALLDATALOAD SWAP1 DUP14 ADD MSTORE PUSH2 0x224 CALLDATALOAD SWAP1 DUP13 ADD MSTORE PUSH2 0x244 CALLDATALOAD SWAP1 DUP12 ADD MSTORE PUSH32 0x800000000000000000000000000000000000000000000000000000000000000 PUSH2 0x264 CALLDATALOAD OR SWAP1 DUP11 ADD MSTORE DUP9 ADD MSTORE DUP1 MLOAD DUP1 SWAP4 DUP9 ADD MSTORE DUP5 JUMPDEST DUP4 DUP2 LT PUSH2 0x527 JUMPI POP POP POP SWAP1 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 DUP7 DUP6 DUP6 SWAP9 SWAP8 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x51E JUMPI POP PUSH2 0x4F3 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x517 JUMPI JUMPDEST PUSH2 0x506 DUP2 DUP4 PUSH2 0xC4E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x514 JUMPI CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4FC JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP4 ADD MLOAD DUP12 DUP3 ADD DUP7 ADD MSTORE DUP12 SWAP9 POP DUP11 SWAP8 POP DUP13 SWAP6 POP DUP3 ADD PUSH2 0x47F JUMP JUMPDEST DUP5 DUP9 MLOAD PUSH32 0x8A0332D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP5 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x5A0 JUMPI JUMPDEST PUSH2 0x583 DUP2 DUP4 PUSH2 0xC4E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x59C JUMPI MLOAD DUP9 DUP2 AND DUP2 SUB PUSH2 0x59C JUMPI SWAP4 DUP2 PUSH2 0x344 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x579 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x41 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x70F JUMPI PUSH2 0x120 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x70F JUMPI PUSH2 0x629 PUSH2 0xBE8 JUMP JUMPDEST PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC CALLDATASIZE ADD SLT PUSH2 0x70A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x70A JUMPI DUP4 SWAP1 DUP3 MLOAD SWAP4 DUP5 SWAP2 PUSH32 0x90D3252F00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xA4 DUP4 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC4 DUP4 ADD MSTORE DUP2 DUP4 PUSH2 0x104 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x701 JUMPI POP PUSH2 0x6F1 JUMPI POP RETURN JUMPDEST PUSH2 0x6FA SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x514 JUMPI DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP REVERT JUMPDEST POP POP REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x59C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x59C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x514 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x514 JUMPI PUSH2 0x79B PUSH2 0xCED JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD PUSH2 0x120 DUP2 SLT PUSH2 0x70A JUMPI PUSH2 0x100 SGT PUSH2 0x70F JUMPI PUSH2 0x104 SWAP2 PUSH2 0x844 PUSH2 0xCED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x16D JUMPI PUSH2 0x124 DUP6 SWAP3 DUP5 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH32 0xDEA024E400000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP1 CALLDATALOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC4 DUP5 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xE4 DUP5 ADD MSTORE DUP1 CALLDATALOAD SWAP1 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x701 JUMPI POP PUSH2 0x6F1 JUMPI POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x171 JUMPI PUSH2 0x140 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x171 JUMPI DUP3 PUSH2 0x943 PUSH2 0xBE8 JUMP JUMPDEST PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC CALLDATASIZE ADD SLT PUSH2 0x59C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x59C JUMPI DUP3 MLOAD SWAP4 DUP5 SWAP2 PUSH32 0x2330570300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xA4 DUP4 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC4 DUP4 ADD MSTORE DUP2 DUP4 PUSH2 0x104 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE4 DUP5 ADD MSTORE PUSH2 0x124 SWAP4 DUP5 CALLDATALOAD SWAP1 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x701 JUMPI POP PUSH2 0xA14 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xA1D SWAP1 PUSH2 0xC0B JUMP JUMPDEST DUP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x59C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x59C JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x5EA JUMPI PUSH2 0xA71 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x24 SWAP6 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x5E2 JUMPI PUSH2 0xA8D SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0xA98 PUSH2 0xCED JUMP JUMPDEST DUP4 DUP8 SUB PUSH2 0xB8B JUMPI DUP8 JUMPDEST DUP8 DUP2 LT PUSH2 0xAAC JUMPI DUP9 DUP1 RETURN JUMPDEST DUP1 PUSH1 0x5 SHL DUP1 DUP5 ADD CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xB5C JUMPI DUP7 DUP4 LT ISZERO PUSH2 0xB60 JUMPI DUP6 ADD CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP7 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0xB5C JUMPI DUP6 ADD DUP1 CALLDATALOAD SWAP1 DUP9 DUP3 GT PUSH2 0xB58 JUMPI PUSH1 0x20 ADD DUP2 CALLDATASIZE SUB DUP2 SGT PUSH2 0xB58 JUMPI SWAP2 DUP2 DUP13 DUP1 SWAP5 DUP2 SWAP5 DUP14 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP3 DUP2 MSTORE SUB SWAP3 GAS CALL PUSH2 0xB40 PUSH2 0xC8F JUMP JUMPDEST POP ISZERO PUSH2 0xB4E JUMPI PUSH1 0x1 ADD PUSH2 0xAA1 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP12 DUP12 PUSH1 0x32 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP6 MLOAD PUSH32 0xFF633A3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xBE3 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xBE3 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xBE3 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xBE3 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC1F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC1F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xCE8 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xCDC PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0xC4E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0xD0E JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x41E63CB77E4361215D8A0E68BF77CAA1736BA8 0x4C PREVRANDAO 0xBC LOG4 0xE9 0xFC MULMOD 0xEC EXP 0x28 SHR PUSH4 0x64736F6C PUSH4 0x43000817 STOP CALLER ","sourceMap":"43562:2647:0:-:0;;;;;;;;;;;;;-1:-1:-1;;43562:2647:0;;;;-1:-1:-1;;;;;43562:2647:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;43562:2647:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22737:26;;22733:95;;-1:-1:-1;43562:2647:0;;-1:-1:-1;;;;;;43562:2647:0;;;;;;;;;;;24516:40;;-1:-1:-1;24516:40:0;43939:18;;43967:10;;43562:2647;;;;;;43939:18;43562:2647;;;;;;;;;;43967:10;43562:2647;;;;;;22733:95;43562:2647;;-1:-1:-1;;;22786:31:0;;-1:-1:-1;22786:31:0;;;43562:2647;;;22786:31;43562:2647;-1:-1:-1;43562:2647:0;;;;;;-1:-1:-1;43562:2647:0;;;;;-1:-1:-1;43562:2647:0"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_address_dyn_calldata":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_contract_IEscrow":{"entryPoint":3048,"id":null,"parameterSlots":0,"returnSlots":1},"extract_returndata":{"entryPoint":3215,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":3150,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_8820":{"entryPoint":3083,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":3309,"id":909,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"1504":[{"length":32,"start":788},{"length":32,"start":2139}],"1507":[{"length":32,"start":1217}]},"linkReferences":{},"object":"60406080815260048036101561001f575b5050361561001d57600080fd5b005b600091823560e01c80631f3177ba14610a205780632c3c9a371461090957838163318b05621461080157508063715018a6146107645780638da5cb5b1461071357838163a4fc705a146105ee57508063ca218276146101755763f2fde38b146100885750610010565b346101715760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101715781359173ffffffffffffffffffffffffffffffffffffffff9182841680940361016d576100e2610ced565b831561013e575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8480fd5b8280fd5b50907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601916102a083126105ea576101008093126105ea57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefc3601126105ea576102843567ffffffffffffffff928382116105e657366023830112156105e65781810135948486116105e257602494368688860101116105de57610219610ced565b8451918201908111828210176105b157908493929184528135815260209081810197873589528582019460443586526060998a8401606435815260808501608435815260a086019160a435835260c087019960c4358b528d60e08901954260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff60e4351617875273ffffffffffffffffffffffffffffffffffffffff9d51997ffb6bd47e000000000000000000000000000000000000000000000000000000008b52518c8b015251908901525160448801525160648701525160848601525160a4850152865160c48501525160e48401528a61010496858589818c7f0000000000000000000000000000000000000000000000000000000000000000165afa9485156105a757829561056b575b508180809251875af1610355610c8f565b501561054357928895926103b860348c858f98966101a09e839d9b988f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090519889961b1689860152018484013781018883820152036014810184520182610c4e565b8851998a977ff497df750000000000000000000000000000000000000000000000000000000089526101a4948635908a0152610124908135908a0152610144803560448b015261016490813560648c015261018492833560848d0152873560a48d01526101c4988c60c48b359101528c60e46101e43591015261020435908d015261022435908c015261024435908b01527f08000000000000000000000000000000000000000000000000000000000000006102643517908a015288015280518093880152845b8381106105275750505090847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84868585989786010152011681010301927f0000000000000000000000000000000000000000000000000000000000000000165af190811561051e57506104f3578280f35b813d8311610517575b6105068183610c4e565b810103126105145738808280f35b80fd5b503d6104fc565b513d85823e3d90fd5b8082018301518b82018601528b98508a97508c9550820161047f565b8488517f8a0332d5000000000000000000000000000000000000000000000000000000008152fd5b9094508581813d83116105a0575b6105838183610c4e565b8101031261059c5751888116810361059c579381610344565b5080fd5b503d610579565b8a513d84823e3d90fd5b856041847f4e487b7100000000000000000000000000000000000000000000000000000000600052526000fd5b8780fd5b8680fd5b8580fd5b8380fd5b8084843461070f576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261070f57610629610be8565b6101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261070a5773ffffffffffffffffffffffffffffffffffffffff1691823b1561070a57839082519384917f90d3252f0000000000000000000000000000000000000000000000000000000083526024359083015260443560248301526064356044830152608435606483015260a435608483015260c43560a483015260e43560c4830152818361010492833560e48401525af190811561070157506106f15750f35b6106fa90610c0b565b6105145780f35b513d84823e3d90fd5b505050fd5b5050fd5b83823461059c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261059c5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b833461051457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105145761079b610ced565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8084847ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601610120811261070a576101001361070f5761010491610844610ced565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692833b1561016d576101248592845195869384927fdea024e4000000000000000000000000000000000000000000000000000000008452803590840152602435602484015260443560448401526064356064840152608435608484015260a43560a484015260c43560c484015260e43560e484015280359083015234905af190811561070157506106f15750f35b5034610171576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101715782610943610be8565b6101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc36011261059c5773ffffffffffffffffffffffffffffffffffffffff1692833b1561059c5782519384917f233057030000000000000000000000000000000000000000000000000000000083526024359083015260443560248301526064356044830152608435606483015260a435608483015260c43560a483015260e43560c4830152818361010492833560e4840152610124938435908401525af19081156107015750610a14575080f35b610a1d90610c0b565b80f35b5082903461059c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261059c5767ffffffffffffffff9083358281116105ea57610a719036908601610bb2565b92906024956024358381116105e257610a8d9036908301610bb2565b929091610a98610ced565b838703610b8b57875b878110610aac578880f35b8060051b808401359073ffffffffffffffffffffffffffffffffffffffff82168203610b5c5786831015610b60578501357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe186360301811215610b5c578501803590888211610b58576020018136038113610b585791818c809481948d519384928337810182815203925af1610b40610c8f565b5015610b4e57600101610aa1565b86513d8a823e3d90fd5b8b80fd5b8a80fd5b8b8b6032867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85517fff633a38000000000000000000000000000000000000000000000000000000008152fd5b9181601f84011215610be35782359167ffffffffffffffff8311610be3576020808501948460051b010111610be357565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610be357565b67ffffffffffffffff8111610c1f57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c1f57604052565b3d15610ce8573d9067ffffffffffffffff8211610c1f5760405191610cdc60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610c4e565b82523d6000602084013e565b606090565b73ffffffffffffffffffffffffffffffffffffffff600054163303610d0e57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea26469706673582212207241e63cb77e4361215d8a0e68bf77caa1736ba84c44bca4e9fc09ec0a281c6364736f6c63430008170033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x1F JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F3177BA EQ PUSH2 0xA20 JUMPI DUP1 PUSH4 0x2C3C9A37 EQ PUSH2 0x909 JUMPI DUP4 DUP2 PUSH4 0x318B0562 EQ PUSH2 0x801 JUMPI POP DUP1 PUSH4 0x715018A6 EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x713 JUMPI DUP4 DUP2 PUSH4 0xA4FC705A EQ PUSH2 0x5EE JUMPI POP DUP1 PUSH4 0xCA218276 EQ PUSH2 0x175 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x88 JUMPI POP PUSH2 0x10 JUMP JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x171 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x16D JUMPI PUSH2 0xE2 PUSH2 0xCED JUMP JUMPDEST DUP4 ISZERO PUSH2 0x13E JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SWAP2 PUSH2 0x2A0 DUP4 SLT PUSH2 0x5EA JUMPI PUSH2 0x100 DUP1 SWAP4 SLT PUSH2 0x5EA JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFC CALLDATASIZE ADD SLT PUSH2 0x5EA JUMPI PUSH2 0x284 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x5E6 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x5E6 JUMPI DUP2 DUP2 ADD CALLDATALOAD SWAP5 DUP5 DUP7 GT PUSH2 0x5E2 JUMPI PUSH1 0x24 SWAP5 CALLDATASIZE DUP7 DUP9 DUP7 ADD ADD GT PUSH2 0x5DE JUMPI PUSH2 0x219 PUSH2 0xCED JUMP JUMPDEST DUP5 MLOAD SWAP2 DUP3 ADD SWAP1 DUP2 GT DUP3 DUP3 LT OR PUSH2 0x5B1 JUMPI SWAP1 DUP5 SWAP4 SWAP3 SWAP2 DUP5 MSTORE DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP2 ADD SWAP8 DUP8 CALLDATALOAD DUP10 MSTORE DUP6 DUP3 ADD SWAP5 PUSH1 0x44 CALLDATALOAD DUP7 MSTORE PUSH1 0x60 SWAP10 DUP11 DUP5 ADD PUSH1 0x64 CALLDATALOAD DUP2 MSTORE PUSH1 0x80 DUP6 ADD PUSH1 0x84 CALLDATALOAD DUP2 MSTORE PUSH1 0xA0 DUP7 ADD SWAP2 PUSH1 0xA4 CALLDATALOAD DUP4 MSTORE PUSH1 0xC0 DUP8 ADD SWAP10 PUSH1 0xC4 CALLDATALOAD DUP12 MSTORE DUP14 PUSH1 0xE0 DUP10 ADD SWAP6 TIMESTAMP PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE4 CALLDATALOAD AND OR DUP8 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP14 MLOAD SWAP10 PUSH32 0xFB6BD47E00000000000000000000000000000000000000000000000000000000 DUP12 MSTORE MLOAD DUP13 DUP12 ADD MSTORE MLOAD SWAP1 DUP10 ADD MSTORE MLOAD PUSH1 0x44 DUP9 ADD MSTORE MLOAD PUSH1 0x64 DUP8 ADD MSTORE MLOAD PUSH1 0x84 DUP7 ADD MSTORE MLOAD PUSH1 0xA4 DUP6 ADD MSTORE DUP7 MLOAD PUSH1 0xC4 DUP6 ADD MSTORE MLOAD PUSH1 0xE4 DUP5 ADD MSTORE DUP11 PUSH2 0x104 SWAP7 DUP6 DUP6 DUP10 DUP2 DUP13 PUSH32 0x0 AND GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x5A7 JUMPI DUP3 SWAP6 PUSH2 0x56B JUMPI JUMPDEST POP DUP2 DUP1 DUP1 SWAP3 MLOAD DUP8 GAS CALL PUSH2 0x355 PUSH2 0xC8F JUMP JUMPDEST POP ISZERO PUSH2 0x543 JUMPI SWAP3 DUP9 SWAP6 SWAP3 PUSH2 0x3B8 PUSH1 0x34 DUP13 DUP6 DUP16 SWAP9 SWAP7 PUSH2 0x1A0 SWAP15 DUP4 SWAP14 SWAP12 SWAP9 DUP16 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 SWAP1 MLOAD SWAP9 DUP10 SWAP7 SHL AND DUP10 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD DUP9 DUP4 DUP3 ADD MSTORE SUB PUSH1 0x14 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xC4E JUMP JUMPDEST DUP9 MLOAD SWAP10 DUP11 SWAP8 PUSH32 0xF497DF7500000000000000000000000000000000000000000000000000000000 DUP10 MSTORE PUSH2 0x1A4 SWAP5 DUP7 CALLDATALOAD SWAP1 DUP11 ADD MSTORE PUSH2 0x124 SWAP1 DUP2 CALLDATALOAD SWAP1 DUP11 ADD MSTORE PUSH2 0x144 DUP1 CALLDATALOAD PUSH1 0x44 DUP12 ADD MSTORE PUSH2 0x164 SWAP1 DUP2 CALLDATALOAD PUSH1 0x64 DUP13 ADD MSTORE PUSH2 0x184 SWAP3 DUP4 CALLDATALOAD PUSH1 0x84 DUP14 ADD MSTORE DUP8 CALLDATALOAD PUSH1 0xA4 DUP14 ADD MSTORE PUSH2 0x1C4 SWAP9 DUP13 PUSH1 0xC4 DUP12 CALLDATALOAD SWAP2 ADD MSTORE DUP13 PUSH1 0xE4 PUSH2 0x1E4 CALLDATALOAD SWAP2 ADD MSTORE PUSH2 0x204 CALLDATALOAD SWAP1 DUP14 ADD MSTORE PUSH2 0x224 CALLDATALOAD SWAP1 DUP13 ADD MSTORE PUSH2 0x244 CALLDATALOAD SWAP1 DUP12 ADD MSTORE PUSH32 0x800000000000000000000000000000000000000000000000000000000000000 PUSH2 0x264 CALLDATALOAD OR SWAP1 DUP11 ADD MSTORE DUP9 ADD MSTORE DUP1 MLOAD DUP1 SWAP4 DUP9 ADD MSTORE DUP5 JUMPDEST DUP4 DUP2 LT PUSH2 0x527 JUMPI POP POP POP SWAP1 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 DUP7 DUP6 DUP6 SWAP9 SWAP8 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x51E JUMPI POP PUSH2 0x4F3 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x517 JUMPI JUMPDEST PUSH2 0x506 DUP2 DUP4 PUSH2 0xC4E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x514 JUMPI CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4FC JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP4 ADD MLOAD DUP12 DUP3 ADD DUP7 ADD MSTORE DUP12 SWAP9 POP DUP11 SWAP8 POP DUP13 SWAP6 POP DUP3 ADD PUSH2 0x47F JUMP JUMPDEST DUP5 DUP9 MLOAD PUSH32 0x8A0332D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP5 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x5A0 JUMPI JUMPDEST PUSH2 0x583 DUP2 DUP4 PUSH2 0xC4E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x59C JUMPI MLOAD DUP9 DUP2 AND DUP2 SUB PUSH2 0x59C JUMPI SWAP4 DUP2 PUSH2 0x344 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x579 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x41 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x70F JUMPI PUSH2 0x120 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x70F JUMPI PUSH2 0x629 PUSH2 0xBE8 JUMP JUMPDEST PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC CALLDATASIZE ADD SLT PUSH2 0x70A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x70A JUMPI DUP4 SWAP1 DUP3 MLOAD SWAP4 DUP5 SWAP2 PUSH32 0x90D3252F00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xA4 DUP4 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC4 DUP4 ADD MSTORE DUP2 DUP4 PUSH2 0x104 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x701 JUMPI POP PUSH2 0x6F1 JUMPI POP RETURN JUMPDEST PUSH2 0x6FA SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x514 JUMPI DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP REVERT JUMPDEST POP POP REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x59C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x59C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x514 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x514 JUMPI PUSH2 0x79B PUSH2 0xCED JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD PUSH2 0x120 DUP2 SLT PUSH2 0x70A JUMPI PUSH2 0x100 SGT PUSH2 0x70F JUMPI PUSH2 0x104 SWAP2 PUSH2 0x844 PUSH2 0xCED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x16D JUMPI PUSH2 0x124 DUP6 SWAP3 DUP5 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH32 0xDEA024E400000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP1 CALLDATALOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC4 DUP5 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xE4 DUP5 ADD MSTORE DUP1 CALLDATALOAD SWAP1 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x701 JUMPI POP PUSH2 0x6F1 JUMPI POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x171 JUMPI PUSH2 0x140 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x171 JUMPI DUP3 PUSH2 0x943 PUSH2 0xBE8 JUMP JUMPDEST PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC CALLDATASIZE ADD SLT PUSH2 0x59C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x59C JUMPI DUP3 MLOAD SWAP4 DUP5 SWAP2 PUSH32 0x2330570300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xA4 DUP4 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC4 DUP4 ADD MSTORE DUP2 DUP4 PUSH2 0x104 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE4 DUP5 ADD MSTORE PUSH2 0x124 SWAP4 DUP5 CALLDATALOAD SWAP1 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x701 JUMPI POP PUSH2 0xA14 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xA1D SWAP1 PUSH2 0xC0B JUMP JUMPDEST DUP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x59C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x59C JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x5EA JUMPI PUSH2 0xA71 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x24 SWAP6 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x5E2 JUMPI PUSH2 0xA8D SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0xA98 PUSH2 0xCED JUMP JUMPDEST DUP4 DUP8 SUB PUSH2 0xB8B JUMPI DUP8 JUMPDEST DUP8 DUP2 LT PUSH2 0xAAC JUMPI DUP9 DUP1 RETURN JUMPDEST DUP1 PUSH1 0x5 SHL DUP1 DUP5 ADD CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xB5C JUMPI DUP7 DUP4 LT ISZERO PUSH2 0xB60 JUMPI DUP6 ADD CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP7 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0xB5C JUMPI DUP6 ADD DUP1 CALLDATALOAD SWAP1 DUP9 DUP3 GT PUSH2 0xB58 JUMPI PUSH1 0x20 ADD DUP2 CALLDATASIZE SUB DUP2 SGT PUSH2 0xB58 JUMPI SWAP2 DUP2 DUP13 DUP1 SWAP5 DUP2 SWAP5 DUP14 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP3 DUP2 MSTORE SUB SWAP3 GAS CALL PUSH2 0xB40 PUSH2 0xC8F JUMP JUMPDEST POP ISZERO PUSH2 0xB4E JUMPI PUSH1 0x1 ADD PUSH2 0xAA1 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP12 DUP12 PUSH1 0x32 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP6 MLOAD PUSH32 0xFF633A3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xBE3 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xBE3 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xBE3 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xBE3 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC1F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC1F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xCE8 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xCDC PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0xC4E JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0xD0E JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x41E63CB77E4361215D8A0E68BF77CAA1736BA8 0x4C PREVRANDAO 0xBC LOG4 0xE9 0xFC MULMOD 0xEC EXP 0x28 SHR PUSH4 0x64736F6C PUSH4 0x43000817 STOP CALLER ","sourceMap":"43562:2647:0:-:0;;;;;;;;;;;-1:-1:-1;43562:2647:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22964:62;;:::i;:::-;24091:22;;24087:91;;43562:2647;;;;;;;;;;;;24516:40;43562:2647;24516:40;;43562:2647;;24087:91;43562:2647;;;;;24136:31;;;;;;43562:2647;24136:31;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22964:62;;:::i;:::-;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44553:15;;43562:2647;19993:3;20423:27;43562:2647;;20393:57;20392:90;43562:2647;;;;;44598:42;43562:2647;44598:42;;43562:2647;44598:42;;;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44598:8;;;;;;;43562:2647;44598:42;;;;;;;;;;;43562:2647;;;;;;;44669:62;;;;;:::i;:::-;;44745:8;44741:60;;43562:2647;;;;44967:32;43562:2647;;;;;;;;;;;;;;;;;;;;;44967:32;;;43562:2647;;;;;;;;;;;;;44967:32;;;;;;;;;:::i;:::-;43562:2647;;45009:62;;;43562:2647;45009:62;;43562:2647;;;;45009:62;;;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44924:8;43562:2647;;44882:51;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;44967:32;43562:2647;;;;;;;;;;;;;;;45009:62;;:4;;43562:2647;45009:62;;;;;;;;;;43562:2647;;;45009:62;;;;;;;;;;;;:::i;:::-;;;43562:2647;;;;45009:62;;43562:2647;;;;;;45009:62;;;;;;43562:2647;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43562:2647:0;;-1:-1:-1;43562:2647:0;;-1:-1:-1;43562:2647:0;;;;44741:60;43562:2647;;;44762:39;;;;44598:42;;;;;;;;;;;;;;;;;:::i;:::-;;;43562:2647;;;;;;;;;;;;44598:42;;;;43562:2647;;;;44598:42;;;;;;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;45638:25;;;;;;43562:2647;;;;45638:25;;;43562:2647;45638:25;;43562:2647;;45638:25;;;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45638:25;;;;;;;;;;43562:2647;;45638:25;;;;:::i;:::-;43562:2647;;45638:25;43562:2647;45638:25;43562:2647;;;;;;;;45638:25;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22964:62;;:::i;:::-;43562:2647;;;;;;;;;;24516:40;;;;43562:2647;;;;;;;;;;;;;;;-1:-1:-1;43562:2647:0;;;22964:62;;;:::i;:::-;43562:2647;45286:8;43562:2647;45286:83;;;;;;43562:2647;;;;;45286:83;;;;;43562:2647;45286:83;;43562:2647;;45286:83;;;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45318:9;45286:83;;;;;;;;;;;43562:2647;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;45495:35;;;;;;43562:2647;;45495:35;;;43562:2647;45495:35;;43562:2647;;45495:35;;;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45495:35;;;;;;;;;;43562:2647;;;45495:35;;;;:::i;:::-;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;22964:62;;;;;:::i;:::-;45900:34;;;45896:63;;45974:13;45989:10;;;;;;43562:2647;;;46001:3;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46101:29;;;;;;:::i;:::-;;46148:8;46144:46;;43562:2647;;45974:13;;46144:46;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;45896:63;43562:2647;;45943:16;;;;43562:2647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;43562:2647:0;;;;:::o;:::-;;;:::o;23260:162::-;43562:2647;23174:6;43562:2647;;2873:10;23319:23;23315:101;;23260:162::o;23315:101::-;43562:2647;;;23365:40;;;2873:10;23365:40;;;43562:2647;23365:40"},"methodIdentifiers":{"arbitraryCalls(address[],bytes[])":"1f3177ba","cancel(address,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"a4fc705a","deployDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)":"318b0562","deploySrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256,bytes)":"ca218276","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","withdraw(address,bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"2c3c9a37"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEscrowFactory\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"contract IOrderMixin\",\"name\":\"lop\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"arguments\",\"type\":\"bytes[]\"}],\"name\":\"arbitraryCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEscrow\",\"name\":\"escrow\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"dstImmutables\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"srcCancellationTimestamp\",\"type\":\"uint256\"}],\"name\":\"deployDst\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"TakerTraits\",\"name\":\"takerTraits\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"deploySrc\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEscrow\",\"name\":\"escrow\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"details\":\"It is important when deploying an escrow on the source chain to send the safety deposit and deploy the escrow in the same transaction, since the address of the escrow depends on the block.timestamp. You can find sample code for this in the {ResolverExample-deploySrc}.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Sample implementation of a Resolver contract for cross-chain swap.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"arbitraryCalls(address[],bytes[])\":{\"notice\":\"See {IResolverExample-arbitraryCalls}.\"},\"deployDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)\":{\"notice\":\"See {IResolverExample-deployDst}.\"},\"deploySrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256,bytes)\":{\"notice\":\"See {IResolverExample-deploySrc}.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"Resolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"RevertReasonForwarder":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ef9bfdd8457b03c2eef1583a2cc4d70b3b29d2b54b6b9461f31ec0d2d7a8d6fd64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF SWAP12 REVERT 0xD8 GASLIMIT PUSH28 0x3C2EEF1583A2CC4D70B3B29D2B54B6B9461F31EC0D2D7A8D6FD6473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"11796:1192:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ef9bfdd8457b03c2eef1583a2cc4d70b3b29d2b54b6b9461f31ec0d2d7a8d6fd64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF SWAP12 REVERT 0xD8 GASLIMIT PUSH28 0x3C2EEF1583A2CC4D70B3B29D2B54B6B9461F31EC0D2D7A8D6FD6473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"11796:1192:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"RevertReasonForwarder\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides utilities for forwarding and retrieving revert reasons from failed external calls.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"RevertReasonForwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"TakerTraitsLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c2934b8211c604ba1eb7ebc4f550f95f84b4a936051dd6b2ba69f7c28a66632e64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP4 0x4B DUP3 GT 0xC6 DIV 0xBA 0x1E 0xB7 0xEB 0xC4 CREATE2 POP 0xF9 PUSH0 DUP5 0xB4 0xA9 CALLDATASIZE SDIV SAR 0xD6 0xB2 0xBA PUSH10 0xF7C28A66632E64736F6C PUSH4 0x43000817 STOP CALLER ","sourceMap":"14331:4048:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c2934b8211c604ba1eb7ebc4f550f95f84b4a936051dd6b2ba69f7c28a66632e64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP4 0x4B DUP3 GT 0xC6 DIV 0xBA 0x1E 0xB7 0xEB 0xC4 CREATE2 POP 0xF9 PUSH0 DUP5 0xB4 0xA9 CALLDATASIZE SDIV SAR 0xD6 0xB2 0xBA PUSH10 0xF7C28A66632E64736F6C PUSH4 0x43000817 STOP CALLER ","sourceMap":"14331:4048:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The TakerTraits are structured as follows: High bits are used for flags 255 bit `_MAKER_AMOUNT_FLAG`           - If set, the taking amount is calculated based on making amount, otherwise making amount is calculated based on taking amount. 254 bit `_UNWRAP_WETH_FLAG`            - If set, the WETH will be unwrapped into ETH before sending to taker. 253 bit `_SKIP_ORDER_PERMIT_FLAG`      - If set, the order skips maker's permit execution. 252 bit `_USE_PERMIT2_FLAG`            - If set, the order uses the permit2 function for authorization. 251 bit `_ARGS_HAS_TARGET`             - If set, then first 20 bytes of args are treated as target address for maker\\u2019s funds transfer. 224-247 bits `ARGS_EXTENSION_LENGTH`   - The length of the extension calldata in the args. 200-223 bits `ARGS_INTERACTION_LENGTH` - The length of the interaction calldata in the args. 0-184 bits                             - The threshold amount (the maximum amount a taker agrees to give in exchange for a making amount).\",\"kind\":\"dev\",\"methods\":{},\"title\":\"TakerTraitsLib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library to manage and check TakerTraits, which are used to encode the taker's preferences for an order in a single uint256.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"TakerTraitsLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"},"TimelocksLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220bcab6f995c6289013c5ef193e412a14aadce6997928bc9127f28773c4e497a7164736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xAB PUSH16 0x995C6289013C5EF193E412A14AADCE69 SWAP8 SWAP3 DUP12 0xC9 SLT PUSH32 0x28773C4E497A7164736F6C634300081700330000000000000000000000000000 ","sourceMap":"19594:1882:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220bcab6f995c6289013c5ef193e412a14aadce6997928bc9127f28773c4e497a7164736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xAB PUSH16 0x995C6289013C5EF193E412A14AADCE69 SWAP8 SWAP3 DUP12 0xC9 SLT PUSH32 0x28773C4E497A7164736F6C634300081700330000000000000000000000000000 ","sourceMap":"19594:1882:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Timelocks library for compact storage of timelocks in a uint256.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Resolver.sol\":\"TimelocksLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Resolver.sol\":{\"keccak256\":\"0xc18c4b40ef61ac218e02d93f2d6b0aac4129b6d953a3120b376f82a7d1bc88a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6eb7ba0e38dea650dbe82d9150a7edcb2265e1651a8e4abf27c356fb6dba55b\",\"dweb:/ipfs/QmQP6jCwkm8kVKsCncvKvpAK8AvZK9qePNKcG6HEHp6ucq\"]}},\"version\":1}"}}}}}