{"id":"daca004e52a3ad62f5b25b1aaa11b39d","_format":"hh-sol-build-info-1","solcVersion":"0.8.23","solcLongVersion":"0.8.23+commit.f704f362","input":{"language":"Solidity","sources":{"contracts/escrow/EscrowFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity =0.8.23 ^0.8.0 ^0.8.20;\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/libraries/AddressLib.sol\n\ntype Address is uint256;\n\n/**\n* @notice AddressLib\n* @notice Library for working with addresses encoded as uint256 values, which can include flags in the highest bits.\n*/\nlibrary AddressLib {\n    uint256 private constant _LOW_160_BIT_MASK = (1 << 160) - 1;\n\n    /**\n    * @notice Returns the address representation of a uint256.\n    * @param a The uint256 value to convert to an address.\n    * @return The address representation of the provided uint256 value.\n    */\n    function get(Address a) internal pure returns (address) {\n        return address(uint160(Address.unwrap(a) & _LOW_160_BIT_MASK));\n    }\n\n    /**\n    * @notice Checks if a given flag is set for the provided address.\n    * @param a The address to check for the flag.\n    * @param flag The flag to check for in the provided address.\n    * @return True if the provided flag is set in the address, false otherwise.\n    */\n    function getFlag(Address a, uint256 flag) internal pure returns (bool) {\n        return (Address.unwrap(a) & flag) != 0;\n    }\n\n    /**\n    * @notice Returns a uint32 value stored at a specific bit offset in the provided address.\n    * @param a The address containing the uint32 value.\n    * @param offset The bit offset at which the uint32 value is stored.\n    * @return The uint32 value stored in the address at the specified bit offset.\n    */\n    function getUint32(Address a, uint256 offset) internal pure returns (uint32) {\n        return uint32(Address.unwrap(a) >> offset);\n    }\n\n    /**\n    * @notice Returns a uint64 value stored at a specific bit offset in the provided address.\n    * @param a The address containing the uint64 value.\n    * @param offset The bit offset at which the uint64 value is stored.\n    * @return The uint64 value stored in the address at the specified bit offset.\n    */\n    function getUint64(Address a, uint256 offset) internal pure returns (uint64) {\n        return uint64(Address.unwrap(a) >> offset);\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/utils/Context.sol\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/utils/Errors.sol\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n}\n\n// contracts/lib/cross-chain-swap/contracts/EscrowFactoryContext.sol\n\nuint256 constant SRC_IMMUTABLES_LENGTH = 160;\n\n// contracts/lib/cross-chain-swap/lib/limit-order-settlement/contracts/extensions/ExtensionLib.sol\n\n/**\n * @title Extension Library\n * @notice Library to retrieve data from the bitmap.\n */\nlibrary ExtensionLib_0 {\n    bytes1 private constant _RESOLVER_FEE_FLAG = 0x01;\n    bytes1 private constant _INTEGRATOR_FEE_FLAG = 0x02;\n    bytes1 private constant _CUSTOM_RECEIVER_FLAG = 0x04;\n    uint256 private constant _WHITELIST_SHIFT = 3;\n\n    /**\n     * @notice Checks if the resolver fee is enabled\n     * @param extraData Data to be processed in the extension\n     * @return True if the resolver fee is enabled\n     */\n    function resolverFeeEnabled(bytes calldata extraData) internal pure returns (bool) {\n        return extraData[extraData.length - 1] & _RESOLVER_FEE_FLAG == _RESOLVER_FEE_FLAG;\n    }\n\n    /**\n     * @notice Checks if the integrator fee is enabled\n     * @param extraData Data to be processed in the extension\n     * @return True if the integrator fee is enabled\n     */\n    function integratorFeeEnabled(bytes calldata extraData) internal pure returns (bool) {\n        return extraData[extraData.length - 1] & _INTEGRATOR_FEE_FLAG == _INTEGRATOR_FEE_FLAG;\n    }\n\n    /**\n     * @notice Checks if the custom receiver is enabled\n     * @param extraData Data to be processed in the extension\n     * @return True if the custom receiver is specified\n     */\n    function hasCustomReceiver(bytes calldata extraData) internal pure returns (bool) {\n        return extraData[extraData.length - 1] & _CUSTOM_RECEIVER_FLAG == _CUSTOM_RECEIVER_FLAG;\n    }\n\n    /**\n     * @notice Gets the number of resolvers in the whitelist\n     * @param extraData Data to be processed in the extension\n     * @return The number of resolvers in the whitelist\n     */\n    function resolversCount(bytes calldata extraData) internal pure returns (uint256) {\n        return uint8(extraData[extraData.length - 1]) >> _WHITELIST_SHIFT;\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol\n\n/**\n * @dev Library of standard hash functions.\n */\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32) {\n        return a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientKeccak256(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/interfaces/IDaiLikePermit.sol\n\n/**\n * @title IDaiLikePermit\n * @dev Interface for Dai-like permit function allowing token spending via signatures.\n */\ninterface IDaiLikePermit {\n    /**\n     * @notice Approves spending of tokens via off-chain signatures.\n     * @param holder Token holder's address.\n     * @param spender Spender's address.\n     * @param nonce Current nonce of the holder.\n     * @param expiry Time when the permit expires.\n     * @param allowed True to allow, false to disallow spending.\n     * @param v, r, s Signature components.\n     */\n    function permit(\n        address holder,\n        address spender,\n        uint256 nonce,\n        uint256 expiry,\n        bool allowed,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/interfaces/IERC20MetadataUppercase.sol\n\n/**\n * @title IERC20MetadataUppercase\n * @dev Interface for ERC20 token metadata with uppercase naming convention.\n */\ninterface IERC20MetadataUppercase {\n    /**\n     * @notice Gets the token name.\n     * @return Token name.\n     */\n    function NAME() external view returns (string memory); // solhint-disable-line func-name-mixedcase\n\n    /**\n     * @notice Gets the token symbol.\n     * @return Token symbol.\n     */\n    function SYMBOL() external view returns (string memory); // solhint-disable-line func-name-mixedcase\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/interfaces/IERC7597Permit.sol\n\n/**\n * @title IERC7597Permit\n * @dev A new extension for ERC-2612 permit, which has already been added to USDC v2.2.\n */\ninterface IERC7597Permit {\n    /**\n     * @notice Update allowance with a signed permit.\n     * @dev Signature bytes can be used for both EOA wallets and contract wallets.\n     * @param owner Token owner's address (Authorizer).\n     * @param spender Spender's address.\n     * @param value Amount of allowance.\n     * @param deadline The time at which the signature expires (unixtime).\n     * @param signature Unstructured bytes signature signed by an EOA wallet or a contract wallet.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        bytes memory signature\n    ) external;\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-settlement/contracts/interfaces/IFeeBank.sol\n\ninterface IFeeBank {\n    /**\n     * @notice Returns the available credit for a given account in the FeeBank contract.\n     * @param account The address of the account for which the available credit is being queried.\n     * @return availableCredit The available credit of the queried account.\n     */\n    function availableCredit(address account) external view returns (uint256 availableCredit);\n\n    /**\n     * @notice Increases the caller's available credit by the specified amount.\n     * @param amount The amount of credit to be added to the caller's account.\n     * @return totalAvailableCredit The updated available credit of the caller's account.\n     */\n    function deposit(uint256 amount) external returns (uint256 totalAvailableCredit);\n\n    /**\n     * @notice Increases the specified account's available credit by the specified amount.\n     * @param account The address of the account for which the available credit is being increased.\n     * @param amount The amount of credit to be added to the account.\n     * @return totalAvailableCredit The updated available credit of the specified account.\n     */\n    function depositFor(address account, uint256 amount) external returns (uint256 totalAvailableCredit);\n\n    /**\n     * @notice Increases the caller's available credit by a specified amount with permit.\n     * @param amount The amount of credit to be added to the caller's account.\n     * @param permit The permit data authorizing the transaction.\n     * @return totalAvailableCredit The updated available credit of the caller's account.\n     */\n    function depositWithPermit(uint256 amount, bytes calldata permit) external returns (uint256 totalAvailableCredit);\n\n    /**\n     * @notice Increases the specified account's available credit by a specified amount with permit.\n     * @param account The address of the account for which the available credit is being increased.\n     * @param amount The amount of credit to be added to the account.\n     * @param permit The permit data authorizing the transaction.\n     * @return totalAvailableCredit The updated available credit of the specified account.\n     */\n    function depositForWithPermit(address account, uint256 amount, bytes calldata permit) external returns (uint256 totalAvailableCredit);\n\n    /**\n     * @notice Withdraws a specified amount of credit from the caller's account.\n     * @param amount The amount of credit to be withdrawn from the caller's account.\n     * @return totalAvailableCredit The updated available credit of the caller's account.\n     */\n    function withdraw(uint256 amount) external returns (uint256 totalAvailableCredit);\n\n    /**\n     * @notice Withdraws a specified amount of credit to the specified account.\n     * @param account The address of the account to which the credit is being withdrawn.\n     * @param amount The amount of credit to be withdrawn.\n     * @return totalAvailableCredit The updated available credit of the caller's account.\n     */\n    function withdrawTo(address account, uint256 amount) external returns (uint256 totalAvailableCredit);\n}\n\n// contracts/lib/cross-chain-swap/contracts/interfaces/IMerkleStorageInvalidator.sol\n\n/**\n * @title Merkle Storage Invalidator interface\n * @notice Interface to invalidate hashed secrets from an order that supports multiple fills.\n * @custom:security-contact security@1inch.io\n */\ninterface IMerkleStorageInvalidator {\n    struct ValidationData {\n        uint256 index;\n        bytes32 leaf;\n    }\n\n    struct TakerData {\n        bytes32[] proof;\n        uint256 idx;\n        bytes32 secretHash;\n    }\n\n    error AccessDenied();\n    error InvalidProof();\n\n    /**\n     * @notice Returns the index of the last validated hashed secret and the hashed secret itself.\n     * @param key Hash of concatenated order hash and 30 bytes of root hash.\n     * @return index Index of the last validated hashed secret.\n     * @return secretHash Last validated hashed secret.\n     */\n    function lastValidated(bytes32 key) external view returns (uint256 index, bytes32 secretHash);\n}\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/interfaces/IPermit2.sol\n\n/**\n * @title IPermit2\n * @dev Interface for a flexible permit system that extends ERC20 tokens to support permits in tokens lacking native permit functionality.\n */\ninterface IPermit2 {\n    /**\n     * @dev Struct for holding permit details.\n     * @param token ERC20 token address for which the permit is issued.\n     * @param amount The maximum amount allowed to spend.\n     * @param expiration Timestamp until which the permit is valid.\n     * @param nonce An incrementing value for each signature, unique per owner, token, and spender.\n     */\n    struct PermitDetails {\n        address token;\n        uint160 amount;\n        uint48 expiration;\n        uint48 nonce;\n    }\n\n    /**\n     * @dev Struct for a single token allowance permit.\n     * @param details Permit details including token, amount, expiration, and nonce.\n     * @param spender Address authorized to spend the tokens.\n     * @param sigDeadline Deadline for the permit signature, ensuring timeliness of the permit.\n     */\n    struct PermitSingle {\n        PermitDetails details;\n        address spender;\n        uint256 sigDeadline;\n    }\n\n    /**\n     * @dev Struct for packed allowance data to optimize storage.\n     * @param amount Amount allowed.\n     * @param expiration Permission expiry timestamp.\n     * @param nonce Unique incrementing value for tracking allowances.\n     */\n    struct PackedAllowance {\n        uint160 amount;\n        uint48 expiration;\n        uint48 nonce;\n    }\n\n    /**\n     * @notice Executes a token transfer from one address to another.\n     * @param user The token owner's address.\n     * @param spender The address authorized to spend the tokens.\n     * @param amount The amount of tokens to transfer.\n     * @param token The address of the token being transferred.\n     */\n    function transferFrom(address user, address spender, uint160 amount, address token) external;\n\n    /**\n     * @notice Issues a permit for spending tokens via a signed authorization.\n     * @param owner The token owner's address.\n     * @param permitSingle Struct containing the permit details.\n     * @param signature The signature proving the owner authorized the permit.\n     */\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\n\n    /**\n     * @notice Retrieves the allowance details between a token owner and spender.\n     * @param user The token owner's address.\n     * @param token The token address.\n     * @param spender The spender's address.\n     * @return The packed allowance details.\n     */\n    function allowance(address user, address token, address spender) external view returns (PackedAllowance memory);\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/libraries/MakerTraitsLib.sol\n\ntype MakerTraits is uint256;\n\n/**\n * @title MakerTraitsLib\n * @notice A library to manage and check MakerTraits, which are used to encode the maker's preferences for an order in a single uint256.\n * @dev\n * The MakerTraits type is a uint256 and different parts of the number are used to encode different traits.\n * High bits are used for flags\n * 255 bit `NO_PARTIAL_FILLS_FLAG`          - if set, the order does not allow partial fills\n * 254 bit `ALLOW_MULTIPLE_FILLS_FLAG`      - if set, the order permits multiple fills\n * 253 bit                                  - unused\n * 252 bit `PRE_INTERACTION_CALL_FLAG`      - if set, the order requires pre-interaction call\n * 251 bit `POST_INTERACTION_CALL_FLAG`     - if set, the order requires post-interaction call\n * 250 bit `NEED_CHECK_EPOCH_MANAGER_FLAG`  - if set, the order requires to check the epoch manager\n * 249 bit `HAS_EXTENSION_FLAG`             - if set, the order has extension(s)\n * 248 bit `USE_PERMIT2_FLAG`               - if set, the order uses permit2\n * 247 bit `UNWRAP_WETH_FLAG`               - if set, the order requires to unwrap WETH\n\n * Low 200 bits are used for allowed sender, expiration, nonceOrEpoch, and series\n * uint80 last 10 bytes of allowed sender address (0 if any)\n * uint40 expiration timestamp (0 if none)\n * uint40 nonce or epoch\n * uint40 series\n */\nlibrary MakerTraitsLib {\n    // Low 200 bits are used for allowed sender, expiration, nonceOrEpoch, and series\n    uint256 private constant _ALLOWED_SENDER_MASK = type(uint80).max;\n    uint256 private constant _EXPIRATION_OFFSET = 80;\n    uint256 private constant _EXPIRATION_MASK = type(uint40).max;\n    uint256 private constant _NONCE_OR_EPOCH_OFFSET = 120;\n    uint256 private constant _NONCE_OR_EPOCH_MASK = type(uint40).max;\n    uint256 private constant _SERIES_OFFSET = 160;\n    uint256 private constant _SERIES_MASK = type(uint40).max;\n\n    uint256 private constant _NO_PARTIAL_FILLS_FLAG = 1 << 255;\n    uint256 private constant _ALLOW_MULTIPLE_FILLS_FLAG = 1 << 254;\n    uint256 private constant _PRE_INTERACTION_CALL_FLAG = 1 << 252;\n    uint256 private constant _POST_INTERACTION_CALL_FLAG = 1 << 251;\n    uint256 private constant _NEED_CHECK_EPOCH_MANAGER_FLAG = 1 << 250;\n    uint256 private constant _HAS_EXTENSION_FLAG = 1 << 249;\n    uint256 private constant _USE_PERMIT2_FLAG = 1 << 248;\n    uint256 private constant _UNWRAP_WETH_FLAG = 1 << 247;\n\n    /**\n     * @notice Checks if the order has the extension flag set.\n     * @dev If the `HAS_EXTENSION_FLAG` is set in the makerTraits, then the protocol expects that the order has extension(s).\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the flag is set.\n     */\n    function hasExtension(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _HAS_EXTENSION_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the maker allows a specific taker to fill the order.\n     * @param makerTraits The traits of the maker.\n     * @param sender The address of the taker to be checked.\n     * @return result A boolean indicating whether the taker is allowed.\n     */\n    function isAllowedSender(MakerTraits makerTraits, address sender) internal pure returns (bool) {\n        uint160 allowedSender = uint160(MakerTraits.unwrap(makerTraits) & _ALLOWED_SENDER_MASK);\n        return allowedSender == 0 || allowedSender == uint160(sender) & _ALLOWED_SENDER_MASK;\n    }\n\n    /**\n     * @notice Checks if the order has expired.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the order has expired.\n     */\n    function isExpired(MakerTraits makerTraits) internal view returns (bool) {\n        uint256 expiration = (MakerTraits.unwrap(makerTraits) >> _EXPIRATION_OFFSET) & _EXPIRATION_MASK;\n        return expiration != 0 && expiration < block.timestamp;  // solhint-disable-line not-rely-on-time\n    }\n\n    /**\n     * @notice Returns the nonce or epoch of the order.\n     * @param makerTraits The traits of the maker.\n     * @return result The nonce or epoch of the order.\n     */\n    function nonceOrEpoch(MakerTraits makerTraits) internal pure returns (uint256) {\n        return (MakerTraits.unwrap(makerTraits) >> _NONCE_OR_EPOCH_OFFSET) & _NONCE_OR_EPOCH_MASK;\n    }\n\n    /**\n     * @notice Returns the series of the order.\n     * @param makerTraits The traits of the maker.\n     * @return result The series of the order.\n     */\n    function series(MakerTraits makerTraits) internal pure returns (uint256) {\n        return (MakerTraits.unwrap(makerTraits) >> _SERIES_OFFSET) & _SERIES_MASK;\n    }\n\n    /**\n      * @notice Determines if the order allows partial fills.\n      * @dev If the _NO_PARTIAL_FILLS_FLAG is not set in the makerTraits, then the order allows partial fills.\n      * @param makerTraits The traits of the maker, determining their preferences for the order.\n      * @return result A boolean indicating whether the maker allows partial fills.\n      */\n    function allowPartialFills(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _NO_PARTIAL_FILLS_FLAG) == 0;\n    }\n\n    /**\n     * @notice Checks if the maker needs pre-interaction call.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the maker needs a pre-interaction call.\n     */\n    function needPreInteractionCall(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _PRE_INTERACTION_CALL_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the maker needs post-interaction call.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the maker needs a post-interaction call.\n     */\n    function needPostInteractionCall(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _POST_INTERACTION_CALL_FLAG) != 0;\n    }\n\n    /**\n      * @notice Determines if the order allows multiple fills.\n      * @dev If the _ALLOW_MULTIPLE_FILLS_FLAG is set in the makerTraits, then the maker allows multiple fills.\n      * @param makerTraits The traits of the maker, determining their preferences for the order.\n      * @return result A boolean indicating whether the maker allows multiple fills.\n      */\n    function allowMultipleFills(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _ALLOW_MULTIPLE_FILLS_FLAG) != 0;\n    }\n\n    /**\n      * @notice Determines if an order should use the bit invalidator or remaining amount validator.\n      * @dev The bit invalidator can be used if the order does not allow partial or multiple fills.\n      * @param makerTraits The traits of the maker, determining their preferences for the order.\n      * @return result A boolean indicating whether the bit invalidator should be used.\n      * True if the order requires the use of the bit invalidator.\n      */\n    function useBitInvalidator(MakerTraits makerTraits) internal pure returns (bool) {\n        return !allowPartialFills(makerTraits) || !allowMultipleFills(makerTraits);\n    }\n\n    /**\n     * @notice Checks if the maker needs to check the epoch.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the maker needs to check the epoch manager.\n     */\n    function needCheckEpochManager(MakerTraits makerTraits) internal pure returns (bool) {\n        return (MakerTraits.unwrap(makerTraits) & _NEED_CHECK_EPOCH_MANAGER_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the maker uses permit2.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the maker uses permit2.\n     */\n    function usePermit2(MakerTraits makerTraits) internal pure returns (bool) {\n        return MakerTraits.unwrap(makerTraits) & _USE_PERMIT2_FLAG != 0;\n    }\n\n    /**\n     * @notice Checks if the maker needs to unwraps WETH.\n     * @param makerTraits The traits of the maker.\n     * @return result A boolean indicating whether the maker needs to unwrap WETH.\n     */\n    function unwrapWeth(MakerTraits makerTraits) internal pure returns (bool) {\n        return MakerTraits.unwrap(makerTraits) & _UNWRAP_WETH_FLAG != 0;\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/libraries/OffsetsLib.sol\n\ntype Offsets is uint256;\n\n/// @title OffsetsLib\n/// @dev A library for retrieving values by offsets from a concatenated calldata.\nlibrary OffsetsLib {\n\n    /// @dev Error to be thrown when the offset is out of bounds.\n    error OffsetOutOfBounds();\n\n    /**\n     * @notice Retrieves the field value calldata corresponding to the provided field index from the concatenated calldata.\n     * @dev \n     * The function performs the following steps:\n     * 1. Retrieve the start and end of the segment corresponding to the provided index from the offsets array.\n     * 2. Get the value from segment using offset and length calculated based on the start and end of the segment.\n     * 3. Throw `OffsetOutOfBounds` error if the length of the segment is greater than the length of the concatenated data.\n     * @param offsets The offsets encoding the start and end of each segment within the concatenated calldata.\n     * @param concat The concatenated calldata.\n     * @param index The index of the segment to retrieve. The field index 0 corresponds to the lowest bytes of the offsets array.\n     * @return result The calldata from a segment of the concatenated calldata corresponding to the provided index.\n     */\n    function get(Offsets offsets, bytes calldata concat, uint256 index) internal pure returns(bytes calldata result) {\n        bytes4 exception = OffsetOutOfBounds.selector;\n        assembly (\"memory-safe\") {  // solhint-disable-line no-inline-assembly\n            let bitShift := shl(5, index)                                   // bitShift = index * 32\n            let begin := and(0xffffffff, shr(bitShift, shl(32, offsets)))   // begin = offsets[ bitShift : bitShift + 32 ]\n            let end := and(0xffffffff, shr(bitShift, offsets))              // end   = offsets[ bitShift + 32 : bitShift + 64 ]\n            result.offset := add(concat.offset, begin)\n            result.length := sub(end, begin)\n            if gt(end, concat.length) {\n                mstore(0, exception)\n                revert(0, 4)\n            }\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/utils/Panic.sol\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/libraries/ProxyHashLib.sol\n\n/**\n * @title Library to compute the hash of the proxy bytecode.\n * @custom:security-contact security@1inch.io\n */\nlibrary ProxyHashLib {\n    /**\n     * @notice Returns the hash of the proxy bytecode concatenated with the implementation address.\n     * @param implementation The address of the contract to clone.\n     * @return bytecodeHash The hash of the resulting bytecode.\n     */\n    function computeProxyBytecodeHash(address implementation) internal pure returns (bytes32 bytecodeHash) {\n        assembly (\"memory-safe\") {\n            // Stores the bytecode after address\n            mstore(0x20, 0x5af43d82803e903d91602b57fd5bf3)\n            // implementation address\n            mstore(0x11, implementation)\n            // Packs the first 3 bytes of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0x88, implementation), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            bytecodeHash := keccak256(0x09, 0x37)\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/libraries/RevertReasonForwarder.sol\n\n/**\n * @title RevertReasonForwarder\n * @notice Provides utilities for forwarding and retrieving revert reasons from failed external calls.\n */\nlibrary RevertReasonForwarder {\n    /**\n     * @dev Forwards the revert reason from the latest external call.\n     * This method allows propagating the revert reason of a failed external call to the caller.\n     */\n    function reRevert() internal pure {\n        // bubble up revert reason from latest external call\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n            returndatacopy(ptr, 0, returndatasize())\n            revert(ptr, returndatasize())\n        }\n    }\n\n    /**\n     * @dev Retrieves the revert reason from the latest external call.\n     * This method enables capturing the revert reason of a failed external call for inspection or processing.\n     * @return reason The latest external call revert reason.\n     */\n    function reReason() internal pure returns (bytes memory reason) {\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            reason := mload(0x40)\n            let length := returndatasize()\n            mstore(reason, length)\n            returndatacopy(add(reason, 0x20), 0, length)\n            mstore(0x40, add(reason, add(0x20, length)))\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            u := iszero(iszero(b))\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/libraries/StringUtil.sol\n\n/**\n * @title StringUtil\n * @dev Library with gas-efficient string operations.\n */\nlibrary StringUtil {\n    /**\n     * @notice Converts a uint256 value to its hexadecimal string representation.\n     * @param value The uint256 value to convert.\n     * @return The hexadecimal string representation of the input value.\n     */\n    function toHex(uint256 value) internal pure returns (string memory) {\n        return toHex(abi.encodePacked(value));\n    }\n\n    /**\n     * @notice Converts an address to its hexadecimal string representation.\n     * @param value The address to convert.\n     * @return The hexadecimal string representation of the input address.\n     */\n    function toHex(address value) internal pure returns (string memory) {\n        return toHex(abi.encodePacked(value));\n    }\n\n    /**\n     * @dev Converts arbitrary bytes to their hexadecimal string representation.\n     * This is an assembly adaptation of highly optimized toHex16 code by Mikhail Vladimirov.\n     * Reference: https://stackoverflow.com/a/69266989\n     * @param data The bytes to be converted to hexadecimal string.\n     * @return result The hexadecimal string representation of the input bytes.\n     */\n    function toHex(bytes memory data) internal pure returns (string memory result) {\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            function _toHex16(input) -> output {\n                output := or(\n                    and(input, 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000),\n                    shr(64, and(input, 0x0000000000000000FFFFFFFFFFFFFFFF00000000000000000000000000000000))\n                )\n                output := or(\n                    and(output, 0xFFFFFFFF000000000000000000000000FFFFFFFF000000000000000000000000),\n                    shr(32, and(output, 0x00000000FFFFFFFF000000000000000000000000FFFFFFFF0000000000000000))\n                )\n                output := or(\n                    and(output, 0xFFFF000000000000FFFF000000000000FFFF000000000000FFFF000000000000),\n                    shr(16, and(output, 0x0000FFFF000000000000FFFF000000000000FFFF000000000000FFFF00000000))\n                )\n                output := or(\n                    and(output, 0xFF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000),\n                    shr(8, and(output, 0x00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000))\n                )\n                output := or(\n                    shr(4, and(output, 0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000)),\n                    shr(8, and(output, 0x0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00))\n                )\n                output := add(\n                    add(0x3030303030303030303030303030303030303030303030303030303030303030, output),\n                    mul(\n                        and(\n                            shr(4, add(output, 0x0606060606060606060606060606060606060606060606060606060606060606)),\n                            0x0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F\n                        ),\n                        7 // Change 7 to 39 for lower case output\n                    )\n                )\n            }\n\n            result := mload(0x40)\n            let length := mload(data)\n            let resultLength := shl(1, length)\n            let toPtr := add(result, 0x22) // 32 bytes for length + 2 bytes for '0x'\n            mstore(0x40, add(toPtr, resultLength)) // move free memory pointer\n            mstore(add(result, 2), 0x3078) // 0x3078 is right aligned so we write to `result + 2`\n            // to store the last 2 bytes in the beginning of the string\n            mstore(result, add(resultLength, 2)) // extra 2 bytes for '0x'\n\n            for {\n                let fromPtr := add(data, 0x20)\n                let endPtr := add(fromPtr, length)\n            } lt(fromPtr, endPtr) {\n                fromPtr := add(fromPtr, 0x20)\n            } {\n                let rawData := mload(fromPtr)\n                let hexData := _toHex16(rawData)\n                mstore(toPtr, hexData)\n                toPtr := add(toPtr, 0x20)\n                hexData := _toHex16(shl(128, rawData))\n                mstore(toPtr, hexData)\n                toPtr := add(toPtr, 0x20)\n            }\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/libraries/TakerTraitsLib.sol\n\ntype TakerTraits is uint256;\n\n/**\n * @title TakerTraitsLib\n * @notice This library to manage and check TakerTraits, which are used to encode the taker's preferences for an order in a single uint256.\n * @dev The TakerTraits are structured as follows:\n * High bits are used for flags\n * 255 bit `_MAKER_AMOUNT_FLAG`           - If set, the taking amount is calculated based on making amount, otherwise making amount is calculated based on taking amount.\n * 254 bit `_UNWRAP_WETH_FLAG`            - If set, the WETH will be unwrapped into ETH before sending to taker.\n * 253 bit `_SKIP_ORDER_PERMIT_FLAG`      - If set, the order skips maker's permit execution.\n * 252 bit `_USE_PERMIT2_FLAG`            - If set, the order uses the permit2 function for authorization.\n * 251 bit `_ARGS_HAS_TARGET`             - If set, then first 20 bytes of args are treated as target address for maker’s funds transfer.\n * 224-247 bits `ARGS_EXTENSION_LENGTH`   - The length of the extension calldata in the args.\n * 200-223 bits `ARGS_INTERACTION_LENGTH` - The length of the interaction calldata in the args.\n * 0-184 bits                             - The threshold amount (the maximum amount a taker agrees to give in exchange for a making amount).\n */\nlibrary TakerTraitsLib {\n    uint256 private constant _MAKER_AMOUNT_FLAG = 1 << 255;\n    uint256 private constant _UNWRAP_WETH_FLAG = 1 << 254;\n    uint256 private constant _SKIP_ORDER_PERMIT_FLAG = 1 << 253;\n    uint256 private constant _USE_PERMIT2_FLAG = 1 << 252;\n    uint256 private constant _ARGS_HAS_TARGET = 1 << 251;\n\n    uint256 private constant _ARGS_EXTENSION_LENGTH_OFFSET = 224;\n    uint256 private constant _ARGS_EXTENSION_LENGTH_MASK = 0xffffff;\n    uint256 private constant _ARGS_INTERACTION_LENGTH_OFFSET = 200;\n    uint256 private constant _ARGS_INTERACTION_LENGTH_MASK = 0xffffff;\n\n    uint256 private constant _AMOUNT_MASK = 0x000000000000000000ffffffffffffffffffffffffffffffffffffffffffffff;\n\n    /**\n     * @notice Checks if the args should contain target address.\n     * @param takerTraits The traits of the taker.\n     * @return result A boolean indicating whether the args should contain target address.\n     */\n    function argsHasTarget(TakerTraits takerTraits) internal pure returns (bool) {\n        return (TakerTraits.unwrap(takerTraits) & _ARGS_HAS_TARGET) != 0;\n    }\n\n    /**\n     * @notice Retrieves the length of the extension calldata from the takerTraits.\n     * @param takerTraits The traits of the taker.\n     * @return result The length of the extension calldata encoded in the takerTraits.\n     */\n    function argsExtensionLength(TakerTraits takerTraits) internal pure returns (uint256) {\n        return (TakerTraits.unwrap(takerTraits) >> _ARGS_EXTENSION_LENGTH_OFFSET) & _ARGS_EXTENSION_LENGTH_MASK;\n    }\n\n    /**\n     * @notice Retrieves the length of the interaction calldata from the takerTraits.\n     * @param takerTraits The traits of the taker.\n     * @return result The length of the interaction calldata encoded in the takerTraits.\n     */\n    function argsInteractionLength(TakerTraits takerTraits) internal pure returns (uint256) {\n        return (TakerTraits.unwrap(takerTraits) >> _ARGS_INTERACTION_LENGTH_OFFSET) & _ARGS_INTERACTION_LENGTH_MASK;\n    }\n\n    /**\n     * @notice Checks if the taking amount should be calculated based on making amount.\n     * @param takerTraits The traits of the taker.\n     * @return result A boolean indicating whether the taking amount should be calculated based on making amount.\n     */\n    function isMakingAmount(TakerTraits takerTraits) internal pure returns (bool) {\n        return (TakerTraits.unwrap(takerTraits) & _MAKER_AMOUNT_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the order should unwrap WETH and send ETH to taker.\n     * @param takerTraits The traits of the taker.\n     * @return result A boolean indicating whether the order should unwrap WETH.\n     */\n    function unwrapWeth(TakerTraits takerTraits) internal pure returns (bool) {\n        return (TakerTraits.unwrap(takerTraits) & _UNWRAP_WETH_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the order should skip maker's permit execution.\n     * @param takerTraits The traits of the taker.\n     * @return result A boolean indicating whether the order don't apply permit.\n     */\n    function skipMakerPermit(TakerTraits takerTraits) internal pure returns (bool) {\n        return (TakerTraits.unwrap(takerTraits) & _SKIP_ORDER_PERMIT_FLAG) != 0;\n    }\n\n    /**\n     * @notice Checks if the order uses the permit2 instead of permit.\n     * @param takerTraits The traits of the taker.\n     * @return result A boolean indicating whether the order uses the permit2.\n     */\n    function usePermit2(TakerTraits takerTraits) internal pure returns (bool) {\n        return (TakerTraits.unwrap(takerTraits) & _USE_PERMIT2_FLAG) != 0;\n    }\n\n    /**\n     * @notice Retrieves the threshold amount from the takerTraits.\n     * The maximum amount a taker agrees to give in exchange for a making amount.\n     * @param takerTraits The traits of the taker.\n     * @return result The threshold amount encoded in the takerTraits.\n     */\n    function threshold(TakerTraits takerTraits) internal pure returns (uint256) {\n        return TakerTraits.unwrap(takerTraits) & _AMOUNT_MASK;\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/libraries/TimelocksLib.sol\n\n/**\n * @dev Timelocks for the source and the destination chains plus the deployment timestamp.\n * Timelocks store the number of seconds from the time the contract is deployed to the start of a specific period.\n * For illustrative purposes, it is possible to describe timelocks by two structures:\n * struct SrcTimelocks {\n *     uint256 withdrawal;\n *     uint256 publicWithdrawal;\n *     uint256 cancellation;\n *     uint256 publicCancellation;\n * }\n *\n * struct DstTimelocks {\n *     uint256 withdrawal;\n *     uint256 publicWithdrawal;\n *     uint256 cancellation;\n * }\n *\n * withdrawal: Period when only the taker with a secret can withdraw tokens for taker (source chain) or maker (destination chain).\n * publicWithdrawal: Period when anyone with a secret can withdraw tokens for taker (source chain) or maker (destination chain).\n * cancellation: Period when escrow can only be cancelled by the taker.\n * publicCancellation: Period when escrow can be cancelled by anyone.\n *\n * @custom:security-contact security@1inch.io\n */\ntype Timelocks is uint256;\n\n/**\n * @title Timelocks library for compact storage of timelocks in a uint256.\n */\nlibrary TimelocksLib {\n    enum Stage {\n        SrcWithdrawal,\n        SrcPublicWithdrawal,\n        SrcCancellation,\n        SrcPublicCancellation,\n        DstWithdrawal,\n        DstPublicWithdrawal,\n        DstCancellation\n    }\n\n    uint256 private constant _DEPLOYED_AT_MASK = 0xffffffff00000000000000000000000000000000000000000000000000000000;\n    uint256 private constant _DEPLOYED_AT_OFFSET = 224;\n\n    /**\n     * @notice Sets the Escrow deployment timestamp.\n     * @param timelocks The timelocks to set the deployment timestamp to.\n     * @param value The new Escrow deployment timestamp.\n     * @return The timelocks with the deployment timestamp set.\n     */\n    function setDeployedAt(Timelocks timelocks, uint256 value) internal pure returns (Timelocks) {\n        return Timelocks.wrap((Timelocks.unwrap(timelocks) & ~uint256(_DEPLOYED_AT_MASK)) | value << _DEPLOYED_AT_OFFSET);\n    }\n\n    /**\n     * @notice Returns the start of the rescue period.\n     * @param timelocks The timelocks to get the rescue delay from.\n     * @return The start of the rescue period.\n     */\n    function rescueStart(Timelocks timelocks, uint256 rescueDelay) internal pure returns (uint256) {\n        unchecked {\n            return rescueDelay + (Timelocks.unwrap(timelocks) >> _DEPLOYED_AT_OFFSET);\n        }\n    }\n\n    /**\n     * @notice Returns the timelock value for the given stage.\n     * @param timelocks The timelocks to get the value from.\n     * @param stage The stage to get the value for.\n     * @return The timelock value for the given stage.\n     */\n    function get(Timelocks timelocks, Stage stage) internal pure returns (uint256) {\n        uint256 data = Timelocks.unwrap(timelocks);\n        uint256 bitShift = uint256(stage) * 32;\n        // The maximum uint32 value will be reached in 2106.\n        return (data >> _DEPLOYED_AT_OFFSET) + uint32(data >> bitShift);\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/proxy/Clones.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Clones.sol)\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Stores the bytecode after address\n            mstore(0x20, 0x5af43d82803e903d91602b57fd5bf3)\n            // implementation address\n            mstore(0x11, implementation)\n            // Packs the first 3 bytes of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0x88, implementation), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Stores the bytecode after address\n            mstore(0x20, 0x5af43d82803e903d91602b57fd5bf3)\n            // implementation address\n            mstore(0x11, implementation)\n            // Packs the first 3 bytes of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0x88, implementation), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/utils/Create2.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Create2.sol)\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-settlement/contracts/interfaces/IFeeBankCharger.sol\n\ninterface IFeeBankCharger {\n    /**\n     * @notice Returns the instance of the FeeBank contract.\n     * @return The instance of the FeeBank contract.\n     */\n    function FEE_BANK() external view returns (IFeeBank); // solhint-disable-line func-name-mixedcase\n\n    /**\n     * @notice Returns the available credit for a given account.\n     * @param account The address of the account for which the available credit is being queried.\n     * @return The available credit of the queried account.\n     */\n    function availableCredit(address account) external view returns (uint256);\n\n    /**\n     * @notice Increases the available credit of a given account by a specified amount.\n     * @param account The address of the account for which the available credit is being increased.\n     * @param amount The amount by which the available credit will be increased.\n     * @return allowance The updated available credit of the specified account.\n     */\n    function increaseAvailableCredit(address account, uint256 amount) external returns (uint256 allowance);\n\n    /**\n     * @notice Decreases the available credit of a given account by a specified amount.\n     * @param account The address of the account for which the available credit is being decreased.\n     * @param amount The amount by which the available credit will be decreased.\n     * @return allowance The updated available credit of the specified account.\n     */\n    function decreaseAvailableCredit(address account, uint256 amount) external returns (uint256 allowance);\n}\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/interfaces/IWETH.sol\n\n/**\n * @title IWETH\n * @dev Interface for wrapper as WETH-like token.\n */\ninterface IWETH is IERC20 {\n    /**\n     * @notice Emitted when Ether is deposited to get wrapper tokens.\n     */\n    event Deposit(address indexed dst, uint256 wad);\n\n    /**\n     * @notice Emitted when wrapper tokens is withdrawn as Ether.\n     */\n    event Withdrawal(address indexed src, uint256 wad);\n\n    /**\n     * @notice Deposit Ether to get wrapper tokens.\n     */\n    function deposit() external payable;\n\n    /**\n     * @notice Withdraw wrapped tokens as Ether.\n     * @param amount Amount of wrapped tokens to withdraw.\n     */\n    function withdraw(uint256 amount) external;\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MerkleProof.sol)\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/access/Ownable.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/interfaces/IBaseEscrow.sol\n\n/**\n * @title Base Escrow interface for cross-chain atomic swap.\n * @notice Interface implies locking funds initially and then unlocking them with verification of the secret presented.\n * @custom:security-contact security@1inch.io\n */\ninterface IBaseEscrow {\n    struct Immutables {\n        bytes32 orderHash;\n        bytes32 hashlock;  // Hash of the secret.\n        Address maker;\n        Address taker;\n        Address token;\n        uint256 amount;\n        uint256 safetyDeposit;\n        Timelocks timelocks;\n    }\n\n    /**\n     * @notice Emitted on escrow cancellation.\n     */\n    event EscrowCancelled();\n\n    /**\n     * @notice Emitted when funds are rescued.\n     * @param token The address of the token rescued. Zero address for native token.\n     * @param amount The amount of tokens rescued.\n     */\n    event FundsRescued(address token, uint256 amount);\n\n    /**\n     * @notice Emitted on successful withdrawal.\n     * @param secret The secret that unlocks the escrow.\n     */\n    event Withdrawal(bytes32 secret);\n\n    error InvalidCaller();\n    error InvalidImmutables();\n    error InvalidSecret();\n    error InvalidTime();\n    error NativeTokenSendingFailure();\n\n    /* solhint-disable func-name-mixedcase */\n    /// @notice Returns the delay for rescuing funds from the escrow.\n    function RESCUE_DELAY() external view returns (uint256);\n    /// @notice Returns the address of the factory that created the escrow.\n    function FACTORY() external view returns (address);\n    /* solhint-enable func-name-mixedcase */\n\n    /**\n     * @notice Withdraws funds to a predetermined recipient.\n     * @dev Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock.\n     * The safety deposit is sent to the caller.\n     * @param secret The secret that unlocks the escrow.\n     * @param immutables The immutables of the escrow contract.\n     */\n    function withdraw(bytes32 secret, Immutables calldata immutables) external;\n\n    /**\n     * @notice Cancels the escrow and returns tokens to a predetermined recipient.\n     * @dev The escrow can only be cancelled during the cancellation period.\n     * The safety deposit is sent to the caller.\n     * @param immutables The immutables of the escrow contract.\n     */\n    function cancel(Immutables calldata immutables) external;\n\n    /**\n     * @notice Rescues funds from the escrow.\n     * @dev Funds can only be rescued by the taker after the rescue delay.\n     * @param token The address of the token to rescue. Zero address for native token.\n     * @param amount The amount of tokens to rescue.\n     * @param immutables The immutables of the escrow contract.\n     */\n    function rescueFunds(address token, uint256 amount, Immutables calldata immutables) external;\n}\n\n// contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return a == 0 ? 0 : (a - 1) / b + 1;\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(denominator == 0 ? Panic.DIVISION_BY_ZERO : Panic.UNDER_OVERFLOW);\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, expect 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Ferma's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return x < 0 ? (n - uint256(-x)) : uint256(x); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked has failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/interfaces/IEscrow.sol\n\n/**\n * @title Escrow interface for cross-chain atomic swap.\n * @notice Interface implies locking funds initially and then unlocking them with verification of the secret presented.\n * @custom:security-contact security@1inch.io\n */\ninterface IEscrow is IBaseEscrow {\n    /// @notice Returns the bytecode hash of the proxy contract.\n    function PROXY_BYTECODE_HASH() external view returns (bytes32); // solhint-disable-line func-name-mixedcase\n}\n\n// contracts/lib/cross-chain-swap/contracts/interfaces/IEscrowFactory.sol\n\n/**\n * @title Escrow Factory interface for cross-chain atomic swap.\n * @notice Interface to deploy escrow contracts for the destination chain and to get the deterministic address of escrow on both chains.\n * @custom:security-contact security@1inch.io\n */\ninterface IEscrowFactory {\n    struct ExtraDataArgs {\n        bytes32 hashlockInfo; // Hash of the secret or the Merkle tree root if multiple fills are allowed\n        uint256 dstChainId;\n        Address dstToken;\n        uint256 deposits;\n        Timelocks timelocks;\n    }\n\n    struct DstImmutablesComplement {\n        Address maker;\n        uint256 amount;\n        Address token;\n        uint256 safetyDeposit;\n        uint256 chainId;\n    }\n\n    error InsufficientEscrowBalance();\n    error InvalidCreationTime();\n    error InvalidPartialFill();\n    error InvalidSecretsAmount();\n\n    /**\n     * @notice Emitted on EscrowSrc deployment to recreate EscrowSrc and EscrowDst immutables off-chain.\n     * @param srcImmutables The immutables of the escrow contract that are used in deployment on the source chain.\n     * @param dstImmutablesComplement Additional immutables related to the escrow contract on the destination chain.\n     */\n    event SrcEscrowCreated(IBaseEscrow.Immutables srcImmutables, DstImmutablesComplement dstImmutablesComplement);\n    /**\n     * @notice Emitted on EscrowDst deployment.\n     * @param escrow The address of the created escrow.\n     * @param hashlock The hash of the secret.\n     * @param taker The address of the taker.\n     */\n    event DstEscrowCreated(address escrow, bytes32 hashlock, Address taker);\n\n    /* solhint-disable func-name-mixedcase */\n    /// @notice Returns the address of implementation on the source chain.\n    function ESCROW_SRC_IMPLEMENTATION() external view returns (address);\n    /// @notice Returns the address of implementation on the destination chain.\n    function ESCROW_DST_IMPLEMENTATION() external view returns (address);\n    /* solhint-enable func-name-mixedcase */\n\n    /**\n     * @notice Creates a new escrow contract for taker on the destination chain.\n     * @dev The caller must send the safety deposit in the native token along with the function call\n     * and approve the destination token to be transferred to the created escrow.\n     * @param dstImmutables The immutables of the escrow contract that are used in deployment.\n     * @param srcCancellationTimestamp The start of the cancellation period for the source chain.\n     */\n    function createDstEscrow(IBaseEscrow.Immutables calldata dstImmutables, uint256 srcCancellationTimestamp) external payable;\n\n    /**\n     * @notice Returns the deterministic address of the source escrow based on the salt.\n     * @param immutables The immutable arguments used to compute salt for escrow deployment.\n     * @return The computed address of the escrow.\n     */\n    function addressOfEscrowSrc(IBaseEscrow.Immutables calldata immutables) external view returns (address);\n\n    /**\n     * @notice Returns the deterministic address of the destination escrow based on the salt.\n     * @param immutables The immutable arguments used to compute salt for escrow deployment.\n     * @return The computed address of the escrow.\n     */\n    function addressOfEscrowDst(IBaseEscrow.Immutables calldata immutables) external view returns (address);\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/IOrderMixin.sol\n\ninterface IOrderMixin {\n    struct Order {\n        uint256 salt;\n        Address maker;\n        Address receiver;\n        Address makerAsset;\n        Address takerAsset;\n        uint256 makingAmount;\n        uint256 takingAmount;\n        MakerTraits makerTraits;\n    }\n\n    error InvalidatedOrder();\n    error TakingAmountExceeded();\n    error PrivateOrder();\n    error BadSignature();\n    error OrderExpired();\n    error WrongSeriesNonce();\n    error SwapWithZeroAmount();\n    error PartialFillNotAllowed();\n    error OrderIsNotSuitableForMassInvalidation();\n    error EpochManagerAndBitInvalidatorsAreIncompatible();\n    error ReentrancyDetected();\n    error PredicateIsNotTrue();\n    error TakingAmountTooHigh();\n    error MakingAmountTooLow();\n    error TransferFromMakerToTakerFailed();\n    error TransferFromTakerToMakerFailed();\n    error MismatchArraysLengths();\n    error InvalidPermit2Transfer();\n    error SimulationResults(bool success, bytes res);\n\n    /**\n     * @notice Emitted when order gets filled\n     * @param orderHash Hash of the order\n     * @param remainingAmount Amount of the maker asset that remains to be filled\n     */\n    event OrderFilled(\n        bytes32 orderHash,\n        uint256 remainingAmount\n    );\n\n    /**\n     * @notice Emitted when order without `useBitInvalidator` gets cancelled\n     * @param orderHash Hash of the order\n     */\n    event OrderCancelled(\n        bytes32 orderHash\n    );\n\n    /**\n     * @notice Emitted when order with `useBitInvalidator` gets cancelled\n     * @param maker Maker address\n     * @param slotIndex Slot index that was updated\n     * @param slotValue New slot value\n     */\n    event BitInvalidatorUpdated(\n        address indexed maker,\n        uint256 slotIndex,\n        uint256 slotValue\n    );\n\n    /**\n     * @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n     * @param maker Maker address\n     * @param slot Slot number to return bitmask for\n     * @return result Each bit represents whether corresponding was already invalidated\n     */\n    function bitInvalidatorForOrder(address maker, uint256 slot) external view returns(uint256 result);\n\n    /**\n     * @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n     * @param orderHash Hash of the order\n     * @return remaining Remaining amount of the order\n     */\n    function remainingInvalidatorForOrder(address maker, bytes32 orderHash) external view returns(uint256 remaining);\n\n    /**\n     * @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n     * @param orderHash Hash of the order\n     * @return remainingRaw Inverse of the remaining amount of the order if order was filled at least once, otherwise 0\n     */\n    function rawRemainingInvalidatorForOrder(address maker, bytes32 orderHash) external view returns(uint256 remainingRaw);\n\n    /**\n     * @notice Cancels order's quote\n     * @param makerTraits Order makerTraits\n     * @param orderHash Hash of the order to cancel\n     */\n    function cancelOrder(MakerTraits makerTraits, bytes32 orderHash) external;\n\n    /**\n     * @notice Cancels orders' quotes\n     * @param makerTraits Orders makerTraits\n     * @param orderHashes Hashes of the orders to cancel\n     */\n    function cancelOrders(MakerTraits[] calldata makerTraits, bytes32[] calldata orderHashes) external;\n\n    /**\n     * @notice Cancels all quotes of the maker (works for bit-invalidating orders only)\n     * @param makerTraits Order makerTraits\n     * @param additionalMask Additional bitmask to invalidate orders\n     */\n    function bitsInvalidateForOrder(MakerTraits makerTraits, uint256 additionalMask) external;\n\n    /**\n     * @notice Returns order hash, hashed with limit order protocol contract EIP712\n     * @param order Order\n     * @return orderHash Hash of the order\n     */\n    function hashOrder(IOrderMixin.Order calldata order) external view returns(bytes32 orderHash);\n\n    /**\n     * @notice Delegates execution to custom implementation. Could be used to validate if `transferFrom` works properly\n     * @dev The function always reverts and returns the simulation results in revert data.\n     * @param target Addresses that will be delegated\n     * @param data Data that will be passed to delegatee\n     */\n    function simulate(address target, bytes calldata data) external;\n\n    /**\n     * @notice Fills order's quote, fully or partially (whichever is possible).\n     * @param order Order quote to fill\n     * @param r R component of signature\n     * @param vs VS component of signature\n     * @param amount Taker amount to fill\n     * @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n     * minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n     * @return makingAmount Actual amount transferred from maker to taker\n     * @return takingAmount Actual amount transferred from taker to maker\n     * @return orderHash Hash of the filled order\n     */\n    function fillOrder(\n        Order calldata order,\n        bytes32 r,\n        bytes32 vs,\n        uint256 amount,\n        TakerTraits takerTraits\n    ) external payable returns(uint256 makingAmount, uint256 takingAmount, bytes32 orderHash);\n\n    /**\n     * @notice Same as `fillOrder` but allows to specify arguments that are used by the taker.\n     * @param order Order quote to fill\n     * @param r R component of signature\n     * @param vs VS component of signature\n     * @param amount Taker amount to fill\n     * @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n     * minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n     * @param args Arguments that are used by the taker (target, extension, interaction, permit)\n     * @return makingAmount Actual amount transferred from maker to taker\n     * @return takingAmount Actual amount transferred from taker to maker\n     * @return orderHash Hash of the filled order\n     */\n    function fillOrderArgs(\n        IOrderMixin.Order calldata order,\n        bytes32 r,\n        bytes32 vs,\n        uint256 amount,\n        TakerTraits takerTraits,\n        bytes calldata args\n    ) external payable returns(uint256 makingAmount, uint256 takingAmount, bytes32 orderHash);\n\n    /**\n     * @notice Same as `fillOrder` but uses contract-based signatures.\n     * @param order Order quote to fill\n     * @param signature Signature to confirm quote ownership\n     * @param amount Taker amount to fill\n     * @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n     * minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n     * @return makingAmount Actual amount transferred from maker to taker\n     * @return takingAmount Actual amount transferred from taker to maker\n     * @return orderHash Hash of the filled order\n     * @dev See tests for examples\n     */\n    function fillContractOrder(\n        Order calldata order,\n        bytes calldata signature,\n        uint256 amount,\n        TakerTraits takerTraits\n    ) external returns(uint256 makingAmount, uint256 takingAmount, bytes32 orderHash);\n\n    /**\n     * @notice Same as `fillContractOrder` but allows to specify arguments that are used by the taker.\n     * @param order Order quote to fill\n     * @param signature Signature to confirm quote ownership\n     * @param amount Taker amount to fill\n     * @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n     * minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n     * @param args Arguments that are used by the taker (target, extension, interaction, permit)\n     * @return makingAmount Actual amount transferred from maker to taker\n     * @return takingAmount Actual amount transferred from taker to maker\n     * @return orderHash Hash of the filled order\n     * @dev See tests for examples\n     */\n    function fillContractOrderArgs(\n        Order calldata order,\n        bytes calldata signature,\n        uint256 amount,\n        TakerTraits takerTraits,\n        bytes calldata args\n    ) external returns(uint256 makingAmount, uint256 takingAmount, bytes32 orderHash);\n}\n\n// contracts/lib/cross-chain-swap/contracts/libraries/ImmutablesLib.sol\n\n/**\n * @title Library for escrow immutables.\n * @custom:security-contact security@1inch.io\n */\nlibrary ImmutablesLib {\n    uint256 internal constant ESCROW_IMMUTABLES_SIZE = 0x100;\n\n    /**\n     * @notice Returns the hash of the immutables.\n     * @param immutables The immutables to hash.\n     * @return ret The computed hash.\n     */\n    function hash(IBaseEscrow.Immutables calldata immutables) internal pure returns(bytes32 ret) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, immutables, ESCROW_IMMUTABLES_SIZE)\n            ret := keccak256(ptr, ESCROW_IMMUTABLES_SIZE)\n        }\n    }\n\n    /**\n     * @notice Returns the hash of the immutables.\n     * @param immutables The immutables to hash.\n     * @return ret The computed hash.\n     */\n    function hashMem(IBaseEscrow.Immutables memory immutables) internal pure returns(bytes32 ret) {\n        assembly (\"memory-safe\") {\n            ret := keccak256(immutables, ESCROW_IMMUTABLES_SIZE)\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/IAmountGetter.sol\n\ninterface IAmountGetter {\n    /**\n     * @notice View method that gets called to determine the actual making amount\n     * @param order Order being processed\n     * @param extension Order extension data\n     * @param orderHash Hash of the order being processed\n     * @param taker Taker address\n     * @param takingAmount Actual taking amount\n     * @param remainingMakingAmount Order remaining making amount\n     * @param extraData Extra data\n     */\n    function getMakingAmount(\n        IOrderMixin.Order calldata order,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address taker,\n        uint256 takingAmount,\n        uint256 remainingMakingAmount,\n        bytes calldata extraData\n    ) external view returns (uint256);\n\n    /**\n     * @notice View method that gets called to determine the actual making amount\n     * @param order Order being processed\n     * @param extension Order extension data\n     * @param orderHash Hash of the order being processed\n     * @param taker Taker address\n     * @param makingAmount Actual taking amount\n     * @param remainingMakingAmount Order remaining making amount\n     * @param extraData Extra data\n     */\n    function getTakingAmount(\n        IOrderMixin.Order calldata order,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address taker,\n        uint256 makingAmount,\n        uint256 remainingMakingAmount,\n        bytes calldata extraData\n    ) external view returns (uint256);\n}\n\n// contracts/lib/cross-chain-swap/contracts/interfaces/IEscrowDst.sol\n\n/**\n * @title Destination Escrow interface for cross-chain atomic swap.\n * @notice Interface implies withdrawing funds initially and then unlocking them with verification of the secret presented.\n * @custom:security-contact security@1inch.io\n */\ninterface IEscrowDst is IEscrow {\n    /**\n     * @notice Withdraws funds to maker\n     * @dev Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock.\n     * @param secret The secret that unlocks the escrow.\n     * @param immutables The immutables of the escrow contract.\n     */\n    function publicWithdraw(bytes32 secret, IBaseEscrow.Immutables calldata immutables) external;\n}\n\n// contracts/lib/cross-chain-swap/contracts/interfaces/IEscrowSrc.sol\n\n/**\n * @title Source Escrow interface for cross-chain atomic swap.\n * @notice Interface implies locking funds initially and then unlocking them with verification of the secret presented.\n * @custom:security-contact security@1inch.io\n */\ninterface IEscrowSrc is IEscrow {\n    /**\n     * @notice Withdraws funds to a specified target.\n     * @dev Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock.\n     * The safety deposit is sent to the caller.\n     * @param secret The secret that unlocks the escrow.\n     * @param target The address to withdraw the funds to.\n     * @param immutables The immutables of the escrow contract.\n     */\n    function withdrawTo(bytes32 secret, address target, IBaseEscrow.Immutables calldata immutables) external;\n\n    /**\n     * @notice Withdraws funds to the taker.\n     * @dev Withdrawal can only be made during the public withdrawal period and with secret with hash matches the hashlock.\n     * @param secret The secret that unlocks the escrow.\n     * @param immutables The immutables of the escrow contract.\n     */\n    function publicWithdraw(bytes32 secret, Immutables calldata immutables) external;\n\n    /**\n     * @notice Cancels the escrow and returns tokens to the maker.\n     * @dev The escrow can only be cancelled during the public cancellation period.\n     * The safety deposit is sent to the caller.\n     * @param immutables The immutables of the escrow contract.\n     */\n    function publicCancel(IBaseEscrow.Immutables calldata immutables) external;\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/IPostInteraction.sol\n\ninterface IPostInteraction {\n    /**\n     * @notice Callback method that gets called after all fund transfers\n     * @param order Order being processed\n     * @param extension Order extension data\n     * @param orderHash Hash of the order being processed\n     * @param taker Taker address\n     * @param makingAmount Actual making amount\n     * @param takingAmount Actual taking amount\n     * @param remainingMakingAmount Order remaining making amount\n     * @param extraData Extra data\n     */\n    function postInteraction(\n        IOrderMixin.Order calldata order,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address taker,\n        uint256 makingAmount,\n        uint256 takingAmount,\n        uint256 remainingMakingAmount,\n        bytes calldata extraData\n    ) external;\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/IPreInteraction.sol\n\ninterface IPreInteraction {\n    /**\n     * @notice Callback method that gets called before any funds transfers\n     * @param order Order being processed\n     * @param extension Order extension data\n     * @param orderHash Hash of the order being processed\n     * @param taker Taker address\n     * @param makingAmount Actual making amount\n     * @param takingAmount Actual taking amount\n     * @param remainingMakingAmount Order remaining making amount\n     * @param extraData Extra data\n     */\n    function preInteraction(\n        IOrderMixin.Order calldata order,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address taker,\n        uint256 makingAmount,\n        uint256 takingAmount,\n        uint256 remainingMakingAmount,\n        bytes calldata extraData\n    ) external;\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/ITakerInteraction.sol\n\n/**\n * @title Interface for interactor which acts after `maker -> taker` transfer but before `taker -> maker` transfer.\n * @notice The order filling steps are `preInteraction` =>` Transfer \"maker -> taker\"` => **`Interaction`** => `Transfer \"taker -> maker\"` => `postInteraction`\n */\ninterface ITakerInteraction {\n    /**\n     * @dev This callback allows to interactively handle maker aseets to produce takers assets, doesn't supports ETH as taker assets\n     * @notice Callback method that gets called after maker fund transfer but before taker fund transfer\n     * @param order Order being processed\n     * @param extension Order extension data\n     * @param orderHash Hash of the order being processed\n     * @param taker Taker address\n     * @param makingAmount Actual making amount\n     * @param takingAmount Actual taking amount\n     * @param remainingMakingAmount Order remaining making amount\n     * @param extraData Extra data\n     */\n    function takerInteraction(\n        IOrderMixin.Order calldata order,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address taker,\n        uint256 makingAmount,\n        uint256 takingAmount,\n        uint256 remainingMakingAmount,\n        bytes calldata extraData\n    ) external;\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/libraries/ExtensionLib.sol\n\n/**\n * @title ExtensionLib\n * @notice Library for retrieving extensions information for the IOrderMixin Interface.\n */\nlibrary ExtensionLib_1 {\n    using AddressLib for Address;\n    using OffsetsLib for Offsets;\n\n    enum DynamicField {\n        MakerAssetSuffix,\n        TakerAssetSuffix,\n        MakingAmountData,\n        TakingAmountData,\n        Predicate,\n        MakerPermit,\n        PreInteractionData,\n        PostInteractionData,\n        CustomData\n    }\n\n    /**\n     * @notice Returns the MakerAssetSuffix from the provided extension calldata.\n     * @param extension The calldata from which the MakerAssetSuffix is to be retrieved.\n     * @return calldata Bytes representing the MakerAssetSuffix.\n     */\n    function makerAssetSuffix(bytes calldata extension) internal pure returns(bytes calldata) {\n        return _get(extension, DynamicField.MakerAssetSuffix);\n    }\n\n    /**\n     * @notice Returns the TakerAssetSuffix from the provided extension calldata.\n     * @param extension The calldata from which the TakerAssetSuffix is to be retrieved.\n     * @return calldata Bytes representing the TakerAssetSuffix.\n     */\n    function takerAssetSuffix(bytes calldata extension) internal pure returns(bytes calldata) {\n        return _get(extension, DynamicField.TakerAssetSuffix);\n    }\n\n    /**\n     * @notice Returns the MakingAmountData from the provided extension calldata.\n     * @param extension The calldata from which the MakingAmountData is to be retrieved.\n     * @return calldata Bytes representing the MakingAmountData.\n     */\n    function makingAmountData(bytes calldata extension) internal pure returns(bytes calldata) {\n        return _get(extension, DynamicField.MakingAmountData);\n    }\n\n    /**\n     * @notice Returns the TakingAmountData from the provided extension calldata.\n     * @param extension The calldata from which the TakingAmountData is to be retrieved.\n     * @return calldata Bytes representing the TakingAmountData.\n     */\n    function takingAmountData(bytes calldata extension) internal pure returns(bytes calldata) {\n        return _get(extension, DynamicField.TakingAmountData);\n    }\n\n    /**\n     * @notice Returns the order's predicate from the provided extension calldata.\n     * @param extension The calldata from which the predicate is to be retrieved.\n     * @return calldata Bytes representing the predicate.\n     */\n    function predicate(bytes calldata extension) internal pure returns(bytes calldata) {\n        return _get(extension, DynamicField.Predicate);\n    }\n\n    /**\n     * @notice Returns the maker's permit from the provided extension calldata.\n     * @param extension The calldata from which the maker's permit is to be retrieved.\n     * @return calldata Bytes representing the maker's permit.\n     */\n    function makerPermit(bytes calldata extension) internal pure returns(bytes calldata) {\n        return _get(extension, DynamicField.MakerPermit);\n    }\n\n    /**\n     * @notice Returns the pre-interaction from the provided extension calldata.\n     * @param extension The calldata from which the pre-interaction is to be retrieved.\n     * @return calldata Bytes representing the pre-interaction.\n     */\n    function preInteractionTargetAndData(bytes calldata extension) internal pure returns(bytes calldata) {\n        return _get(extension, DynamicField.PreInteractionData);\n    }\n\n    /**\n     * @notice Returns the post-interaction from the provided extension calldata.\n     * @param extension The calldata from which the post-interaction is to be retrieved.\n     * @return calldata Bytes representing the post-interaction.\n     */\n    function postInteractionTargetAndData(bytes calldata extension) internal pure returns(bytes calldata) {\n        return _get(extension, DynamicField.PostInteractionData);\n    }\n\n    /**\n     * @notice Returns extra suffix data from the provided extension calldata.\n     * @param extension The calldata from which the extra suffix data is to be retrieved.\n     * @return calldata Bytes representing the extra suffix data.\n     */\n    function customData(bytes calldata extension) internal pure returns(bytes calldata) {\n        if (extension.length < 0x20) return msg.data[:0];\n        uint256 offsets = uint256(bytes32(extension));\n        unchecked {\n            return extension[0x20 + (offsets >> 224):];\n        }\n    }\n\n    /**\n     * @notice Retrieves a specific field from the provided extension calldata.\n     * @dev The first 32 bytes of an extension calldata contain offsets to the end of each field within the calldata.\n     * @param extension The calldata from which the field is to be retrieved.\n     * @param field The specific dynamic field to retrieve from the extension.\n     * @return calldata Bytes representing the requested field.\n     */\n    function _get(bytes calldata extension, DynamicField field) private pure returns(bytes calldata) {\n        if (extension.length < 0x20) return msg.data[:0];\n\n        Offsets offsets;\n        bytes calldata concat;\n        assembly (\"memory-safe\") {  // solhint-disable-line no-inline-assembly\n            offsets := calldataload(extension.offset)\n            concat.offset := add(extension.offset, 0x20)\n            concat.length := sub(extension.length, 0x20)\n        }\n\n        return offsets.get(concat, uint256(field));\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/libraries/SafeERC20.sol\n\n/**\n * @title Implements efficient safe methods for ERC20 interface.\n * @notice Compared to the standard ERC20, this implementation offers several enhancements:\n * 1. more gas-efficient, providing significant savings in transaction costs.\n * 2. support for different permit implementations\n * 3. forceApprove functionality\n * 4. support for WETH deposit and withdraw\n */\nlibrary SafeERC20 {\n    error SafeTransferFailed();\n    error SafeTransferFromFailed();\n    error ForceApproveFailed();\n    error SafeIncreaseAllowanceFailed();\n    error SafeDecreaseAllowanceFailed();\n    error SafePermitBadLength();\n    error Permit2TransferAmountTooHigh();\n\n    // Uniswap Permit2 address\n    address private constant _PERMIT2 = 0x000000000022D473030F116dDEE9F6B43aC78BA3;\n    bytes4 private constant _PERMIT_LENGTH_ERROR = 0x68275857;  // SafePermitBadLength.selector\n    uint256 private constant _RAW_CALL_GAS_LIMIT = 5000;\n\n    /**\n     * @notice Fetches the balance of a specific ERC20 token held by an account.\n     * Consumes less gas then regular `ERC20.balanceOf`.\n     * @dev Note that the implementation does not perform dirty bits cleaning, so it is the\n     * responsibility of the caller to make sure that the higher 96 bits of the `account` parameter are clean.\n     * @param token The IERC20 token contract for which the balance will be fetched.\n     * @param account The address of the account whose token balance will be fetched.\n     * @return tokenBalance The balance of the specified ERC20 token held by the account.\n     */\n    function safeBalanceOf(\n        IERC20 token,\n        address account\n    ) internal view returns(uint256 tokenBalance) {\n        bytes4 selector = IERC20.balanceOf.selector;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            mstore(0x00, selector)\n            mstore(0x04, account)\n            let success := staticcall(gas(), token, 0x00, 0x24, 0x00, 0x20)\n            tokenBalance := mload(0)\n\n            if or(iszero(success), lt(returndatasize(), 0x20)) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @notice Attempts to safely transfer tokens from one address to another.\n     * @dev If permit2 is true, uses the Permit2 standard; otherwise uses the standard ERC20 transferFrom.\n     * Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n     * Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n     * the caller to make sure that the higher 96 bits of the `from` and `to` parameters are clean.\n     * @param token The IERC20 token contract from which the tokens will be transferred.\n     * @param from The address from which the tokens will be transferred.\n     * @param to The address to which the tokens will be transferred.\n     * @param amount The amount of tokens to transfer.\n     * @param permit2 If true, uses the Permit2 standard for the transfer; otherwise uses the standard ERC20 transferFrom.\n     */\n    function safeTransferFromUniversal(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount,\n        bool permit2\n    ) internal {\n        if (permit2) {\n            safeTransferFromPermit2(token, from, to, amount);\n        } else {\n            safeTransferFrom(token, from, to, amount);\n        }\n    }\n\n    /**\n     * @notice Attempts to safely transfer tokens from one address to another using the ERC20 standard.\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n     * Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n     * the caller to make sure that the higher 96 bits of the `from` and `to` parameters are clean.\n     * @param token The IERC20 token contract from which the tokens will be transferred.\n     * @param from The address from which the tokens will be transferred.\n     * @param to The address to which the tokens will be transferred.\n     * @param amount The amount of tokens to transfer.\n     */\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        bytes4 selector = token.transferFrom.selector;\n        bool success;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let data := mload(0x40)\n\n            mstore(data, selector)\n            mstore(add(data, 0x04), from)\n            mstore(add(data, 0x24), to)\n            mstore(add(data, 0x44), amount)\n            success := call(gas(), token, 0, data, 100, 0x0, 0x20)\n            if success {\n                switch returndatasize()\n                case 0 {\n                    success := gt(extcodesize(token), 0)\n                }\n                default {\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\n                }\n            }\n        }\n        if (!success) revert SafeTransferFromFailed();\n    }\n\n    /**\n     * @notice Attempts to safely transfer tokens from one address to another using the Permit2 standard.\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n     * Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n     * the caller to make sure that the higher 96 bits of the `from` and `to` parameters are clean.\n     * @param token The IERC20 token contract from which the tokens will be transferred.\n     * @param from The address from which the tokens will be transferred.\n     * @param to The address to which the tokens will be transferred.\n     * @param amount The amount of tokens to transfer.\n     */\n    function safeTransferFromPermit2(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        if (amount > type(uint160).max) revert Permit2TransferAmountTooHigh();\n        bytes4 selector = IPermit2.transferFrom.selector;\n        bool success;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let data := mload(0x40)\n\n            mstore(data, selector)\n            mstore(add(data, 0x04), from)\n            mstore(add(data, 0x24), to)\n            mstore(add(data, 0x44), amount)\n            mstore(add(data, 0x64), token)\n            success := call(gas(), _PERMIT2, 0, data, 0x84, 0x0, 0x0)\n            if success {\n                success := gt(extcodesize(_PERMIT2), 0)\n            }\n        }\n        if (!success) revert SafeTransferFromFailed();\n    }\n\n    /**\n     * @notice Attempts to safely transfer tokens to another address.\n     * @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n     * Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n     * the caller to make sure that the higher 96 bits of the `to` parameter are clean.\n     * @param token The IERC20 token contract from which the tokens will be transferred.\n     * @param to The address to which the tokens will be transferred.\n     * @param value The amount of tokens to transfer.\n     */\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        if (!_makeCall(token, token.transfer.selector, to, value)) {\n            revert SafeTransferFailed();\n        }\n    }\n\n    /**\n     * @notice Attempts to approve a spender to spend a certain amount of tokens.\n     * @dev If `approve(from, to, amount)` fails, it tries to set the allowance to zero, and retries the `approve` call.\n     * Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n     * the caller to make sure that the higher 96 bits of the `spender` parameter are clean.\n     * @param token The IERC20 token contract on which the call will be made.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     */\n    function forceApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        if (!_makeCall(token, token.approve.selector, spender, value)) {\n            if (\n                !_makeCall(token, token.approve.selector, spender, 0) ||\n                !_makeCall(token, token.approve.selector, spender, value)\n            ) {\n                revert ForceApproveFailed();\n            }\n        }\n    }\n\n    /**\n     * @notice Safely increases the allowance of a spender.\n     * @dev Increases with safe math check. Checks if the increased allowance will overflow, if yes, then it reverts the transaction.\n     * Then uses `forceApprove` to increase the allowance.\n     * Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n     * the caller to make sure that the higher 96 bits of the `spender` parameter are clean.\n     * @param token The IERC20 token contract on which the call will be made.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to increase the allowance by.\n     */\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 allowance = token.allowance(address(this), spender);\n        if (value > type(uint256).max - allowance) revert SafeIncreaseAllowanceFailed();\n        forceApprove(token, spender, allowance + value);\n    }\n\n    /**\n     * @notice Safely decreases the allowance of a spender.\n     * @dev Decreases with safe math check. Checks if the decreased allowance will underflow, if yes, then it reverts the transaction.\n     * Then uses `forceApprove` to increase the allowance.\n     * Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n     * the caller to make sure that the higher 96 bits of the `spender` parameter are clean.\n     * @param token The IERC20 token contract on which the call will be made.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to decrease the allowance by.\n     */\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 allowance = token.allowance(address(this), spender);\n        if (value > allowance) revert SafeDecreaseAllowanceFailed();\n        forceApprove(token, spender, allowance - value);\n    }\n\n    /**\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\n     * @param token The IERC20 token to execute the permit function on.\n     * @param permit The permit data to be used in the function call.\n     */\n    function safePermit(IERC20 token, bytes calldata permit) internal {\n        if (!tryPermit(token, msg.sender, address(this), permit)) RevertReasonForwarder.reRevert();\n    }\n\n    /**\n     * @notice Attempts to execute the `permit` function on the provided token with custom owner and spender parameters.\n     * Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\n     * @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\n     * Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n     * the caller to make sure that the higher 96 bits of the `owner` and `spender` parameters are clean.\n     * @param token The IERC20 token to execute the permit function on.\n     * @param owner The owner of the tokens for which the permit is made.\n     * @param spender The spender allowed to spend the tokens by the permit.\n     * @param permit The permit data to be used in the function call.\n     */\n    function safePermit(IERC20 token, address owner, address spender, bytes calldata permit) internal {\n        if (!tryPermit(token, owner, spender, permit)) RevertReasonForwarder.reRevert();\n    }\n\n    /**\n     * @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\n     * @dev Invokes `tryPermit` with sender as owner and contract as spender.\n     * @param token The IERC20 token to execute the permit function on.\n     * @param permit The permit data to be used in the function call.\n     * @return success Returns true if the permit function was successfully executed, false otherwise.\n     */\n    function tryPermit(IERC20 token, bytes calldata permit) internal returns(bool success) {\n        return tryPermit(token, msg.sender, address(this), permit);\n    }\n\n    /**\n     * @notice The function attempts to call the permit function on a given ERC20 token.\n     * @dev The function is designed to support a variety of permit functions, namely: IERC20Permit, IDaiLikePermit, IERC7597Permit and IPermit2.\n     * It accommodates both Compact and Full formats of these permit types.\n     * Please note, it is expected that the `expiration` parameter for the compact Permit2 and the `deadline` parameter\n     * for the compact Permit are to be incremented by one before invoking this function. This approach is motivated by\n     * gas efficiency considerations; as the unlimited expiration period is likely to be the most common scenario, and\n     * zeros are cheaper to pass in terms of gas cost. Thus, callers should increment the expiration or deadline by one\n     * before invocation for optimized performance.\n     * Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n     * the caller to make sure that the higher 96 bits of the `owner` and `spender` parameters are clean.\n     * @param token The address of the ERC20 token on which to call the permit function.\n     * @param owner The owner of the tokens. This address should have signed the off-chain permit.\n     * @param spender The address which will be approved for transfer of tokens.\n     * @param permit The off-chain permit data, containing different fields depending on the type of permit function.\n     * @return success A boolean indicating whether the permit call was successful.\n     */\n    function tryPermit(IERC20 token, address owner, address spender, bytes calldata permit) internal returns(bool success) {\n        // load function selectors for different permit standards\n        bytes4 permitSelector = IERC20Permit.permit.selector;\n        bytes4 daiPermitSelector = IDaiLikePermit.permit.selector;\n        bytes4 permit2Selector = IPermit2.permit.selector;\n        bytes4 erc7597PermitSelector = IERC7597Permit.permit.selector;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n\n            // Switch case for different permit lengths, indicating different permit standards\n            switch permit.length\n            // Compact IERC20Permit\n            case 100 {\n                mstore(ptr, permitSelector)     // store selector\n                mstore(add(ptr, 0x04), owner)   // store owner\n                mstore(add(ptr, 0x24), spender) // store spender\n\n                // Compact IERC20Permit.permit(uint256 value, uint32 deadline, uint256 r, uint256 vs)\n                {  // stack too deep\n                    let deadline := shr(224, calldataload(add(permit.offset, 0x20))) // loads permit.offset 0x20..0x23\n                    let vs := calldataload(add(permit.offset, 0x44))                 // loads permit.offset 0x44..0x63\n\n                    calldatacopy(add(ptr, 0x44), permit.offset, 0x20)            // store value     = copy permit.offset 0x00..0x19\n                    mstore(add(ptr, 0x64), sub(deadline, 1))                     // store deadline  = deadline - 1\n                    mstore(add(ptr, 0x84), add(27, shr(255, vs)))                // store v         = most significant bit of vs + 27 (27 or 28)\n                    calldatacopy(add(ptr, 0xa4), add(permit.offset, 0x24), 0x20) // store r         = copy permit.offset 0x24..0x43\n                    mstore(add(ptr, 0xc4), shr(1, shl(1, vs)))                   // store s         = vs without most significant bit\n                }\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\n            }\n            // Compact IDaiLikePermit\n            case 72 {\n                mstore(ptr, daiPermitSelector)  // store selector\n                mstore(add(ptr, 0x04), owner)   // store owner\n                mstore(add(ptr, 0x24), spender) // store spender\n\n                // Compact IDaiLikePermit.permit(uint32 nonce, uint32 expiry, uint256 r, uint256 vs)\n                {  // stack too deep\n                    let expiry := shr(224, calldataload(add(permit.offset, 0x04))) // loads permit.offset 0x04..0x07\n                    let vs := calldataload(add(permit.offset, 0x28))               // loads permit.offset 0x28..0x47\n\n                    mstore(add(ptr, 0x44), shr(224, calldataload(permit.offset))) // store nonce   = copy permit.offset 0x00..0x03\n                    mstore(add(ptr, 0x64), sub(expiry, 1))                        // store expiry  = expiry - 1\n                    mstore(add(ptr, 0x84), true)                                  // store allowed = true\n                    mstore(add(ptr, 0xa4), add(27, shr(255, vs)))                 // store v       = most significant bit of vs + 27 (27 or 28)\n                    calldatacopy(add(ptr, 0xc4), add(permit.offset, 0x08), 0x20)  // store r       = copy permit.offset 0x08..0x27\n                    mstore(add(ptr, 0xe4), shr(1, shl(1, vs)))                    // store s       = vs without most significant bit\n                }\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\n            }\n            // IERC20Permit\n            case 224 {\n                mstore(ptr, permitSelector)\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\n                // IERC20Permit.permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\n                success := call(gas(), token, 0, ptr, 0xe4, 0, 0)\n            }\n            // IDaiLikePermit\n            case 256 {\n                mstore(ptr, daiPermitSelector)\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\n                // IDaiLikePermit.permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\n                success := call(gas(), token, 0, ptr, 0x104, 0, 0)\n            }\n            // Compact IPermit2\n            case 96 {\n                // Compact IPermit2.permit(uint160 amount, uint32 expiration, uint32 nonce, uint32 sigDeadline, uint256 r, uint256 vs)\n                mstore(ptr, permit2Selector)  // store selector\n                mstore(add(ptr, 0x04), owner) // store owner\n                mstore(add(ptr, 0x24), token) // store token\n\n                calldatacopy(add(ptr, 0x50), permit.offset, 0x14)             // store amount = copy permit.offset 0x00..0x13\n                // and(0xffffffffffff, ...) - conversion to uint48\n                mstore(add(ptr, 0x64), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x14))), 1))) // store expiration = ((permit.offset 0x14..0x17 - 1) & 0xffffffffffff)\n                mstore(add(ptr, 0x84), shr(224, calldataload(add(permit.offset, 0x18)))) // store nonce = copy permit.offset 0x18..0x1b\n                mstore(add(ptr, 0xa4), spender)                               // store spender\n                // and(0xffffffffffff, ...) - conversion to uint48\n                mstore(add(ptr, 0xc4), and(0xffffffffffff, sub(shr(224, calldataload(add(permit.offset, 0x1c))), 1))) // store sigDeadline = ((permit.offset 0x1c..0x1f - 1) & 0xffffffffffff)\n                mstore(add(ptr, 0xe4), 0x100)                                 // store offset = 256\n                mstore(add(ptr, 0x104), 0x40)                                 // store length = 64\n                calldatacopy(add(ptr, 0x124), add(permit.offset, 0x20), 0x20) // store r      = copy permit.offset 0x20..0x3f\n                calldatacopy(add(ptr, 0x144), add(permit.offset, 0x40), 0x20) // store vs     = copy permit.offset 0x40..0x5f\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\n            }\n            // IPermit2\n            case 352 {\n                mstore(ptr, permit2Selector)\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\n                // IPermit2.permit(address owner, PermitSingle calldata permitSingle, bytes calldata signature)\n                success := call(gas(), _PERMIT2, 0, ptr, 0x164, 0, 0)\n            }\n            // Dynamic length\n            default {\n                mstore(ptr, erc7597PermitSelector)\n                calldatacopy(add(ptr, 0x04), permit.offset, permit.length) // copy permit calldata\n                // IERC7597Permit.permit(address owner, address spender, uint256 value, uint256 deadline, bytes memory signature)\n                success := call(gas(), token, 0, ptr, add(permit.length, 4), 0, 0)\n            }\n        }\n    }\n\n    /**\n     * @dev Executes a low level call to a token contract, making it resistant to reversion and erroneous boolean returns.\n     * @param token The IERC20 token contract on which the call will be made.\n     * @param selector The function signature that is to be called on the token contract.\n     * @param to The address to which the token amount will be transferred.\n     * @param amount The token amount to be transferred.\n     * @return success A boolean indicating if the call was successful. Returns 'true' on success and 'false' on failure.\n     * In case of success but no returned data, validates that the contract code exists.\n     * In case of returned data, ensures that it's a boolean `true`.\n     */\n    function _makeCall(\n        IERC20 token,\n        bytes4 selector,\n        address to,\n        uint256 amount\n    ) private returns (bool success) {\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let data := mload(0x40)\n\n            mstore(data, selector)\n            mstore(add(data, 0x04), to)\n            mstore(add(data, 0x24), amount)\n            success := call(gas(), token, 0, data, 0x44, 0x0, 0x20)\n            if success {\n                switch returndatasize()\n                case 0 {\n                    success := gt(extcodesize(token), 0)\n                }\n                default {\n                    success := and(gt(returndatasize(), 31), eq(mload(0), 1))\n                }\n            }\n        }\n    }\n\n    /**\n     * @notice Safely deposits a specified amount of Ether into the IWETH contract. Consumes less gas then regular `IWETH.deposit`.\n     * @param weth The IWETH token contract.\n     * @param amount The amount of Ether to deposit into the IWETH contract.\n     */\n    function safeDeposit(IWETH weth, uint256 amount) internal {\n        if (amount > 0) {\n            bytes4 selector = IWETH.deposit.selector;\n            assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n                mstore(0, selector)\n                if iszero(call(gas(), weth, amount, 0, 4, 0, 0)) {\n                    let ptr := mload(0x40)\n                    returndatacopy(ptr, 0, returndatasize())\n                    revert(ptr, returndatasize())\n                }\n            }\n        }\n    }\n\n    /**\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract. Consumes less gas then regular `IWETH.withdraw`.\n     * @dev Uses inline assembly to interact with the IWETH contract.\n     * @param weth The IWETH token contract.\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\n     */\n    function safeWithdraw(IWETH weth, uint256 amount) internal {\n        bytes4 selector = IWETH.withdraw.selector;\n        assembly (\"memory-safe\") {  // solhint-disable-line no-inline-assembly\n            mstore(0, selector)\n            mstore(4, amount)\n            if iszero(call(gas(), weth, 0, 0, 0x24, 0, 0)) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract to a specified recipient.\n     * Consumes less gas then regular `IWETH.withdraw`.\n     * @param weth The IWETH token contract.\n     * @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\n     * @param to The recipient of the withdrawn Ether.\n     */\n    function safeWithdrawTo(IWETH weth, uint256 amount, address to) internal {\n        safeWithdraw(weth, amount);\n        if (to != address(this)) {\n            assembly (\"memory-safe\") {  // solhint-disable-line no-inline-assembly\n                if iszero(call(_RAW_CALL_GAS_LIMIT, to, amount, 0, 0, 0, 0)) {\n                    let ptr := mload(0x40)\n                    returndatacopy(ptr, 0, returndatasize())\n                    revert(ptr, returndatasize())\n                }\n            }\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-settlement/contracts/extensions/BaseExtension.sol\n\n/**\n * @title Base Extension contract\n * @notice Contract to define the basic functionality for the limit orders settlement.\n */\ncontract BaseExtension is IPreInteraction, IPostInteraction, IAmountGetter {\n    error OnlyLimitOrderProtocol();\n\n    uint256 private constant _BASE_POINTS = 10_000_000; // 100%\n    uint256 private constant _GAS_PRICE_BASE = 1_000_000; // 1000 means 1 Gwei\n\n    address private immutable _LIMIT_ORDER_PROTOCOL;\n\n    /// @dev Modifier to check if the caller is the limit order protocol contract.\n    modifier onlyLimitOrderProtocol {\n        if (msg.sender != _LIMIT_ORDER_PROTOCOL) revert OnlyLimitOrderProtocol();\n        _;\n    }\n\n    /**\n     * @notice Initializes the contract.\n     * @param limitOrderProtocol The limit order protocol contract.\n     */\n    constructor(address limitOrderProtocol) {\n        _LIMIT_ORDER_PROTOCOL = limitOrderProtocol;\n    }\n\n    /**\n     * See {IAmountGetter-getMakingAmount}\n     */\n    function getMakingAmount(\n        IOrderMixin.Order calldata order,\n        bytes calldata /* extension */,\n        bytes32 /* orderHash */,\n        address /* taker */,\n        uint256 takingAmount,\n        uint256 /* remainingMakingAmount */,\n        bytes calldata extraData\n    ) external view returns (uint256) {\n        uint256 rateBump = _getRateBump(extraData);\n        return Math.mulDiv(order.makingAmount, takingAmount * _BASE_POINTS, order.takingAmount * (_BASE_POINTS + rateBump));\n    }\n\n    /**\n     * See {IAmountGetter-getTakingAmount}\n     */\n    function getTakingAmount(\n        IOrderMixin.Order calldata order,\n        bytes calldata /* extension */,\n        bytes32 /* orderHash */,\n        address /* taker */,\n        uint256 makingAmount,\n        uint256 /* remainingMakingAmount */,\n        bytes calldata extraData\n    ) external view returns (uint256) {\n        uint256 rateBump = _getRateBump(extraData);\n        return Math.mulDiv(order.takingAmount, makingAmount * (_BASE_POINTS + rateBump), order.makingAmount * _BASE_POINTS, Math.Rounding.Ceil);\n    }\n\n    /**\n     * See {IPreInteraction-preInteraction}\n     */\n    function preInteraction(\n        IOrderMixin.Order calldata order,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address taker,\n        uint256 makingAmount,\n        uint256 takingAmount,\n        uint256 remainingMakingAmount,\n        bytes calldata extraData\n    ) external onlyLimitOrderProtocol {\n        _preInteraction(order, extension, orderHash, taker, makingAmount, takingAmount, remainingMakingAmount, extraData);\n    }\n\n    /**\n     * See {IPostInteraction-postInteraction}\n     */\n    function postInteraction(\n        IOrderMixin.Order calldata order,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address taker,\n        uint256 makingAmount,\n        uint256 takingAmount,\n        uint256 remainingMakingAmount,\n        bytes calldata extraData\n    ) external onlyLimitOrderProtocol {\n        _postInteraction(order, extension, orderHash, taker, makingAmount, takingAmount, remainingMakingAmount, extraData);\n    }\n\n    function _preInteraction(\n        IOrderMixin.Order calldata order,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address taker,\n        uint256 makingAmount,\n        uint256 takingAmount,\n        uint256 remainingMakingAmount,\n        bytes calldata extraData\n    ) internal virtual {}\n\n    function _postInteraction(\n        IOrderMixin.Order calldata order,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address taker,\n        uint256 makingAmount,\n        uint256 takingAmount,\n        uint256 remainingMakingAmount,\n        bytes calldata extraData\n    ) internal virtual {\n        // Allows to add custom postInteractions\n        if (extraData.length > 20) {\n            IPostInteraction(address(bytes20(extraData))).postInteraction(order, extension, orderHash, taker, makingAmount, takingAmount, remainingMakingAmount, extraData[20 : extraData.length - 1]);\n        }\n    }\n\n    /**\n     * @dev Parses auction rate bump data from the `auctionDetails` field.\n     * `gasBumpEstimate` and `gasPriceEstimate` are used to estimate the transaction costs\n     * which are then offset from the auction rate bump.\n     * @param auctionDetails AuctionDetails is a tightly packed struct of the following format:\n     * ```\n     * struct AuctionDetails {\n     *     bytes3 gasBumpEstimate;\n     *     bytes4 gasPriceEstimate;\n     *     bytes4 auctionStartTime;\n     *     bytes3 auctionDuration;\n     *     bytes3 initialRateBump;\n     *     (bytes3,bytes2)[N] pointsAndTimeDeltas;\n     * }\n     * ```\n     * @return rateBump The rate bump.\n     */\n    function _getRateBump(bytes calldata auctionDetails) private view returns (uint256) {\n        unchecked {\n            uint256 gasBumpEstimate = uint24(bytes3(auctionDetails[0:3]));\n            uint256 gasPriceEstimate = uint32(bytes4(auctionDetails[3:7]));\n            uint256 gasBump = gasBumpEstimate == 0 || gasPriceEstimate == 0 ? 0 : gasBumpEstimate * block.basefee / gasPriceEstimate / _GAS_PRICE_BASE;\n            uint256 auctionStartTime = uint32(bytes4(auctionDetails[7:11]));\n            uint256 auctionFinishTime = auctionStartTime + uint24(bytes3(auctionDetails[11:14]));\n            uint256 initialRateBump = uint24(bytes3(auctionDetails[14:17]));\n            uint256 auctionBump = _getAuctionBump(auctionStartTime, auctionFinishTime, initialRateBump, auctionDetails[17:]);\n            return auctionBump > gasBump ? auctionBump - gasBump : 0;\n        }\n    }\n\n    /**\n     * @dev Calculates auction price bump. Auction is represented as a piecewise linear function with `N` points.\n     * Each point is represented as a pair of `(rateBump, timeDelta)`, where `rateBump` is the\n     * rate bump in basis points and `timeDelta` is the time delta in seconds.\n     * The rate bump is interpolated linearly between the points.\n     * The last point is assumed to be `(0, auctionDuration)`.\n     * @param auctionStartTime The time when the auction starts.\n     * @param auctionFinishTime The time when the auction finishes.\n     * @param initialRateBump The initial rate bump.\n     * @param pointsAndTimeDeltas The points and time deltas structure.\n     * @return The rate bump at the current time.\n     */\n    function _getAuctionBump(uint256 auctionStartTime, uint256 auctionFinishTime, uint256 initialRateBump, bytes calldata pointsAndTimeDeltas) private view returns (uint256) {\n        unchecked {\n            if (block.timestamp <= auctionStartTime) {\n                return initialRateBump;\n            } else if (block.timestamp >= auctionFinishTime) {\n                return 0;\n            }\n\n            uint256 currentPointTime = auctionStartTime;\n            uint256 currentRateBump = initialRateBump;\n\n            while (pointsAndTimeDeltas.length > 0) {\n                uint256 nextRateBump = uint24(bytes3(pointsAndTimeDeltas[:3]));\n                uint256 nextPointTime = currentPointTime + uint16(bytes2(pointsAndTimeDeltas[3:5]));\n                if (block.timestamp <= nextPointTime) {\n                    return ((block.timestamp - currentPointTime) * nextRateBump + (nextPointTime - block.timestamp) * currentRateBump) / (nextPointTime - currentPointTime);\n                }\n                currentRateBump = nextRateBump;\n                currentPointTime = nextPointTime;\n                pointsAndTimeDeltas = pointsAndTimeDeltas[5:];\n            }\n            return (auctionFinishTime - block.timestamp) * currentRateBump / (auctionFinishTime - currentPointTime);\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/libraries/UniERC20.sol\n\n/**\n * @title UniERC20\n * @dev Library to abstract the handling of ETH and ERC20 tokens, enabling unified interaction with both. It allows usage of ETH as ERC20.\n * Utilizes SafeERC20 for ERC20 interactions and provides additional utility functions.\n */\nlibrary UniERC20 {\n    using SafeERC20 for IERC20;\n\n    error InsufficientBalance();\n    error ApproveCalledOnETH();\n    error NotEnoughValue();\n    error FromIsNotSender();\n    error ToIsNotThis();\n    error ETHTransferFailed();\n\n    uint256 private constant _RAW_CALL_GAS_LIMIT = 5000;\n    IERC20 private constant _ETH_ADDRESS = IERC20(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\n    IERC20 private constant _ZERO_ADDRESS = IERC20(address(0));\n\n    /**\n     * @dev Determines if the specified token is ETH.\n     * @param token The token to check.\n     * @return bool True if the token is ETH, false otherwise.\n     */\n    function isETH(IERC20 token) internal pure returns (bool) {\n        return (token == _ZERO_ADDRESS || token == _ETH_ADDRESS);\n    }\n\n    /**\n     * @dev Retrieves the balance of the specified token for an account.\n     * @param token The token to query the balance of.\n     * @param account The address of the account.\n     * @return uint256 The balance of the token for the specified account.\n     */\n    function uniBalanceOf(IERC20 token, address account) internal view returns (uint256) {\n        if (isETH(token)) {\n            return account.balance;\n        } else {\n            return token.balanceOf(account);\n        }\n    }\n\n    /**\n     * @dev Transfers a specified amount of the token to a given address.\n     * Note: Does nothing if the amount is zero.\n     * @param token The token to transfer.\n     * @param to The address to transfer the token to.\n     * @param amount The amount of the token to transfer.\n     */\n    function uniTransfer(\n        IERC20 token,\n        address payable to,\n        uint256 amount\n    ) internal {\n        if (amount > 0) {\n            if (isETH(token)) {\n                if (address(this).balance < amount) revert InsufficientBalance();\n                // solhint-disable-next-line avoid-low-level-calls\n                (bool success, ) = to.call{value: amount, gas: _RAW_CALL_GAS_LIMIT}(\"\");\n                if (!success) revert ETHTransferFailed();\n            } else {\n                token.safeTransfer(to, amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a specified amount of the token from one address to another.\n     * Note: Does nothing if the amount is zero.\n     * @param token The token to transfer.\n     * @param from The address to transfer the token from.\n     * @param to The address to transfer the token to.\n     * @param amount The amount of the token to transfer.\n     */\n    function uniTransferFrom(\n        IERC20 token,\n        address payable from,\n        address to,\n        uint256 amount\n    ) internal {\n        if (amount > 0) {\n            if (isETH(token)) {\n                if (msg.value < amount) revert NotEnoughValue();\n                if (from != msg.sender) revert FromIsNotSender();\n                if (to != address(this)) revert ToIsNotThis();\n                if (msg.value > amount) {\n                    // Return remainder if exist\n                    unchecked {\n                        // solhint-disable-next-line avoid-low-level-calls\n                        (bool success, ) = from.call{value: msg.value - amount, gas: _RAW_CALL_GAS_LIMIT}(\"\");\n                        if (!success) revert ETHTransferFailed();\n                    }\n                }\n            } else {\n                token.safeTransferFrom(from, to, amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Retrieves the symbol from ERC20 metadata of the specified token.\n     * @param token The token to retrieve the symbol of.\n     * @return string The symbol of the token.\n     */\n    function uniSymbol(IERC20 token) internal view returns (string memory) {\n        return _uniDecode(token, IERC20Metadata.symbol.selector, IERC20MetadataUppercase.SYMBOL.selector);\n    }\n\n    /**\n     * @dev Retrieves the name from ERC20 metadata of the specified token.\n     * @param token The token to retrieve the name of.\n     * @return string The name of the token.\n     */\n    function uniName(IERC20 token) internal view returns (string memory) {\n        return _uniDecode(token, IERC20Metadata.name.selector, IERC20MetadataUppercase.NAME.selector);\n    }\n\n    /**\n     * @dev forceApprove the specified amount of the token to a given address.\n     * Reverts if the token is ETH.\n     * @param token The token to approve.\n     * @param to The address to approve the token to.\n     * @param amount The amount of the token to approve.\n     */\n    function uniApprove(\n        IERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        if (isETH(token)) revert ApproveCalledOnETH();\n\n        token.forceApprove(to, amount);\n    }\n\n    /**\n     * @dev Internal function to decode token metadata (name or symbol).\n     * 20K gas is provided to account for possible implementations of name/symbol\n     * (token implementation might be behind proxy or store the value in storage)\n     * @param token The token to decode metadata for.\n     * @param lowerCaseSelector The selector for the lowercase metadata function.\n     * @param upperCaseSelector The selector for the uppercase metadata function.\n     * @return result The decoded metadata value.\n     */\n    function _uniDecode(\n        IERC20 token,\n        bytes4 lowerCaseSelector,\n        bytes4 upperCaseSelector\n    ) private view returns (string memory result) {\n        if (isETH(token)) {\n            return \"ETH\";\n        }\n\n        (bool success, bytes memory data) = address(token).staticcall{gas: 20000}(\n            abi.encodeWithSelector(lowerCaseSelector)\n        );\n        if (!success) {\n            (success, data) = address(token).staticcall{gas: 20000}(abi.encodeWithSelector(upperCaseSelector));\n        }\n\n        if (success && data.length >= 0x40) {\n            (uint256 offset, uint256 len) = abi.decode(data, (uint256, uint256));\n            /*\n                return data is padded up to 32 bytes with ABI encoder also sometimes\n                there is extra 32 bytes of zeros padded in the end:\n                https://github.com/ethereum/solidity/issues/10170\n                because of that we can't check for equality and instead check\n                that overall data length is greater or equal than string length + extra 64 bytes\n            */\n            if (offset == 0x20 && data.length >= 0x40 + len) {\n                assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n                    result := add(data, 0x40)\n                }\n                return result;\n            }\n        }\n        if (success && data.length == 32) {\n            uint256 len = 0;\n            while (len < data.length && data[len] >= 0x20 && data[len] <= 0x7E) {\n                unchecked {\n                    len++;\n                }\n            }\n\n            if (len > 0) {\n                assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n                    mstore(data, len)\n                }\n                return string(data);\n            }\n        }\n\n        return StringUtil.toHex(address(token));\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/BaseEscrow.sol\n\n/**\n * @title Base abstract Escrow contract for cross-chain atomic swap.\n * @dev {IBaseEscrow-withdraw}, {IBaseEscrow-cancel} and _validateImmutables functions must be implemented in the derived contracts.\n * @custom:security-contact security@1inch.io\n */\nabstract contract BaseEscrow is IBaseEscrow {\n    using AddressLib for Address;\n    using SafeERC20 for IERC20;\n    using TimelocksLib for Timelocks;\n    using ImmutablesLib for Immutables;\n\n    /// @notice See {IBaseEscrow-RESCUE_DELAY}.\n    uint256 public immutable RESCUE_DELAY;\n    /// @notice See {IBaseEscrow-FACTORY}.\n    address public immutable FACTORY = msg.sender;\n\n    constructor(uint32 rescueDelay) {\n        RESCUE_DELAY = rescueDelay;\n    }\n\n    modifier onlyTaker(Immutables calldata immutables) {\n        if (msg.sender != immutables.taker.get()) revert InvalidCaller();\n        _;\n    }\n\n    modifier onlyValidImmutables(Immutables calldata immutables) virtual {\n        _validateImmutables(immutables);\n        _;\n    }\n\n    modifier onlyValidSecret(bytes32 secret, Immutables calldata immutables) {\n        if (_keccakBytes32(secret) != immutables.hashlock) revert InvalidSecret();\n        _;\n    }\n\n    modifier onlyAfter(uint256 start) {\n        if (block.timestamp < start) revert InvalidTime();\n        _;\n    }\n\n    modifier onlyBefore(uint256 stop) {\n        if (block.timestamp >= stop) revert InvalidTime();\n        _;\n    }\n\n    /**\n     * @notice See {IBaseEscrow-rescueFunds}.\n     */\n    function rescueFunds(address token, uint256 amount, Immutables calldata immutables)\n        external\n        onlyTaker(immutables)\n        onlyValidImmutables(immutables)\n        onlyAfter(immutables.timelocks.rescueStart(RESCUE_DELAY))\n    {\n        _uniTransfer(token, msg.sender, amount);\n        emit FundsRescued(token, amount);\n    }\n\n    /**\n     * @dev Transfers ERC20 or native tokens to the recipient.\n     */\n    function _uniTransfer(address token, address to, uint256 amount) internal {\n        if (token == address(0)) {\n            _ethTransfer(to, amount);\n        } else {\n            IERC20(token).safeTransfer(to, amount);\n        }\n    }\n\n    /**\n     * @dev Transfers native tokens to the recipient.\n     */\n    function _ethTransfer(address to, uint256 amount) internal {\n        (bool success,) = to.call{ value: amount }(\"\");\n        if (!success) revert NativeTokenSendingFailure();\n    }\n\n    /**\n     * @dev Should verify that the computed escrow address matches the address of this contract.\n     */\n    function _validateImmutables(Immutables calldata immutables) internal view virtual;\n\n    /**\n     * @dev Computes the Keccak-256 hash of the secret.\n     * @param secret The secret that unlocks the escrow.\n     * @return ret The computed hash.\n     */\n    function _keccakBytes32(bytes32 secret) private pure returns (bytes32 ret) {\n        assembly (\"memory-safe\") {\n            mstore(0, secret)\n            ret := keccak256(0, 0x20)\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/MerkleStorageInvalidator.sol\n\n // solhint-disable-line no-unused-import\n\n/**\n * @title Merkle Storage Invalidator contract\n * @notice Contract to invalidate hashed secrets from an order that supports multiple fills.\n * @custom:security-contact security@1inch.io\n */\ncontract MerkleStorageInvalidator is IMerkleStorageInvalidator, ITakerInteraction {\n    using MerkleProof for bytes32[];\n    using ExtensionLib_1 for bytes;\n\n    address private immutable _LIMIT_ORDER_PROTOCOL;\n\n    /// @notice See {IMerkleStorageInvalidator-lastValidated}.\n    mapping(bytes32 key => ValidationData) public lastValidated;\n\n    /// @notice Only limit order protocol can call this contract.\n    modifier onlyLOP() {\n        if (msg.sender != _LIMIT_ORDER_PROTOCOL) {\n            revert AccessDenied();\n        }\n        _;\n    }\n\n    constructor(address limitOrderProtocol) {\n        _LIMIT_ORDER_PROTOCOL = limitOrderProtocol;\n    }\n\n    /**\n     * @notice See {ITakerInteraction-takerInteraction}.\n     * @dev Verifies the proof and stores the last validated index and hashed secret.\n     * Only Limit Order Protocol can call this function.\n     */\n    function takerInteraction(\n        IOrderMixin.Order calldata /* order */,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address /* taker */,\n        uint256 /* makingAmount */,\n        uint256 /* takingAmount */,\n        uint256 /* remainingMakingAmount */,\n        bytes calldata extraData\n    ) external onlyLOP {\n        bytes calldata postInteraction = extension.postInteractionTargetAndData();\n        IEscrowFactory.ExtraDataArgs calldata extraDataArgs;\n        TakerData calldata takerData;\n        assembly (\"memory-safe\") {\n            extraDataArgs := add(postInteraction.offset, sub(postInteraction.length, SRC_IMMUTABLES_LENGTH))\n            takerData := extraData.offset\n        }\n        uint240 rootShortened = uint240(uint256(extraDataArgs.hashlockInfo));\n        bytes32 key = keccak256(abi.encodePacked(orderHash, rootShortened));\n        bytes32 rootCalculated = takerData.proof.processProofCalldata(\n            keccak256(abi.encodePacked(uint64(takerData.idx), takerData.secretHash))\n        );\n        if (uint240(uint256(rootCalculated)) != rootShortened) revert InvalidProof();\n        lastValidated[key] = ValidationData(takerData.idx + 1, takerData.secretHash);\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-settlement/contracts/FeeBank.sol\n\n/**\n * @title FeeBank\n * @notice FeeBank contract introduces a credit system for paying fees.\n * A user can deposit tokens to the FeeBank contract, obtain credits and then use them to pay fees.\n * @dev FeeBank is coupled with FeeBankCharger to actually charge fees.\n */\ncontract FeeBank is IFeeBank, Ownable {\n    using SafeERC20 for IERC20;\n    using UniERC20 for IERC20;\n\n    error ZeroAddress();\n\n    IERC20 private immutable _FEE_TOKEN;\n    IFeeBankCharger private immutable _CHARGER;\n\n    mapping(address account => uint256 availableCredit) private _accountDeposits;\n\n    constructor(IFeeBankCharger charger, IERC20 feeToken, address owner) Ownable(owner) {\n        if (address(feeToken) == address(0)) revert ZeroAddress();\n        _CHARGER = charger;\n        _FEE_TOKEN = feeToken;\n    }\n\n    /**\n     * @notice See {IFeeBank-availableCredit}.\n     */\n    function availableCredit(address account) external view returns (uint256) {\n        return _CHARGER.availableCredit(account);\n    }\n\n    /**\n     * @notice See {IFeeBank-deposit}.\n     */\n    function deposit(uint256 amount) external returns (uint256) {\n        return _depositFor(msg.sender, amount);\n    }\n\n    /**\n     * @notice See {IFeeBank-depositFor}.\n     */\n    function depositFor(address account, uint256 amount) external returns (uint256) {\n        return _depositFor(account, amount);\n    }\n\n    /**\n     * @notice See {IFeeBank-depositWithPermit}.\n     */\n    function depositWithPermit(uint256 amount, bytes calldata permit) external returns (uint256) {\n        return depositForWithPermit(msg.sender, amount, permit);\n    }\n\n    /**\n     * @notice See {IFeeBank-depositForWithPermit}.\n     */\n    function depositForWithPermit(\n        address account,\n        uint256 amount,\n        bytes calldata permit\n    ) public returns (uint256) {\n        _FEE_TOKEN.safePermit(permit);\n        return _depositFor(account, amount);\n    }\n\n    /**\n     * @notice See {IFeeBank-withdraw}.\n     */\n    function withdraw(uint256 amount) external returns (uint256) {\n        return _withdrawTo(msg.sender, amount);\n    }\n\n    /**\n     * @notice See {IFeeBank-withdrawTo}.\n     */\n    function withdrawTo(address account, uint256 amount) external returns (uint256) {\n        return _withdrawTo(account, amount);\n    }\n\n    /**\n     * @notice Admin method returns commissions spent by users.\n     * @param accounts Accounts whose commissions are being withdrawn.\n     * @return totalAccountFees The total amount of accounts commissions.\n     */\n    function gatherFees(address[] calldata accounts) external onlyOwner returns (uint256 totalAccountFees) {\n        uint256 accountsLength = accounts.length;\n        unchecked {\n            for (uint256 i = 0; i < accountsLength; ++i) {\n                address account = accounts[i];\n                uint256 accountDeposit = _accountDeposits[account];\n                uint256 availableCredit_ = _CHARGER.availableCredit(account);\n                _accountDeposits[account] = availableCredit_;\n                totalAccountFees += accountDeposit - availableCredit_;  // overflow is impossible due to checks in FeeBankCharger\n            }\n        }\n        _FEE_TOKEN.safeTransfer(msg.sender, totalAccountFees);\n    }\n\n    function _depositFor(address account, uint256 amount) internal returns (uint256 totalAvailableCredit) {\n        if (account == address(0)) revert ZeroAddress();\n        _FEE_TOKEN.safeTransferFrom(msg.sender, address(this), amount);\n        unchecked {\n            _accountDeposits[account] += amount;  // overflow is impossible due to limited _FEE_TOKEN supply\n        }\n        totalAvailableCredit = _CHARGER.increaseAvailableCredit(account, amount);\n    }\n\n    function _withdrawTo(address account, uint256 amount) internal returns (uint256 totalAvailableCredit) {\n        totalAvailableCredit = _CHARGER.decreaseAvailableCredit(msg.sender, amount);\n        unchecked {\n            _accountDeposits[msg.sender] -= amount;  // underflow is impossible due to checks in FeeBankCharger\n        }\n        _FEE_TOKEN.safeTransfer(account, amount);\n    }\n\n    /**\n     * @notice Retrieves funds accidently sent directly to the contract address\n     * @param token ERC20 token to retrieve\n     * @param amount amount to retrieve\n     */\n    function rescueFunds(IERC20 token, uint256 amount) external onlyOwner {\n        token.uniTransfer(payable(msg.sender), amount);\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/Escrow.sol\n\n/**\n * @title Abstract Escrow contract for cross-chain atomic swap.\n * @dev {IBaseEscrow-withdraw} and {IBaseEscrow-cancel} functions must be implemented in the derived contracts.\n * @custom:security-contact security@1inch.io\n */\nabstract contract Escrow is BaseEscrow, IEscrow {\n    using ImmutablesLib for Immutables;\n\n    /// @notice See {IEscrow-PROXY_BYTECODE_HASH}.\n    bytes32 public immutable PROXY_BYTECODE_HASH = ProxyHashLib.computeProxyBytecodeHash(address(this));\n\n    /**\n     * @dev Verifies that the computed escrow address matches the address of this contract.\n     */\n    function _validateImmutables(Immutables calldata immutables) internal view virtual override {\n        bytes32 salt = immutables.hash();\n        if (Create2.computeAddress(salt, PROXY_BYTECODE_HASH, FACTORY) != address(this)) {\n            revert InvalidImmutables();\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-settlement/contracts/FeeBankCharger.sol\n\n/**\n * @title FeeBankCharger\n * @notice FeeBankCharger contract implements logic to increase or decrease users' credits in FeeBank.\n */\ncontract FeeBankCharger is IFeeBankCharger {\n    error OnlyFeeBankAccess();\n    error NotEnoughCredit();\n\n    /**\n     * @notice See {IFeeBankCharger-feeBank}.\n     */\n    IFeeBank public immutable FEE_BANK;\n    mapping(address => uint256) private _creditAllowance;\n\n    /**\n     * @dev Modifier to check if the sender is a FEE_BANK contract.\n     */\n    modifier onlyFeeBank() {\n        if (msg.sender != address(FEE_BANK)) revert OnlyFeeBankAccess();\n        _;\n    }\n\n    constructor(IERC20 feeToken, address owner) {\n        FEE_BANK = new FeeBank(this, feeToken, owner);\n    }\n\n    /**\n     * @notice See {IFeeBankCharger-availableCredit}.\n     */\n    function availableCredit(address account) external view returns (uint256) {\n        return _creditAllowance[account];\n    }\n\n    /**\n     * @notice See {IFeeBankCharger-increaseAvailableCredit}.\n     */\n    function increaseAvailableCredit(address account, uint256 amount) external onlyFeeBank returns (uint256 allowance) {\n        allowance = _creditAllowance[account];\n        unchecked {\n            allowance += amount;  // overflow is impossible due to limited _token supply\n        }\n        _creditAllowance[account] = allowance;\n    }\n\n    /**\n     * @notice See {IFeeBankCharger-decreaseAvailableCredit}.\n     */\n    function decreaseAvailableCredit(address account, uint256 amount) external onlyFeeBank returns (uint256 allowance) {\n        return _creditAllowance[account] -= amount;  // checked math is needed to prevent underflow\n    }\n\n    /**\n     * @notice Internal function that charges a specified fee from a given account's credit allowance.\n     * @dev Reverts with 'NotEnoughCredit' if the account's credit allowance is insufficient to cover the fee.\n     * @param account The address of the account from which the fee is being charged.\n     * @param fee The amount of fee to be charged from the account.\n     */\n    function _chargeFee(address account, uint256 fee) internal virtual {\n        if (fee > 0) {\n            uint256 currentAllowance = _creditAllowance[account];\n            if (currentAllowance < fee) revert NotEnoughCredit();\n            unchecked {\n                _creditAllowance[account] = currentAllowance - fee;\n            }\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/EscrowDst.sol\n\n/**\n * @title Destination Escrow contract for cross-chain atomic swap.\n * @notice Contract to initially lock funds and then unlock them with verification of the secret presented.\n * @dev Funds are locked in at the time of contract deployment. For this taker calls the `EscrowFactory.createDstEscrow` function.\n * To perform any action, the caller must provide the same Immutables values used to deploy the clone contract.\n * @custom:security-contact security@1inch.io\n */\ncontract EscrowDst is Escrow, IEscrowDst {\n    using SafeERC20 for IERC20;\n    using AddressLib for Address;\n    using TimelocksLib for Timelocks;\n\n    constructor(uint32 rescueDelay) BaseEscrow(rescueDelay) {}\n\n    /**\n     * @notice See {IBaseEscrow-withdraw}.\n     * @dev The function works on the time intervals highlighted with capital letters:\n     * ---- contract deployed --/-- finality --/-- PRIVATE WITHDRAWAL --/-- PUBLIC WITHDRAWAL --/-- private cancellation ----\n     */\n    function withdraw(bytes32 secret, Immutables calldata immutables)\n        external\n        onlyTaker(immutables)\n        onlyAfter(immutables.timelocks.get(TimelocksLib.Stage.DstWithdrawal))\n        onlyBefore(immutables.timelocks.get(TimelocksLib.Stage.DstCancellation))\n    {\n        _withdraw(secret, immutables);\n    }\n\n    /**\n     * @notice See {IBaseEscrow-publicWithdraw}.\n     * @dev The function works on the time intervals highlighted with capital letters:\n     * ---- contract deployed --/-- finality --/-- private withdrawal --/-- PUBLIC WITHDRAWAL --/-- private cancellation ----\n     */\n    function publicWithdraw(bytes32 secret, Immutables calldata immutables)\n        external\n        onlyAfter(immutables.timelocks.get(TimelocksLib.Stage.DstPublicWithdrawal))\n        onlyBefore(immutables.timelocks.get(TimelocksLib.Stage.DstCancellation))\n    {\n        _withdraw(secret, immutables);\n    }\n\n    /**\n     * @notice See {IBaseEscrow-cancel}.\n     * @dev The function works on the time interval highlighted with capital letters:\n     * ---- contract deployed --/-- finality --/-- private withdrawal --/-- public withdrawal --/-- PRIVATE CANCELLATION ----\n     */\n    function cancel(Immutables calldata immutables)\n        external\n        onlyTaker(immutables)\n        onlyValidImmutables(immutables)\n        onlyAfter(immutables.timelocks.get(TimelocksLib.Stage.DstCancellation))\n    {\n        _uniTransfer(immutables.token.get(), immutables.taker.get(), immutables.amount);\n        _ethTransfer(msg.sender, immutables.safetyDeposit);\n        emit EscrowCancelled();\n    }\n\n    /**\n     * @dev Transfers ERC20 (or native) tokens to the maker and native tokens to the caller.\n     * @param immutables The immutable values used to deploy the clone contract.\n     */\n    function _withdraw(bytes32 secret, Immutables calldata immutables)\n        internal\n        onlyValidImmutables(immutables)\n        onlyValidSecret(secret, immutables)\n    {\n        address token = immutables.token.get();\n        address to = immutables.maker.get();\n        if (token == address(0)) {\n            /**\n             * @dev The result of the call is not checked intentionally. This is done to ensure that\n             * even in case of malicious receiver the withdrawal flow can not be blocked and takers\n             * will be able to get their safety deposit back.\n             **/\n            to.call{ value: immutables.amount }(\"\");\n        } else {\n            IERC20(token).safeTransfer(to, immutables.amount);\n        }\n        _ethTransfer(msg.sender, immutables.safetyDeposit);\n        emit Withdrawal(secret);\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/EscrowSrc.sol\n\n/**\n * @title Source Escrow contract for cross-chain atomic swap.\n * @notice Contract to initially lock funds and then unlock them with verification of the secret presented.\n * @dev Funds are locked in at the time of contract deployment. For this Limit Order Protocol\n * calls the `EscrowFactory.postInteraction` function.\n * To perform any action, the caller must provide the same Immutables values used to deploy the clone contract.\n * @custom:security-contact security@1inch.io\n */\ncontract EscrowSrc is Escrow, IEscrowSrc {\n    using AddressLib for Address;\n    using ImmutablesLib for Immutables;\n    using SafeERC20 for IERC20;\n    using TimelocksLib for Timelocks;\n\n    constructor(uint32 rescueDelay) BaseEscrow(rescueDelay) {}\n\n    /**\n     * @notice See {IBaseEscrow-withdraw}.\n     * @dev The function works on the time interval highlighted with capital letters:\n     * ---- contract deployed --/-- finality --/-- PRIVATE WITHDRAWAL --/-- PUBLIC WITHDRAWAL --/--\n     * --/-- private cancellation --/-- public cancellation ----\n     */\n    function withdraw(bytes32 secret, Immutables calldata immutables)\n        external\n        onlyTaker(immutables)\n        onlyAfter(immutables.timelocks.get(TimelocksLib.Stage.SrcWithdrawal))\n        onlyBefore(immutables.timelocks.get(TimelocksLib.Stage.SrcCancellation))\n    {\n        _withdrawTo(secret, msg.sender, immutables);\n    }\n\n    /**\n     * @notice See {IEscrowSrc-withdrawTo}.\n     * @dev The function works on the time interval highlighted with capital letters:\n     * ---- contract deployed --/-- finality --/-- PRIVATE WITHDRAWAL --/-- PUBLIC WITHDRAWAL --/--\n     * --/-- private cancellation --/-- public cancellation ----\n     */\n    function withdrawTo(bytes32 secret, address target, Immutables calldata immutables)\n        external\n        onlyTaker(immutables)\n        onlyAfter(immutables.timelocks.get(TimelocksLib.Stage.SrcWithdrawal))\n        onlyBefore(immutables.timelocks.get(TimelocksLib.Stage.SrcCancellation))\n    {\n        _withdrawTo(secret, target, immutables);\n    }\n\n    /**\n     * @notice See {IEscrowSrc-publicWithdraw}.\n     * @dev The function works on the time interval highlighted with capital letters:\n     * ---- contract deployed --/-- finality --/-- private withdrawal --/-- PUBLIC WITHDRAWAL --/--\n     * --/-- private cancellation --/-- public cancellation ----\n     */\n    function publicWithdraw(bytes32 secret, Immutables calldata immutables)\n        external\n        onlyAfter(immutables.timelocks.get(TimelocksLib.Stage.SrcPublicWithdrawal))\n        onlyBefore(immutables.timelocks.get(TimelocksLib.Stage.SrcCancellation))\n    {\n        _withdrawTo(secret, immutables.taker.get(), immutables);\n    }\n\n    /**\n     * @notice See {IBaseEscrow-cancel}.\n     * @dev The function works on the time intervals highlighted with capital letters:\n     * ---- contract deployed --/-- finality --/-- private withdrawal --/-- public withdrawal --/--\n     * --/-- PRIVATE CANCELLATION --/-- PUBLIC CANCELLATION ----\n     */\n    function cancel(Immutables calldata immutables)\n        external\n        onlyTaker(immutables)\n        onlyAfter(immutables.timelocks.get(TimelocksLib.Stage.SrcCancellation))\n    {\n        _cancel(immutables);\n    }\n\n    /**\n     * @notice See {IEscrowSrc-publicCancel}.\n     * @dev The function works on the time intervals highlighted with capital letters:\n     * ---- contract deployed --/-- finality --/-- private withdrawal --/-- public withdrawal --/--\n     * --/-- private cancellation --/-- PUBLIC CANCELLATION ----\n     */\n    function publicCancel(Immutables calldata immutables)\n        external\n        onlyAfter(immutables.timelocks.get(TimelocksLib.Stage.SrcPublicCancellation))\n    {\n        _cancel(immutables);\n    }\n\n    /**\n     * @dev Transfers ERC20 tokens to the target and native tokens to the caller.\n     * @param secret The secret that unlocks the escrow.\n     * @param target The address to transfer ERC20 tokens to.\n     * @param immutables The immutable values used to deploy the clone contract.\n     */\n    function _withdrawTo(bytes32 secret, address target, Immutables calldata immutables)\n        internal\n        onlyValidImmutables(immutables)\n        onlyValidSecret(secret, immutables)\n    {\n        IERC20(immutables.token.get()).safeTransfer(target, immutables.amount);\n        _ethTransfer(msg.sender, immutables.safetyDeposit);\n        emit Withdrawal(secret);\n    }\n\n    /**\n     * @dev Transfers ERC20 tokens to the maker and native tokens to the caller.\n     * @param immutables The immutable values used to deploy the clone contract.\n     */\n    function _cancel(Immutables calldata immutables) internal onlyValidImmutables(immutables) {\n        IERC20(immutables.token.get()).safeTransfer(immutables.maker.get(), immutables.amount);\n        _ethTransfer(msg.sender, immutables.safetyDeposit);\n        emit EscrowCancelled();\n    }\n}\n\n// contracts/lib/cross-chain-swap/lib/limit-order-settlement/contracts/extensions/ResolverValidationExtension.sol\n\n/**\n * @title Resolver Validation Extension\n * @notice This abstract contract combines functionalities to enhance security and compliance in the order execution process.\n * Ensures that only transactions from whitelisted resolvers or resolvers who own specific accessToken are processed within the post-interaction phase of order execution.\n * Additionally, it allows charging a fee to resolvers in the `postInteraction` method, providing a mechanism for resolver fee management.\n */\nabstract contract ResolverValidationExtension is BaseExtension, FeeBankCharger {\n    using ExtensionLib_0 for bytes;\n\n    error ResolverCanNotFillOrder();\n\n    uint256 private constant _ORDER_FEE_BASE_POINTS = 1e15;\n    /// @notice Contract address whose tokens allow filling limit orders with a fee for resolvers that are outside the whitelist\n    IERC20 private immutable _ACCESS_TOKEN;\n\n    constructor(IERC20 feeToken, IERC20 accessToken, address owner) FeeBankCharger(feeToken, owner) {\n        _ACCESS_TOKEN = accessToken;\n    }\n\n    /**\n     * @dev Validates whether the resolver is whitelisted.\n     * @param allowedTime The time after which interaction with the order is allowed.\n     * @param whitelist Whitelist is tightly packed struct of the following format:\n     * ```\n     * (bytes10,bytes2)[N] resolversAddressesAndTimeDeltas;\n     * ```\n     * Resolvers in the list are sorted in ascending order by the time when they are allowed to interact with the order.\n     * Time deltas represent the time in seconds between the adjacent resolvers.\n     * Only 10 lowest bytes of the resolver address are used for comparison.\n     * @param whitelistSize The amount of resolvers in the whitelist.\n     * @param resolver The resolver to check.\n     * @return Whether the resolver is whitelisted.\n     */\n    function _isWhitelisted(uint256 allowedTime, bytes calldata whitelist, uint256 whitelistSize, address resolver) internal view virtual returns (bool) {\n        unchecked {\n            uint80 maskedResolverAddress = uint80(uint160(resolver));\n            for (uint256 i = 0; i < whitelistSize; i++) {\n                uint80 whitelistedAddress = uint80(bytes10(whitelist[:10]));\n                allowedTime += uint16(bytes2(whitelist[10:12])); // add next time delta\n                if (maskedResolverAddress == whitelistedAddress) {\n                    return allowedTime <= block.timestamp;\n                } else if (allowedTime > block.timestamp) {\n                    return false;\n                }\n                whitelist = whitelist[12:];\n            }\n            return false;\n        }\n    }\n\n    /**\n     * @dev Calculates the resolver fee.\n     * @param fee Scaled resolver fee.\n     * @param orderMakingAmount Making amount from the order.\n     * @param actualMakingAmount Making amount that was actually filled.\n     * @return resolverFee Calculated resolver fee.\n     */\n    function _getResolverFee(\n        uint256 fee,\n        uint256 orderMakingAmount,\n        uint256 actualMakingAmount\n    ) internal pure virtual returns(uint256) {\n        return fee * _ORDER_FEE_BASE_POINTS * actualMakingAmount / orderMakingAmount;\n    }\n\n    /**\n     * @param extraData Structured data of length n bytes, segmented as follows:\n     * [0:4] - Resolver fee information.\n     * [4:8] - The time after which interaction with the order is allowed.\n     * [8:k] - Data as defined by the `whitelist` parameter for the `_isWhitelisted` method,\n     *         where k depends on the amount of resolvers in the whitelist, as indicated by the bitmap in the last byte.\n     * [k:n] - ExtraData for other extensions, not utilized by this validation extension.\n     * [n] - Bitmap indicating various usage flags and values.\n     *       The bitmask xxxx xxx1 signifies resolver fee usage.\n     *       The bitmask VVVV Vxxx represents the number of resolvers in the whitelist, where the V bits denote the count of resolvers.\n     *       The remaining bits in this bitmap are not used by this extension.\n     */\n    function _postInteraction(\n        IOrderMixin.Order calldata order,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address taker,\n        uint256 makingAmount,\n        uint256 takingAmount,\n        uint256 remainingMakingAmount,\n        bytes calldata extraData\n    ) internal virtual override {\n        bool feeEnabled = extraData.resolverFeeEnabled();\n        uint256 resolversCount = extraData.resolversCount();\n        unchecked {\n            uint256 resolverFee;\n            if (feeEnabled) {\n                resolverFee = _getResolverFee(uint256(uint32(bytes4(extraData[:4]))), order.makingAmount, makingAmount);\n                extraData = extraData[4:];\n            }\n\n            uint256 allowedTime = uint32(bytes4(extraData[0:4]));\n            extraData = extraData[4:];\n            uint256 whitelistSize = resolversCount * 12;\n            if (!_isWhitelisted(allowedTime, extraData[:whitelistSize], resolversCount, taker)) { // resolversCount always > 0 on prod\n                if (allowedTime > block.timestamp || _ACCESS_TOKEN.balanceOf(taker) == 0) revert ResolverCanNotFillOrder();\n                if (feeEnabled) {\n                    _chargeFee(taker, resolverFee);\n                }\n            }\n            super._postInteraction(order, extension, orderHash, taker, makingAmount, takingAmount, remainingMakingAmount, extraData[whitelistSize:]);\n        }\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/BaseEscrowFactory.sol\n\n/**\n * @title Abstract contract for escrow factory\n * @notice Contract to create escrow contracts for cross-chain atomic swap.\n * @dev Immutable variables must be set in the constructor of the derived contracts.\n * @custom:security-contact security@1inch.io\n */\nabstract contract BaseEscrowFactory is IEscrowFactory, ResolverValidationExtension, MerkleStorageInvalidator {\n    using AddressLib for Address;\n    using Clones for address;\n    using ImmutablesLib for IBaseEscrow.Immutables;\n    using SafeERC20 for IERC20;\n    using TimelocksLib for Timelocks;\n\n    /// @notice See {IEscrowFactory-ESCROW_SRC_IMPLEMENTATION}.\n    address public immutable ESCROW_SRC_IMPLEMENTATION;\n    /// @notice See {IEscrowFactory-ESCROW_DST_IMPLEMENTATION}.\n    address public immutable ESCROW_DST_IMPLEMENTATION;\n    bytes32 internal immutable _PROXY_SRC_BYTECODE_HASH;\n    bytes32 internal immutable _PROXY_DST_BYTECODE_HASH;\n\n    /**\n     * @notice Creates a new escrow contract for maker on the source chain.\n     * @dev The caller must be whitelisted and pre-send the safety deposit in a native token\n     * to a pre-computed deterministic address of the created escrow.\n     * The external postInteraction function call will be made from the Limit Order Protocol\n     * after all funds have been transferred. See {IPostInteraction-postInteraction}.\n     * `extraData` consists of:\n     *   - ExtraDataArgs struct\n     *   - whitelist\n     *   - 0 / 4 bytes for the fee\n     *   - 1 byte for the bitmap\n     */\n    function _postInteraction(\n        IOrderMixin.Order calldata order,\n        bytes calldata extension,\n        bytes32 orderHash,\n        address taker,\n        uint256 makingAmount,\n        uint256 takingAmount,\n        uint256 remainingMakingAmount,\n        bytes calldata extraData\n    ) internal override(ResolverValidationExtension) {\n        uint256 superArgsLength = extraData.length - SRC_IMMUTABLES_LENGTH;\n        super._postInteraction(\n            order, extension, orderHash, taker, makingAmount, takingAmount, remainingMakingAmount, extraData[:superArgsLength]\n        );\n\n        ExtraDataArgs calldata extraDataArgs;\n        assembly (\"memory-safe\") {\n            extraDataArgs := add(extraData.offset, superArgsLength)\n        }\n\n        bytes32 hashlock;\n\n        if (MakerTraitsLib.allowMultipleFills(order.makerTraits)) {\n            uint256 partsAmount = uint256(extraDataArgs.hashlockInfo) >> 240;\n            if (partsAmount < 2) revert InvalidSecretsAmount();\n            bytes32 key = keccak256(abi.encodePacked(orderHash, uint240(uint256(extraDataArgs.hashlockInfo))));\n            ValidationData memory validated = lastValidated[key];\n            hashlock = validated.leaf;\n            if (!_isValidPartialFill(makingAmount, remainingMakingAmount, order.makingAmount, partsAmount, validated.index)) {\n                revert InvalidPartialFill();\n            }\n        } else {\n            hashlock = extraDataArgs.hashlockInfo;\n        }\n\n        IBaseEscrow.Immutables memory immutables = IBaseEscrow.Immutables({\n            orderHash: orderHash,\n            hashlock: hashlock,\n            maker: order.maker,\n            taker: Address.wrap(uint160(taker)),\n            token: order.makerAsset,\n            amount: makingAmount,\n            safetyDeposit: extraDataArgs.deposits >> 128,\n            timelocks: extraDataArgs.timelocks.setDeployedAt(block.timestamp)\n        });\n\n        DstImmutablesComplement memory immutablesComplement = DstImmutablesComplement({\n            maker: order.receiver.get() == address(0) ? order.maker : order.receiver,\n            amount: takingAmount,\n            token: extraDataArgs.dstToken,\n            safetyDeposit: extraDataArgs.deposits & type(uint128).max,\n            chainId: extraDataArgs.dstChainId\n        });\n\n        emit SrcEscrowCreated(immutables, immutablesComplement);\n\n        bytes32 salt = immutables.hashMem();\n        address escrow = _deployEscrow(salt, 0, ESCROW_SRC_IMPLEMENTATION);\n        if (escrow.balance < immutables.safetyDeposit || IERC20(order.makerAsset.get()).safeBalanceOf(escrow) < makingAmount) {\n            revert InsufficientEscrowBalance();\n        }\n    }\n\n    /**\n     * @notice See {IEscrowFactory-createDstEscrow}.\n     */\n    function createDstEscrow(IBaseEscrow.Immutables calldata dstImmutables, uint256 srcCancellationTimestamp) external payable {\n        address token = dstImmutables.token.get();\n        uint256 nativeAmount = dstImmutables.safetyDeposit;\n        if (token == address(0)) {\n            nativeAmount += dstImmutables.amount;\n        }\n        if (msg.value != nativeAmount) revert InsufficientEscrowBalance();\n\n        IBaseEscrow.Immutables memory immutables = dstImmutables;\n        immutables.timelocks = immutables.timelocks.setDeployedAt(block.timestamp);\n        // Check that the escrow cancellation will start not later than the cancellation time on the source chain.\n        if (immutables.timelocks.get(TimelocksLib.Stage.DstCancellation) > srcCancellationTimestamp) revert InvalidCreationTime();\n\n        bytes32 salt = immutables.hashMem();\n        address escrow = _deployEscrow(salt, msg.value, ESCROW_DST_IMPLEMENTATION);\n        if (token != address(0)) {\n            IERC20(token).safeTransferFrom(msg.sender, escrow, immutables.amount);\n        }\n\n        emit DstEscrowCreated(escrow, dstImmutables.hashlock, dstImmutables.taker);\n    }\n\n    /**\n     * @notice See {IEscrowFactory-addressOfEscrowSrc}.\n     */\n    function addressOfEscrowSrc(IBaseEscrow.Immutables calldata immutables) external view virtual returns (address) {\n        return Create2.computeAddress(immutables.hash(), _PROXY_SRC_BYTECODE_HASH);\n    }\n\n    /**\n     * @notice See {IEscrowFactory-addressOfEscrowDst}.\n     */\n    function addressOfEscrowDst(IBaseEscrow.Immutables calldata immutables) external view virtual returns (address) {\n        return Create2.computeAddress(immutables.hash(), _PROXY_DST_BYTECODE_HASH);\n    }\n\n    /**\n     * @notice Deploys a new escrow contract.\n     * @param salt The salt for the deterministic address computation.\n     * @param value The value to be sent to the escrow contract.\n     * @param implementation Address of the implementation.\n     * @return escrow The address of the deployed escrow contract.\n     */\n    function _deployEscrow(bytes32 salt, uint256 value, address implementation) internal virtual returns (address escrow) {\n        escrow = implementation.cloneDeterministic(salt, value);\n    }\n\n    function _isValidPartialFill(\n        uint256 makingAmount,\n        uint256 remainingMakingAmount,\n        uint256 orderMakingAmount,\n        uint256 partsAmount,\n        uint256 validatedIndex\n    ) internal pure returns (bool) {\n        uint256 calculatedIndex = (orderMakingAmount - remainingMakingAmount + makingAmount - 1) * partsAmount / orderMakingAmount;\n\n        if (remainingMakingAmount == makingAmount) {\n            // The last secret must be used for the last fill.\n            return (calculatedIndex + 2 == validatedIndex);\n        } else if (orderMakingAmount != remainingMakingAmount) {\n            // Calculate the previous fill index only if this is not the first fill.\n            uint256 prevCalculatedIndex = (orderMakingAmount - remainingMakingAmount - 1) * partsAmount / orderMakingAmount;\n            if (calculatedIndex == prevCalculatedIndex) return false;\n        }\n\n        return calculatedIndex + 1 == validatedIndex;\n    }\n}\n\n// contracts/lib/cross-chain-swap/contracts/EscrowFactory.sol\n\n/**\n * @title Escrow Factory contract\n * @notice Contract to create escrow contracts for cross-chain atomic swap.\n * @custom:security-contact security@1inch.io\n */\ncontract EscrowFactory is BaseEscrowFactory {\n    constructor(\n        address limitOrderProtocol,\n        IERC20 feeToken,\n        IERC20 accessToken,\n        address owner,\n        uint32 rescueDelaySrc,\n        uint32 rescueDelayDst\n    )\n    BaseExtension(limitOrderProtocol)\n    ResolverValidationExtension(feeToken, accessToken, owner)\n    MerkleStorageInvalidator(limitOrderProtocol) {\n        ESCROW_SRC_IMPLEMENTATION = address(new EscrowSrc(rescueDelaySrc));\n        ESCROW_DST_IMPLEMENTATION = address(new EscrowDst(rescueDelayDst));\n        _PROXY_SRC_BYTECODE_HASH = ProxyHashLib.computeProxyBytecodeHash(ESCROW_SRC_IMPLEMENTATION);\n        _PROXY_DST_BYTECODE_HASH = ProxyHashLib.computeProxyBytecodeHash(ESCROW_DST_IMPLEMENTATION);\n    }\n}\n\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000000},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"9302","formattedMessage":"Warning: Return value of low-level calls not used.\n    --> contracts/escrow/EscrowFactory.sol:5655:13:\n     |\n5655 |             to.call{ value: immutables.amount }(\"\");\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Return value of low-level calls not used.","severity":"warning","sourceLocation":{"end":224661,"file":"contracts/escrow/EscrowFactory.sol","start":224622},"type":"Warning"}],"sources":{"contracts/escrow/EscrowFactory.sol":{"ast":{"absolutePath":"contracts/escrow/EscrowFactory.sol","exportedSymbols":{"Address":[3],"AddressLib":[102],"BaseEscrow":[8260],"BaseEscrowFactory":[10252],"BaseExtension":[7597],"Clones":[3357],"Context":[130],"Create2":[3452],"Errors":[145],"Escrow":[8816],"EscrowDst":[9176],"EscrowFactory":[10321],"EscrowSrc":[9444],"ExtensionLib_0":[243],"ExtensionLib_1":[6571],"FeeBank":[8765],"FeeBankCharger":[8965],"Hashes":[281],"IAmountGetter":[6242],"IBaseEscrow":[4272],"IDaiLikePermit":[303],"IERC20":[379],"IERC20Metadata":[3474],"IERC20MetadataUppercase":[393],"IERC20Permit":[427],"IERC7597Permit":[443],"IEscrow":[5828],"IEscrowDst":[6255],"IEscrowFactory":[5922],"IEscrowSrc":[6286],"IFeeBank":[510],"IFeeBankCharger":[3510],"IMerkleStorageInvalidator":[539],"IOrderMixin":[6172],"IPermit2":[604],"IPostInteraction":[6308],"IPreInteraction":[6330],"ITakerInteraction":[6353],"IWETH":[3538],"ImmutablesLib":[6199],"MakerTraits":[606],"MakerTraitsLib":[971],"Math":[5818],"MerkleProof":[4041],"MerkleStorageInvalidator":[8412],"Offsets":[973],"OffsetsLib":[998],"Ownable":[4185],"Panic":[1048],"ProxyHashLib":[1060],"ResolverValidationExtension":[9734],"RevertReasonForwarder":[1076],"SRC_IMMUTABLES_LENGTH":[148],"SafeCast":[2839],"SafeERC20":[7075],"StringUtil":[2883],"TakerTraits":[2885],"TakerTraitsLib":[3084],"Timelocks":[3086],"TimelocksLib":[3198],"UniERC20":[8035]},"id":10322,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","=","0.8",".23","^","0.8",".0","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:39:0"},{"canonicalName":"Address","id":3,"name":"Address","nameLocation":"167:7:0","nodeType":"UserDefinedValueTypeDefinition","src":"162:24:0","underlyingType":{"id":2,"name":"uint256","nodeType":"ElementaryTypeName","src":"178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"abstract":false,"baseContracts":[],"canonicalName":"AddressLib","contractDependencies":[],"contractKind":"library","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"188:144:0","text":" @notice AddressLib\n @notice Library for working with addresses encoded as uint256 values, which can include flags in the highest bits."},"fullyImplemented":true,"id":102,"linearizedBaseContracts":[102],"name":"AddressLib","nameLocation":"341:10:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":12,"mutability":"constant","name":"_LOW_160_BIT_MASK","nameLocation":"383:17:0","nodeType":"VariableDeclaration","scope":102,"src":"358:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"358:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"},"id":11,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":8,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"404:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"409:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"404:8:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":9,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"403:10:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"416:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"403:14:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"}},"visibility":"private"},{"body":{"id":34,"nodeType":"Block","src":"689:79:0","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":27,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"737:1:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}],"expression":{"id":25,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"722:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$3_$","typeString":"type(Address)"}},"id":26,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"730:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"722:14:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":28,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"722:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":29,"name":"_LOW_160_BIT_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"742:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"722:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":24,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"714:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":23,"name":"uint160","nodeType":"ElementaryTypeName","src":"714:7:0","typeDescriptions":{}}},"id":31,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"714:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":22,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"706:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","typeDescriptions":{}}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"706:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":20,"id":33,"nodeType":"Return","src":"699:62:0"}]},"documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"424:204:0","text":" @notice Returns the address representation of a uint256.\n @param a The uint256 value to convert to an address.\n @return The address representation of the provided uint256 value."},"id":35,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"642:3:0","nodeType":"FunctionDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"a","nameLocation":"654:1:0","nodeType":"VariableDeclaration","scope":35,"src":"646:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":15,"nodeType":"UserDefinedTypeName","pathNode":{"id":14,"name":"Address","nameLocations":["646:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"646:7:0"},"referencedDeclaration":3,"src":"646:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"}],"src":"645:11:0"},"returnParameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35,"src":"680:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"679:9:0"},"scope":102,"src":"633:135:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":56,"nodeType":"Block","src":"1125:55:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":48,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1158:1:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}],"expression":{"id":46,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"1143:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$3_$","typeString":"type(Address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1151:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"1143:14:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1143:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":50,"name":"flag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1163:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1143:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":52,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1142:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1172:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1142:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":45,"id":55,"nodeType":"Return","src":"1135:38:0"}]},"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"774:275:0","text":" @notice Checks if a given flag is set for the provided address.\n @param a The address to check for the flag.\n @param flag The flag to check for in the provided address.\n @return True if the provided flag is set in the address, false otherwise."},"id":57,"implemented":true,"kind":"function","modifiers":[],"name":"getFlag","nameLocation":"1063:7:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"a","nameLocation":"1079:1:0","nodeType":"VariableDeclaration","scope":57,"src":"1071:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":38,"nodeType":"UserDefinedTypeName","pathNode":{"id":37,"name":"Address","nameLocations":["1071:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"1071:7:0"},"referencedDeclaration":3,"src":"1071:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"flag","nameLocation":"1090:4:0","nodeType":"VariableDeclaration","scope":57,"src":"1082:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1070:25:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":57,"src":"1119:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"1119:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1118:6:0"},"scope":102,"src":"1054:126:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":78,"nodeType":"Block","src":"1582:59:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":72,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1621:1:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}],"expression":{"id":70,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"1606:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$3_$","typeString":"type(Address)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1614:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"1606:14:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":74,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1627:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1606:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1599:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":68,"name":"uint32","nodeType":"ElementaryTypeName","src":"1599:6:0","typeDescriptions":{}}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1599:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":67,"id":77,"nodeType":"Return","src":"1592:42:0"}]},"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"1186:314:0","text":" @notice Returns a uint32 value stored at a specific bit offset in the provided address.\n @param a The address containing the uint32 value.\n @param offset The bit offset at which the uint32 value is stored.\n @return The uint32 value stored in the address at the specified bit offset."},"id":79,"implemented":true,"kind":"function","modifiers":[],"name":"getUint32","nameLocation":"1514:9:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"a","nameLocation":"1532:1:0","nodeType":"VariableDeclaration","scope":79,"src":"1524:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":60,"nodeType":"UserDefinedTypeName","pathNode":{"id":59,"name":"Address","nameLocations":["1524:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"1524:7:0"},"referencedDeclaration":3,"src":"1524:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"offset","nameLocation":"1543:6:0","nodeType":"VariableDeclaration","scope":79,"src":"1535:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"1535:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1523:27:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"1574:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":65,"name":"uint32","nodeType":"ElementaryTypeName","src":"1574:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1573:8:0"},"scope":102,"src":"1505:136:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":100,"nodeType":"Block","src":"2043:59:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":94,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2082:1:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}],"expression":{"id":92,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"2067:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$3_$","typeString":"type(Address)"}},"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2075:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"2067:14:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_uint256_$","typeString":"function (Address) pure returns (uint256)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":96,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2088:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2067:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":91,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2060:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":90,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:0","typeDescriptions":{}}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":89,"id":99,"nodeType":"Return","src":"2053:42:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"1647:314:0","text":" @notice Returns a uint64 value stored at a specific bit offset in the provided address.\n @param a The address containing the uint64 value.\n @param offset The bit offset at which the uint64 value is stored.\n @return The uint64 value stored in the address at the specified bit offset."},"id":101,"implemented":true,"kind":"function","modifiers":[],"name":"getUint64","nameLocation":"1975:9:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"a","nameLocation":"1993:1:0","nodeType":"VariableDeclaration","scope":101,"src":"1985:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":82,"nodeType":"UserDefinedTypeName","pathNode":{"id":81,"name":"Address","nameLocations":["1985:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"1985:7:0"},"referencedDeclaration":3,"src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"offset","nameLocation":"2004:6:0","nodeType":"VariableDeclaration","scope":101,"src":"1996:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"1996:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1984:27:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101,"src":"2035:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":87,"name":"uint64","nodeType":"ElementaryTypeName","src":"2035:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2034:8:0"},"scope":102,"src":"1966:136:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"333:1771:0","usedErrors":[],"usedEvents":[]},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":103,"nodeType":"StructuredDocumentation","src":"2265:496:0","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":130,"linearizedBaseContracts":[130],"name":"Context","nameLocation":"2780:7:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":111,"nodeType":"Block","src":"2856:34:0","statements":[{"expression":{"expression":{"id":108,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2873:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2877:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2873:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":107,"id":110,"nodeType":"Return","src":"2866:17:0"}]},"id":112,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"2803:10:0","nodeType":"FunctionDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[],"src":"2813:2:0"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":112,"src":"2847:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"2847:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:9:0"},"scope":130,"src":"2794:96:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":120,"nodeType":"Block","src":"2963:32:0","statements":[{"expression":{"expression":{"id":117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2980:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2984:4:0","memberName":"data","nodeType":"MemberAccess","src":"2980:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":116,"id":119,"nodeType":"Return","src":"2973:15:0"}]},"id":121,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"2905:8:0","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[],"src":"2913:2:0"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":121,"src":"2947:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":114,"name":"bytes","nodeType":"ElementaryTypeName","src":"2947:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2946:16:0"},"scope":130,"src":"2896:99:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":128,"nodeType":"Block","src":"3073:25:0","statements":[{"expression":{"hexValue":"30","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3090:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":125,"id":127,"nodeType":"Return","src":"3083:8:0"}]},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"3010:20:0","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[],"src":"3030:2:0"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3064:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"3064:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3063:9:0"},"scope":130,"src":"3001:97:0","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":10322,"src":"2762:338:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"3191:254:0","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality."},"fullyImplemented":true,"id":145,"linearizedBaseContracts":[145],"name":"Errors","nameLocation":"3454:6:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"3467:94:0","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":138,"name":"InsufficientBalance","nameLocation":"3572:19:0","nodeType":"ErrorDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"balance","nameLocation":"3600:7:0","nodeType":"VariableDeclaration","scope":138,"src":"3592:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"3592:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"needed","nameLocation":"3617:6:0","nodeType":"VariableDeclaration","scope":138,"src":"3609:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"3609:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3591:33:0"},"src":"3566:59:0"},{"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"3631:89:0","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":141,"name":"FailedCall","nameLocation":"3731:10:0","nodeType":"ErrorDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"3741:2:0"},"src":"3725:19:0"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"3750:46:0","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":144,"name":"FailedDeployment","nameLocation":"3807:16:0","nodeType":"ErrorDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3823:2:0"},"src":"3801:25:0"}],"scope":10322,"src":"3446:382:0","usedErrors":[138,141,144],"usedEvents":[]},{"constant":true,"id":148,"mutability":"constant","name":"SRC_IMMUTABLES_LENGTH","nameLocation":"3917:21:0","nodeType":"VariableDeclaration","scope":10322,"src":"3900:44:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313630","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3941:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"visibility":"internal"},{"abstract":false,"baseContracts":[],"canonicalName":"ExtensionLib_0","contractDependencies":[],"contractKind":"library","documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4047:88:0","text":" @title Extension Library\n @notice Library to retrieve data from the bitmap."},"fullyImplemented":true,"id":243,"linearizedBaseContracts":[243],"name":"ExtensionLib_0","nameLocation":"4144:14:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":152,"mutability":"constant","name":"_RESOLVER_FEE_FLAG","nameLocation":"4189:18:0","nodeType":"VariableDeclaration","scope":243,"src":"4165:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":150,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4165:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"value":{"hexValue":"30783031","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4210:4:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"private"},{"constant":true,"id":155,"mutability":"constant","name":"_INTEGRATOR_FEE_FLAG","nameLocation":"4244:20:0","nodeType":"VariableDeclaration","scope":243,"src":"4220:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":153,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4220:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"value":{"hexValue":"30783032","id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4267:4:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x02"},"visibility":"private"},{"constant":true,"id":158,"mutability":"constant","name":"_CUSTOM_RECEIVER_FLAG","nameLocation":"4301:21:0","nodeType":"VariableDeclaration","scope":243,"src":"4277:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":156,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4277:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"value":{"hexValue":"30783034","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4325:4:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x04"},"visibility":"private"},{"constant":true,"id":161,"mutability":"constant","name":"_WHITELIST_SHIFT","nameLocation":"4360:16:0","nodeType":"VariableDeclaration","scope":243,"src":"4335:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":159,"name":"uint256","nodeType":"ElementaryTypeName","src":"4335:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4379:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"body":{"id":180,"nodeType":"Block","src":"4652:98:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":169,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"4669:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":174,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":170,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"4679:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4689:6:0","memberName":"length","nodeType":"MemberAccess","src":"4679:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4698:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4679:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4669:31:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":175,"name":"_RESOLVER_FEE_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4703:18:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4669:52:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":177,"name":"_RESOLVER_FEE_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4725:18:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4669:74:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":168,"id":179,"nodeType":"Return","src":"4662:81:0"}]},"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"4387:177:0","text":" @notice Checks if the resolver fee is enabled\n @param extraData Data to be processed in the extension\n @return True if the resolver fee is enabled"},"id":181,"implemented":true,"kind":"function","modifiers":[],"name":"resolverFeeEnabled","nameLocation":"4578:18:0","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"extraData","nameLocation":"4612:9:0","nodeType":"VariableDeclaration","scope":181,"src":"4597:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":163,"name":"bytes","nodeType":"ElementaryTypeName","src":"4597:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4596:26:0"},"returnParameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":181,"src":"4646:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":166,"name":"bool","nodeType":"ElementaryTypeName","src":"4646:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4645:6:0"},"scope":243,"src":"4569:181:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":200,"nodeType":"Block","src":"5027:102:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":189,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5044:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":194,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":190,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5054:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5064:6:0","memberName":"length","nodeType":"MemberAccess","src":"5054:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5073:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5054:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5044:31:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":195,"name":"_INTEGRATOR_FEE_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"5078:20:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"5044:54:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":197,"name":"_INTEGRATOR_FEE_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"5102:20:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"5044:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":188,"id":199,"nodeType":"Return","src":"5037:85:0"}]},"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"4756:181:0","text":" @notice Checks if the integrator fee is enabled\n @param extraData Data to be processed in the extension\n @return True if the integrator fee is enabled"},"id":201,"implemented":true,"kind":"function","modifiers":[],"name":"integratorFeeEnabled","nameLocation":"4951:20:0","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"extraData","nameLocation":"4987:9:0","nodeType":"VariableDeclaration","scope":201,"src":"4972:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":183,"name":"bytes","nodeType":"ElementaryTypeName","src":"4972:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4971:26:0"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":201,"src":"5021:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"5021:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5020:6:0"},"scope":243,"src":"4942:187:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":220,"nodeType":"Block","src":"5407:104:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":209,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"5424:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":214,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":210,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"5434:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5444:6:0","memberName":"length","nodeType":"MemberAccess","src":"5434:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5453:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5434:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5424:31:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":215,"name":"_CUSTOM_RECEIVER_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"5458:21:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"5424:55:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":217,"name":"_CUSTOM_RECEIVER_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"5483:21:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"5424:80:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":208,"id":219,"nodeType":"Return","src":"5417:87:0"}]},"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"5135:185:0","text":" @notice Checks if the custom receiver is enabled\n @param extraData Data to be processed in the extension\n @return True if the custom receiver is specified"},"id":221,"implemented":true,"kind":"function","modifiers":[],"name":"hasCustomReceiver","nameLocation":"5334:17:0","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"extraData","nameLocation":"5367:9:0","nodeType":"VariableDeclaration","scope":221,"src":"5352:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":203,"name":"bytes","nodeType":"ElementaryTypeName","src":"5352:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5351:26:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":221,"src":"5401:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"5401:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5400:6:0"},"scope":243,"src":"5325:186:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":241,"nodeType":"Block","src":"5794:82:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":231,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5817:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":236,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":232,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5827:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5837:6:0","memberName":"length","nodeType":"MemberAccess","src":"5827:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5846:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5827:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5817:31:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5811:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":229,"name":"uint8","nodeType":"ElementaryTypeName","src":"5811:5:0","typeDescriptions":{}}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5811:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":238,"name":"_WHITELIST_SHIFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"5853:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5811:58:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":228,"id":240,"nodeType":"Return","src":"5804:65:0"}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"5517:190:0","text":" @notice Gets the number of resolvers in the whitelist\n @param extraData Data to be processed in the extension\n @return The number of resolvers in the whitelist"},"id":242,"implemented":true,"kind":"function","modifiers":[],"name":"resolversCount","nameLocation":"5721:14:0","nodeType":"FunctionDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"extraData","nameLocation":"5751:9:0","nodeType":"VariableDeclaration","scope":242,"src":"5736:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":223,"name":"bytes","nodeType":"ElementaryTypeName","src":"5736:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5735:26:0"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"5785:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5784:9:0"},"scope":243,"src":"5712:164:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"4136:1742:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"5982:51:0","text":" @dev Library of standard hash functions."},"fullyImplemented":true,"id":281,"linearizedBaseContracts":[281],"name":"Hashes","nameLocation":"6042:6:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":267,"nodeType":"Block","src":"6401:85:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"6418:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6422:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6418:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":262,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6474:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"6477:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"_efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"6454:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6454:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6418:61:0","trueExpression":{"arguments":[{"id":258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"6446:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":259,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6449:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":257,"name":"_efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"6426:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6426:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":253,"id":266,"nodeType":"Return","src":"6411:68:0"}]},"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"6055:257:0","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"6326:20:0","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"a","nameLocation":"6355:1:0","nodeType":"VariableDeclaration","scope":268,"src":"6347:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6347:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"b","nameLocation":"6366:1:0","nodeType":"VariableDeclaration","scope":268,"src":"6358:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6358:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6346:22:0"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":268,"src":"6392:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6392:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6391:9:0"},"scope":281,"src":"6317:169:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":279,"nodeType":"Block","src":"6694:178:0","statements":[{"AST":{"nativeSrc":"6756:110:0","nodeType":"YulBlock","src":"6756:110:0","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6777:4:0","nodeType":"YulLiteral","src":"6777:4:0","type":"","value":"0x00"},{"name":"a","nativeSrc":"6783:1:0","nodeType":"YulIdentifier","src":"6783:1:0"}],"functionName":{"name":"mstore","nativeSrc":"6770:6:0","nodeType":"YulIdentifier","src":"6770:6:0"},"nativeSrc":"6770:15:0","nodeType":"YulFunctionCall","src":"6770:15:0"},"nativeSrc":"6770:15:0","nodeType":"YulExpressionStatement","src":"6770:15:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6805:4:0","nodeType":"YulLiteral","src":"6805:4:0","type":"","value":"0x20"},{"name":"b","nativeSrc":"6811:1:0","nodeType":"YulIdentifier","src":"6811:1:0"}],"functionName":{"name":"mstore","nativeSrc":"6798:6:0","nodeType":"YulIdentifier","src":"6798:6:0"},"nativeSrc":"6798:15:0","nodeType":"YulFunctionCall","src":"6798:15:0"},"nativeSrc":"6798:15:0","nodeType":"YulExpressionStatement","src":"6798:15:0"},{"nativeSrc":"6826:30:0","nodeType":"YulAssignment","src":"6826:30:0","value":{"arguments":[{"kind":"number","nativeSrc":"6845:4:0","nodeType":"YulLiteral","src":"6845:4:0","type":"","value":"0x00"},{"kind":"number","nativeSrc":"6851:4:0","nodeType":"YulLiteral","src":"6851:4:0","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"6835:9:0","nodeType":"YulIdentifier","src":"6835:9:0"},"nativeSrc":"6835:21:0","nodeType":"YulFunctionCall","src":"6835:21:0"},"variableNames":[{"name":"value","nativeSrc":"6826:5:0","nodeType":"YulIdentifier","src":"6826:5:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":271,"isOffset":false,"isSlot":false,"src":"6783:1:0","valueSize":1},{"declaration":273,"isOffset":false,"isSlot":false,"src":"6811:1:0","valueSize":1},{"declaration":276,"isOffset":false,"isSlot":false,"src":"6826:5:0","valueSize":1}],"id":278,"nodeType":"InlineAssembly","src":"6747:119:0"}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"6492:109:0","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":280,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientKeccak256","nameLocation":"6615:19:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"a","nameLocation":"6643:1:0","nodeType":"VariableDeclaration","scope":280,"src":"6635:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6635:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"b","nameLocation":"6654:1:0","nodeType":"VariableDeclaration","scope":280,"src":"6646:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6646:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6634:22:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"value","nameLocation":"6687:5:0","nodeType":"VariableDeclaration","scope":280,"src":"6679:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6679:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6678:15:0"},"scope":281,"src":"6606:266:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":10322,"src":"6034:840:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDaiLikePermit","contractDependencies":[],"contractKind":"interface","documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"6970:119:0","text":" @title IDaiLikePermit\n @dev Interface for Dai-like permit function allowing token spending via signatures."},"fullyImplemented":false,"id":303,"linearizedBaseContracts":[303],"name":"IDaiLikePermit","nameLocation":"7100:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"7121:375:0","text":" @notice Approves spending of tokens via off-chain signatures.\n @param holder Token holder's address.\n @param spender Spender's address.\n @param nonce Current nonce of the holder.\n @param expiry Time when the permit expires.\n @param allowed True to allow, false to disallow spending.\n @param v, r, s Signature components."},"functionSelector":"8fcbaf0c","id":302,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"7510:6:0","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"holder","nameLocation":"7534:6:0","nodeType":"VariableDeclaration","scope":302,"src":"7526:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"7526:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"spender","nameLocation":"7558:7:0","nodeType":"VariableDeclaration","scope":302,"src":"7550:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"7550:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"nonce","nameLocation":"7583:5:0","nodeType":"VariableDeclaration","scope":302,"src":"7575:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"7575:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"expiry","nameLocation":"7606:6:0","nodeType":"VariableDeclaration","scope":302,"src":"7598:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"7598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":293,"mutability":"mutable","name":"allowed","nameLocation":"7627:7:0","nodeType":"VariableDeclaration","scope":302,"src":"7622:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":292,"name":"bool","nodeType":"ElementaryTypeName","src":"7622:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"v","nameLocation":"7650:1:0","nodeType":"VariableDeclaration","scope":302,"src":"7644:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":294,"name":"uint8","nodeType":"ElementaryTypeName","src":"7644:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"r","nameLocation":"7669:1:0","nodeType":"VariableDeclaration","scope":302,"src":"7661:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7661:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"s","nameLocation":"7688:1:0","nodeType":"VariableDeclaration","scope":302,"src":"7680:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7680:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7516:179:0"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"7704:0:0"},"scope":303,"src":"7501:204:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"7090:617:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"7878:71:0","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IERC20","nameLocation":"7960:6:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"7973:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":313,"name":"Transfer","nameLocation":"8142:8:0","nodeType":"EventDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"8167:4:0","nodeType":"VariableDeclaration","scope":313,"src":"8151:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"8151:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"8189:2:0","nodeType":"VariableDeclaration","scope":313,"src":"8173:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"8173:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":311,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"8201:5:0","nodeType":"VariableDeclaration","scope":313,"src":"8193:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"8193:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8150:57:0"},"src":"8136:72:0"},{"anonymous":false,"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"8214:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":322,"name":"Approval","nameLocation":"8373:8:0","nodeType":"EventDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"8398:5:0","nodeType":"VariableDeclaration","scope":322,"src":"8382:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"8382:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":318,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"8421:7:0","nodeType":"VariableDeclaration","scope":322,"src":"8405:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"8405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":320,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"8438:5:0","nodeType":"VariableDeclaration","scope":322,"src":"8430:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"8430:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8381:63:0"},"src":"8367:78:0"},{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"8451:65:0","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":328,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"8530:11:0","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[],"src":"8541:2:0"},"returnParameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":328,"src":"8567:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"8567:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8566:9:0"},"scope":379,"src":"8521:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"8582:71:0","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":336,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"8667:9:0","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"account","nameLocation":"8685:7:0","nodeType":"VariableDeclaration","scope":336,"src":"8677:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"8677:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8676:17:0"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":336,"src":"8717:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"8717:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8716:9:0"},"scope":379,"src":"8658:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"8732:213:0","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"8959:8:0","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"8976:2:0","nodeType":"VariableDeclaration","scope":346,"src":"8968:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"8968:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"8988:5:0","nodeType":"VariableDeclaration","scope":346,"src":"8980:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"8980:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8967:27:0"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"9013:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"9013:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9012:6:0"},"scope":379,"src":"8950:69:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"9025:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":356,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"9303:9:0","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"owner","nameLocation":"9321:5:0","nodeType":"VariableDeclaration","scope":356,"src":"9313:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"9313:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"spender","nameLocation":"9336:7:0","nodeType":"VariableDeclaration","scope":356,"src":"9328:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"9328:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9312:32:0"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":356,"src":"9368:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"9368:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9367:9:0"},"scope":379,"src":"9294:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"9383:667:0","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":366,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"10064:7:0","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"spender","nameLocation":"10080:7:0","nodeType":"VariableDeclaration","scope":366,"src":"10072:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"10072:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"value","nameLocation":"10097:5:0","nodeType":"VariableDeclaration","scope":366,"src":"10089:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"10089:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10071:32:0"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":366,"src":"10122:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":363,"name":"bool","nodeType":"ElementaryTypeName","src":"10122:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10121:6:0"},"scope":379,"src":"10055:73:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"10134:297:0","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"10445:12:0","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"from","nameLocation":"10466:4:0","nodeType":"VariableDeclaration","scope":378,"src":"10458:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"10458:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"to","nameLocation":"10480:2:0","nodeType":"VariableDeclaration","scope":378,"src":"10472:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"10472:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"value","nameLocation":"10492:5:0","nodeType":"VariableDeclaration","scope":378,"src":"10484:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"10484:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10457:41:0"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":378,"src":"10517:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":375,"name":"bool","nodeType":"ElementaryTypeName","src":"10517:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10516:6:0"},"scope":379,"src":"10436:87:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"7950:2575:0","usedErrors":[],"usedEvents":[313,322]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20MetadataUppercase","contractDependencies":[],"contractKind":"interface","documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"10630:118:0","text":" @title IERC20MetadataUppercase\n @dev Interface for ERC20 token metadata with uppercase naming convention."},"fullyImplemented":false,"id":393,"linearizedBaseContracts":[393],"name":"IERC20MetadataUppercase","nameLocation":"10759:23:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"10789:74:0","text":" @notice Gets the token name.\n @return Token name."},"functionSelector":"a3f4df7e","id":386,"implemented":false,"kind":"function","modifiers":[],"name":"NAME","nameLocation":"10877:4:0","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"10881:2:0"},"returnParameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":386,"src":"10907:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":383,"name":"string","nodeType":"ElementaryTypeName","src":"10907:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10906:15:0"},"scope":393,"src":"10868:54:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"10972:78:0","text":" @notice Gets the token symbol.\n @return Token symbol."},"functionSelector":"f76f8d78","id":392,"implemented":false,"kind":"function","modifiers":[],"name":"SYMBOL","nameLocation":"11064:6:0","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"11070:2:0"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":392,"src":"11096:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":389,"name":"string","nodeType":"ElementaryTypeName","src":"11096:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11095:15:0"},"scope":393,"src":"11055:56:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10322,"src":"10749:408:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"11362:1965:0","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":427,"linearizedBaseContracts":[427],"name":"IERC20Permit","nameLocation":"13338:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"13357:850:0","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":412,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"14221:6:0","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"owner","nameLocation":"14245:5:0","nodeType":"VariableDeclaration","scope":412,"src":"14237:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"14237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"spender","nameLocation":"14268:7:0","nodeType":"VariableDeclaration","scope":412,"src":"14260:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"14260:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"value","nameLocation":"14293:5:0","nodeType":"VariableDeclaration","scope":412,"src":"14285:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"14285:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":403,"mutability":"mutable","name":"deadline","nameLocation":"14316:8:0","nodeType":"VariableDeclaration","scope":412,"src":"14308:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"14308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"v","nameLocation":"14340:1:0","nodeType":"VariableDeclaration","scope":412,"src":"14334:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":404,"name":"uint8","nodeType":"ElementaryTypeName","src":"14334:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"r","nameLocation":"14359:1:0","nodeType":"VariableDeclaration","scope":412,"src":"14351:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14351:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"s","nameLocation":"14378:1:0","nodeType":"VariableDeclaration","scope":412,"src":"14370:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14227:158:0"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"14394:0:0"},"scope":427,"src":"14212:183:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"14401:294:0","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":420,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"14709:6:0","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"owner","nameLocation":"14724:5:0","nodeType":"VariableDeclaration","scope":420,"src":"14716:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"14716:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14715:15:0"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":420,"src":"14754:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"14754:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14753:9:0"},"scope":427,"src":"14700:63:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"14769:128:0","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":426,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"14964:16:0","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"14980:2:0"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"15006:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15006:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15005:9:0"},"scope":427,"src":"14955:60:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10322,"src":"13328:1689:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC7597Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"15113:120:0","text":" @title IERC7597Permit\n @dev A new extension for ERC-2612 permit, which has already been added to USDC v2.2."},"fullyImplemented":false,"id":443,"linearizedBaseContracts":[443],"name":"IERC7597Permit","nameLocation":"15244:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":429,"nodeType":"StructuredDocumentation","src":"15265:460:0","text":" @notice Update allowance with a signed permit.\n @dev Signature bytes can be used for both EOA wallets and contract wallets.\n @param owner Token owner's address (Authorizer).\n @param spender Spender's address.\n @param value Amount of allowance.\n @param deadline The time at which the signature expires (unixtime).\n @param signature Unstructured bytes signature signed by an EOA wallet or a contract wallet."},"functionSelector":"9fd5a6cf","id":442,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"15739:6:0","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"owner","nameLocation":"15763:5:0","nodeType":"VariableDeclaration","scope":442,"src":"15755:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"15755:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"spender","nameLocation":"15786:7:0","nodeType":"VariableDeclaration","scope":442,"src":"15778:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"15778:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"value","nameLocation":"15811:5:0","nodeType":"VariableDeclaration","scope":442,"src":"15803:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"15803:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":437,"mutability":"mutable","name":"deadline","nameLocation":"15834:8:0","nodeType":"VariableDeclaration","scope":442,"src":"15826:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"15826:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"signature","nameLocation":"15865:9:0","nodeType":"VariableDeclaration","scope":442,"src":"15852:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":438,"name":"bytes","nodeType":"ElementaryTypeName","src":"15852:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15745:135:0"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"15889:0:0"},"scope":443,"src":"15730:160:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"15234:658:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IFeeBank","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":510,"linearizedBaseContracts":[510],"name":"IFeeBank","nameLocation":"16000:8:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"16015:274:0","text":" @notice Returns the available credit for a given account in the FeeBank contract.\n @param account The address of the account for which the available credit is being queried.\n @return availableCredit The available credit of the queried account."},"functionSelector":"5886216f","id":451,"implemented":false,"kind":"function","modifiers":[],"name":"availableCredit","nameLocation":"16303:15:0","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"account","nameLocation":"16327:7:0","nodeType":"VariableDeclaration","scope":451,"src":"16319:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"16319:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16318:17:0"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"availableCredit","nameLocation":"16367:15:0","nodeType":"VariableDeclaration","scope":451,"src":"16359:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"16359:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16358:25:0"},"scope":510,"src":"16294:90:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"16390:260:0","text":" @notice Increases the caller's available credit by the specified amount.\n @param amount The amount of credit to be added to the caller's account.\n @return totalAvailableCredit The updated available credit of the caller's account."},"functionSelector":"b6b55f25","id":459,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"16664:7:0","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"amount","nameLocation":"16680:6:0","nodeType":"VariableDeclaration","scope":459,"src":"16672:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"16672:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16671:16:0"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"totalAvailableCredit","nameLocation":"16714:20:0","nodeType":"VariableDeclaration","scope":459,"src":"16706:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"16706:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16705:30:0"},"scope":510,"src":"16655:81:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"16742:363:0","text":" @notice Increases the specified account's available credit by the specified amount.\n @param account The address of the account for which the available credit is being increased.\n @param amount The amount of credit to be added to the account.\n @return totalAvailableCredit The updated available credit of the specified account."},"functionSelector":"2f4f21e2","id":469,"implemented":false,"kind":"function","modifiers":[],"name":"depositFor","nameLocation":"17119:10:0","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"account","nameLocation":"17138:7:0","nodeType":"VariableDeclaration","scope":469,"src":"17130:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"17130:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"amount","nameLocation":"17155:6:0","nodeType":"VariableDeclaration","scope":469,"src":"17147:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"17147:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17129:33:0"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"totalAvailableCredit","nameLocation":"17189:20:0","nodeType":"VariableDeclaration","scope":469,"src":"17181:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"17181:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17180:30:0"},"scope":510,"src":"17110:101:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"17217:336:0","text":" @notice Increases the caller's available credit by a specified amount with permit.\n @param amount The amount of credit to be added to the caller's account.\n @param permit The permit data authorizing the transaction.\n @return totalAvailableCredit The updated available credit of the caller's account."},"functionSelector":"bfe91734","id":479,"implemented":false,"kind":"function","modifiers":[],"name":"depositWithPermit","nameLocation":"17567:17:0","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"amount","nameLocation":"17593:6:0","nodeType":"VariableDeclaration","scope":479,"src":"17585:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"17585:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"permit","nameLocation":"17616:6:0","nodeType":"VariableDeclaration","scope":479,"src":"17601:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"17601:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17584:39:0"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"totalAvailableCredit","nameLocation":"17650:20:0","nodeType":"VariableDeclaration","scope":479,"src":"17642:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"17642:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17641:30:0"},"scope":510,"src":"17558:114:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"17678:439:0","text":" @notice Increases the specified account's available credit by a specified amount with permit.\n @param account The address of the account for which the available credit is being increased.\n @param amount The amount of credit to be added to the account.\n @param permit The permit data authorizing the transaction.\n @return totalAvailableCredit The updated available credit of the specified account."},"functionSelector":"32d323a5","id":491,"implemented":false,"kind":"function","modifiers":[],"name":"depositForWithPermit","nameLocation":"18131:20:0","nodeType":"FunctionDefinition","parameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"account","nameLocation":"18160:7:0","nodeType":"VariableDeclaration","scope":491,"src":"18152:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":481,"name":"address","nodeType":"ElementaryTypeName","src":"18152:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"amount","nameLocation":"18177:6:0","nodeType":"VariableDeclaration","scope":491,"src":"18169:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"18169:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":486,"mutability":"mutable","name":"permit","nameLocation":"18200:6:0","nodeType":"VariableDeclaration","scope":491,"src":"18185:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":485,"name":"bytes","nodeType":"ElementaryTypeName","src":"18185:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18151:56:0"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"totalAvailableCredit","nameLocation":"18234:20:0","nodeType":"VariableDeclaration","scope":491,"src":"18226:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"18226:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18225:30:0"},"scope":510,"src":"18122:134:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"18262:267:0","text":" @notice Withdraws a specified amount of credit from the caller's account.\n @param amount The amount of credit to be withdrawn from the caller's account.\n @return totalAvailableCredit The updated available credit of the caller's account."},"functionSelector":"2e1a7d4d","id":499,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"18543:8:0","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"amount","nameLocation":"18560:6:0","nodeType":"VariableDeclaration","scope":499,"src":"18552:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"18552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18551:16:0"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"totalAvailableCredit","nameLocation":"18594:20:0","nodeType":"VariableDeclaration","scope":499,"src":"18586:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"18586:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18585:30:0"},"scope":510,"src":"18534:82:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"18622:329:0","text":" @notice Withdraws a specified amount of credit to the specified account.\n @param account The address of the account to which the credit is being withdrawn.\n @param amount The amount of credit to be withdrawn.\n @return totalAvailableCredit The updated available credit of the caller's account."},"functionSelector":"205c2878","id":509,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"18965:10:0","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"account","nameLocation":"18984:7:0","nodeType":"VariableDeclaration","scope":509,"src":"18976:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"18976:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"amount","nameLocation":"19001:6:0","nodeType":"VariableDeclaration","scope":509,"src":"18993:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"18993:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:33:0"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"totalAvailableCredit","nameLocation":"19035:20:0","nodeType":"VariableDeclaration","scope":509,"src":"19027:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"19027:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19026:30:0"},"scope":510,"src":"18956:101:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"15990:3069:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IMerkleStorageInvalidator","contractDependencies":[],"contractKind":"interface","documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"19147:194:0","text":" @title Merkle Storage Invalidator interface\n @notice Interface to invalidate hashed secrets from an order that supports multiple fills.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":539,"linearizedBaseContracts":[539],"name":"IMerkleStorageInvalidator","nameLocation":"19352:25:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IMerkleStorageInvalidator.ValidationData","id":516,"members":[{"constant":false,"id":513,"mutability":"mutable","name":"index","nameLocation":"19424:5:0","nodeType":"VariableDeclaration","scope":516,"src":"19416:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"19416:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"leaf","nameLocation":"19447:4:0","nodeType":"VariableDeclaration","scope":516,"src":"19439:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19439:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"19391:14:0","nodeType":"StructDefinition","scope":539,"src":"19384:74:0","visibility":"public"},{"canonicalName":"IMerkleStorageInvalidator.TakerData","id":524,"members":[{"constant":false,"id":519,"mutability":"mutable","name":"proof","nameLocation":"19501:5:0","nodeType":"VariableDeclaration","scope":524,"src":"19491:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19491:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":518,"nodeType":"ArrayTypeName","src":"19491:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"idx","nameLocation":"19524:3:0","nodeType":"VariableDeclaration","scope":524,"src":"19516:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"19516:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"secretHash","nameLocation":"19545:10:0","nodeType":"VariableDeclaration","scope":524,"src":"19537:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19537:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"TakerData","nameLocation":"19471:9:0","nodeType":"StructDefinition","scope":539,"src":"19464:98:0","visibility":"public"},{"errorSelector":"4ca88867","id":526,"name":"AccessDenied","nameLocation":"19574:12:0","nodeType":"ErrorDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"19586:2:0"},"src":"19568:21:0"},{"errorSelector":"09bde339","id":528,"name":"InvalidProof","nameLocation":"19600:12:0","nodeType":"ErrorDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"19612:2:0"},"src":"19594:21:0"},{"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"19621:307:0","text":" @notice Returns the index of the last validated hashed secret and the hashed secret itself.\n @param key Hash of concatenated order hash and 30 bytes of root hash.\n @return index Index of the last validated hashed secret.\n @return secretHash Last validated hashed secret."},"functionSelector":"acf4ce5c","id":538,"implemented":false,"kind":"function","modifiers":[],"name":"lastValidated","nameLocation":"19942:13:0","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"key","nameLocation":"19964:3:0","nodeType":"VariableDeclaration","scope":538,"src":"19956:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19956:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19955:13:0"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"index","nameLocation":"20000:5:0","nodeType":"VariableDeclaration","scope":538,"src":"19992:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"19992:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"secretHash","nameLocation":"20015:10:0","nodeType":"VariableDeclaration","scope":538,"src":"20007:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20007:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19991:35:0"},"scope":539,"src":"19933:94:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10322,"src":"19342:687:0","usedErrors":[526,528],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IPermit2","contractDependencies":[],"contractKind":"interface","documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"20119:165:0","text":" @title IPermit2\n @dev Interface for a flexible permit system that extends ERC20 tokens to support permits in tokens lacking native permit functionality."},"fullyImplemented":false,"id":604,"linearizedBaseContracts":[604],"name":"IPermit2","nameLocation":"20295:8:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPermit2.PermitDetails","documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"20310:356:0","text":" @dev Struct for holding permit details.\n @param token ERC20 token address for which the permit is issued.\n @param amount The maximum amount allowed to spend.\n @param expiration Timestamp until which the permit is valid.\n @param nonce An incrementing value for each signature, unique per owner, token, and spender."},"id":550,"members":[{"constant":false,"id":543,"mutability":"mutable","name":"token","nameLocation":"20710:5:0","nodeType":"VariableDeclaration","scope":550,"src":"20702:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"20702:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"amount","nameLocation":"20733:6:0","nodeType":"VariableDeclaration","scope":550,"src":"20725:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":544,"name":"uint160","nodeType":"ElementaryTypeName","src":"20725:7:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"expiration","nameLocation":"20756:10:0","nodeType":"VariableDeclaration","scope":550,"src":"20749:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":546,"name":"uint48","nodeType":"ElementaryTypeName","src":"20749:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"nonce","nameLocation":"20783:5:0","nodeType":"VariableDeclaration","scope":550,"src":"20776:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":548,"name":"uint48","nodeType":"ElementaryTypeName","src":"20776:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"PermitDetails","nameLocation":"20678:13:0","nodeType":"StructDefinition","scope":604,"src":"20671:124:0","visibility":"public"},{"canonicalName":"IPermit2.PermitSingle","documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"20801:310:0","text":" @dev Struct for a single token allowance permit.\n @param details Permit details including token, amount, expiration, and nonce.\n @param spender Address authorized to spend the tokens.\n @param sigDeadline Deadline for the permit signature, ensuring timeliness of the permit."},"id":559,"members":[{"constant":false,"id":554,"mutability":"mutable","name":"details","nameLocation":"21160:7:0","nodeType":"VariableDeclaration","scope":559,"src":"21146:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$550_storage_ptr","typeString":"struct IPermit2.PermitDetails"},"typeName":{"id":553,"nodeType":"UserDefinedTypeName","pathNode":{"id":552,"name":"PermitDetails","nameLocations":["21146:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":550,"src":"21146:13:0"},"referencedDeclaration":550,"src":"21146:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$550_storage_ptr","typeString":"struct IPermit2.PermitDetails"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"spender","nameLocation":"21185:7:0","nodeType":"VariableDeclaration","scope":559,"src":"21177:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"21177:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"sigDeadline","nameLocation":"21210:11:0","nodeType":"VariableDeclaration","scope":559,"src":"21202:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"21202:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitSingle","nameLocation":"21123:12:0","nodeType":"StructDefinition","scope":604,"src":"21116:112:0","visibility":"public"},{"canonicalName":"IPermit2.PackedAllowance","documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"21234:239:0","text":" @dev Struct for packed allowance data to optimize storage.\n @param amount Amount allowed.\n @param expiration Permission expiry timestamp.\n @param nonce Unique incrementing value for tracking allowances."},"id":567,"members":[{"constant":false,"id":562,"mutability":"mutable","name":"amount","nameLocation":"21519:6:0","nodeType":"VariableDeclaration","scope":567,"src":"21511:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":561,"name":"uint160","nodeType":"ElementaryTypeName","src":"21511:7:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"expiration","nameLocation":"21542:10:0","nodeType":"VariableDeclaration","scope":567,"src":"21535:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":563,"name":"uint48","nodeType":"ElementaryTypeName","src":"21535:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"nonce","nameLocation":"21569:5:0","nodeType":"VariableDeclaration","scope":567,"src":"21562:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":565,"name":"uint48","nodeType":"ElementaryTypeName","src":"21562:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"PackedAllowance","nameLocation":"21485:15:0","nodeType":"StructDefinition","scope":604,"src":"21478:103:0","visibility":"public"},{"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"21587:312:0","text":" @notice Executes a token transfer from one address to another.\n @param user The token owner's address.\n @param spender The address authorized to spend the tokens.\n @param amount The amount of tokens to transfer.\n @param token The address of the token being transferred."},"functionSelector":"36c78516","id":579,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"21913:12:0","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"user","nameLocation":"21934:4:0","nodeType":"VariableDeclaration","scope":579,"src":"21926:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"21926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"spender","nameLocation":"21948:7:0","nodeType":"VariableDeclaration","scope":579,"src":"21940:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"21940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"amount","nameLocation":"21965:6:0","nodeType":"VariableDeclaration","scope":579,"src":"21957:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":573,"name":"uint160","nodeType":"ElementaryTypeName","src":"21957:7:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"token","nameLocation":"21981:5:0","nodeType":"VariableDeclaration","scope":579,"src":"21973:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"21973:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21925:62:0"},"returnParameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"21996:0:0"},"scope":604,"src":"21904:93:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"22003:281:0","text":" @notice Issues a permit for spending tokens via a signed authorization.\n @param owner The token owner's address.\n @param permitSingle Struct containing the permit details.\n @param signature The signature proving the owner authorized the permit."},"functionSelector":"2b67b570","id":590,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"22298:6:0","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"owner","nameLocation":"22313:5:0","nodeType":"VariableDeclaration","scope":590,"src":"22305:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"22305:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"permitSingle","nameLocation":"22340:12:0","nodeType":"VariableDeclaration","scope":590,"src":"22320:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$559_memory_ptr","typeString":"struct IPermit2.PermitSingle"},"typeName":{"id":584,"nodeType":"UserDefinedTypeName","pathNode":{"id":583,"name":"PermitSingle","nameLocations":["22320:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":559,"src":"22320:12:0"},"referencedDeclaration":559,"src":"22320:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$559_storage_ptr","typeString":"struct IPermit2.PermitSingle"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"signature","nameLocation":"22369:9:0","nodeType":"VariableDeclaration","scope":590,"src":"22354:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":586,"name":"bytes","nodeType":"ElementaryTypeName","src":"22354:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22304:75:0"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[],"src":"22388:0:0"},"scope":604,"src":"22289:100:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"22395:268:0","text":" @notice Retrieves the allowance details between a token owner and spender.\n @param user The token owner's address.\n @param token The token address.\n @param spender The spender's address.\n @return The packed allowance details."},"functionSelector":"927da105","id":603,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"22677:9:0","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"user","nameLocation":"22695:4:0","nodeType":"VariableDeclaration","scope":603,"src":"22687:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"22687:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"token","nameLocation":"22709:5:0","nodeType":"VariableDeclaration","scope":603,"src":"22701:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"22701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"spender","nameLocation":"22724:7:0","nodeType":"VariableDeclaration","scope":603,"src":"22716:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"22716:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22686:46:0"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":603,"src":"22756:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$567_memory_ptr","typeString":"struct IPermit2.PackedAllowance"},"typeName":{"id":600,"nodeType":"UserDefinedTypeName","pathNode":{"id":599,"name":"PackedAllowance","nameLocations":["22756:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":567,"src":"22756:15:0"},"referencedDeclaration":567,"src":"22756:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$567_storage_ptr","typeString":"struct IPermit2.PackedAllowance"}},"visibility":"internal"}],"src":"22755:24:0"},"scope":604,"src":"22668:112:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10322,"src":"20285:2497:0","usedErrors":[],"usedEvents":[]},{"canonicalName":"MakerTraits","id":606,"name":"MakerTraits","nameLocation":"22888:11:0","nodeType":"UserDefinedValueTypeDefinition","src":"22883:28:0","underlyingType":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"22903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"abstract":false,"baseContracts":[],"canonicalName":"MakerTraitsLib","contractDependencies":[],"contractKind":"library","documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"22913:1314:0","text":" @title MakerTraitsLib\n @notice A library to manage and check MakerTraits, which are used to encode the maker's preferences for an order in a single uint256.\n @dev\n The MakerTraits type is a uint256 and different parts of the number are used to encode different traits.\n High bits are used for flags\n 255 bit `NO_PARTIAL_FILLS_FLAG`          - if set, the order does not allow partial fills\n 254 bit `ALLOW_MULTIPLE_FILLS_FLAG`      - if set, the order permits multiple fills\n 253 bit                                  - unused\n 252 bit `PRE_INTERACTION_CALL_FLAG`      - if set, the order requires pre-interaction call\n 251 bit `POST_INTERACTION_CALL_FLAG`     - if set, the order requires post-interaction call\n 250 bit `NEED_CHECK_EPOCH_MANAGER_FLAG`  - if set, the order requires to check the epoch manager\n 249 bit `HAS_EXTENSION_FLAG`             - if set, the order has extension(s)\n 248 bit `USE_PERMIT2_FLAG`               - if set, the order uses permit2\n 247 bit `UNWRAP_WETH_FLAG`               - if set, the order requires to unwrap WETH\n Low 200 bits are used for allowed sender, expiration, nonceOrEpoch, and series\n uint80 last 10 bytes of allowed sender address (0 if any)\n uint40 expiration timestamp (0 if none)\n uint40 nonce or epoch\n uint40 series"},"fullyImplemented":true,"id":971,"linearizedBaseContracts":[971],"name":"MakerTraitsLib","nameLocation":"24236:14:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":614,"mutability":"constant","name":"_ALLOWED_SENDER_MASK","nameLocation":"24368:20:0","nodeType":"VariableDeclaration","scope":971,"src":"24343:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"24343:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24396:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":610,"name":"uint80","nodeType":"ElementaryTypeName","src":"24396:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24391:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24391:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24404:3:0","memberName":"max","nodeType":"MemberAccess","src":"24391:16:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"private"},{"constant":true,"id":617,"mutability":"constant","name":"_EXPIRATION_OFFSET","nameLocation":"24438:18:0","nodeType":"VariableDeclaration","scope":971,"src":"24413:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"24413:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3830","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24459:2:0","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"visibility":"private"},{"constant":true,"id":624,"mutability":"constant","name":"_EXPIRATION_MASK","nameLocation":"24492:16:0","nodeType":"VariableDeclaration","scope":971,"src":"24467:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"24467:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24516:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":620,"name":"uint40","nodeType":"ElementaryTypeName","src":"24516:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":619,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24511:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24511:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24524:3:0","memberName":"max","nodeType":"MemberAccess","src":"24511:16:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"private"},{"constant":true,"id":627,"mutability":"constant","name":"_NONCE_OR_EPOCH_OFFSET","nameLocation":"24558:22:0","nodeType":"VariableDeclaration","scope":971,"src":"24533:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"24533:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313230","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24583:3:0","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},"visibility":"private"},{"constant":true,"id":634,"mutability":"constant","name":"_NONCE_OR_EPOCH_MASK","nameLocation":"24617:20:0","nodeType":"VariableDeclaration","scope":971,"src":"24592:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"24592:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24645:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":630,"name":"uint40","nodeType":"ElementaryTypeName","src":"24645:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":629,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24640:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24640:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24653:3:0","memberName":"max","nodeType":"MemberAccess","src":"24640:16:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"private"},{"constant":true,"id":637,"mutability":"constant","name":"_SERIES_OFFSET","nameLocation":"24687:14:0","nodeType":"VariableDeclaration","scope":971,"src":"24662:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"24662:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313630","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24704:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"visibility":"private"},{"constant":true,"id":644,"mutability":"constant","name":"_SERIES_MASK","nameLocation":"24738:12:0","nodeType":"VariableDeclaration","scope":971,"src":"24713:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"24713:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24758:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":640,"name":"uint40","nodeType":"ElementaryTypeName","src":"24758:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":639,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24753:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24753:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24766:3:0","memberName":"max","nodeType":"MemberAccess","src":"24753:16:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"private"},{"constant":true,"id":649,"mutability":"constant","name":"_NO_PARTIAL_FILLS_FLAG","nameLocation":"24801:22:0","nodeType":"VariableDeclaration","scope":971,"src":"24776:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"24776:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24826:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323535","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24831:3:0","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"24826:8:0","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"constant":true,"id":654,"mutability":"constant","name":"_ALLOW_MULTIPLE_FILLS_FLAG","nameLocation":"24865:26:0","nodeType":"VariableDeclaration","scope":971,"src":"24840:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"24840:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"},"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24894:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323534","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24899:3:0","typeDescriptions":{"typeIdentifier":"t_rational_254_by_1","typeString":"int_const 254"},"value":"254"},"src":"24894:8:0","typeDescriptions":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"}},"visibility":"private"},{"constant":true,"id":659,"mutability":"constant","name":"_PRE_INTERACTION_CALL_FLAG","nameLocation":"24933:26:0","nodeType":"VariableDeclaration","scope":971,"src":"24908:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":655,"name":"uint256","nodeType":"ElementaryTypeName","src":"24908:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_7237005577332262213973186563042994240829374041602535252466099000494570602496_by_1","typeString":"int_const 7237...(68 digits omitted)...2496"},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24962:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323532","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24967:3:0","typeDescriptions":{"typeIdentifier":"t_rational_252_by_1","typeString":"int_const 252"},"value":"252"},"src":"24962:8:0","typeDescriptions":{"typeIdentifier":"t_rational_7237005577332262213973186563042994240829374041602535252466099000494570602496_by_1","typeString":"int_const 7237...(68 digits omitted)...2496"}},"visibility":"private"},{"constant":true,"id":664,"mutability":"constant","name":"_POST_INTERACTION_CALL_FLAG","nameLocation":"25001:27:0","nodeType":"VariableDeclaration","scope":971,"src":"24976:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"24976:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1","typeString":"int_const 3618...(68 digits omitted)...1248"},"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25031:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323531","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25036:3:0","typeDescriptions":{"typeIdentifier":"t_rational_251_by_1","typeString":"int_const 251"},"value":"251"},"src":"25031:8:0","typeDescriptions":{"typeIdentifier":"t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1","typeString":"int_const 3618...(68 digits omitted)...1248"}},"visibility":"private"},{"constant":true,"id":669,"mutability":"constant","name":"_NEED_CHECK_EPOCH_MANAGER_FLAG","nameLocation":"25070:30:0","nodeType":"VariableDeclaration","scope":971,"src":"25045:66:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"25045:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1","typeString":"int_const 1809...(68 digits omitted)...0624"},"id":668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25103:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323530","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25108:3:0","typeDescriptions":{"typeIdentifier":"t_rational_250_by_1","typeString":"int_const 250"},"value":"250"},"src":"25103:8:0","typeDescriptions":{"typeIdentifier":"t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1","typeString":"int_const 1809...(68 digits omitted)...0624"}},"visibility":"private"},{"constant":true,"id":674,"mutability":"constant","name":"_HAS_EXTENSION_FLAG","nameLocation":"25142:19:0","nodeType":"VariableDeclaration","scope":971,"src":"25117:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"25117:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_904625697166532776746648320380374280103671755200316906558262375061821325312_by_1","typeString":"int_const 9046...(67 digits omitted)...5312"},"id":673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25164:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323439","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25169:3:0","typeDescriptions":{"typeIdentifier":"t_rational_249_by_1","typeString":"int_const 249"},"value":"249"},"src":"25164:8:0","typeDescriptions":{"typeIdentifier":"t_rational_904625697166532776746648320380374280103671755200316906558262375061821325312_by_1","typeString":"int_const 9046...(67 digits omitted)...5312"}},"visibility":"private"},{"constant":true,"id":679,"mutability":"constant","name":"_USE_PERMIT2_FLAG","nameLocation":"25203:17:0","nodeType":"VariableDeclaration","scope":971,"src":"25178:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"25178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1","typeString":"int_const 4523...(67 digits omitted)...2656"},"id":678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25223:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323438","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25228:3:0","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},"src":"25223:8:0","typeDescriptions":{"typeIdentifier":"t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1","typeString":"int_const 4523...(67 digits omitted)...2656"}},"visibility":"private"},{"constant":true,"id":684,"mutability":"constant","name":"_UNWRAP_WETH_FLAG","nameLocation":"25262:17:0","nodeType":"VariableDeclaration","scope":971,"src":"25237:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"25237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_226156424291633194186662080095093570025917938800079226639565593765455331328_by_1","typeString":"int_const 2261...(67 digits omitted)...1328"},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25282:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323437","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25287:3:0","typeDescriptions":{"typeIdentifier":"t_rational_247_by_1","typeString":"int_const 247"},"value":"247"},"src":"25282:8:0","typeDescriptions":{"typeIdentifier":"t_rational_226156424291633194186662080095093570025917938800079226639565593765455331328_by_1","typeString":"int_const 2261...(67 digits omitted)...1328"}},"visibility":"private"},{"body":{"id":703,"nodeType":"Block","src":"25697:84:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":695,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"25734:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":693,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"25715:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25727:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"25715:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25715:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":697,"name":"_HAS_EXTENSION_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"25749:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25715:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25714:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25773:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25714:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":692,"id":702,"nodeType":"Return","src":"25707:67:0"}]},"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"25297:319:0","text":" @notice Checks if the order has the extension flag set.\n @dev If the `HAS_EXTENSION_FLAG` is set in the makerTraits, then the protocol expects that the order has extension(s).\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the flag is set."},"id":704,"implemented":true,"kind":"function","modifiers":[],"name":"hasExtension","nameLocation":"25630:12:0","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"makerTraits","nameLocation":"25655:11:0","nodeType":"VariableDeclaration","scope":704,"src":"25643:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":687,"nodeType":"UserDefinedTypeName","pathNode":{"id":686,"name":"MakerTraits","nameLocations":["25643:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"25643:11:0"},"referencedDeclaration":606,"src":"25643:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"25642:25:0"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":704,"src":"25691:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":690,"name":"bool","nodeType":"ElementaryTypeName","src":"25691:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25690:6:0"},"scope":971,"src":"25621:160:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"26161:198:0","statements":[{"assignments":[716],"declarations":[{"constant":false,"id":716,"mutability":"mutable","name":"allowedSender","nameLocation":"26179:13:0","nodeType":"VariableDeclaration","scope":740,"src":"26171:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":715,"name":"uint160","nodeType":"ElementaryTypeName","src":"26171:7:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":726,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":721,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"26222:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":719,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"26203:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26215:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"26203:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26203:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":723,"name":"_ALLOWED_SENDER_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"26237:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26203:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26195:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":717,"name":"uint160","nodeType":"ElementaryTypeName","src":"26195:7:0","typeDescriptions":{}}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26195:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"VariableDeclarationStatement","src":"26171:87:0"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"allowedSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"26275:13:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26292:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26275:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":730,"name":"allowedSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"26297:13:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":733,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"26322:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26314:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":731,"name":"uint160","nodeType":"ElementaryTypeName","src":"26314:7:0","typeDescriptions":{}}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26314:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":735,"name":"_ALLOWED_SENDER_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"26332:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26314:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26297:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26275:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":714,"id":739,"nodeType":"Return","src":"26268:84:0"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"25787:274:0","text":" @notice Checks if the maker allows a specific taker to fill the order.\n @param makerTraits The traits of the maker.\n @param sender The address of the taker to be checked.\n @return result A boolean indicating whether the taker is allowed."},"id":741,"implemented":true,"kind":"function","modifiers":[],"name":"isAllowedSender","nameLocation":"26075:15:0","nodeType":"FunctionDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"makerTraits","nameLocation":"26103:11:0","nodeType":"VariableDeclaration","scope":741,"src":"26091:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":707,"nodeType":"UserDefinedTypeName","pathNode":{"id":706,"name":"MakerTraits","nameLocations":["26091:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"26091:11:0"},"referencedDeclaration":606,"src":"26091:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"sender","nameLocation":"26124:6:0","nodeType":"VariableDeclaration","scope":741,"src":"26116:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"26116:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26090:41:0"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":741,"src":"26155:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":712,"name":"bool","nodeType":"ElementaryTypeName","src":"26155:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26154:6:0"},"scope":971,"src":"26066:293:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":771,"nodeType":"Block","src":"26627:218:0","statements":[{"assignments":[751],"declarations":[{"constant":false,"id":751,"mutability":"mutable","name":"expiration","nameLocation":"26645:10:0","nodeType":"VariableDeclaration","scope":771,"src":"26637:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"26637:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":761,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":754,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"26678:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":752,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"26659:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26671:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"26659:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26659:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":756,"name":"_EXPIRATION_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"26694:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26659:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26658:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":759,"name":"_EXPIRATION_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"26716:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26658:74:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26637:95:0"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"26749:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26763:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26749:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":765,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"26768:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":766,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"26781:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26787:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"26781:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26768:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26749:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":749,"id":770,"nodeType":"Return","src":"26742:54:0"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"26365:184:0","text":" @notice Checks if the order has expired.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the order has expired."},"id":772,"implemented":true,"kind":"function","modifiers":[],"name":"isExpired","nameLocation":"26563:9:0","nodeType":"FunctionDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"makerTraits","nameLocation":"26585:11:0","nodeType":"VariableDeclaration","scope":772,"src":"26573:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":744,"nodeType":"UserDefinedTypeName","pathNode":{"id":743,"name":"MakerTraits","nameLocations":["26573:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"26573:11:0"},"referencedDeclaration":606,"src":"26573:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"26572:25:0"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"26621:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":747,"name":"bool","nodeType":"ElementaryTypeName","src":"26621:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26620:6:0"},"scope":971,"src":"26554:291:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":791,"nodeType":"Block","src":"27108:106:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":783,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"27145:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":781,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"27126:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27138:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"27126:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27126:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":785,"name":"_NONCE_OR_EPOCH_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"27161:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27126:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27125:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":788,"name":"_NONCE_OR_EPOCH_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"27187:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27125:82:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":780,"id":790,"nodeType":"Return","src":"27118:89:0"}]},"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"26851:173:0","text":" @notice Returns the nonce or epoch of the order.\n @param makerTraits The traits of the maker.\n @return result The nonce or epoch of the order."},"id":792,"implemented":true,"kind":"function","modifiers":[],"name":"nonceOrEpoch","nameLocation":"27038:12:0","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"makerTraits","nameLocation":"27063:11:0","nodeType":"VariableDeclaration","scope":792,"src":"27051:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":775,"nodeType":"UserDefinedTypeName","pathNode":{"id":774,"name":"MakerTraits","nameLocations":["27051:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"27051:11:0"},"referencedDeclaration":606,"src":"27051:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"27050:25:0"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":792,"src":"27099:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"27099:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27098:9:0"},"scope":971,"src":"27029:185:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":811,"nodeType":"Block","src":"27455:90:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":803,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"27492:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":801,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"27473:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27485:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"27473:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27473:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":805,"name":"_SERIES_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"27508:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27473:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27472:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":808,"name":"_SERIES_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"27526:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27472:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":800,"id":810,"nodeType":"Return","src":"27465:73:0"}]},"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"27220:157:0","text":" @notice Returns the series of the order.\n @param makerTraits The traits of the maker.\n @return result The series of the order."},"id":812,"implemented":true,"kind":"function","modifiers":[],"name":"series","nameLocation":"27391:6:0","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"makerTraits","nameLocation":"27410:11:0","nodeType":"VariableDeclaration","scope":812,"src":"27398:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":795,"nodeType":"UserDefinedTypeName","pathNode":{"id":794,"name":"MakerTraits","nameLocations":["27398:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"27398:11:0"},"referencedDeclaration":606,"src":"27398:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"27397:25:0"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":812,"src":"27446:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"27446:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27445:9:0"},"scope":971,"src":"27382:163:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":831,"nodeType":"Block","src":"28003:87:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":823,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"28040:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":821,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"28021:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28033:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"28021:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28021:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":825,"name":"_NO_PARTIAL_FILLS_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"28055:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28021:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28082:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28020:63:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":820,"id":830,"nodeType":"Return","src":"28013:70:0"}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"27551:366:0","text":" @notice Determines if the order allows partial fills.\n @dev If the _NO_PARTIAL_FILLS_FLAG is not set in the makerTraits, then the order allows partial fills.\n @param makerTraits The traits of the maker, determining their preferences for the order.\n @return result A boolean indicating whether the maker allows partial fills."},"id":832,"implemented":true,"kind":"function","modifiers":[],"name":"allowPartialFills","nameLocation":"27931:17:0","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"makerTraits","nameLocation":"27961:11:0","nodeType":"VariableDeclaration","scope":832,"src":"27949:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":815,"nodeType":"UserDefinedTypeName","pathNode":{"id":814,"name":"MakerTraits","nameLocations":["27949:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"27949:11:0"},"referencedDeclaration":606,"src":"27949:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"27948:25:0"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":832,"src":"27997:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":818,"name":"bool","nodeType":"ElementaryTypeName","src":"27997:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27996:6:0"},"scope":971,"src":"27922:168:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":851,"nodeType":"Block","src":"28403:91:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":843,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"28440:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":841,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"28421:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28433:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"28421:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28421:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":845,"name":"_PRE_INTERACTION_CALL_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"28455:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28421:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28420:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28486:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28420:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":840,"id":850,"nodeType":"Return","src":"28413:74:0"}]},"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"28096:216:0","text":" @notice Checks if the maker needs pre-interaction call.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the maker needs a pre-interaction call."},"id":852,"implemented":true,"kind":"function","modifiers":[],"name":"needPreInteractionCall","nameLocation":"28326:22:0","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"makerTraits","nameLocation":"28361:11:0","nodeType":"VariableDeclaration","scope":852,"src":"28349:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":835,"nodeType":"UserDefinedTypeName","pathNode":{"id":834,"name":"MakerTraits","nameLocations":["28349:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"28349:11:0"},"referencedDeclaration":606,"src":"28349:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"28348:25:0"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":852,"src":"28397:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":838,"name":"bool","nodeType":"ElementaryTypeName","src":"28397:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28396:6:0"},"scope":971,"src":"28317:177:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":871,"nodeType":"Block","src":"28810:92:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":863,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"28847:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":861,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"28828:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28840:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"28828:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28828:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":865,"name":"_POST_INTERACTION_CALL_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"28862:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28828:61:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28827:63:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28894:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28827:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":860,"id":870,"nodeType":"Return","src":"28820:75:0"}]},"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"28500:218:0","text":" @notice Checks if the maker needs post-interaction call.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the maker needs a post-interaction call."},"id":872,"implemented":true,"kind":"function","modifiers":[],"name":"needPostInteractionCall","nameLocation":"28732:23:0","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"makerTraits","nameLocation":"28768:11:0","nodeType":"VariableDeclaration","scope":872,"src":"28756:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":855,"nodeType":"UserDefinedTypeName","pathNode":{"id":854,"name":"MakerTraits","nameLocations":["28756:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"28756:11:0"},"referencedDeclaration":606,"src":"28756:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"28755:25:0"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":872,"src":"28804:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"28804:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28803:6:0"},"scope":971,"src":"28723:179:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":891,"nodeType":"Block","src":"29364:91:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":883,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"29401:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":881,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"29382:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29394:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"29382:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29382:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":885,"name":"_ALLOW_MULTIPLE_FILLS_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"29416:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29382:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29381:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29447:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29381:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":880,"id":890,"nodeType":"Return","src":"29374:74:0"}]},"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"28908:369:0","text":" @notice Determines if the order allows multiple fills.\n @dev If the _ALLOW_MULTIPLE_FILLS_FLAG is set in the makerTraits, then the maker allows multiple fills.\n @param makerTraits The traits of the maker, determining their preferences for the order.\n @return result A boolean indicating whether the maker allows multiple fills."},"id":892,"implemented":true,"kind":"function","modifiers":[],"name":"allowMultipleFills","nameLocation":"29291:18:0","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"makerTraits","nameLocation":"29322:11:0","nodeType":"VariableDeclaration","scope":892,"src":"29310:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":875,"nodeType":"UserDefinedTypeName","pathNode":{"id":874,"name":"MakerTraits","nameLocations":["29310:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"29310:11:0"},"referencedDeclaration":606,"src":"29310:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"29309:25:0"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":892,"src":"29358:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":878,"name":"bool","nodeType":"ElementaryTypeName","src":"29358:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29357:6:0"},"scope":971,"src":"29282:173:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"30012:91:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"30029:31:0","subExpression":{"arguments":[{"id":902,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"30048:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"id":901,"name":"allowPartialFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"30030:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_bool_$","typeString":"function (MakerTraits) pure returns (bool)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30030:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"30064:32:0","subExpression":{"arguments":[{"id":906,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"30084:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"id":905,"name":"allowMultipleFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"30065:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_bool_$","typeString":"function (MakerTraits) pure returns (bool)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30065:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30029:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":900,"id":910,"nodeType":"Return","src":"30022:74:0"}]},"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"29461:465:0","text":" @notice Determines if an order should use the bit invalidator or remaining amount validator.\n @dev The bit invalidator can be used if the order does not allow partial or multiple fills.\n @param makerTraits The traits of the maker, determining their preferences for the order.\n @return result A boolean indicating whether the bit invalidator should be used.\n True if the order requires the use of the bit invalidator."},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"useBitInvalidator","nameLocation":"29940:17:0","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"makerTraits","nameLocation":"29970:11:0","nodeType":"VariableDeclaration","scope":912,"src":"29958:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":895,"nodeType":"UserDefinedTypeName","pathNode":{"id":894,"name":"MakerTraits","nameLocations":["29958:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"29958:11:0"},"referencedDeclaration":606,"src":"29958:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"29957:25:0"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"30006:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"30006:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30005:6:0"},"scope":971,"src":"29931:172:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"30417:95:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":923,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"30454:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":921,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"30435:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30447:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"30435:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30435:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":925,"name":"_NEED_CHECK_EPOCH_MANAGER_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"30469:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30435:64:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30434:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30504:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30434:71:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":920,"id":930,"nodeType":"Return","src":"30427:78:0"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"30109:218:0","text":" @notice Checks if the maker needs to check the epoch.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the maker needs to check the epoch manager."},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"needCheckEpochManager","nameLocation":"30341:21:0","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"makerTraits","nameLocation":"30375:11:0","nodeType":"VariableDeclaration","scope":932,"src":"30363:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":915,"nodeType":"UserDefinedTypeName","pathNode":{"id":914,"name":"MakerTraits","nameLocations":["30363:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"30363:11:0"},"referencedDeclaration":606,"src":"30363:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"30362:25:0"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"30411:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":918,"name":"bool","nodeType":"ElementaryTypeName","src":"30411:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30410:6:0"},"scope":971,"src":"30332:180:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"30783:80:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":943,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"30819:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":941,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"30800:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30812:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"30800:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30800:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":945,"name":"_USE_PERMIT2_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"30834:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30800:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30855:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30800:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":940,"id":949,"nodeType":"Return","src":"30793:63:0"}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"30518:186:0","text":" @notice Checks if the maker uses permit2.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the maker uses permit2."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"usePermit2","nameLocation":"30718:10:0","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"makerTraits","nameLocation":"30741:11:0","nodeType":"VariableDeclaration","scope":951,"src":"30729:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":935,"nodeType":"UserDefinedTypeName","pathNode":{"id":934,"name":"MakerTraits","nameLocations":["30729:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"30729:11:0"},"referencedDeclaration":606,"src":"30729:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"30728:25:0"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":951,"src":"30777:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":938,"name":"bool","nodeType":"ElementaryTypeName","src":"30777:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30776:6:0"},"scope":971,"src":"30709:154:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":969,"nodeType":"Block","src":"31151:80:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":962,"name":"makerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"31187:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":960,"name":"MakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"31168:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_MakerTraits_$606_$","typeString":"type(MakerTraits)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31180:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"31168:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_uint256_$","typeString":"function (MakerTraits) pure returns (uint256)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31168:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":964,"name":"_UNWRAP_WETH_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"31202:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31168:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31223:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31168:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":959,"id":968,"nodeType":"Return","src":"31161:63:0"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"30869:203:0","text":" @notice Checks if the maker needs to unwraps WETH.\n @param makerTraits The traits of the maker.\n @return result A boolean indicating whether the maker needs to unwrap WETH."},"id":970,"implemented":true,"kind":"function","modifiers":[],"name":"unwrapWeth","nameLocation":"31086:10:0","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"makerTraits","nameLocation":"31109:11:0","nodeType":"VariableDeclaration","scope":970,"src":"31097:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":954,"nodeType":"UserDefinedTypeName","pathNode":{"id":953,"name":"MakerTraits","nameLocations":["31097:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"31097:11:0"},"referencedDeclaration":606,"src":"31097:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"src":"31096:25:0"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":970,"src":"31145:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":957,"name":"bool","nodeType":"ElementaryTypeName","src":"31145:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31144:6:0"},"scope":971,"src":"31077:154:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"24228:7005:0","usedErrors":[],"usedEvents":[]},{"canonicalName":"Offsets","id":973,"name":"Offsets","nameLocation":"31335:7:0","nodeType":"UserDefinedValueTypeDefinition","src":"31330:24:0","underlyingType":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"31346:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"abstract":false,"baseContracts":[],"canonicalName":"OffsetsLib","contractDependencies":[],"contractKind":"library","documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"31356:104:0","text":"@title OffsetsLib\n @dev A library for retrieving values by offsets from a concatenated calldata."},"fullyImplemented":true,"id":998,"linearizedBaseContracts":[998],"name":"OffsetsLib","nameLocation":"31468:10:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"31486:61:0","text":"@dev Error to be thrown when the offset is out of bounds."},"errorSelector":"9605a010","id":977,"name":"OffsetOutOfBounds","nameLocation":"31558:17:0","nodeType":"ErrorDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"31575:2:0"},"src":"31552:26:0"},{"body":{"id":996,"nodeType":"Block","src":"32656:723:0","statements":[{"assignments":[991],"declarations":[{"constant":false,"id":991,"mutability":"mutable","name":"exception","nameLocation":"32673:9:0","nodeType":"VariableDeclaration","scope":996,"src":"32666:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":990,"name":"bytes4","nodeType":"ElementaryTypeName","src":"32666:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":994,"initialValue":{"expression":{"id":992,"name":"OffsetOutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"32685:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32703:8:0","memberName":"selector","nodeType":"MemberAccess","src":"32685:26:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"32666:45:0"},{"AST":{"nativeSrc":"32746:627:0","nodeType":"YulBlock","src":"32746:627:0","statements":[{"nativeSrc":"32804:29:0","nodeType":"YulVariableDeclaration","src":"32804:29:0","value":{"arguments":[{"kind":"number","nativeSrc":"32824:1:0","nodeType":"YulLiteral","src":"32824:1:0","type":"","value":"5"},{"name":"index","nativeSrc":"32827:5:0","nodeType":"YulIdentifier","src":"32827:5:0"}],"functionName":{"name":"shl","nativeSrc":"32820:3:0","nodeType":"YulIdentifier","src":"32820:3:0"},"nativeSrc":"32820:13:0","nodeType":"YulFunctionCall","src":"32820:13:0"},"variables":[{"name":"bitShift","nativeSrc":"32808:8:0","nodeType":"YulTypedName","src":"32808:8:0","type":""}]},{"nativeSrc":"32905:61:0","nodeType":"YulVariableDeclaration","src":"32905:61:0","value":{"arguments":[{"kind":"number","nativeSrc":"32922:10:0","nodeType":"YulLiteral","src":"32922:10:0","type":"","value":"0xffffffff"},{"arguments":[{"name":"bitShift","nativeSrc":"32938:8:0","nodeType":"YulIdentifier","src":"32938:8:0"},{"arguments":[{"kind":"number","nativeSrc":"32952:2:0","nodeType":"YulLiteral","src":"32952:2:0","type":"","value":"32"},{"name":"offsets","nativeSrc":"32956:7:0","nodeType":"YulIdentifier","src":"32956:7:0"}],"functionName":{"name":"shl","nativeSrc":"32948:3:0","nodeType":"YulIdentifier","src":"32948:3:0"},"nativeSrc":"32948:16:0","nodeType":"YulFunctionCall","src":"32948:16:0"}],"functionName":{"name":"shr","nativeSrc":"32934:3:0","nodeType":"YulIdentifier","src":"32934:3:0"},"nativeSrc":"32934:31:0","nodeType":"YulFunctionCall","src":"32934:31:0"}],"functionName":{"name":"and","nativeSrc":"32918:3:0","nodeType":"YulIdentifier","src":"32918:3:0"},"nativeSrc":"32918:48:0","nodeType":"YulFunctionCall","src":"32918:48:0"},"variables":[{"name":"begin","nativeSrc":"32909:5:0","nodeType":"YulTypedName","src":"32909:5:0","type":""}]},{"nativeSrc":"33028:50:0","nodeType":"YulVariableDeclaration","src":"33028:50:0","value":{"arguments":[{"kind":"number","nativeSrc":"33043:10:0","nodeType":"YulLiteral","src":"33043:10:0","type":"","value":"0xffffffff"},{"arguments":[{"name":"bitShift","nativeSrc":"33059:8:0","nodeType":"YulIdentifier","src":"33059:8:0"},{"name":"offsets","nativeSrc":"33069:7:0","nodeType":"YulIdentifier","src":"33069:7:0"}],"functionName":{"name":"shr","nativeSrc":"33055:3:0","nodeType":"YulIdentifier","src":"33055:3:0"},"nativeSrc":"33055:22:0","nodeType":"YulFunctionCall","src":"33055:22:0"}],"functionName":{"name":"and","nativeSrc":"33039:3:0","nodeType":"YulIdentifier","src":"33039:3:0"},"nativeSrc":"33039:39:0","nodeType":"YulFunctionCall","src":"33039:39:0"},"variables":[{"name":"end","nativeSrc":"33032:3:0","nodeType":"YulTypedName","src":"33032:3:0","type":""}]},{"nativeSrc":"33156:42:0","nodeType":"YulAssignment","src":"33156:42:0","value":{"arguments":[{"name":"concat.offset","nativeSrc":"33177:13:0","nodeType":"YulIdentifier","src":"33177:13:0"},{"name":"begin","nativeSrc":"33192:5:0","nodeType":"YulIdentifier","src":"33192:5:0"}],"functionName":{"name":"add","nativeSrc":"33173:3:0","nodeType":"YulIdentifier","src":"33173:3:0"},"nativeSrc":"33173:25:0","nodeType":"YulFunctionCall","src":"33173:25:0"},"variableNames":[{"name":"result.offset","nativeSrc":"33156:13:0","nodeType":"YulIdentifier","src":"33156:13:0"}]},{"nativeSrc":"33211:32:0","nodeType":"YulAssignment","src":"33211:32:0","value":{"arguments":[{"name":"end","nativeSrc":"33232:3:0","nodeType":"YulIdentifier","src":"33232:3:0"},{"name":"begin","nativeSrc":"33237:5:0","nodeType":"YulIdentifier","src":"33237:5:0"}],"functionName":{"name":"sub","nativeSrc":"33228:3:0","nodeType":"YulIdentifier","src":"33228:3:0"},"nativeSrc":"33228:15:0","nodeType":"YulFunctionCall","src":"33228:15:0"},"variableNames":[{"name":"result.length","nativeSrc":"33211:13:0","nodeType":"YulIdentifier","src":"33211:13:0"}]},{"body":{"nativeSrc":"33282:81:0","nodeType":"YulBlock","src":"33282:81:0","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"33307:1:0","nodeType":"YulLiteral","src":"33307:1:0","type":"","value":"0"},{"name":"exception","nativeSrc":"33310:9:0","nodeType":"YulIdentifier","src":"33310:9:0"}],"functionName":{"name":"mstore","nativeSrc":"33300:6:0","nodeType":"YulIdentifier","src":"33300:6:0"},"nativeSrc":"33300:20:0","nodeType":"YulFunctionCall","src":"33300:20:0"},"nativeSrc":"33300:20:0","nodeType":"YulExpressionStatement","src":"33300:20:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"33344:1:0","nodeType":"YulLiteral","src":"33344:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"33347:1:0","nodeType":"YulLiteral","src":"33347:1:0","type":"","value":"4"}],"functionName":{"name":"revert","nativeSrc":"33337:6:0","nodeType":"YulIdentifier","src":"33337:6:0"},"nativeSrc":"33337:12:0","nodeType":"YulFunctionCall","src":"33337:12:0"},"nativeSrc":"33337:12:0","nodeType":"YulExpressionStatement","src":"33337:12:0"}]},"condition":{"arguments":[{"name":"end","nativeSrc":"33262:3:0","nodeType":"YulIdentifier","src":"33262:3:0"},{"name":"concat.length","nativeSrc":"33267:13:0","nodeType":"YulIdentifier","src":"33267:13:0"}],"functionName":{"name":"gt","nativeSrc":"33259:2:0","nodeType":"YulIdentifier","src":"33259:2:0"},"nativeSrc":"33259:22:0","nodeType":"YulFunctionCall","src":"33259:22:0"},"nativeSrc":"33256:107:0","nodeType":"YulIf","src":"33256:107:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":983,"isOffset":false,"isSlot":false,"src":"33267:13:0","suffix":"length","valueSize":1},{"declaration":983,"isOffset":true,"isSlot":false,"src":"33177:13:0","suffix":"offset","valueSize":1},{"declaration":991,"isOffset":false,"isSlot":false,"src":"33310:9:0","valueSize":1},{"declaration":985,"isOffset":false,"isSlot":false,"src":"32827:5:0","valueSize":1},{"declaration":981,"isOffset":false,"isSlot":false,"src":"32956:7:0","valueSize":1},{"declaration":981,"isOffset":false,"isSlot":false,"src":"33069:7:0","valueSize":1},{"declaration":988,"isOffset":false,"isSlot":false,"src":"33211:13:0","suffix":"length","valueSize":1},{"declaration":988,"isOffset":true,"isSlot":false,"src":"33156:13:0","suffix":"offset","valueSize":1}],"flags":["memory-safe"],"id":995,"nodeType":"InlineAssembly","src":"32721:652:0"}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"31584:954:0","text":" @notice Retrieves the field value calldata corresponding to the provided field index from the concatenated calldata.\n @dev \n The function performs the following steps:\n 1. Retrieve the start and end of the segment corresponding to the provided index from the offsets array.\n 2. Get the value from segment using offset and length calculated based on the start and end of the segment.\n 3. Throw `OffsetOutOfBounds` error if the length of the segment is greater than the length of the concatenated data.\n @param offsets The offsets encoding the start and end of each segment within the concatenated calldata.\n @param concat The concatenated calldata.\n @param index The index of the segment to retrieve. The field index 0 corresponds to the lowest bytes of the offsets array.\n @return result The calldata from a segment of the concatenated calldata corresponding to the provided index."},"id":997,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"32552:3:0","nodeType":"FunctionDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"offsets","nameLocation":"32564:7:0","nodeType":"VariableDeclaration","scope":997,"src":"32556:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Offsets_$973","typeString":"Offsets"},"typeName":{"id":980,"nodeType":"UserDefinedTypeName","pathNode":{"id":979,"name":"Offsets","nameLocations":["32556:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":973,"src":"32556:7:0"},"referencedDeclaration":973,"src":"32556:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Offsets_$973","typeString":"Offsets"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"concat","nameLocation":"32588:6:0","nodeType":"VariableDeclaration","scope":997,"src":"32573:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":982,"name":"bytes","nodeType":"ElementaryTypeName","src":"32573:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"index","nameLocation":"32604:5:0","nodeType":"VariableDeclaration","scope":997,"src":"32596:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":984,"name":"uint256","nodeType":"ElementaryTypeName","src":"32596:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32555:55:0"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"result","nameLocation":"32648:6:0","nodeType":"VariableDeclaration","scope":997,"src":"32633:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":987,"name":"bytes","nodeType":"ElementaryTypeName","src":"32633:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32632:23:0"},"scope":998,"src":"32543:836:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"31460:1921:0","usedErrors":[977],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"33471:459:0","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]."},"fullyImplemented":true,"id":1048,"linearizedBaseContracts":[1048],"name":"Panic","nameLocation":"33981:5:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"33993:36:0","text":"@dev generic / unspecified error"},"id":1003,"mutability":"constant","name":"GENERIC","nameLocation":"34060:7:0","nodeType":"VariableDeclaration","scope":1048,"src":"34034:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"34034:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34070:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"34080:37:0","text":"@dev used by the assert() builtin"},"id":1007,"mutability":"constant","name":"ASSERT","nameLocation":"34148:6:0","nodeType":"VariableDeclaration","scope":1048,"src":"34122:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"34122:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34157:4:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"34167:41:0","text":"@dev arithmetic underflow or overflow"},"id":1011,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"34239:14:0","nodeType":"VariableDeclaration","scope":1048,"src":"34213:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"34213:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34256:4:0","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"34266:35:0","text":"@dev division or modulo by zero"},"id":1015,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"34332:16:0","nodeType":"VariableDeclaration","scope":1048,"src":"34306:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"34306:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34351:4:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"34361:30:0","text":"@dev enum conversion error"},"id":1019,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"34422:21:0","nodeType":"VariableDeclaration","scope":1048,"src":"34396:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"34396:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34446:4:0","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"34456:36:0","text":"@dev invalid encoding in storage"},"id":1023,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"34523:22:0","nodeType":"VariableDeclaration","scope":1048,"src":"34497:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"34497:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34548:4:0","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"34558:24:0","text":"@dev empty array pop"},"id":1027,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"34613:15:0","nodeType":"VariableDeclaration","scope":1048,"src":"34587:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"34587:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34631:4:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"34641:35:0","text":"@dev array out of bounds access"},"id":1031,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"34707:19:0","nodeType":"VariableDeclaration","scope":1048,"src":"34681:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"34681:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34729:4:0","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"34739:65:0","text":"@dev resource error (too large allocation or too large array)"},"id":1035,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"34835:14:0","nodeType":"VariableDeclaration","scope":1048,"src":"34809:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"34809:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34852:4:0","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"34862:42:0","text":"@dev calling invalid internal function"},"id":1039,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"34935:25:0","nodeType":"VariableDeclaration","scope":1048,"src":"34909:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"34909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34963:4:0","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1046,"nodeType":"Block","src":"35135:178:0","statements":[{"AST":{"nativeSrc":"35197:110:0","nodeType":"YulBlock","src":"35197:110:0","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"35218:4:0","nodeType":"YulLiteral","src":"35218:4:0","type":"","value":"0x00"},{"kind":"number","nativeSrc":"35224:10:0","nodeType":"YulLiteral","src":"35224:10:0","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"35211:6:0","nodeType":"YulIdentifier","src":"35211:6:0"},"nativeSrc":"35211:24:0","nodeType":"YulFunctionCall","src":"35211:24:0"},"nativeSrc":"35211:24:0","nodeType":"YulExpressionStatement","src":"35211:24:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"35255:4:0","nodeType":"YulLiteral","src":"35255:4:0","type":"","value":"0x20"},{"name":"code","nativeSrc":"35261:4:0","nodeType":"YulIdentifier","src":"35261:4:0"}],"functionName":{"name":"mstore","nativeSrc":"35248:6:0","nodeType":"YulIdentifier","src":"35248:6:0"},"nativeSrc":"35248:18:0","nodeType":"YulFunctionCall","src":"35248:18:0"},"nativeSrc":"35248:18:0","nodeType":"YulExpressionStatement","src":"35248:18:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"35286:4:0","nodeType":"YulLiteral","src":"35286:4:0","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"35292:4:0","nodeType":"YulLiteral","src":"35292:4:0","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"35279:6:0","nodeType":"YulIdentifier","src":"35279:6:0"},"nativeSrc":"35279:18:0","nodeType":"YulFunctionCall","src":"35279:18:0"},"nativeSrc":"35279:18:0","nodeType":"YulExpressionStatement","src":"35279:18:0"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1042,"isOffset":false,"isSlot":false,"src":"35261:4:0","valueSize":1}],"id":1045,"nodeType":"InlineAssembly","src":"35188:119:0"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"34974:113:0","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1047,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"35101:5:0","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"code","nameLocation":"35115:4:0","nodeType":"VariableDeclaration","scope":1047,"src":"35107:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"35107:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35106:14:0"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"35135:0:0"},"scope":1048,"src":"35092:221:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"33973:1342:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"ProxyHashLib","contractDependencies":[],"contractKind":"library","documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"35389:114:0","text":" @title Library to compute the hash of the proxy bytecode.\n @custom:security-contact security@1inch.io"},"fullyImplemented":true,"id":1060,"linearizedBaseContracts":[1060],"name":"ProxyHashLib","nameLocation":"35512:12:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":1058,"nodeType":"Block","src":"35881:504:0","statements":[{"AST":{"nativeSrc":"35916:463:0","nodeType":"YulBlock","src":"35916:463:0","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"35986:4:0","nodeType":"YulLiteral","src":"35986:4:0","type":"","value":"0x20"},{"kind":"number","nativeSrc":"35992:32:0","nodeType":"YulLiteral","src":"35992:32:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"mstore","nativeSrc":"35979:6:0","nodeType":"YulIdentifier","src":"35979:6:0"},"nativeSrc":"35979:46:0","nodeType":"YulFunctionCall","src":"35979:46:0"},"nativeSrc":"35979:46:0","nodeType":"YulExpressionStatement","src":"35979:46:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"36083:4:0","nodeType":"YulLiteral","src":"36083:4:0","type":"","value":"0x11"},{"name":"implementation","nativeSrc":"36089:14:0","nodeType":"YulIdentifier","src":"36089:14:0"}],"functionName":{"name":"mstore","nativeSrc":"36076:6:0","nodeType":"YulIdentifier","src":"36076:6:0"},"nativeSrc":"36076:28:0","nodeType":"YulFunctionCall","src":"36076:28:0"},"nativeSrc":"36076:28:0","nodeType":"YulExpressionStatement","src":"36076:28:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"36233:4:0","nodeType":"YulLiteral","src":"36233:4:0","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"36246:4:0","nodeType":"YulLiteral","src":"36246:4:0","type":"","value":"0x88"},{"name":"implementation","nativeSrc":"36252:14:0","nodeType":"YulIdentifier","src":"36252:14:0"}],"functionName":{"name":"shr","nativeSrc":"36242:3:0","nodeType":"YulIdentifier","src":"36242:3:0"},"nativeSrc":"36242:25:0","nodeType":"YulFunctionCall","src":"36242:25:0"},{"kind":"number","nativeSrc":"36269:48:0","nodeType":"YulLiteral","src":"36269:48:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nativeSrc":"36239:2:0","nodeType":"YulIdentifier","src":"36239:2:0"},"nativeSrc":"36239:79:0","nodeType":"YulFunctionCall","src":"36239:79:0"}],"functionName":{"name":"mstore","nativeSrc":"36226:6:0","nodeType":"YulIdentifier","src":"36226:6:0"},"nativeSrc":"36226:93:0","nodeType":"YulFunctionCall","src":"36226:93:0"},"nativeSrc":"36226:93:0","nodeType":"YulExpressionStatement","src":"36226:93:0"},{"nativeSrc":"36332:37:0","nodeType":"YulAssignment","src":"36332:37:0","value":{"arguments":[{"kind":"number","nativeSrc":"36358:4:0","nodeType":"YulLiteral","src":"36358:4:0","type":"","value":"0x09"},{"kind":"number","nativeSrc":"36364:4:0","nodeType":"YulLiteral","src":"36364:4:0","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nativeSrc":"36348:9:0","nodeType":"YulIdentifier","src":"36348:9:0"},"nativeSrc":"36348:21:0","nodeType":"YulFunctionCall","src":"36348:21:0"},"variableNames":[{"name":"bytecodeHash","nativeSrc":"36332:12:0","nodeType":"YulIdentifier","src":"36332:12:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1055,"isOffset":false,"isSlot":false,"src":"36332:12:0","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"36089:14:0","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"36252:14:0","valueSize":1}],"flags":["memory-safe"],"id":1057,"nodeType":"InlineAssembly","src":"35891:488:0"}]},"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"35531:242:0","text":" @notice Returns the hash of the proxy bytecode concatenated with the implementation address.\n @param implementation The address of the contract to clone.\n @return bytecodeHash The hash of the resulting bytecode."},"id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"computeProxyBytecodeHash","nameLocation":"35787:24:0","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"implementation","nameLocation":"35820:14:0","nodeType":"VariableDeclaration","scope":1059,"src":"35812:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"35812:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35811:24:0"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"bytecodeHash","nameLocation":"35867:12:0","nodeType":"VariableDeclaration","scope":1059,"src":"35859:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35859:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"35858:22:0"},"scope":1060,"src":"35778:607:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"35504:883:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"RevertReasonForwarder","contractDependencies":[],"contractKind":"library","documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"36489:142:0","text":" @title RevertReasonForwarder\n @notice Provides utilities for forwarding and retrieving revert reasons from failed external calls."},"fullyImplemented":true,"id":1076,"linearizedBaseContracts":[1076],"name":"RevertReasonForwarder","nameLocation":"36640:21:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":1066,"nodeType":"Block","src":"36885:286:0","statements":[{"AST":{"nativeSrc":"36981:184:0","nodeType":"YulBlock","src":"36981:184:0","statements":[{"nativeSrc":"37038:22:0","nodeType":"YulVariableDeclaration","src":"37038:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"37055:4:0","nodeType":"YulLiteral","src":"37055:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"37049:5:0","nodeType":"YulIdentifier","src":"37049:5:0"},"nativeSrc":"37049:11:0","nodeType":"YulFunctionCall","src":"37049:11:0"},"variables":[{"name":"ptr","nativeSrc":"37042:3:0","nodeType":"YulTypedName","src":"37042:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"37088:3:0","nodeType":"YulIdentifier","src":"37088:3:0"},{"kind":"number","nativeSrc":"37093:1:0","nodeType":"YulLiteral","src":"37093:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"37096:14:0","nodeType":"YulIdentifier","src":"37096:14:0"},"nativeSrc":"37096:16:0","nodeType":"YulFunctionCall","src":"37096:16:0"}],"functionName":{"name":"returndatacopy","nativeSrc":"37073:14:0","nodeType":"YulIdentifier","src":"37073:14:0"},"nativeSrc":"37073:40:0","nodeType":"YulFunctionCall","src":"37073:40:0"},"nativeSrc":"37073:40:0","nodeType":"YulExpressionStatement","src":"37073:40:0"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"37133:3:0","nodeType":"YulIdentifier","src":"37133:3:0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"37138:14:0","nodeType":"YulIdentifier","src":"37138:14:0"},"nativeSrc":"37138:16:0","nodeType":"YulFunctionCall","src":"37138:16:0"}],"functionName":{"name":"revert","nativeSrc":"37126:6:0","nodeType":"YulIdentifier","src":"37126:6:0"},"nativeSrc":"37126:29:0","nodeType":"YulFunctionCall","src":"37126:29:0"},"nativeSrc":"37126:29:0","nodeType":"YulExpressionStatement","src":"37126:29:0"}]},"evmVersion":"paris","externalReferences":[],"flags":["memory-safe"],"id":1065,"nodeType":"InlineAssembly","src":"36956:209:0"}]},"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"36668:178:0","text":" @dev Forwards the revert reason from the latest external call.\n This method allows propagating the revert reason of a failed external call to the caller."},"id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"reRevert","nameLocation":"36860:8:0","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[],"src":"36868:2:0"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"36885:0:0"},"scope":1076,"src":"36851:320:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1074,"nodeType":"Block","src":"37501:321:0","statements":[{"AST":{"nativeSrc":"37536:280:0","nodeType":"YulBlock","src":"37536:280:0","statements":[{"nativeSrc":"37593:21:0","nodeType":"YulAssignment","src":"37593:21:0","value":{"arguments":[{"kind":"number","nativeSrc":"37609:4:0","nodeType":"YulLiteral","src":"37609:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"37603:5:0","nodeType":"YulIdentifier","src":"37603:5:0"},"nativeSrc":"37603:11:0","nodeType":"YulFunctionCall","src":"37603:11:0"},"variableNames":[{"name":"reason","nativeSrc":"37593:6:0","nodeType":"YulIdentifier","src":"37593:6:0"}]},{"nativeSrc":"37627:30:0","nodeType":"YulVariableDeclaration","src":"37627:30:0","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"37641:14:0","nodeType":"YulIdentifier","src":"37641:14:0"},"nativeSrc":"37641:16:0","nodeType":"YulFunctionCall","src":"37641:16:0"},"variables":[{"name":"length","nativeSrc":"37631:6:0","nodeType":"YulTypedName","src":"37631:6:0","type":""}]},{"expression":{"arguments":[{"name":"reason","nativeSrc":"37677:6:0","nodeType":"YulIdentifier","src":"37677:6:0"},{"name":"length","nativeSrc":"37685:6:0","nodeType":"YulIdentifier","src":"37685:6:0"}],"functionName":{"name":"mstore","nativeSrc":"37670:6:0","nodeType":"YulIdentifier","src":"37670:6:0"},"nativeSrc":"37670:22:0","nodeType":"YulFunctionCall","src":"37670:22:0"},"nativeSrc":"37670:22:0","nodeType":"YulExpressionStatement","src":"37670:22:0"},{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"37724:6:0","nodeType":"YulIdentifier","src":"37724:6:0"},{"kind":"number","nativeSrc":"37732:4:0","nodeType":"YulLiteral","src":"37732:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"37720:3:0","nodeType":"YulIdentifier","src":"37720:3:0"},"nativeSrc":"37720:17:0","nodeType":"YulFunctionCall","src":"37720:17:0"},{"kind":"number","nativeSrc":"37739:1:0","nodeType":"YulLiteral","src":"37739:1:0","type":"","value":"0"},{"name":"length","nativeSrc":"37742:6:0","nodeType":"YulIdentifier","src":"37742:6:0"}],"functionName":{"name":"returndatacopy","nativeSrc":"37705:14:0","nodeType":"YulIdentifier","src":"37705:14:0"},"nativeSrc":"37705:44:0","nodeType":"YulFunctionCall","src":"37705:44:0"},"nativeSrc":"37705:44:0","nodeType":"YulExpressionStatement","src":"37705:44:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"37769:4:0","nodeType":"YulLiteral","src":"37769:4:0","type":"","value":"0x40"},{"arguments":[{"name":"reason","nativeSrc":"37779:6:0","nodeType":"YulIdentifier","src":"37779:6:0"},{"arguments":[{"kind":"number","nativeSrc":"37791:4:0","nodeType":"YulLiteral","src":"37791:4:0","type":"","value":"0x20"},{"name":"length","nativeSrc":"37797:6:0","nodeType":"YulIdentifier","src":"37797:6:0"}],"functionName":{"name":"add","nativeSrc":"37787:3:0","nodeType":"YulIdentifier","src":"37787:3:0"},"nativeSrc":"37787:17:0","nodeType":"YulFunctionCall","src":"37787:17:0"}],"functionName":{"name":"add","nativeSrc":"37775:3:0","nodeType":"YulIdentifier","src":"37775:3:0"},"nativeSrc":"37775:30:0","nodeType":"YulFunctionCall","src":"37775:30:0"}],"functionName":{"name":"mstore","nativeSrc":"37762:6:0","nodeType":"YulIdentifier","src":"37762:6:0"},"nativeSrc":"37762:44:0","nodeType":"YulFunctionCall","src":"37762:44:0"},"nativeSrc":"37762:44:0","nodeType":"YulExpressionStatement","src":"37762:44:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":1071,"isOffset":false,"isSlot":false,"src":"37593:6:0","valueSize":1},{"declaration":1071,"isOffset":false,"isSlot":false,"src":"37677:6:0","valueSize":1},{"declaration":1071,"isOffset":false,"isSlot":false,"src":"37724:6:0","valueSize":1},{"declaration":1071,"isOffset":false,"isSlot":false,"src":"37779:6:0","valueSize":1}],"flags":["memory-safe"],"id":1073,"nodeType":"InlineAssembly","src":"37511:305:0"}]},"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"37177:255:0","text":" @dev Retrieves the revert reason from the latest external call.\n This method enables capturing the revert reason of a failed external call for inspection or processing.\n @return reason The latest external call revert reason."},"id":1075,"implemented":true,"kind":"function","modifiers":[],"name":"reReason","nameLocation":"37446:8:0","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"37454:2:0"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"reason","nameLocation":"37493:6:0","nodeType":"VariableDeclaration","scope":1075,"src":"37480:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1070,"name":"bytes","nodeType":"ElementaryTypeName","src":"37480:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37479:21:0"},"scope":1076,"src":"37437:385:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"36632:1192:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"38082:550:0","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":2839,"linearizedBaseContracts":[2839],"name":"SafeCast","nameLocation":"38641:8:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"38656:68:0","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":1084,"name":"SafeCastOverflowedUintDowncast","nameLocation":"38735:30:0","nodeType":"ErrorDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"bits","nameLocation":"38772:4:0","nodeType":"VariableDeclaration","scope":1084,"src":"38766:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1079,"name":"uint8","nodeType":"ElementaryTypeName","src":"38766:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"value","nameLocation":"38786:5:0","nodeType":"VariableDeclaration","scope":1084,"src":"38778:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"38778:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38765:27:0"},"src":"38729:64:0"},{"documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"38799:75:0","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":1089,"name":"SafeCastOverflowedIntToUint","nameLocation":"38885:27:0","nodeType":"ErrorDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"value","nameLocation":"38920:5:0","nodeType":"VariableDeclaration","scope":1089,"src":"38913:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1086,"name":"int256","nodeType":"ElementaryTypeName","src":"38913:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"38912:14:0"},"src":"38879:48:0"},{"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"38933:67:0","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":1096,"name":"SafeCastOverflowedIntDowncast","nameLocation":"39011:29:0","nodeType":"ErrorDefinition","parameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"bits","nameLocation":"39047:4:0","nodeType":"VariableDeclaration","scope":1096,"src":"39041:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1091,"name":"uint8","nodeType":"ElementaryTypeName","src":"39041:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"value","nameLocation":"39060:5:0","nodeType":"VariableDeclaration","scope":1096,"src":"39053:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1093,"name":"int256","nodeType":"ElementaryTypeName","src":"39053:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"39040:26:0"},"src":"39005:62:0"},{"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"39073:75:0","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":1101,"name":"SafeCastOverflowedUintToInt","nameLocation":"39159:27:0","nodeType":"ErrorDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"value","nameLocation":"39195:5:0","nodeType":"VariableDeclaration","scope":1101,"src":"39187:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"39187:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39186:15:0"},"src":"39153:49:0"},{"body":{"id":1128,"nodeType":"Block","src":"39559:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"39573:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39586:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1111,"name":"uint248","nodeType":"ElementaryTypeName","src":"39586:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":1110,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"39581:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39581:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"39595:3:0","memberName":"max","nodeType":"MemberAccess","src":"39581:17:0","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"39573:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1122,"nodeType":"IfStatement","src":"39569:105:0","trueBody":{"id":1121,"nodeType":"Block","src":"39600:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39652:3:0","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":1118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"39657:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1116,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"39621:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39621:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"RevertStatement","src":"39614:49:0"}]}},{"expression":{"arguments":[{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"39698:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39690:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1123,"name":"uint248","nodeType":"ElementaryTypeName","src":"39690:7:0","typeDescriptions":{}}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39690:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":1108,"id":1127,"nodeType":"Return","src":"39683:21:0"}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"39208:280:0","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":1129,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"39502:9:0","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"value","nameLocation":"39520:5:0","nodeType":"VariableDeclaration","scope":1129,"src":"39512:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"39512:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39511:15:0"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1129,"src":"39550:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":1106,"name":"uint248","nodeType":"ElementaryTypeName","src":"39550:7:0","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"39549:9:0"},"scope":2839,"src":"39493:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1156,"nodeType":"Block","src":"40068:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"40082:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40095:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1139,"name":"uint240","nodeType":"ElementaryTypeName","src":"40095:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":1138,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"40090:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40090:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"40104:3:0","memberName":"max","nodeType":"MemberAccess","src":"40090:17:0","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"40082:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1150,"nodeType":"IfStatement","src":"40078:105:0","trueBody":{"id":1149,"nodeType":"Block","src":"40109:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40161:3:0","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":1146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"40166:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1144,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"40130:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40130:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1148,"nodeType":"RevertStatement","src":"40123:49:0"}]}},{"expression":{"arguments":[{"id":1153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"40207:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40199:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1151,"name":"uint240","nodeType":"ElementaryTypeName","src":"40199:7:0","typeDescriptions":{}}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40199:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":1136,"id":1155,"nodeType":"Return","src":"40192:21:0"}]},"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"39717:280:0","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":1157,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"40011:9:0","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"value","nameLocation":"40029:5:0","nodeType":"VariableDeclaration","scope":1157,"src":"40021:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"40021:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40020:15:0"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1157,"src":"40059:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":1134,"name":"uint240","nodeType":"ElementaryTypeName","src":"40059:7:0","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"40058:9:0"},"scope":2839,"src":"40002:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1184,"nodeType":"Block","src":"40577:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"40591:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40604:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1167,"name":"uint232","nodeType":"ElementaryTypeName","src":"40604:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":1166,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"40599:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40599:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"40613:3:0","memberName":"max","nodeType":"MemberAccess","src":"40599:17:0","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"40591:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1178,"nodeType":"IfStatement","src":"40587:105:0","trueBody":{"id":1177,"nodeType":"Block","src":"40618:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40670:3:0","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":1174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"40675:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1172,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"40639:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40639:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"RevertStatement","src":"40632:49:0"}]}},{"expression":{"arguments":[{"id":1181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"40716:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40708:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1179,"name":"uint232","nodeType":"ElementaryTypeName","src":"40708:7:0","typeDescriptions":{}}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40708:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":1164,"id":1183,"nodeType":"Return","src":"40701:21:0"}]},"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"40226:280:0","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":1185,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"40520:9:0","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"value","nameLocation":"40538:5:0","nodeType":"VariableDeclaration","scope":1185,"src":"40530:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"40530:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40529:15:0"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1185,"src":"40568:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":1162,"name":"uint232","nodeType":"ElementaryTypeName","src":"40568:7:0","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"40567:9:0"},"scope":2839,"src":"40511:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"41086:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"41100:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"41113:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1195,"name":"uint224","nodeType":"ElementaryTypeName","src":"41113:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1194,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"41108:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41108:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"41122:3:0","memberName":"max","nodeType":"MemberAccess","src":"41108:17:0","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"41100:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1206,"nodeType":"IfStatement","src":"41096:105:0","trueBody":{"id":1205,"nodeType":"Block","src":"41127:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41179:3:0","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":1202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"41184:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1200,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"41148:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41148:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"RevertStatement","src":"41141:49:0"}]}},{"expression":{"arguments":[{"id":1209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"41225:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"41217:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1207,"name":"uint224","nodeType":"ElementaryTypeName","src":"41217:7:0","typeDescriptions":{}}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41217:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1192,"id":1211,"nodeType":"Return","src":"41210:21:0"}]},"documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"40735:280:0","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"41029:9:0","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"value","nameLocation":"41047:5:0","nodeType":"VariableDeclaration","scope":1213,"src":"41039:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"41039:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41038:15:0"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"41077:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1190,"name":"uint224","nodeType":"ElementaryTypeName","src":"41077:7:0","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"41076:9:0"},"scope":2839,"src":"41020:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"41595:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"41609:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"41622:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1223,"name":"uint216","nodeType":"ElementaryTypeName","src":"41622:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":1222,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"41617:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41617:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"41631:3:0","memberName":"max","nodeType":"MemberAccess","src":"41617:17:0","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"41609:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1234,"nodeType":"IfStatement","src":"41605:105:0","trueBody":{"id":1233,"nodeType":"Block","src":"41636:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41688:3:0","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":1230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"41693:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1228,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"41657:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41657:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"RevertStatement","src":"41650:49:0"}]}},{"expression":{"arguments":[{"id":1237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"41734:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"41726:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1235,"name":"uint216","nodeType":"ElementaryTypeName","src":"41726:7:0","typeDescriptions":{}}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41726:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":1220,"id":1239,"nodeType":"Return","src":"41719:21:0"}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"41244:280:0","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"41538:9:0","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"value","nameLocation":"41556:5:0","nodeType":"VariableDeclaration","scope":1241,"src":"41548:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"41548:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41547:15:0"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1241,"src":"41586:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":1218,"name":"uint216","nodeType":"ElementaryTypeName","src":"41586:7:0","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"41585:9:0"},"scope":2839,"src":"41529:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1268,"nodeType":"Block","src":"42104:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"42118:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42131:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1251,"name":"uint208","nodeType":"ElementaryTypeName","src":"42131:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":1250,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"42126:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42126:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42140:3:0","memberName":"max","nodeType":"MemberAccess","src":"42126:17:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"42118:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1262,"nodeType":"IfStatement","src":"42114:105:0","trueBody":{"id":1261,"nodeType":"Block","src":"42145:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"42197:3:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":1258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"42202:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1256,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"42166:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42166:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1260,"nodeType":"RevertStatement","src":"42159:49:0"}]}},{"expression":{"arguments":[{"id":1265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"42243:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42235:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1263,"name":"uint208","nodeType":"ElementaryTypeName","src":"42235:7:0","typeDescriptions":{}}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42235:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1248,"id":1267,"nodeType":"Return","src":"42228:21:0"}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"41753:280:0","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":1269,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"42047:9:0","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"value","nameLocation":"42065:5:0","nodeType":"VariableDeclaration","scope":1269,"src":"42057:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"42057:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42056:15:0"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1269,"src":"42095:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1246,"name":"uint208","nodeType":"ElementaryTypeName","src":"42095:7:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"42094:9:0"},"scope":2839,"src":"42038:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1296,"nodeType":"Block","src":"42613:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"42627:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42640:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":1279,"name":"uint200","nodeType":"ElementaryTypeName","src":"42640:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":1278,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"42635:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42635:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42649:3:0","memberName":"max","nodeType":"MemberAccess","src":"42635:17:0","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"42627:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1290,"nodeType":"IfStatement","src":"42623:105:0","trueBody":{"id":1289,"nodeType":"Block","src":"42654:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"42706:3:0","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":1286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"42711:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1284,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"42675:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42675:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1288,"nodeType":"RevertStatement","src":"42668:49:0"}]}},{"expression":{"arguments":[{"id":1293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"42752:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42744:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":1291,"name":"uint200","nodeType":"ElementaryTypeName","src":"42744:7:0","typeDescriptions":{}}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42744:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":1276,"id":1295,"nodeType":"Return","src":"42737:21:0"}]},"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"42262:280:0","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"42556:9:0","nodeType":"FunctionDefinition","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"value","nameLocation":"42574:5:0","nodeType":"VariableDeclaration","scope":1297,"src":"42566:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"42566:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42565:15:0"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1297,"src":"42604:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":1274,"name":"uint200","nodeType":"ElementaryTypeName","src":"42604:7:0","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"42603:9:0"},"scope":2839,"src":"42547:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1324,"nodeType":"Block","src":"43122:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"43136:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43149:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":1307,"name":"uint192","nodeType":"ElementaryTypeName","src":"43149:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":1306,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"43144:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43144:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"43158:3:0","memberName":"max","nodeType":"MemberAccess","src":"43144:17:0","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"43136:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1318,"nodeType":"IfStatement","src":"43132:105:0","trueBody":{"id":1317,"nodeType":"Block","src":"43163:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43215:3:0","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":1314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"43220:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1312,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"43184:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43184:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1316,"nodeType":"RevertStatement","src":"43177:49:0"}]}},{"expression":{"arguments":[{"id":1321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"43261:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43253:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":1319,"name":"uint192","nodeType":"ElementaryTypeName","src":"43253:7:0","typeDescriptions":{}}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43253:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":1304,"id":1323,"nodeType":"Return","src":"43246:21:0"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"42771:280:0","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"43065:9:0","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"value","nameLocation":"43083:5:0","nodeType":"VariableDeclaration","scope":1325,"src":"43075:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"43075:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43074:15:0"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1325,"src":"43113:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1302,"name":"uint192","nodeType":"ElementaryTypeName","src":"43113:7:0","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"43112:9:0"},"scope":2839,"src":"43056:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1352,"nodeType":"Block","src":"43631:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"43645:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43658:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":1335,"name":"uint184","nodeType":"ElementaryTypeName","src":"43658:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":1334,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"43653:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43653:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"43667:3:0","memberName":"max","nodeType":"MemberAccess","src":"43653:17:0","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"43645:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1346,"nodeType":"IfStatement","src":"43641:105:0","trueBody":{"id":1345,"nodeType":"Block","src":"43672:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43724:3:0","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":1342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"43729:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1340,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"43693:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43693:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"RevertStatement","src":"43686:49:0"}]}},{"expression":{"arguments":[{"id":1349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"43770:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43762:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":1347,"name":"uint184","nodeType":"ElementaryTypeName","src":"43762:7:0","typeDescriptions":{}}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43762:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":1332,"id":1351,"nodeType":"Return","src":"43755:21:0"}]},"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"43280:280:0","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"43574:9:0","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"value","nameLocation":"43592:5:0","nodeType":"VariableDeclaration","scope":1353,"src":"43584:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"43584:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43583:15:0"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1353,"src":"43622:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":1330,"name":"uint184","nodeType":"ElementaryTypeName","src":"43622:7:0","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"43621:9:0"},"scope":2839,"src":"43565:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1380,"nodeType":"Block","src":"44140:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"44154:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44167:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":1363,"name":"uint176","nodeType":"ElementaryTypeName","src":"44167:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":1362,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"44162:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44162:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44176:3:0","memberName":"max","nodeType":"MemberAccess","src":"44162:17:0","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"44154:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1374,"nodeType":"IfStatement","src":"44150:105:0","trueBody":{"id":1373,"nodeType":"Block","src":"44181:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44233:3:0","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":1370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"44238:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1368,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"44202:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44202:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"RevertStatement","src":"44195:49:0"}]}},{"expression":{"arguments":[{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"44279:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44271:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":1375,"name":"uint176","nodeType":"ElementaryTypeName","src":"44271:7:0","typeDescriptions":{}}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44271:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":1360,"id":1379,"nodeType":"Return","src":"44264:21:0"}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"43789:280:0","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"44083:9:0","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"value","nameLocation":"44101:5:0","nodeType":"VariableDeclaration","scope":1381,"src":"44093:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"44093:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44092:15:0"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"44131:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":1358,"name":"uint176","nodeType":"ElementaryTypeName","src":"44131:7:0","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"44130:9:0"},"scope":2839,"src":"44074:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1408,"nodeType":"Block","src":"44649:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"44663:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44676:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":1391,"name":"uint168","nodeType":"ElementaryTypeName","src":"44676:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":1390,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"44671:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44671:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44685:3:0","memberName":"max","nodeType":"MemberAccess","src":"44671:17:0","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"44663:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1402,"nodeType":"IfStatement","src":"44659:105:0","trueBody":{"id":1401,"nodeType":"Block","src":"44690:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44742:3:0","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"44747:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1396,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"44711:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44711:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"RevertStatement","src":"44704:49:0"}]}},{"expression":{"arguments":[{"id":1405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"44788:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44780:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":1403,"name":"uint168","nodeType":"ElementaryTypeName","src":"44780:7:0","typeDescriptions":{}}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44780:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":1388,"id":1407,"nodeType":"Return","src":"44773:21:0"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"44298:280:0","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":1409,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"44592:9:0","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"value","nameLocation":"44610:5:0","nodeType":"VariableDeclaration","scope":1409,"src":"44602:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"44602:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44601:15:0"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1409,"src":"44640:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":1386,"name":"uint168","nodeType":"ElementaryTypeName","src":"44640:7:0","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"44639:9:0"},"scope":2839,"src":"44583:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1436,"nodeType":"Block","src":"45158:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"45172:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45185:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1419,"name":"uint160","nodeType":"ElementaryTypeName","src":"45185:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":1418,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"45180:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45180:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45194:3:0","memberName":"max","nodeType":"MemberAccess","src":"45180:17:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"45172:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1430,"nodeType":"IfStatement","src":"45168:105:0","trueBody":{"id":1429,"nodeType":"Block","src":"45199:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45251:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":1426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"45256:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1424,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"45220:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45220:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1428,"nodeType":"RevertStatement","src":"45213:49:0"}]}},{"expression":{"arguments":[{"id":1433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"45297:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1431,"name":"uint160","nodeType":"ElementaryTypeName","src":"45289:7:0","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45289:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":1416,"id":1435,"nodeType":"Return","src":"45282:21:0"}]},"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"44807:280:0","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":1437,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"45101:9:0","nodeType":"FunctionDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"value","nameLocation":"45119:5:0","nodeType":"VariableDeclaration","scope":1437,"src":"45111:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"45111:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45110:15:0"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1437,"src":"45149:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1414,"name":"uint160","nodeType":"ElementaryTypeName","src":"45149:7:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"45148:9:0"},"scope":2839,"src":"45092:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1464,"nodeType":"Block","src":"45667:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"45681:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45694:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":1447,"name":"uint152","nodeType":"ElementaryTypeName","src":"45694:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":1446,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"45689:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45689:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45703:3:0","memberName":"max","nodeType":"MemberAccess","src":"45689:17:0","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"45681:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1458,"nodeType":"IfStatement","src":"45677:105:0","trueBody":{"id":1457,"nodeType":"Block","src":"45708:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45760:3:0","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"45765:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1452,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"45729:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45729:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"RevertStatement","src":"45722:49:0"}]}},{"expression":{"arguments":[{"id":1461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"45806:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45798:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":1459,"name":"uint152","nodeType":"ElementaryTypeName","src":"45798:7:0","typeDescriptions":{}}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45798:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":1444,"id":1463,"nodeType":"Return","src":"45791:21:0"}]},"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"45316:280:0","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"45610:9:0","nodeType":"FunctionDefinition","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"value","nameLocation":"45628:5:0","nodeType":"VariableDeclaration","scope":1465,"src":"45620:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"45620:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45619:15:0"},"returnParameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1465,"src":"45658:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":1442,"name":"uint152","nodeType":"ElementaryTypeName","src":"45658:7:0","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"45657:9:0"},"scope":2839,"src":"45601:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1492,"nodeType":"Block","src":"46176:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"46190:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"46203:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":1475,"name":"uint144","nodeType":"ElementaryTypeName","src":"46203:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":1474,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"46198:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46198:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"46212:3:0","memberName":"max","nodeType":"MemberAccess","src":"46198:17:0","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"46190:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1486,"nodeType":"IfStatement","src":"46186:105:0","trueBody":{"id":1485,"nodeType":"Block","src":"46217:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46269:3:0","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":1482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"46274:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1480,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"46238:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46238:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1484,"nodeType":"RevertStatement","src":"46231:49:0"}]}},{"expression":{"arguments":[{"id":1489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"46315:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"46307:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":1487,"name":"uint144","nodeType":"ElementaryTypeName","src":"46307:7:0","typeDescriptions":{}}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46307:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":1472,"id":1491,"nodeType":"Return","src":"46300:21:0"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"45825:280:0","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"46119:9:0","nodeType":"FunctionDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"value","nameLocation":"46137:5:0","nodeType":"VariableDeclaration","scope":1493,"src":"46129:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"46129:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46128:15:0"},"returnParameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1493,"src":"46167:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":1470,"name":"uint144","nodeType":"ElementaryTypeName","src":"46167:7:0","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"46166:9:0"},"scope":2839,"src":"46110:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1520,"nodeType":"Block","src":"46685:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"46699:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"46712:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":1503,"name":"uint136","nodeType":"ElementaryTypeName","src":"46712:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":1502,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"46707:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46707:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"46721:3:0","memberName":"max","nodeType":"MemberAccess","src":"46707:17:0","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"46699:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1514,"nodeType":"IfStatement","src":"46695:105:0","trueBody":{"id":1513,"nodeType":"Block","src":"46726:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46778:3:0","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":1510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"46783:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1508,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"46747:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46747:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1512,"nodeType":"RevertStatement","src":"46740:49:0"}]}},{"expression":{"arguments":[{"id":1517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"46824:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"46816:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":1515,"name":"uint136","nodeType":"ElementaryTypeName","src":"46816:7:0","typeDescriptions":{}}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46816:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":1500,"id":1519,"nodeType":"Return","src":"46809:21:0"}]},"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"46334:280:0","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":1521,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"46628:9:0","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"46646:5:0","nodeType":"VariableDeclaration","scope":1521,"src":"46638:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"46638:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46637:15:0"},"returnParameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1521,"src":"46676:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":1498,"name":"uint136","nodeType":"ElementaryTypeName","src":"46676:7:0","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"46675:9:0"},"scope":2839,"src":"46619:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1548,"nodeType":"Block","src":"47194:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"47208:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47221:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1531,"name":"uint128","nodeType":"ElementaryTypeName","src":"47221:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":1530,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"47216:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47216:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"47230:3:0","memberName":"max","nodeType":"MemberAccess","src":"47216:17:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"47208:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1542,"nodeType":"IfStatement","src":"47204:105:0","trueBody":{"id":1541,"nodeType":"Block","src":"47235:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47287:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":1538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"47292:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1536,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"47256:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47256:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"RevertStatement","src":"47249:49:0"}]}},{"expression":{"arguments":[{"id":1545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"47333:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47325:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1543,"name":"uint128","nodeType":"ElementaryTypeName","src":"47325:7:0","typeDescriptions":{}}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47325:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":1528,"id":1547,"nodeType":"Return","src":"47318:21:0"}]},"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"46843:280:0","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"47137:9:0","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"value","nameLocation":"47155:5:0","nodeType":"VariableDeclaration","scope":1549,"src":"47147:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1523,"name":"uint256","nodeType":"ElementaryTypeName","src":"47147:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47146:15:0"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"47185:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1526,"name":"uint128","nodeType":"ElementaryTypeName","src":"47185:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"47184:9:0"},"scope":2839,"src":"47128:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1576,"nodeType":"Block","src":"47703:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"47717:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47730:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":1559,"name":"uint120","nodeType":"ElementaryTypeName","src":"47730:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":1558,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"47725:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47725:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"47739:3:0","memberName":"max","nodeType":"MemberAccess","src":"47725:17:0","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"47717:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1570,"nodeType":"IfStatement","src":"47713:105:0","trueBody":{"id":1569,"nodeType":"Block","src":"47744:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47796:3:0","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":1566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"47801:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1564,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"47765:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47765:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"RevertStatement","src":"47758:49:0"}]}},{"expression":{"arguments":[{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"47842:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47834:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":1571,"name":"uint120","nodeType":"ElementaryTypeName","src":"47834:7:0","typeDescriptions":{}}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47834:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":1556,"id":1575,"nodeType":"Return","src":"47827:21:0"}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"47352:280:0","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"47646:9:0","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"value","nameLocation":"47664:5:0","nodeType":"VariableDeclaration","scope":1577,"src":"47656:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"47656:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47655:15:0"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1577,"src":"47694:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":1554,"name":"uint120","nodeType":"ElementaryTypeName","src":"47694:7:0","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"47693:9:0"},"scope":2839,"src":"47637:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1604,"nodeType":"Block","src":"48212:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"48226:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"48239:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1587,"name":"uint112","nodeType":"ElementaryTypeName","src":"48239:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":1586,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"48234:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"48248:3:0","memberName":"max","nodeType":"MemberAccess","src":"48234:17:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"48226:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1598,"nodeType":"IfStatement","src":"48222:105:0","trueBody":{"id":1597,"nodeType":"Block","src":"48253:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48305:3:0","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":1594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"48310:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1592,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"48274:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48274:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1596,"nodeType":"RevertStatement","src":"48267:49:0"}]}},{"expression":{"arguments":[{"id":1601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"48351:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"48343:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1599,"name":"uint112","nodeType":"ElementaryTypeName","src":"48343:7:0","typeDescriptions":{}}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48343:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":1584,"id":1603,"nodeType":"Return","src":"48336:21:0"}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"47861:280:0","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"48155:9:0","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"value","nameLocation":"48173:5:0","nodeType":"VariableDeclaration","scope":1605,"src":"48165:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"48165:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48164:15:0"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"48203:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1582,"name":"uint112","nodeType":"ElementaryTypeName","src":"48203:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"48202:9:0"},"scope":2839,"src":"48146:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1632,"nodeType":"Block","src":"48721:152:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"48735:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"48748:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":1615,"name":"uint104","nodeType":"ElementaryTypeName","src":"48748:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":1614,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"48743:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48743:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"48757:3:0","memberName":"max","nodeType":"MemberAccess","src":"48743:17:0","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"48735:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1626,"nodeType":"IfStatement","src":"48731:105:0","trueBody":{"id":1625,"nodeType":"Block","src":"48762:74:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48814:3:0","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":1622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"48819:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1620,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"48783:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48783:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1624,"nodeType":"RevertStatement","src":"48776:49:0"}]}},{"expression":{"arguments":[{"id":1629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"48860:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"48852:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":1627,"name":"uint104","nodeType":"ElementaryTypeName","src":"48852:7:0","typeDescriptions":{}}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48852:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":1612,"id":1631,"nodeType":"Return","src":"48845:21:0"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"48370:280:0","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"48664:9:0","nodeType":"FunctionDefinition","parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"value","nameLocation":"48682:5:0","nodeType":"VariableDeclaration","scope":1633,"src":"48674:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"48674:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48673:15:0"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"48712:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":1610,"name":"uint104","nodeType":"ElementaryTypeName","src":"48712:7:0","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"48711:9:0"},"scope":2839,"src":"48655:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1660,"nodeType":"Block","src":"49224:149:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"49238:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"49251:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1643,"name":"uint96","nodeType":"ElementaryTypeName","src":"49251:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":1642,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"49246:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49246:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"49259:3:0","memberName":"max","nodeType":"MemberAccess","src":"49246:16:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"49238:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1654,"nodeType":"IfStatement","src":"49234:103:0","trueBody":{"id":1653,"nodeType":"Block","src":"49264:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"49316:2:0","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":1650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"49320:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1648,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"49285:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49285:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"RevertStatement","src":"49278:48:0"}]}},{"expression":{"arguments":[{"id":1657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"49360:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"49353:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1655,"name":"uint96","nodeType":"ElementaryTypeName","src":"49353:6:0","typeDescriptions":{}}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49353:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1640,"id":1659,"nodeType":"Return","src":"49346:20:0"}]},"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"48879:276:0","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":1661,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"49169:8:0","nodeType":"FunctionDefinition","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"value","nameLocation":"49186:5:0","nodeType":"VariableDeclaration","scope":1661,"src":"49178:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"49178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49177:15:0"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1661,"src":"49216:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1638,"name":"uint96","nodeType":"ElementaryTypeName","src":"49216:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"49215:8:0"},"scope":2839,"src":"49160:213:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1688,"nodeType":"Block","src":"49724:149:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"49738:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"49751:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":1671,"name":"uint88","nodeType":"ElementaryTypeName","src":"49751:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":1670,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"49746:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49746:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"49759:3:0","memberName":"max","nodeType":"MemberAccess","src":"49746:16:0","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"49738:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1682,"nodeType":"IfStatement","src":"49734:103:0","trueBody":{"id":1681,"nodeType":"Block","src":"49764:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"49816:2:0","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":1678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"49820:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1676,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"49785:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49785:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"RevertStatement","src":"49778:48:0"}]}},{"expression":{"arguments":[{"id":1685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"49860:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"49853:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":1683,"name":"uint88","nodeType":"ElementaryTypeName","src":"49853:6:0","typeDescriptions":{}}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49853:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":1668,"id":1687,"nodeType":"Return","src":"49846:20:0"}]},"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"49379:276:0","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"49669:8:0","nodeType":"FunctionDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"value","nameLocation":"49686:5:0","nodeType":"VariableDeclaration","scope":1689,"src":"49678:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"49678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49677:15:0"},"returnParameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1689,"src":"49716:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":1666,"name":"uint88","nodeType":"ElementaryTypeName","src":"49716:6:0","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"49715:8:0"},"scope":2839,"src":"49660:213:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1716,"nodeType":"Block","src":"50224:149:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"50238:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"50251:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":1699,"name":"uint80","nodeType":"ElementaryTypeName","src":"50251:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":1698,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"50246:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50246:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"50259:3:0","memberName":"max","nodeType":"MemberAccess","src":"50246:16:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"50238:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1710,"nodeType":"IfStatement","src":"50234:103:0","trueBody":{"id":1709,"nodeType":"Block","src":"50264:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50316:2:0","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":1706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"50320:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1704,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"50285:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50285:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1708,"nodeType":"RevertStatement","src":"50278:48:0"}]}},{"expression":{"arguments":[{"id":1713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"50360:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"50353:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":1711,"name":"uint80","nodeType":"ElementaryTypeName","src":"50353:6:0","typeDescriptions":{}}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50353:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":1696,"id":1715,"nodeType":"Return","src":"50346:20:0"}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"49879:276:0","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":1717,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"50169:8:0","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"value","nameLocation":"50186:5:0","nodeType":"VariableDeclaration","scope":1717,"src":"50178:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"50178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50177:15:0"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1717,"src":"50216:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1694,"name":"uint80","nodeType":"ElementaryTypeName","src":"50216:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"50215:8:0"},"scope":2839,"src":"50160:213:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1744,"nodeType":"Block","src":"50724:149:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"50738:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"50751:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":1727,"name":"uint72","nodeType":"ElementaryTypeName","src":"50751:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":1726,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"50746:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50746:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"50759:3:0","memberName":"max","nodeType":"MemberAccess","src":"50746:16:0","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"50738:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1738,"nodeType":"IfStatement","src":"50734:103:0","trueBody":{"id":1737,"nodeType":"Block","src":"50764:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50816:2:0","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":1734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"50820:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1732,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"50785:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50785:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"RevertStatement","src":"50778:48:0"}]}},{"expression":{"arguments":[{"id":1741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"50860:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"50853:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":1739,"name":"uint72","nodeType":"ElementaryTypeName","src":"50853:6:0","typeDescriptions":{}}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50853:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":1724,"id":1743,"nodeType":"Return","src":"50846:20:0"}]},"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"50379:276:0","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":1745,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"50669:8:0","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"value","nameLocation":"50686:5:0","nodeType":"VariableDeclaration","scope":1745,"src":"50678:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"50678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50677:15:0"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1745,"src":"50716:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":1722,"name":"uint72","nodeType":"ElementaryTypeName","src":"50716:6:0","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"50715:8:0"},"scope":2839,"src":"50660:213:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"51224:149:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"51238:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"51251:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1755,"name":"uint64","nodeType":"ElementaryTypeName","src":"51251:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":1754,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"51246:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"51246:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"51259:3:0","memberName":"max","nodeType":"MemberAccess","src":"51246:16:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"51238:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1766,"nodeType":"IfStatement","src":"51234:103:0","trueBody":{"id":1765,"nodeType":"Block","src":"51264:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51316:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":1762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"51320:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"51285:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"51285:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1764,"nodeType":"RevertStatement","src":"51278:48:0"}]}},{"expression":{"arguments":[{"id":1769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"51360:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"51353:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1767,"name":"uint64","nodeType":"ElementaryTypeName","src":"51353:6:0","typeDescriptions":{}}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"51353:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":1752,"id":1771,"nodeType":"Return","src":"51346:20:0"}]},"documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"50879:276:0","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"51169:8:0","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"value","nameLocation":"51186:5:0","nodeType":"VariableDeclaration","scope":1773,"src":"51178:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"51178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51177:15:0"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"51216:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1750,"name":"uint64","nodeType":"ElementaryTypeName","src":"51216:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"51215:8:0"},"scope":2839,"src":"51160:213:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1800,"nodeType":"Block","src":"51724:149:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"51738:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"51751:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":1783,"name":"uint56","nodeType":"ElementaryTypeName","src":"51751:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":1782,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"51746:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"51746:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"51759:3:0","memberName":"max","nodeType":"MemberAccess","src":"51746:16:0","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"51738:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"nodeType":"IfStatement","src":"51734:103:0","trueBody":{"id":1793,"nodeType":"Block","src":"51764:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51816:2:0","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":1790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"51820:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1788,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"51785:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"51785:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"RevertStatement","src":"51778:48:0"}]}},{"expression":{"arguments":[{"id":1797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"51860:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"51853:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":1795,"name":"uint56","nodeType":"ElementaryTypeName","src":"51853:6:0","typeDescriptions":{}}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"51853:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":1780,"id":1799,"nodeType":"Return","src":"51846:20:0"}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"51379:276:0","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"51669:8:0","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"value","nameLocation":"51686:5:0","nodeType":"VariableDeclaration","scope":1801,"src":"51678:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"51678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51677:15:0"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1801,"src":"51716:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":1778,"name":"uint56","nodeType":"ElementaryTypeName","src":"51716:6:0","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"51715:8:0"},"scope":2839,"src":"51660:213:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"52224:149:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"52238:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"52251:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1811,"name":"uint48","nodeType":"ElementaryTypeName","src":"52251:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":1810,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"52246:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"52246:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"52259:3:0","memberName":"max","nodeType":"MemberAccess","src":"52246:16:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"52238:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1822,"nodeType":"IfStatement","src":"52234:103:0","trueBody":{"id":1821,"nodeType":"Block","src":"52264:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52316:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":1818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"52320:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1816,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"52285:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"52285:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"RevertStatement","src":"52278:48:0"}]}},{"expression":{"arguments":[{"id":1825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"52360:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"52353:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1823,"name":"uint48","nodeType":"ElementaryTypeName","src":"52353:6:0","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"52353:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":1808,"id":1827,"nodeType":"Return","src":"52346:20:0"}]},"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"51879:276:0","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"52169:8:0","nodeType":"FunctionDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"value","nameLocation":"52186:5:0","nodeType":"VariableDeclaration","scope":1829,"src":"52178:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"52178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52177:15:0"},"returnParameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"52216:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1806,"name":"uint48","nodeType":"ElementaryTypeName","src":"52216:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"52215:8:0"},"scope":2839,"src":"52160:213:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1856,"nodeType":"Block","src":"52724:149:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"52738:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"52751:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":1839,"name":"uint40","nodeType":"ElementaryTypeName","src":"52751:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":1838,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"52746:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"52746:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"52759:3:0","memberName":"max","nodeType":"MemberAccess","src":"52746:16:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"52738:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1850,"nodeType":"IfStatement","src":"52734:103:0","trueBody":{"id":1849,"nodeType":"Block","src":"52764:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52816:2:0","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"52820:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1844,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"52785:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"52785:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1848,"nodeType":"RevertStatement","src":"52778:48:0"}]}},{"expression":{"arguments":[{"id":1853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"52860:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"52853:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":1851,"name":"uint40","nodeType":"ElementaryTypeName","src":"52853:6:0","typeDescriptions":{}}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"52853:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":1836,"id":1855,"nodeType":"Return","src":"52846:20:0"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"52379:276:0","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":1857,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"52669:8:0","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"value","nameLocation":"52686:5:0","nodeType":"VariableDeclaration","scope":1857,"src":"52678:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"52678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52677:15:0"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1857,"src":"52716:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1834,"name":"uint40","nodeType":"ElementaryTypeName","src":"52716:6:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"52715:8:0"},"scope":2839,"src":"52660:213:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1884,"nodeType":"Block","src":"53224:149:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"53238:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"53251:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1867,"name":"uint32","nodeType":"ElementaryTypeName","src":"53251:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":1866,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"53246:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53246:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"53259:3:0","memberName":"max","nodeType":"MemberAccess","src":"53246:16:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"53238:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1878,"nodeType":"IfStatement","src":"53234:103:0","trueBody":{"id":1877,"nodeType":"Block","src":"53264:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"53316:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":1874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"53320:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1872,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"53285:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53285:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1876,"nodeType":"RevertStatement","src":"53278:48:0"}]}},{"expression":{"arguments":[{"id":1881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"53360:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"53353:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1879,"name":"uint32","nodeType":"ElementaryTypeName","src":"53353:6:0","typeDescriptions":{}}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53353:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1864,"id":1883,"nodeType":"Return","src":"53346:20:0"}]},"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"52879:276:0","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"53169:8:0","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"value","nameLocation":"53186:5:0","nodeType":"VariableDeclaration","scope":1885,"src":"53178:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"53178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53177:15:0"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"53216:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1862,"name":"uint32","nodeType":"ElementaryTypeName","src":"53216:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"53215:8:0"},"scope":2839,"src":"53160:213:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1912,"nodeType":"Block","src":"53724:149:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"53738:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"53751:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":1895,"name":"uint24","nodeType":"ElementaryTypeName","src":"53751:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":1894,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"53746:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53746:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"53759:3:0","memberName":"max","nodeType":"MemberAccess","src":"53746:16:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"53738:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"IfStatement","src":"53734:103:0","trueBody":{"id":1905,"nodeType":"Block","src":"53764:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"53816:2:0","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":1902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"53820:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1900,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"53785:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53785:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1904,"nodeType":"RevertStatement","src":"53778:48:0"}]}},{"expression":{"arguments":[{"id":1909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"53860:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"53853:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":1907,"name":"uint24","nodeType":"ElementaryTypeName","src":"53853:6:0","typeDescriptions":{}}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53853:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":1892,"id":1911,"nodeType":"Return","src":"53846:20:0"}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"53379:276:0","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":1913,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"53669:8:0","nodeType":"FunctionDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"value","nameLocation":"53686:5:0","nodeType":"VariableDeclaration","scope":1913,"src":"53678:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"53678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53677:15:0"},"returnParameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1913,"src":"53716:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1890,"name":"uint24","nodeType":"ElementaryTypeName","src":"53716:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"53715:8:0"},"scope":2839,"src":"53660:213:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1940,"nodeType":"Block","src":"54224:149:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"54238:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"54251:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1923,"name":"uint16","nodeType":"ElementaryTypeName","src":"54251:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":1922,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"54246:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54246:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"54259:3:0","memberName":"max","nodeType":"MemberAccess","src":"54246:16:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"54238:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1934,"nodeType":"IfStatement","src":"54234:103:0","trueBody":{"id":1933,"nodeType":"Block","src":"54264:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"54316:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":1930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"54320:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1928,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"54285:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54285:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1932,"nodeType":"RevertStatement","src":"54278:48:0"}]}},{"expression":{"arguments":[{"id":1937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"54360:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"54353:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1935,"name":"uint16","nodeType":"ElementaryTypeName","src":"54353:6:0","typeDescriptions":{}}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54353:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":1920,"id":1939,"nodeType":"Return","src":"54346:20:0"}]},"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"53879:276:0","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":1941,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"54169:8:0","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"value","nameLocation":"54186:5:0","nodeType":"VariableDeclaration","scope":1941,"src":"54178:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"54178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54177:15:0"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1941,"src":"54216:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1918,"name":"uint16","nodeType":"ElementaryTypeName","src":"54216:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"54215:8:0"},"scope":2839,"src":"54160:213:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1968,"nodeType":"Block","src":"54718:146:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"54732:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"54745:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1951,"name":"uint8","nodeType":"ElementaryTypeName","src":"54745:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1950,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"54740:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54740:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"54752:3:0","memberName":"max","nodeType":"MemberAccess","src":"54740:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"54732:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1962,"nodeType":"IfStatement","src":"54728:101:0","trueBody":{"id":1961,"nodeType":"Block","src":"54757:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"54809:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":1958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"54812:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1956,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"54778:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54778:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1960,"nodeType":"RevertStatement","src":"54771:47:0"}]}},{"expression":{"arguments":[{"id":1965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"54851:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"54845:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1963,"name":"uint8","nodeType":"ElementaryTypeName","src":"54845:5:0","typeDescriptions":{}}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54845:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1948,"id":1967,"nodeType":"Return","src":"54838:19:0"}]},"documentation":{"id":1942,"nodeType":"StructuredDocumentation","src":"54379:272:0","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":1969,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"54665:7:0","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"value","nameLocation":"54681:5:0","nodeType":"VariableDeclaration","scope":1969,"src":"54673:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"54673:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54672:15:0"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1969,"src":"54711:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1946,"name":"uint8","nodeType":"ElementaryTypeName","src":"54711:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"54710:7:0"},"scope":2839,"src":"54656:208:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1991,"nodeType":"Block","src":"55100:128:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"55114:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"55122:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"55114:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1985,"nodeType":"IfStatement","src":"55110:81:0","trueBody":{"id":1984,"nodeType":"Block","src":"55125:66:0","statements":[{"errorCall":{"arguments":[{"id":1981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"55174:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1980,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"55146:27:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55146:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1983,"nodeType":"RevertStatement","src":"55139:41:0"}]}},{"expression":{"arguments":[{"id":1988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"55215:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"55207:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"55207:7:0","typeDescriptions":{}}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55207:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1976,"id":1990,"nodeType":"Return","src":"55200:21:0"}]},"documentation":{"id":1970,"nodeType":"StructuredDocumentation","src":"54870:160:0","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":1992,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"55044:9:0","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"value","nameLocation":"55061:5:0","nodeType":"VariableDeclaration","scope":1992,"src":"55054:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1971,"name":"int256","nodeType":"ElementaryTypeName","src":"55054:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"55053:14:0"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1992,"src":"55091:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"55091:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55090:9:0"},"scope":2839,"src":"55035:193:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2017,"nodeType":"Block","src":"55625:150:0","statements":[{"expression":{"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2000,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"55635:10:0","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"55655:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"55648:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2001,"name":"int248","nodeType":"ElementaryTypeName","src":"55648:6:0","typeDescriptions":{}}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55648:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"55635:26:0","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":2006,"nodeType":"ExpressionStatement","src":"55635:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"55675:10:0","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"55689:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"55675:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2016,"nodeType":"IfStatement","src":"55671:98:0","trueBody":{"id":2015,"nodeType":"Block","src":"55696:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"55747:3:0","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"55752:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2010,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"55717:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55717:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2014,"nodeType":"RevertStatement","src":"55710:48:0"}]}}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"55234:312:0","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2018,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"55560:8:0","nodeType":"FunctionDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"value","nameLocation":"55576:5:0","nodeType":"VariableDeclaration","scope":2018,"src":"55569:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1994,"name":"int256","nodeType":"ElementaryTypeName","src":"55569:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"55568:14:0"},"returnParameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"downcasted","nameLocation":"55613:10:0","nodeType":"VariableDeclaration","scope":2018,"src":"55606:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":1997,"name":"int248","nodeType":"ElementaryTypeName","src":"55606:6:0","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"55605:19:0"},"scope":2839,"src":"55551:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2043,"nodeType":"Block","src":"56172:150:0","statements":[{"expression":{"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2026,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"56182:10:0","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"56202:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"56195:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2027,"name":"int240","nodeType":"ElementaryTypeName","src":"56195:6:0","typeDescriptions":{}}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56195:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"56182:26:0","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":2032,"nodeType":"ExpressionStatement","src":"56182:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2033,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"56222:10:0","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"56236:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"56222:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2042,"nodeType":"IfStatement","src":"56218:98:0","trueBody":{"id":2041,"nodeType":"Block","src":"56243:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"56294:3:0","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"56299:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2036,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"56264:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56264:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2040,"nodeType":"RevertStatement","src":"56257:48:0"}]}}]},"documentation":{"id":2019,"nodeType":"StructuredDocumentation","src":"55781:312:0","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2044,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"56107:8:0","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"value","nameLocation":"56123:5:0","nodeType":"VariableDeclaration","scope":2044,"src":"56116:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2020,"name":"int256","nodeType":"ElementaryTypeName","src":"56116:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"56115:14:0"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"downcasted","nameLocation":"56160:10:0","nodeType":"VariableDeclaration","scope":2044,"src":"56153:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":2023,"name":"int240","nodeType":"ElementaryTypeName","src":"56153:6:0","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"56152:19:0"},"scope":2839,"src":"56098:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2069,"nodeType":"Block","src":"56719:150:0","statements":[{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2052,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"56729:10:0","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"56749:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"56742:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2053,"name":"int232","nodeType":"ElementaryTypeName","src":"56742:6:0","typeDescriptions":{}}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56742:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"56729:26:0","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":2058,"nodeType":"ExpressionStatement","src":"56729:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"56769:10:0","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"56783:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"56769:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2068,"nodeType":"IfStatement","src":"56765:98:0","trueBody":{"id":2067,"nodeType":"Block","src":"56790:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"56841:3:0","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"56846:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2062,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"56811:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56811:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2066,"nodeType":"RevertStatement","src":"56804:48:0"}]}}]},"documentation":{"id":2045,"nodeType":"StructuredDocumentation","src":"56328:312:0","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"56654:8:0","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"value","nameLocation":"56670:5:0","nodeType":"VariableDeclaration","scope":2070,"src":"56663:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2046,"name":"int256","nodeType":"ElementaryTypeName","src":"56663:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"56662:14:0"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"downcasted","nameLocation":"56707:10:0","nodeType":"VariableDeclaration","scope":2070,"src":"56700:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":2049,"name":"int232","nodeType":"ElementaryTypeName","src":"56700:6:0","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"56699:19:0"},"scope":2839,"src":"56645:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2095,"nodeType":"Block","src":"57266:150:0","statements":[{"expression":{"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2078,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"57276:10:0","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"57296:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"57289:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2079,"name":"int224","nodeType":"ElementaryTypeName","src":"57289:6:0","typeDescriptions":{}}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"57289:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"57276:26:0","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":2084,"nodeType":"ExpressionStatement","src":"57276:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2085,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"57316:10:0","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"57330:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"57316:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2094,"nodeType":"IfStatement","src":"57312:98:0","trueBody":{"id":2093,"nodeType":"Block","src":"57337:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"57388:3:0","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"57393:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2088,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"57358:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"57358:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2092,"nodeType":"RevertStatement","src":"57351:48:0"}]}}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"56875:312:0","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2096,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"57201:8:0","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"value","nameLocation":"57217:5:0","nodeType":"VariableDeclaration","scope":2096,"src":"57210:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2072,"name":"int256","nodeType":"ElementaryTypeName","src":"57210:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57209:14:0"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"downcasted","nameLocation":"57254:10:0","nodeType":"VariableDeclaration","scope":2096,"src":"57247:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":2075,"name":"int224","nodeType":"ElementaryTypeName","src":"57247:6:0","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"57246:19:0"},"scope":2839,"src":"57192:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2121,"nodeType":"Block","src":"57813:150:0","statements":[{"expression":{"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2104,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"57823:10:0","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"57843:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"57836:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2105,"name":"int216","nodeType":"ElementaryTypeName","src":"57836:6:0","typeDescriptions":{}}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"57836:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"57823:26:0","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":2110,"nodeType":"ExpressionStatement","src":"57823:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2111,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"57863:10:0","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"57877:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"57863:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2120,"nodeType":"IfStatement","src":"57859:98:0","trueBody":{"id":2119,"nodeType":"Block","src":"57884:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"57935:3:0","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"57940:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2114,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"57905:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"57905:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2118,"nodeType":"RevertStatement","src":"57898:48:0"}]}}]},"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"57422:312:0","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2122,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"57748:8:0","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"value","nameLocation":"57764:5:0","nodeType":"VariableDeclaration","scope":2122,"src":"57757:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2098,"name":"int256","nodeType":"ElementaryTypeName","src":"57757:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57756:14:0"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"downcasted","nameLocation":"57801:10:0","nodeType":"VariableDeclaration","scope":2122,"src":"57794:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":2101,"name":"int216","nodeType":"ElementaryTypeName","src":"57794:6:0","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"57793:19:0"},"scope":2839,"src":"57739:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2147,"nodeType":"Block","src":"58360:150:0","statements":[{"expression":{"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2130,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"58370:10:0","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"58390:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"58383:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2131,"name":"int208","nodeType":"ElementaryTypeName","src":"58383:6:0","typeDescriptions":{}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58383:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"58370:26:0","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":2136,"nodeType":"ExpressionStatement","src":"58370:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2137,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"58410:10:0","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"58424:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"58410:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2146,"nodeType":"IfStatement","src":"58406:98:0","trueBody":{"id":2145,"nodeType":"Block","src":"58431:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"58482:3:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"58487:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2140,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"58452:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58452:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2144,"nodeType":"RevertStatement","src":"58445:48:0"}]}}]},"documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"57969:312:0","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2148,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"58295:8:0","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"value","nameLocation":"58311:5:0","nodeType":"VariableDeclaration","scope":2148,"src":"58304:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2124,"name":"int256","nodeType":"ElementaryTypeName","src":"58304:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"58303:14:0"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"downcasted","nameLocation":"58348:10:0","nodeType":"VariableDeclaration","scope":2148,"src":"58341:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":2127,"name":"int208","nodeType":"ElementaryTypeName","src":"58341:6:0","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"58340:19:0"},"scope":2839,"src":"58286:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2173,"nodeType":"Block","src":"58907:150:0","statements":[{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"58917:10:0","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"58937:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"58930:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2157,"name":"int200","nodeType":"ElementaryTypeName","src":"58930:6:0","typeDescriptions":{}}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58930:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"58917:26:0","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":2162,"nodeType":"ExpressionStatement","src":"58917:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2163,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"58957:10:0","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"58971:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"58957:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2172,"nodeType":"IfStatement","src":"58953:98:0","trueBody":{"id":2171,"nodeType":"Block","src":"58978:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"59029:3:0","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"59034:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2166,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"58999:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58999:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2170,"nodeType":"RevertStatement","src":"58992:48:0"}]}}]},"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"58516:312:0","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2174,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"58842:8:0","nodeType":"FunctionDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"value","nameLocation":"58858:5:0","nodeType":"VariableDeclaration","scope":2174,"src":"58851:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2150,"name":"int256","nodeType":"ElementaryTypeName","src":"58851:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"58850:14:0"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"downcasted","nameLocation":"58895:10:0","nodeType":"VariableDeclaration","scope":2174,"src":"58888:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":2153,"name":"int200","nodeType":"ElementaryTypeName","src":"58888:6:0","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"58887:19:0"},"scope":2839,"src":"58833:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"59454:150:0","statements":[{"expression":{"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2182,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"59464:10:0","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"59484:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"59477:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2183,"name":"int192","nodeType":"ElementaryTypeName","src":"59477:6:0","typeDescriptions":{}}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"59477:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"59464:26:0","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":2188,"nodeType":"ExpressionStatement","src":"59464:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2189,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"59504:10:0","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"59518:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"59504:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2198,"nodeType":"IfStatement","src":"59500:98:0","trueBody":{"id":2197,"nodeType":"Block","src":"59525:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"59576:3:0","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":2194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"59581:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2192,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"59546:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"59546:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"RevertStatement","src":"59539:48:0"}]}}]},"documentation":{"id":2175,"nodeType":"StructuredDocumentation","src":"59063:312:0","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"59389:8:0","nodeType":"FunctionDefinition","parameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"value","nameLocation":"59405:5:0","nodeType":"VariableDeclaration","scope":2200,"src":"59398:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2176,"name":"int256","nodeType":"ElementaryTypeName","src":"59398:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59397:14:0"},"returnParameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"downcasted","nameLocation":"59442:10:0","nodeType":"VariableDeclaration","scope":2200,"src":"59435:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":2179,"name":"int192","nodeType":"ElementaryTypeName","src":"59435:6:0","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"59434:19:0"},"scope":2839,"src":"59380:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2225,"nodeType":"Block","src":"60001:150:0","statements":[{"expression":{"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2208,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"60011:10:0","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"60031:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"60024:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2209,"name":"int184","nodeType":"ElementaryTypeName","src":"60024:6:0","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60024:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"60011:26:0","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":2214,"nodeType":"ExpressionStatement","src":"60011:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2215,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"60051:10:0","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"60065:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"60051:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2224,"nodeType":"IfStatement","src":"60047:98:0","trueBody":{"id":2223,"nodeType":"Block","src":"60072:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"60123:3:0","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":2220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"60128:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2218,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"60093:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60093:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"RevertStatement","src":"60086:48:0"}]}}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"59610:312:0","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":2226,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"59936:8:0","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"value","nameLocation":"59952:5:0","nodeType":"VariableDeclaration","scope":2226,"src":"59945:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2202,"name":"int256","nodeType":"ElementaryTypeName","src":"59945:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59944:14:0"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"downcasted","nameLocation":"59989:10:0","nodeType":"VariableDeclaration","scope":2226,"src":"59982:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":2205,"name":"int184","nodeType":"ElementaryTypeName","src":"59982:6:0","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"59981:19:0"},"scope":2839,"src":"59927:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2251,"nodeType":"Block","src":"60548:150:0","statements":[{"expression":{"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2234,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"60558:10:0","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"60578:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"60571:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2235,"name":"int176","nodeType":"ElementaryTypeName","src":"60571:6:0","typeDescriptions":{}}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60571:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"60558:26:0","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":2240,"nodeType":"ExpressionStatement","src":"60558:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"60598:10:0","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"60612:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"60598:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2250,"nodeType":"IfStatement","src":"60594:98:0","trueBody":{"id":2249,"nodeType":"Block","src":"60619:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"60670:3:0","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":2246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"60675:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2244,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"60640:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60640:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2248,"nodeType":"RevertStatement","src":"60633:48:0"}]}}]},"documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"60157:312:0","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"60483:8:0","nodeType":"FunctionDefinition","parameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"value","nameLocation":"60499:5:0","nodeType":"VariableDeclaration","scope":2252,"src":"60492:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2228,"name":"int256","nodeType":"ElementaryTypeName","src":"60492:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"60491:14:0"},"returnParameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"downcasted","nameLocation":"60536:10:0","nodeType":"VariableDeclaration","scope":2252,"src":"60529:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":2231,"name":"int176","nodeType":"ElementaryTypeName","src":"60529:6:0","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"60528:19:0"},"scope":2839,"src":"60474:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2277,"nodeType":"Block","src":"61095:150:0","statements":[{"expression":{"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2260,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"61105:10:0","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"61125:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"61118:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2261,"name":"int168","nodeType":"ElementaryTypeName","src":"61118:6:0","typeDescriptions":{}}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61118:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"61105:26:0","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":2266,"nodeType":"ExpressionStatement","src":"61105:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2267,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"61145:10:0","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"61159:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"61145:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2276,"nodeType":"IfStatement","src":"61141:98:0","trueBody":{"id":2275,"nodeType":"Block","src":"61166:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"61217:3:0","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":2272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"61222:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2270,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"61187:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61187:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2274,"nodeType":"RevertStatement","src":"61180:48:0"}]}}]},"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"60704:312:0","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":2278,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"61030:8:0","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"value","nameLocation":"61046:5:0","nodeType":"VariableDeclaration","scope":2278,"src":"61039:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2254,"name":"int256","nodeType":"ElementaryTypeName","src":"61039:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"61038:14:0"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"downcasted","nameLocation":"61083:10:0","nodeType":"VariableDeclaration","scope":2278,"src":"61076:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":2257,"name":"int168","nodeType":"ElementaryTypeName","src":"61076:6:0","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"61075:19:0"},"scope":2839,"src":"61021:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2303,"nodeType":"Block","src":"61642:150:0","statements":[{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2286,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"61652:10:0","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"61672:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"61665:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2287,"name":"int160","nodeType":"ElementaryTypeName","src":"61665:6:0","typeDescriptions":{}}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61665:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"61652:26:0","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":2292,"nodeType":"ExpressionStatement","src":"61652:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"61692:10:0","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"61706:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"61692:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2302,"nodeType":"IfStatement","src":"61688:98:0","trueBody":{"id":2301,"nodeType":"Block","src":"61713:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"61764:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":2298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"61769:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2296,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"61734:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61734:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2300,"nodeType":"RevertStatement","src":"61727:48:0"}]}}]},"documentation":{"id":2279,"nodeType":"StructuredDocumentation","src":"61251:312:0","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":2304,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"61577:8:0","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2281,"mutability":"mutable","name":"value","nameLocation":"61593:5:0","nodeType":"VariableDeclaration","scope":2304,"src":"61586:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2280,"name":"int256","nodeType":"ElementaryTypeName","src":"61586:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"61585:14:0"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"downcasted","nameLocation":"61630:10:0","nodeType":"VariableDeclaration","scope":2304,"src":"61623:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":2283,"name":"int160","nodeType":"ElementaryTypeName","src":"61623:6:0","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"61622:19:0"},"scope":2839,"src":"61568:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2329,"nodeType":"Block","src":"62189:150:0","statements":[{"expression":{"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2312,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"62199:10:0","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"62219:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"62212:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2313,"name":"int152","nodeType":"ElementaryTypeName","src":"62212:6:0","typeDescriptions":{}}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"62212:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"62199:26:0","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":2318,"nodeType":"ExpressionStatement","src":"62199:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"62239:10:0","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"62253:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"62239:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2328,"nodeType":"IfStatement","src":"62235:98:0","trueBody":{"id":2327,"nodeType":"Block","src":"62260:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"62311:3:0","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":2324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"62316:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2322,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"62281:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"62281:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2326,"nodeType":"RevertStatement","src":"62274:48:0"}]}}]},"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"61798:312:0","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":2330,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"62124:8:0","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"value","nameLocation":"62140:5:0","nodeType":"VariableDeclaration","scope":2330,"src":"62133:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2306,"name":"int256","nodeType":"ElementaryTypeName","src":"62133:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"62132:14:0"},"returnParameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"downcasted","nameLocation":"62177:10:0","nodeType":"VariableDeclaration","scope":2330,"src":"62170:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":2309,"name":"int152","nodeType":"ElementaryTypeName","src":"62170:6:0","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"62169:19:0"},"scope":2839,"src":"62115:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2355,"nodeType":"Block","src":"62736:150:0","statements":[{"expression":{"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2338,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"62746:10:0","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"62766:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"62759:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2339,"name":"int144","nodeType":"ElementaryTypeName","src":"62759:6:0","typeDescriptions":{}}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"62759:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"62746:26:0","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":2344,"nodeType":"ExpressionStatement","src":"62746:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2345,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"62786:10:0","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"62800:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"62786:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2354,"nodeType":"IfStatement","src":"62782:98:0","trueBody":{"id":2353,"nodeType":"Block","src":"62807:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"62858:3:0","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":2350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"62863:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2348,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"62828:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"62828:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2352,"nodeType":"RevertStatement","src":"62821:48:0"}]}}]},"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"62345:312:0","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":2356,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"62671:8:0","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"value","nameLocation":"62687:5:0","nodeType":"VariableDeclaration","scope":2356,"src":"62680:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2332,"name":"int256","nodeType":"ElementaryTypeName","src":"62680:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"62679:14:0"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"downcasted","nameLocation":"62724:10:0","nodeType":"VariableDeclaration","scope":2356,"src":"62717:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":2335,"name":"int144","nodeType":"ElementaryTypeName","src":"62717:6:0","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"62716:19:0"},"scope":2839,"src":"62662:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2381,"nodeType":"Block","src":"63283:150:0","statements":[{"expression":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2364,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"63293:10:0","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"63313:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"63306:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2365,"name":"int136","nodeType":"ElementaryTypeName","src":"63306:6:0","typeDescriptions":{}}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63306:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"63293:26:0","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":2370,"nodeType":"ExpressionStatement","src":"63293:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2371,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"63333:10:0","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"63347:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"63333:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2380,"nodeType":"IfStatement","src":"63329:98:0","trueBody":{"id":2379,"nodeType":"Block","src":"63354:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"63405:3:0","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":2376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"63410:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2374,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"63375:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63375:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2378,"nodeType":"RevertStatement","src":"63368:48:0"}]}}]},"documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"62892:312:0","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":2382,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"63218:8:0","nodeType":"FunctionDefinition","parameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"value","nameLocation":"63234:5:0","nodeType":"VariableDeclaration","scope":2382,"src":"63227:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2358,"name":"int256","nodeType":"ElementaryTypeName","src":"63227:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"63226:14:0"},"returnParameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"downcasted","nameLocation":"63271:10:0","nodeType":"VariableDeclaration","scope":2382,"src":"63264:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":2361,"name":"int136","nodeType":"ElementaryTypeName","src":"63264:6:0","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"63263:19:0"},"scope":2839,"src":"63209:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2407,"nodeType":"Block","src":"63830:150:0","statements":[{"expression":{"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2390,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"63840:10:0","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"63860:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"63853:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2391,"name":"int128","nodeType":"ElementaryTypeName","src":"63853:6:0","typeDescriptions":{}}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63853:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"63840:26:0","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":2396,"nodeType":"ExpressionStatement","src":"63840:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2397,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"63880:10:0","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"63894:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"63880:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2406,"nodeType":"IfStatement","src":"63876:98:0","trueBody":{"id":2405,"nodeType":"Block","src":"63901:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"63952:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":2402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"63957:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2400,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"63922:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63922:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2404,"nodeType":"RevertStatement","src":"63915:48:0"}]}}]},"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"63439:312:0","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":2408,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"63765:8:0","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"value","nameLocation":"63781:5:0","nodeType":"VariableDeclaration","scope":2408,"src":"63774:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2384,"name":"int256","nodeType":"ElementaryTypeName","src":"63774:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"63773:14:0"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"downcasted","nameLocation":"63818:10:0","nodeType":"VariableDeclaration","scope":2408,"src":"63811:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2387,"name":"int128","nodeType":"ElementaryTypeName","src":"63811:6:0","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"63810:19:0"},"scope":2839,"src":"63756:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"64377:150:0","statements":[{"expression":{"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2416,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"64387:10:0","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"64407:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"64400:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":2417,"name":"int120","nodeType":"ElementaryTypeName","src":"64400:6:0","typeDescriptions":{}}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"64400:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"64387:26:0","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":2422,"nodeType":"ExpressionStatement","src":"64387:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2423,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"64427:10:0","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"64441:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"64427:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"IfStatement","src":"64423:98:0","trueBody":{"id":2431,"nodeType":"Block","src":"64448:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"64499:3:0","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":2428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"64504:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2426,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"64469:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"64469:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2430,"nodeType":"RevertStatement","src":"64462:48:0"}]}}]},"documentation":{"id":2409,"nodeType":"StructuredDocumentation","src":"63986:312:0","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"64312:8:0","nodeType":"FunctionDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"value","nameLocation":"64328:5:0","nodeType":"VariableDeclaration","scope":2434,"src":"64321:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2410,"name":"int256","nodeType":"ElementaryTypeName","src":"64321:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"64320:14:0"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"downcasted","nameLocation":"64365:10:0","nodeType":"VariableDeclaration","scope":2434,"src":"64358:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":2413,"name":"int120","nodeType":"ElementaryTypeName","src":"64358:6:0","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"64357:19:0"},"scope":2839,"src":"64303:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2459,"nodeType":"Block","src":"64924:150:0","statements":[{"expression":{"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2442,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"64934:10:0","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"64954:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"64947:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":2443,"name":"int112","nodeType":"ElementaryTypeName","src":"64947:6:0","typeDescriptions":{}}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"64947:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"64934:26:0","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":2448,"nodeType":"ExpressionStatement","src":"64934:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"64974:10:0","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"64988:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"64974:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2458,"nodeType":"IfStatement","src":"64970:98:0","trueBody":{"id":2457,"nodeType":"Block","src":"64995:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"65046:3:0","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":2454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"65051:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2452,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"65016:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"65016:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2456,"nodeType":"RevertStatement","src":"65009:48:0"}]}}]},"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"64533:312:0","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"64859:8:0","nodeType":"FunctionDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"value","nameLocation":"64875:5:0","nodeType":"VariableDeclaration","scope":2460,"src":"64868:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2436,"name":"int256","nodeType":"ElementaryTypeName","src":"64868:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"64867:14:0"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"downcasted","nameLocation":"64912:10:0","nodeType":"VariableDeclaration","scope":2460,"src":"64905:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":2439,"name":"int112","nodeType":"ElementaryTypeName","src":"64905:6:0","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"64904:19:0"},"scope":2839,"src":"64850:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2485,"nodeType":"Block","src":"65471:150:0","statements":[{"expression":{"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2468,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"65481:10:0","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"65501:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"65494:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":2469,"name":"int104","nodeType":"ElementaryTypeName","src":"65494:6:0","typeDescriptions":{}}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"65494:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"65481:26:0","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":2474,"nodeType":"ExpressionStatement","src":"65481:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"65521:10:0","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"65535:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"65521:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2484,"nodeType":"IfStatement","src":"65517:98:0","trueBody":{"id":2483,"nodeType":"Block","src":"65542:73:0","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"65593:3:0","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":2480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"65598:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2478,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"65563:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"65563:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2482,"nodeType":"RevertStatement","src":"65556:48:0"}]}}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"65080:312:0","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":2486,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"65406:8:0","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"value","nameLocation":"65422:5:0","nodeType":"VariableDeclaration","scope":2486,"src":"65415:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2462,"name":"int256","nodeType":"ElementaryTypeName","src":"65415:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"65414:14:0"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"downcasted","nameLocation":"65459:10:0","nodeType":"VariableDeclaration","scope":2486,"src":"65452:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":2465,"name":"int104","nodeType":"ElementaryTypeName","src":"65452:6:0","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"65451:19:0"},"scope":2839,"src":"65397:224:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"66011:148:0","statements":[{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2494,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"66021:10:0","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"66040:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"66034:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":2495,"name":"int96","nodeType":"ElementaryTypeName","src":"66034:5:0","typeDescriptions":{}}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66034:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"66021:25:0","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":2500,"nodeType":"ExpressionStatement","src":"66021:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"66060:10:0","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"66074:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"66060:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2510,"nodeType":"IfStatement","src":"66056:97:0","trueBody":{"id":2509,"nodeType":"Block","src":"66081:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"66132:2:0","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":2506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"66136:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2504,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"66102:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66102:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2508,"nodeType":"RevertStatement","src":"66095:47:0"}]}}]},"documentation":{"id":2487,"nodeType":"StructuredDocumentation","src":"65627:307:0","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"65948:7:0","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"value","nameLocation":"65963:5:0","nodeType":"VariableDeclaration","scope":2512,"src":"65956:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2488,"name":"int256","nodeType":"ElementaryTypeName","src":"65956:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"65955:14:0"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"downcasted","nameLocation":"65999:10:0","nodeType":"VariableDeclaration","scope":2512,"src":"65993:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":2491,"name":"int96","nodeType":"ElementaryTypeName","src":"65993:5:0","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"65992:18:0"},"scope":2839,"src":"65939:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2537,"nodeType":"Block","src":"66549:148:0","statements":[{"expression":{"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2520,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"66559:10:0","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"66578:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"66572:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":2521,"name":"int88","nodeType":"ElementaryTypeName","src":"66572:5:0","typeDescriptions":{}}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66572:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"66559:25:0","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":2526,"nodeType":"ExpressionStatement","src":"66559:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"66598:10:0","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"66612:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"66598:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2536,"nodeType":"IfStatement","src":"66594:97:0","trueBody":{"id":2535,"nodeType":"Block","src":"66619:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"66670:2:0","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":2532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"66674:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2530,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"66640:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66640:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2534,"nodeType":"RevertStatement","src":"66633:47:0"}]}}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"66165:307:0","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":2538,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"66486:7:0","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"value","nameLocation":"66501:5:0","nodeType":"VariableDeclaration","scope":2538,"src":"66494:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2514,"name":"int256","nodeType":"ElementaryTypeName","src":"66494:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66493:14:0"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"downcasted","nameLocation":"66537:10:0","nodeType":"VariableDeclaration","scope":2538,"src":"66531:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":2517,"name":"int88","nodeType":"ElementaryTypeName","src":"66531:5:0","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"66530:18:0"},"scope":2839,"src":"66477:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2563,"nodeType":"Block","src":"67087:148:0","statements":[{"expression":{"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2546,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"67097:10:0","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"67116:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"67110:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":2547,"name":"int80","nodeType":"ElementaryTypeName","src":"67110:5:0","typeDescriptions":{}}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67110:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"67097:25:0","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":2552,"nodeType":"ExpressionStatement","src":"67097:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"67136:10:0","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"67150:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"67136:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2562,"nodeType":"IfStatement","src":"67132:97:0","trueBody":{"id":2561,"nodeType":"Block","src":"67157:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"67208:2:0","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":2558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"67212:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2556,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"67178:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67178:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2560,"nodeType":"RevertStatement","src":"67171:47:0"}]}}]},"documentation":{"id":2539,"nodeType":"StructuredDocumentation","src":"66703:307:0","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":2564,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"67024:7:0","nodeType":"FunctionDefinition","parameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"value","nameLocation":"67039:5:0","nodeType":"VariableDeclaration","scope":2564,"src":"67032:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2540,"name":"int256","nodeType":"ElementaryTypeName","src":"67032:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"67031:14:0"},"returnParameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"downcasted","nameLocation":"67075:10:0","nodeType":"VariableDeclaration","scope":2564,"src":"67069:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":2543,"name":"int80","nodeType":"ElementaryTypeName","src":"67069:5:0","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"67068:18:0"},"scope":2839,"src":"67015:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2589,"nodeType":"Block","src":"67625:148:0","statements":[{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2572,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"67635:10:0","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"67654:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"67648:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":2573,"name":"int72","nodeType":"ElementaryTypeName","src":"67648:5:0","typeDescriptions":{}}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67648:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"67635:25:0","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":2578,"nodeType":"ExpressionStatement","src":"67635:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2579,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"67674:10:0","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"67688:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"67674:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2588,"nodeType":"IfStatement","src":"67670:97:0","trueBody":{"id":2587,"nodeType":"Block","src":"67695:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"67746:2:0","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":2584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"67750:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2582,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"67716:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67716:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2586,"nodeType":"RevertStatement","src":"67709:47:0"}]}}]},"documentation":{"id":2565,"nodeType":"StructuredDocumentation","src":"67241:307:0","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":2590,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"67562:7:0","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"value","nameLocation":"67577:5:0","nodeType":"VariableDeclaration","scope":2590,"src":"67570:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2566,"name":"int256","nodeType":"ElementaryTypeName","src":"67570:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"67569:14:0"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"downcasted","nameLocation":"67613:10:0","nodeType":"VariableDeclaration","scope":2590,"src":"67607:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":2569,"name":"int72","nodeType":"ElementaryTypeName","src":"67607:5:0","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"67606:18:0"},"scope":2839,"src":"67553:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2615,"nodeType":"Block","src":"68163:148:0","statements":[{"expression":{"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"68173:10:0","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"68192:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"68186:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2599,"name":"int64","nodeType":"ElementaryTypeName","src":"68186:5:0","typeDescriptions":{}}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"68186:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"68173:25:0","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":2604,"nodeType":"ExpressionStatement","src":"68173:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"68212:10:0","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"68226:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"68212:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2614,"nodeType":"IfStatement","src":"68208:97:0","trueBody":{"id":2613,"nodeType":"Block","src":"68233:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"68284:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":2610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"68288:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2608,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"68254:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"68254:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2612,"nodeType":"RevertStatement","src":"68247:47:0"}]}}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"67779:307:0","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":2616,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"68100:7:0","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"value","nameLocation":"68115:5:0","nodeType":"VariableDeclaration","scope":2616,"src":"68108:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2592,"name":"int256","nodeType":"ElementaryTypeName","src":"68108:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"68107:14:0"},"returnParameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"downcasted","nameLocation":"68151:10:0","nodeType":"VariableDeclaration","scope":2616,"src":"68145:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2595,"name":"int64","nodeType":"ElementaryTypeName","src":"68145:5:0","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"68144:18:0"},"scope":2839,"src":"68091:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2641,"nodeType":"Block","src":"68701:148:0","statements":[{"expression":{"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"68711:10:0","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"68730:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"68724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":2625,"name":"int56","nodeType":"ElementaryTypeName","src":"68724:5:0","typeDescriptions":{}}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"68724:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"68711:25:0","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":2630,"nodeType":"ExpressionStatement","src":"68711:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"68750:10:0","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"68764:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"68750:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2640,"nodeType":"IfStatement","src":"68746:97:0","trueBody":{"id":2639,"nodeType":"Block","src":"68771:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"68822:2:0","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":2636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"68826:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2634,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"68792:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"68792:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2638,"nodeType":"RevertStatement","src":"68785:47:0"}]}}]},"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"68317:307:0","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"68638:7:0","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"value","nameLocation":"68653:5:0","nodeType":"VariableDeclaration","scope":2642,"src":"68646:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2618,"name":"int256","nodeType":"ElementaryTypeName","src":"68646:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"68645:14:0"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"downcasted","nameLocation":"68689:10:0","nodeType":"VariableDeclaration","scope":2642,"src":"68683:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":2621,"name":"int56","nodeType":"ElementaryTypeName","src":"68683:5:0","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"68682:18:0"},"scope":2839,"src":"68629:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2667,"nodeType":"Block","src":"69239:148:0","statements":[{"expression":{"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2650,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"69249:10:0","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"69268:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"69262:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":2651,"name":"int48","nodeType":"ElementaryTypeName","src":"69262:5:0","typeDescriptions":{}}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"69262:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"69249:25:0","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":2656,"nodeType":"ExpressionStatement","src":"69249:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"69288:10:0","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"69302:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"69288:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2666,"nodeType":"IfStatement","src":"69284:97:0","trueBody":{"id":2665,"nodeType":"Block","src":"69309:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"69360:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":2662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"69364:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2660,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"69330:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"69330:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2664,"nodeType":"RevertStatement","src":"69323:47:0"}]}}]},"documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"68855:307:0","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":2668,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"69176:7:0","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"value","nameLocation":"69191:5:0","nodeType":"VariableDeclaration","scope":2668,"src":"69184:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2644,"name":"int256","nodeType":"ElementaryTypeName","src":"69184:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"69183:14:0"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"downcasted","nameLocation":"69227:10:0","nodeType":"VariableDeclaration","scope":2668,"src":"69221:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":2647,"name":"int48","nodeType":"ElementaryTypeName","src":"69221:5:0","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"69220:18:0"},"scope":2839,"src":"69167:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2693,"nodeType":"Block","src":"69777:148:0","statements":[{"expression":{"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2676,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"69787:10:0","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"69806:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"69800:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":2677,"name":"int40","nodeType":"ElementaryTypeName","src":"69800:5:0","typeDescriptions":{}}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"69800:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"69787:25:0","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":2682,"nodeType":"ExpressionStatement","src":"69787:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"69826:10:0","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"69840:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"69826:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2692,"nodeType":"IfStatement","src":"69822:97:0","trueBody":{"id":2691,"nodeType":"Block","src":"69847:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"69898:2:0","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":2688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"69902:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2686,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"69868:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"69868:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2690,"nodeType":"RevertStatement","src":"69861:47:0"}]}}]},"documentation":{"id":2669,"nodeType":"StructuredDocumentation","src":"69393:307:0","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":2694,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"69714:7:0","nodeType":"FunctionDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"value","nameLocation":"69729:5:0","nodeType":"VariableDeclaration","scope":2694,"src":"69722:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2670,"name":"int256","nodeType":"ElementaryTypeName","src":"69722:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"69721:14:0"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"downcasted","nameLocation":"69765:10:0","nodeType":"VariableDeclaration","scope":2694,"src":"69759:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":2673,"name":"int40","nodeType":"ElementaryTypeName","src":"69759:5:0","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"69758:18:0"},"scope":2839,"src":"69705:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2719,"nodeType":"Block","src":"70315:148:0","statements":[{"expression":{"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"70325:10:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"70344:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"70338:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":2703,"name":"int32","nodeType":"ElementaryTypeName","src":"70338:5:0","typeDescriptions":{}}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70338:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"70325:25:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":2708,"nodeType":"ExpressionStatement","src":"70325:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"70364:10:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"70378:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"70364:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2718,"nodeType":"IfStatement","src":"70360:97:0","trueBody":{"id":2717,"nodeType":"Block","src":"70385:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"70436:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":2714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"70440:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2712,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"70406:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70406:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2716,"nodeType":"RevertStatement","src":"70399:47:0"}]}}]},"documentation":{"id":2695,"nodeType":"StructuredDocumentation","src":"69931:307:0","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":2720,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"70252:7:0","nodeType":"FunctionDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"value","nameLocation":"70267:5:0","nodeType":"VariableDeclaration","scope":2720,"src":"70260:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2696,"name":"int256","nodeType":"ElementaryTypeName","src":"70260:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"70259:14:0"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"downcasted","nameLocation":"70303:10:0","nodeType":"VariableDeclaration","scope":2720,"src":"70297:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2699,"name":"int32","nodeType":"ElementaryTypeName","src":"70297:5:0","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"70296:18:0"},"scope":2839,"src":"70243:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2745,"nodeType":"Block","src":"70853:148:0","statements":[{"expression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"70863:10:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"70882:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"70876:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":2729,"name":"int24","nodeType":"ElementaryTypeName","src":"70876:5:0","typeDescriptions":{}}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70876:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"70863:25:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":2734,"nodeType":"ExpressionStatement","src":"70863:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"70902:10:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"70916:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"70902:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2744,"nodeType":"IfStatement","src":"70898:97:0","trueBody":{"id":2743,"nodeType":"Block","src":"70923:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"70974:2:0","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":2740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"70978:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2738,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"70944:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70944:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2742,"nodeType":"RevertStatement","src":"70937:47:0"}]}}]},"documentation":{"id":2721,"nodeType":"StructuredDocumentation","src":"70469:307:0","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":2746,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"70790:7:0","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"value","nameLocation":"70805:5:0","nodeType":"VariableDeclaration","scope":2746,"src":"70798:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2722,"name":"int256","nodeType":"ElementaryTypeName","src":"70798:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"70797:14:0"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"downcasted","nameLocation":"70841:10:0","nodeType":"VariableDeclaration","scope":2746,"src":"70835:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2725,"name":"int24","nodeType":"ElementaryTypeName","src":"70835:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"70834:18:0"},"scope":2839,"src":"70781:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2771,"nodeType":"Block","src":"71391:148:0","statements":[{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"71401:10:0","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"71420:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"71414:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":2755,"name":"int16","nodeType":"ElementaryTypeName","src":"71414:5:0","typeDescriptions":{}}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"71414:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"71401:25:0","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":2760,"nodeType":"ExpressionStatement","src":"71401:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"71440:10:0","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"71454:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"71440:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2770,"nodeType":"IfStatement","src":"71436:97:0","trueBody":{"id":2769,"nodeType":"Block","src":"71461:72:0","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"71512:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":2766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"71516:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2764,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"71482:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"71482:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2768,"nodeType":"RevertStatement","src":"71475:47:0"}]}}]},"documentation":{"id":2747,"nodeType":"StructuredDocumentation","src":"71007:307:0","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":2772,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"71328:7:0","nodeType":"FunctionDefinition","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"value","nameLocation":"71343:5:0","nodeType":"VariableDeclaration","scope":2772,"src":"71336:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2748,"name":"int256","nodeType":"ElementaryTypeName","src":"71336:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"71335:14:0"},"returnParameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"downcasted","nameLocation":"71379:10:0","nodeType":"VariableDeclaration","scope":2772,"src":"71373:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":2751,"name":"int16","nodeType":"ElementaryTypeName","src":"71373:5:0","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"71372:18:0"},"scope":2839,"src":"71319:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2797,"nodeType":"Block","src":"71922:146:0","statements":[{"expression":{"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"71932:10:0","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"71950:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"71945:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":2781,"name":"int8","nodeType":"ElementaryTypeName","src":"71945:4:0","typeDescriptions":{}}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"71945:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"71932:24:0","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":2786,"nodeType":"ExpressionStatement","src":"71932:24:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"71970:10:0","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"71984:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"71970:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2796,"nodeType":"IfStatement","src":"71966:96:0","trueBody":{"id":2795,"nodeType":"Block","src":"71991:71:0","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"72042:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":2792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"72045:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2790,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"72012:29:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72012:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2794,"nodeType":"RevertStatement","src":"72005:46:0"}]}}]},"documentation":{"id":2773,"nodeType":"StructuredDocumentation","src":"71545:302:0","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":2798,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"71861:6:0","nodeType":"FunctionDefinition","parameters":{"id":2776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2775,"mutability":"mutable","name":"value","nameLocation":"71875:5:0","nodeType":"VariableDeclaration","scope":2798,"src":"71868:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2774,"name":"int256","nodeType":"ElementaryTypeName","src":"71868:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"71867:14:0"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"downcasted","nameLocation":"71910:10:0","nodeType":"VariableDeclaration","scope":2798,"src":"71905:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":2777,"name":"int8","nodeType":"ElementaryTypeName","src":"71905:4:0","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"71904:17:0"},"scope":2839,"src":"71852:216:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2827,"nodeType":"Block","src":"72308:250:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"72421:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"72442:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2810,"name":"int256","nodeType":"ElementaryTypeName","src":"72442:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2809,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"72437:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72437:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"72450:3:0","memberName":"max","nodeType":"MemberAccess","src":"72437:16:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"72429:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"72429:7:0","typeDescriptions":{}}},"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72429:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"72421:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2821,"nodeType":"IfStatement","src":"72417:105:0","trueBody":{"id":2820,"nodeType":"Block","src":"72456:66:0","statements":[{"errorCall":{"arguments":[{"id":2817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"72505:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2816,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"72477:27:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72477:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2819,"nodeType":"RevertStatement","src":"72470:41:0"}]}},{"expression":{"arguments":[{"id":2824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"72545:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"72538:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2822,"name":"int256","nodeType":"ElementaryTypeName","src":"72538:6:0","typeDescriptions":{}}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72538:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2805,"id":2826,"nodeType":"Return","src":"72531:20:0"}]},"documentation":{"id":2799,"nodeType":"StructuredDocumentation","src":"72074:165:0","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":2828,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"72253:8:0","nodeType":"FunctionDefinition","parameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"value","nameLocation":"72270:5:0","nodeType":"VariableDeclaration","scope":2828,"src":"72262:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"72262:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72261:15:0"},"returnParameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2828,"src":"72300:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2803,"name":"int256","nodeType":"ElementaryTypeName","src":"72300:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"72299:8:0"},"scope":2839,"src":"72244:314:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2837,"nodeType":"Block","src":"72717:114:0","statements":[{"AST":{"nativeSrc":"72779:46:0","nodeType":"YulBlock","src":"72779:46:0","statements":[{"nativeSrc":"72793:22:0","nodeType":"YulAssignment","src":"72793:22:0","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"72812:1:0","nodeType":"YulIdentifier","src":"72812:1:0"}],"functionName":{"name":"iszero","nativeSrc":"72805:6:0","nodeType":"YulIdentifier","src":"72805:6:0"},"nativeSrc":"72805:9:0","nodeType":"YulFunctionCall","src":"72805:9:0"}],"functionName":{"name":"iszero","nativeSrc":"72798:6:0","nodeType":"YulIdentifier","src":"72798:6:0"},"nativeSrc":"72798:17:0","nodeType":"YulFunctionCall","src":"72798:17:0"},"variableNames":[{"name":"u","nativeSrc":"72793:1:0","nodeType":"YulIdentifier","src":"72793:1:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2831,"isOffset":false,"isSlot":false,"src":"72812:1:0","valueSize":1},{"declaration":2834,"isOffset":false,"isSlot":false,"src":"72793:1:0","valueSize":1}],"id":2836,"nodeType":"InlineAssembly","src":"72770:55:0"}]},"documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"72564:90:0","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"72668:6:0","nodeType":"FunctionDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"b","nameLocation":"72680:1:0","nodeType":"VariableDeclaration","scope":2838,"src":"72675:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2830,"name":"bool","nodeType":"ElementaryTypeName","src":"72675:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"72674:8:0"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"u","nameLocation":"72714:1:0","nodeType":"VariableDeclaration","scope":2838,"src":"72706:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"72706:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72705:11:0"},"scope":2839,"src":"72659:172:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"38633:34200:0","usedErrors":[1084,1089,1096,1101],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"StringUtil","contractDependencies":[],"contractKind":"library","documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"72924:82:0","text":" @title StringUtil\n @dev Library with gas-efficient string operations."},"fullyImplemented":true,"id":2883,"linearizedBaseContracts":[2883],"name":"StringUtil","nameLocation":"73015:10:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":2855,"nodeType":"Block","src":"73321:54:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":2851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"73361:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2849,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"73344:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"73348:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"73344:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73344:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2848,"name":"toHex","nodeType":"Identifier","overloadedDeclarations":[2856,2872,2882],"referencedDeclaration":2882,"src":"73338:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73338:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2847,"id":2854,"nodeType":"Return","src":"73331:37:0"}]},"documentation":{"id":2841,"nodeType":"StructuredDocumentation","src":"73032:216:0","text":" @notice Converts a uint256 value to its hexadecimal string representation.\n @param value The uint256 value to convert.\n @return The hexadecimal string representation of the input value."},"id":2856,"implemented":true,"kind":"function","modifiers":[],"name":"toHex","nameLocation":"73262:5:0","nodeType":"FunctionDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"value","nameLocation":"73276:5:0","nodeType":"VariableDeclaration","scope":2856,"src":"73268:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"73268:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73267:15:0"},"returnParameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2856,"src":"73306:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2845,"name":"string","nodeType":"ElementaryTypeName","src":"73306:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73305:15:0"},"scope":2883,"src":"73253:122:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2871,"nodeType":"Block","src":"73661:54:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":2867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"73701:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2865,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"73684:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"73688:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"73684:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73684:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2864,"name":"toHex","nodeType":"Identifier","overloadedDeclarations":[2856,2872,2882],"referencedDeclaration":2882,"src":"73678:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73678:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2863,"id":2870,"nodeType":"Return","src":"73671:37:0"}]},"documentation":{"id":2857,"nodeType":"StructuredDocumentation","src":"73381:207:0","text":" @notice Converts an address to its hexadecimal string representation.\n @param value The address to convert.\n @return The hexadecimal string representation of the input address."},"id":2872,"implemented":true,"kind":"function","modifiers":[],"name":"toHex","nameLocation":"73602:5:0","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"value","nameLocation":"73616:5:0","nodeType":"VariableDeclaration","scope":2872,"src":"73608:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2858,"name":"address","nodeType":"ElementaryTypeName","src":"73608:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73607:15:0"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2872,"src":"73646:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2861,"name":"string","nodeType":"ElementaryTypeName","src":"73646:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73645:15:0"},"scope":2883,"src":"73593:122:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2881,"nodeType":"Block","src":"74194:3053:0","statements":[{"AST":{"nativeSrc":"74229:3012:0","nodeType":"YulBlock","src":"74229:3012:0","statements":[{"body":{"nativeSrc":"74321:1840:0","nodeType":"YulBlock","src":"74321:1840:0","statements":[{"nativeSrc":"74339:239:0","nodeType":"YulAssignment","src":"74339:239:0","value":{"arguments":[{"arguments":[{"name":"input","nativeSrc":"74377:5:0","nodeType":"YulIdentifier","src":"74377:5:0"},{"kind":"number","nativeSrc":"74384:66:0","nodeType":"YulLiteral","src":"74384:66:0","type":"","value":"0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"74373:3:0","nodeType":"YulIdentifier","src":"74373:3:0"},"nativeSrc":"74373:78:0","nodeType":"YulFunctionCall","src":"74373:78:0"},{"arguments":[{"kind":"number","nativeSrc":"74477:2:0","nodeType":"YulLiteral","src":"74477:2:0","type":"","value":"64"},{"arguments":[{"name":"input","nativeSrc":"74485:5:0","nodeType":"YulIdentifier","src":"74485:5:0"},{"kind":"number","nativeSrc":"74492:66:0","nodeType":"YulLiteral","src":"74492:66:0","type":"","value":"0x0000000000000000FFFFFFFFFFFFFFFF00000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"74481:3:0","nodeType":"YulIdentifier","src":"74481:3:0"},"nativeSrc":"74481:78:0","nodeType":"YulFunctionCall","src":"74481:78:0"}],"functionName":{"name":"shr","nativeSrc":"74473:3:0","nodeType":"YulIdentifier","src":"74473:3:0"},"nativeSrc":"74473:87:0","nodeType":"YulFunctionCall","src":"74473:87:0"}],"functionName":{"name":"or","nativeSrc":"74349:2:0","nodeType":"YulIdentifier","src":"74349:2:0"},"nativeSrc":"74349:229:0","nodeType":"YulFunctionCall","src":"74349:229:0"},"variableNames":[{"name":"output","nativeSrc":"74339:6:0","nodeType":"YulIdentifier","src":"74339:6:0"}]},{"nativeSrc":"74595:241:0","nodeType":"YulAssignment","src":"74595:241:0","value":{"arguments":[{"arguments":[{"name":"output","nativeSrc":"74633:6:0","nodeType":"YulIdentifier","src":"74633:6:0"},{"kind":"number","nativeSrc":"74641:66:0","nodeType":"YulLiteral","src":"74641:66:0","type":"","value":"0xFFFFFFFF000000000000000000000000FFFFFFFF000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"74629:3:0","nodeType":"YulIdentifier","src":"74629:3:0"},"nativeSrc":"74629:79:0","nodeType":"YulFunctionCall","src":"74629:79:0"},{"arguments":[{"kind":"number","nativeSrc":"74734:2:0","nodeType":"YulLiteral","src":"74734:2:0","type":"","value":"32"},{"arguments":[{"name":"output","nativeSrc":"74742:6:0","nodeType":"YulIdentifier","src":"74742:6:0"},{"kind":"number","nativeSrc":"74750:66:0","nodeType":"YulLiteral","src":"74750:66:0","type":"","value":"0x00000000FFFFFFFF000000000000000000000000FFFFFFFF0000000000000000"}],"functionName":{"name":"and","nativeSrc":"74738:3:0","nodeType":"YulIdentifier","src":"74738:3:0"},"nativeSrc":"74738:79:0","nodeType":"YulFunctionCall","src":"74738:79:0"}],"functionName":{"name":"shr","nativeSrc":"74730:3:0","nodeType":"YulIdentifier","src":"74730:3:0"},"nativeSrc":"74730:88:0","nodeType":"YulFunctionCall","src":"74730:88:0"}],"functionName":{"name":"or","nativeSrc":"74605:2:0","nodeType":"YulIdentifier","src":"74605:2:0"},"nativeSrc":"74605:231:0","nodeType":"YulFunctionCall","src":"74605:231:0"},"variableNames":[{"name":"output","nativeSrc":"74595:6:0","nodeType":"YulIdentifier","src":"74595:6:0"}]},{"nativeSrc":"74853:241:0","nodeType":"YulAssignment","src":"74853:241:0","value":{"arguments":[{"arguments":[{"name":"output","nativeSrc":"74891:6:0","nodeType":"YulIdentifier","src":"74891:6:0"},{"kind":"number","nativeSrc":"74899:66:0","nodeType":"YulLiteral","src":"74899:66:0","type":"","value":"0xFFFF000000000000FFFF000000000000FFFF000000000000FFFF000000000000"}],"functionName":{"name":"and","nativeSrc":"74887:3:0","nodeType":"YulIdentifier","src":"74887:3:0"},"nativeSrc":"74887:79:0","nodeType":"YulFunctionCall","src":"74887:79:0"},{"arguments":[{"kind":"number","nativeSrc":"74992:2:0","nodeType":"YulLiteral","src":"74992:2:0","type":"","value":"16"},{"arguments":[{"name":"output","nativeSrc":"75000:6:0","nodeType":"YulIdentifier","src":"75000:6:0"},{"kind":"number","nativeSrc":"75008:66:0","nodeType":"YulLiteral","src":"75008:66:0","type":"","value":"0x0000FFFF000000000000FFFF000000000000FFFF000000000000FFFF00000000"}],"functionName":{"name":"and","nativeSrc":"74996:3:0","nodeType":"YulIdentifier","src":"74996:3:0"},"nativeSrc":"74996:79:0","nodeType":"YulFunctionCall","src":"74996:79:0"}],"functionName":{"name":"shr","nativeSrc":"74988:3:0","nodeType":"YulIdentifier","src":"74988:3:0"},"nativeSrc":"74988:88:0","nodeType":"YulFunctionCall","src":"74988:88:0"}],"functionName":{"name":"or","nativeSrc":"74863:2:0","nodeType":"YulIdentifier","src":"74863:2:0"},"nativeSrc":"74863:231:0","nodeType":"YulFunctionCall","src":"74863:231:0"},"variableNames":[{"name":"output","nativeSrc":"74853:6:0","nodeType":"YulIdentifier","src":"74853:6:0"}]},{"nativeSrc":"75111:240:0","nodeType":"YulAssignment","src":"75111:240:0","value":{"arguments":[{"arguments":[{"name":"output","nativeSrc":"75149:6:0","nodeType":"YulIdentifier","src":"75149:6:0"},{"kind":"number","nativeSrc":"75157:66:0","nodeType":"YulLiteral","src":"75157:66:0","type":"","value":"0xFF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000"}],"functionName":{"name":"and","nativeSrc":"75145:3:0","nodeType":"YulIdentifier","src":"75145:3:0"},"nativeSrc":"75145:79:0","nodeType":"YulFunctionCall","src":"75145:79:0"},{"arguments":[{"kind":"number","nativeSrc":"75250:1:0","nodeType":"YulLiteral","src":"75250:1:0","type":"","value":"8"},{"arguments":[{"name":"output","nativeSrc":"75257:6:0","nodeType":"YulIdentifier","src":"75257:6:0"},{"kind":"number","nativeSrc":"75265:66:0","nodeType":"YulLiteral","src":"75265:66:0","type":"","value":"0x00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000"}],"functionName":{"name":"and","nativeSrc":"75253:3:0","nodeType":"YulIdentifier","src":"75253:3:0"},"nativeSrc":"75253:79:0","nodeType":"YulFunctionCall","src":"75253:79:0"}],"functionName":{"name":"shr","nativeSrc":"75246:3:0","nodeType":"YulIdentifier","src":"75246:3:0"},"nativeSrc":"75246:87:0","nodeType":"YulFunctionCall","src":"75246:87:0"}],"functionName":{"name":"or","nativeSrc":"75121:2:0","nodeType":"YulIdentifier","src":"75121:2:0"},"nativeSrc":"75121:230:0","nodeType":"YulFunctionCall","src":"75121:230:0"},"variableNames":[{"name":"output","nativeSrc":"75111:6:0","nodeType":"YulIdentifier","src":"75111:6:0"}]},{"nativeSrc":"75368:248:0","nodeType":"YulAssignment","src":"75368:248:0","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"75406:1:0","nodeType":"YulLiteral","src":"75406:1:0","type":"","value":"4"},{"arguments":[{"name":"output","nativeSrc":"75413:6:0","nodeType":"YulIdentifier","src":"75413:6:0"},{"kind":"number","nativeSrc":"75421:66:0","nodeType":"YulLiteral","src":"75421:66:0","type":"","value":"0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000"}],"functionName":{"name":"and","nativeSrc":"75409:3:0","nodeType":"YulIdentifier","src":"75409:3:0"},"nativeSrc":"75409:79:0","nodeType":"YulFunctionCall","src":"75409:79:0"}],"functionName":{"name":"shr","nativeSrc":"75402:3:0","nodeType":"YulIdentifier","src":"75402:3:0"},"nativeSrc":"75402:87:0","nodeType":"YulFunctionCall","src":"75402:87:0"},{"arguments":[{"kind":"number","nativeSrc":"75515:1:0","nodeType":"YulLiteral","src":"75515:1:0","type":"","value":"8"},{"arguments":[{"name":"output","nativeSrc":"75522:6:0","nodeType":"YulIdentifier","src":"75522:6:0"},{"kind":"number","nativeSrc":"75530:66:0","nodeType":"YulLiteral","src":"75530:66:0","type":"","value":"0x0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00"}],"functionName":{"name":"and","nativeSrc":"75518:3:0","nodeType":"YulIdentifier","src":"75518:3:0"},"nativeSrc":"75518:79:0","nodeType":"YulFunctionCall","src":"75518:79:0"}],"functionName":{"name":"shr","nativeSrc":"75511:3:0","nodeType":"YulIdentifier","src":"75511:3:0"},"nativeSrc":"75511:87:0","nodeType":"YulFunctionCall","src":"75511:87:0"}],"functionName":{"name":"or","nativeSrc":"75378:2:0","nodeType":"YulIdentifier","src":"75378:2:0"},"nativeSrc":"75378:238:0","nodeType":"YulFunctionCall","src":"75378:238:0"},"variableNames":[{"name":"output","nativeSrc":"75368:6:0","nodeType":"YulIdentifier","src":"75368:6:0"}]},{"nativeSrc":"75633:514:0","nodeType":"YulAssignment","src":"75633:514:0","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"75672:66:0","nodeType":"YulLiteral","src":"75672:66:0","type":"","value":"0x3030303030303030303030303030303030303030303030303030303030303030"},{"name":"output","nativeSrc":"75740:6:0","nodeType":"YulIdentifier","src":"75740:6:0"}],"functionName":{"name":"add","nativeSrc":"75668:3:0","nodeType":"YulIdentifier","src":"75668:3:0"},"nativeSrc":"75668:79:0","nodeType":"YulFunctionCall","src":"75668:79:0"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"75835:1:0","nodeType":"YulLiteral","src":"75835:1:0","type":"","value":"4"},{"arguments":[{"name":"output","nativeSrc":"75842:6:0","nodeType":"YulIdentifier","src":"75842:6:0"},{"kind":"number","nativeSrc":"75850:66:0","nodeType":"YulLiteral","src":"75850:66:0","type":"","value":"0x0606060606060606060606060606060606060606060606060606060606060606"}],"functionName":{"name":"add","nativeSrc":"75838:3:0","nodeType":"YulIdentifier","src":"75838:3:0"},"nativeSrc":"75838:79:0","nodeType":"YulFunctionCall","src":"75838:79:0"}],"functionName":{"name":"shr","nativeSrc":"75831:3:0","nodeType":"YulIdentifier","src":"75831:3:0"},"nativeSrc":"75831:87:0","nodeType":"YulFunctionCall","src":"75831:87:0"},{"kind":"number","nativeSrc":"75948:66:0","nodeType":"YulLiteral","src":"75948:66:0","type":"","value":"0x0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F"}],"functionName":{"name":"and","nativeSrc":"75798:3:0","nodeType":"YulIdentifier","src":"75798:3:0"},"nativeSrc":"75798:242:0","nodeType":"YulFunctionCall","src":"75798:242:0"},{"kind":"number","nativeSrc":"76066:1:0","nodeType":"YulLiteral","src":"76066:1:0","type":"","value":"7"}],"functionName":{"name":"mul","nativeSrc":"75769:3:0","nodeType":"YulIdentifier","src":"75769:3:0"},"nativeSrc":"75769:360:0","nodeType":"YulFunctionCall","src":"75769:360:0"}],"functionName":{"name":"add","nativeSrc":"75643:3:0","nodeType":"YulIdentifier","src":"75643:3:0"},"nativeSrc":"75643:504:0","nodeType":"YulFunctionCall","src":"75643:504:0"},"variableNames":[{"name":"output","nativeSrc":"75633:6:0","nodeType":"YulIdentifier","src":"75633:6:0"}]}]},"name":"_toHex16","nativeSrc":"74286:1875:0","nodeType":"YulFunctionDefinition","parameters":[{"name":"input","nativeSrc":"74304:5:0","nodeType":"YulTypedName","src":"74304:5:0","type":""}],"returnVariables":[{"name":"output","nativeSrc":"74314:6:0","nodeType":"YulTypedName","src":"74314:6:0","type":""}],"src":"74286:1875:0"},{"nativeSrc":"76175:21:0","nodeType":"YulAssignment","src":"76175:21:0","value":{"arguments":[{"kind":"number","nativeSrc":"76191:4:0","nodeType":"YulLiteral","src":"76191:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"76185:5:0","nodeType":"YulIdentifier","src":"76185:5:0"},"nativeSrc":"76185:11:0","nodeType":"YulFunctionCall","src":"76185:11:0"},"variableNames":[{"name":"result","nativeSrc":"76175:6:0","nodeType":"YulIdentifier","src":"76175:6:0"}]},{"nativeSrc":"76209:25:0","nodeType":"YulVariableDeclaration","src":"76209:25:0","value":{"arguments":[{"name":"data","nativeSrc":"76229:4:0","nodeType":"YulIdentifier","src":"76229:4:0"}],"functionName":{"name":"mload","nativeSrc":"76223:5:0","nodeType":"YulIdentifier","src":"76223:5:0"},"nativeSrc":"76223:11:0","nodeType":"YulFunctionCall","src":"76223:11:0"},"variables":[{"name":"length","nativeSrc":"76213:6:0","nodeType":"YulTypedName","src":"76213:6:0","type":""}]},{"nativeSrc":"76247:34:0","nodeType":"YulVariableDeclaration","src":"76247:34:0","value":{"arguments":[{"kind":"number","nativeSrc":"76271:1:0","nodeType":"YulLiteral","src":"76271:1:0","type":"","value":"1"},{"name":"length","nativeSrc":"76274:6:0","nodeType":"YulIdentifier","src":"76274:6:0"}],"functionName":{"name":"shl","nativeSrc":"76267:3:0","nodeType":"YulIdentifier","src":"76267:3:0"},"nativeSrc":"76267:14:0","nodeType":"YulFunctionCall","src":"76267:14:0"},"variables":[{"name":"resultLength","nativeSrc":"76251:12:0","nodeType":"YulTypedName","src":"76251:12:0","type":""}]},{"nativeSrc":"76294:30:0","nodeType":"YulVariableDeclaration","src":"76294:30:0","value":{"arguments":[{"name":"result","nativeSrc":"76311:6:0","nodeType":"YulIdentifier","src":"76311:6:0"},{"kind":"number","nativeSrc":"76319:4:0","nodeType":"YulLiteral","src":"76319:4:0","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"76307:3:0","nodeType":"YulIdentifier","src":"76307:3:0"},"nativeSrc":"76307:17:0","nodeType":"YulFunctionCall","src":"76307:17:0"},"variables":[{"name":"toPtr","nativeSrc":"76298:5:0","nodeType":"YulTypedName","src":"76298:5:0","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"76386:4:0","nodeType":"YulLiteral","src":"76386:4:0","type":"","value":"0x40"},{"arguments":[{"name":"toPtr","nativeSrc":"76396:5:0","nodeType":"YulIdentifier","src":"76396:5:0"},{"name":"resultLength","nativeSrc":"76403:12:0","nodeType":"YulIdentifier","src":"76403:12:0"}],"functionName":{"name":"add","nativeSrc":"76392:3:0","nodeType":"YulIdentifier","src":"76392:3:0"},"nativeSrc":"76392:24:0","nodeType":"YulFunctionCall","src":"76392:24:0"}],"functionName":{"name":"mstore","nativeSrc":"76379:6:0","nodeType":"YulIdentifier","src":"76379:6:0"},"nativeSrc":"76379:38:0","nodeType":"YulFunctionCall","src":"76379:38:0"},"nativeSrc":"76379:38:0","nodeType":"YulExpressionStatement","src":"76379:38:0"},{"expression":{"arguments":[{"arguments":[{"name":"result","nativeSrc":"76469:6:0","nodeType":"YulIdentifier","src":"76469:6:0"},{"kind":"number","nativeSrc":"76477:1:0","nodeType":"YulLiteral","src":"76477:1:0","type":"","value":"2"}],"functionName":{"name":"add","nativeSrc":"76465:3:0","nodeType":"YulIdentifier","src":"76465:3:0"},"nativeSrc":"76465:14:0","nodeType":"YulFunctionCall","src":"76465:14:0"},{"kind":"number","nativeSrc":"76481:6:0","nodeType":"YulLiteral","src":"76481:6:0","type":"","value":"0x3078"}],"functionName":{"name":"mstore","nativeSrc":"76458:6:0","nodeType":"YulIdentifier","src":"76458:6:0"},"nativeSrc":"76458:30:0","nodeType":"YulFunctionCall","src":"76458:30:0"},"nativeSrc":"76458:30:0","nodeType":"YulExpressionStatement","src":"76458:30:0"},{"expression":{"arguments":[{"name":"result","nativeSrc":"76635:6:0","nodeType":"YulIdentifier","src":"76635:6:0"},{"arguments":[{"name":"resultLength","nativeSrc":"76647:12:0","nodeType":"YulIdentifier","src":"76647:12:0"},{"kind":"number","nativeSrc":"76661:1:0","nodeType":"YulLiteral","src":"76661:1:0","type":"","value":"2"}],"functionName":{"name":"add","nativeSrc":"76643:3:0","nodeType":"YulIdentifier","src":"76643:3:0"},"nativeSrc":"76643:20:0","nodeType":"YulFunctionCall","src":"76643:20:0"}],"functionName":{"name":"mstore","nativeSrc":"76628:6:0","nodeType":"YulIdentifier","src":"76628:6:0"},"nativeSrc":"76628:36:0","nodeType":"YulFunctionCall","src":"76628:36:0"},"nativeSrc":"76628:36:0","nodeType":"YulExpressionStatement","src":"76628:36:0"},{"body":{"nativeSrc":"76904:327:0","nodeType":"YulBlock","src":"76904:327:0","statements":[{"nativeSrc":"76922:29:0","nodeType":"YulVariableDeclaration","src":"76922:29:0","value":{"arguments":[{"name":"fromPtr","nativeSrc":"76943:7:0","nodeType":"YulIdentifier","src":"76943:7:0"}],"functionName":{"name":"mload","nativeSrc":"76937:5:0","nodeType":"YulIdentifier","src":"76937:5:0"},"nativeSrc":"76937:14:0","nodeType":"YulFunctionCall","src":"76937:14:0"},"variables":[{"name":"rawData","nativeSrc":"76926:7:0","nodeType":"YulTypedName","src":"76926:7:0","type":""}]},{"nativeSrc":"76968:32:0","nodeType":"YulVariableDeclaration","src":"76968:32:0","value":{"arguments":[{"name":"rawData","nativeSrc":"76992:7:0","nodeType":"YulIdentifier","src":"76992:7:0"}],"functionName":{"name":"_toHex16","nativeSrc":"76983:8:0","nodeType":"YulIdentifier","src":"76983:8:0"},"nativeSrc":"76983:17:0","nodeType":"YulFunctionCall","src":"76983:17:0"},"variables":[{"name":"hexData","nativeSrc":"76972:7:0","nodeType":"YulTypedName","src":"76972:7:0","type":""}]},{"expression":{"arguments":[{"name":"toPtr","nativeSrc":"77024:5:0","nodeType":"YulIdentifier","src":"77024:5:0"},{"name":"hexData","nativeSrc":"77031:7:0","nodeType":"YulIdentifier","src":"77031:7:0"}],"functionName":{"name":"mstore","nativeSrc":"77017:6:0","nodeType":"YulIdentifier","src":"77017:6:0"},"nativeSrc":"77017:22:0","nodeType":"YulFunctionCall","src":"77017:22:0"},"nativeSrc":"77017:22:0","nodeType":"YulExpressionStatement","src":"77017:22:0"},{"nativeSrc":"77056:25:0","nodeType":"YulAssignment","src":"77056:25:0","value":{"arguments":[{"name":"toPtr","nativeSrc":"77069:5:0","nodeType":"YulIdentifier","src":"77069:5:0"},{"kind":"number","nativeSrc":"77076:4:0","nodeType":"YulLiteral","src":"77076:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"77065:3:0","nodeType":"YulIdentifier","src":"77065:3:0"},"nativeSrc":"77065:16:0","nodeType":"YulFunctionCall","src":"77065:16:0"},"variableNames":[{"name":"toPtr","nativeSrc":"77056:5:0","nodeType":"YulIdentifier","src":"77056:5:0"}]},{"nativeSrc":"77098:38:0","nodeType":"YulAssignment","src":"77098:38:0","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"77122:3:0","nodeType":"YulLiteral","src":"77122:3:0","type":"","value":"128"},{"name":"rawData","nativeSrc":"77127:7:0","nodeType":"YulIdentifier","src":"77127:7:0"}],"functionName":{"name":"shl","nativeSrc":"77118:3:0","nodeType":"YulIdentifier","src":"77118:3:0"},"nativeSrc":"77118:17:0","nodeType":"YulFunctionCall","src":"77118:17:0"}],"functionName":{"name":"_toHex16","nativeSrc":"77109:8:0","nodeType":"YulIdentifier","src":"77109:8:0"},"nativeSrc":"77109:27:0","nodeType":"YulFunctionCall","src":"77109:27:0"},"variableNames":[{"name":"hexData","nativeSrc":"77098:7:0","nodeType":"YulIdentifier","src":"77098:7:0"}]},{"expression":{"arguments":[{"name":"toPtr","nativeSrc":"77160:5:0","nodeType":"YulIdentifier","src":"77160:5:0"},{"name":"hexData","nativeSrc":"77167:7:0","nodeType":"YulIdentifier","src":"77167:7:0"}],"functionName":{"name":"mstore","nativeSrc":"77153:6:0","nodeType":"YulIdentifier","src":"77153:6:0"},"nativeSrc":"77153:22:0","nodeType":"YulFunctionCall","src":"77153:22:0"},"nativeSrc":"77153:22:0","nodeType":"YulExpressionStatement","src":"77153:22:0"},{"nativeSrc":"77192:25:0","nodeType":"YulAssignment","src":"77192:25:0","value":{"arguments":[{"name":"toPtr","nativeSrc":"77205:5:0","nodeType":"YulIdentifier","src":"77205:5:0"},{"kind":"number","nativeSrc":"77212:4:0","nodeType":"YulLiteral","src":"77212:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"77201:3:0","nodeType":"YulIdentifier","src":"77201:3:0"},"nativeSrc":"77201:16:0","nodeType":"YulFunctionCall","src":"77201:16:0"},"variableNames":[{"name":"toPtr","nativeSrc":"77192:5:0","nodeType":"YulIdentifier","src":"77192:5:0"}]}]},"condition":{"arguments":[{"name":"fromPtr","nativeSrc":"76825:7:0","nodeType":"YulIdentifier","src":"76825:7:0"},{"name":"endPtr","nativeSrc":"76834:6:0","nodeType":"YulIdentifier","src":"76834:6:0"}],"functionName":{"name":"lt","nativeSrc":"76822:2:0","nodeType":"YulIdentifier","src":"76822:2:0"},"nativeSrc":"76822:19:0","nodeType":"YulFunctionCall","src":"76822:19:0"},"nativeSrc":"76704:527:0","nodeType":"YulForLoop","post":{"nativeSrc":"76842:61:0","nodeType":"YulBlock","src":"76842:61:0","statements":[{"nativeSrc":"76860:29:0","nodeType":"YulAssignment","src":"76860:29:0","value":{"arguments":[{"name":"fromPtr","nativeSrc":"76875:7:0","nodeType":"YulIdentifier","src":"76875:7:0"},{"kind":"number","nativeSrc":"76884:4:0","nodeType":"YulLiteral","src":"76884:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"76871:3:0","nodeType":"YulIdentifier","src":"76871:3:0"},"nativeSrc":"76871:18:0","nodeType":"YulFunctionCall","src":"76871:18:0"},"variableNames":[{"name":"fromPtr","nativeSrc":"76860:7:0","nodeType":"YulIdentifier","src":"76860:7:0"}]}]},"pre":{"nativeSrc":"76708:113:0","nodeType":"YulBlock","src":"76708:113:0","statements":[{"nativeSrc":"76726:30:0","nodeType":"YulVariableDeclaration","src":"76726:30:0","value":{"arguments":[{"name":"data","nativeSrc":"76745:4:0","nodeType":"YulIdentifier","src":"76745:4:0"},{"kind":"number","nativeSrc":"76751:4:0","nodeType":"YulLiteral","src":"76751:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"76741:3:0","nodeType":"YulIdentifier","src":"76741:3:0"},"nativeSrc":"76741:15:0","nodeType":"YulFunctionCall","src":"76741:15:0"},"variables":[{"name":"fromPtr","nativeSrc":"76730:7:0","nodeType":"YulTypedName","src":"76730:7:0","type":""}]},{"nativeSrc":"76773:34:0","nodeType":"YulVariableDeclaration","src":"76773:34:0","value":{"arguments":[{"name":"fromPtr","nativeSrc":"76791:7:0","nodeType":"YulIdentifier","src":"76791:7:0"},{"name":"length","nativeSrc":"76800:6:0","nodeType":"YulIdentifier","src":"76800:6:0"}],"functionName":{"name":"add","nativeSrc":"76787:3:0","nodeType":"YulIdentifier","src":"76787:3:0"},"nativeSrc":"76787:20:0","nodeType":"YulFunctionCall","src":"76787:20:0"},"variables":[{"name":"endPtr","nativeSrc":"76777:6:0","nodeType":"YulTypedName","src":"76777:6:0","type":""}]}]},"src":"76704:527:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":2875,"isOffset":false,"isSlot":false,"src":"76229:4:0","valueSize":1},{"declaration":2875,"isOffset":false,"isSlot":false,"src":"76745:4:0","valueSize":1},{"declaration":2878,"isOffset":false,"isSlot":false,"src":"76175:6:0","valueSize":1},{"declaration":2878,"isOffset":false,"isSlot":false,"src":"76311:6:0","valueSize":1},{"declaration":2878,"isOffset":false,"isSlot":false,"src":"76469:6:0","valueSize":1},{"declaration":2878,"isOffset":false,"isSlot":false,"src":"76635:6:0","valueSize":1}],"flags":["memory-safe"],"id":2880,"nodeType":"InlineAssembly","src":"74204:3037:0"}]},"documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"73721:389:0","text":" @dev Converts arbitrary bytes to their hexadecimal string representation.\n This is an assembly adaptation of highly optimized toHex16 code by Mikhail Vladimirov.\n Reference: https://stackoverflow.com/a/69266989\n @param data The bytes to be converted to hexadecimal string.\n @return result The hexadecimal string representation of the input bytes."},"id":2882,"implemented":true,"kind":"function","modifiers":[],"name":"toHex","nameLocation":"74124:5:0","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"data","nameLocation":"74143:4:0","nodeType":"VariableDeclaration","scope":2882,"src":"74130:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2874,"name":"bytes","nodeType":"ElementaryTypeName","src":"74130:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"74129:19:0"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"result","nameLocation":"74186:6:0","nodeType":"VariableDeclaration","scope":2882,"src":"74172:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2877,"name":"string","nodeType":"ElementaryTypeName","src":"74172:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74171:22:0"},"scope":2883,"src":"74115:3132:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"73007:4242:0","usedErrors":[],"usedEvents":[]},{"canonicalName":"TakerTraits","id":2885,"name":"TakerTraits","nameLocation":"77355:11:0","nodeType":"UserDefinedValueTypeDefinition","src":"77350:28:0","underlyingType":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"77370:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"abstract":false,"baseContracts":[],"canonicalName":"TakerTraitsLib","contractDependencies":[],"contractKind":"library","documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"77380:1211:0","text":" @title TakerTraitsLib\n @notice This library to manage and check TakerTraits, which are used to encode the taker's preferences for an order in a single uint256.\n @dev The TakerTraits are structured as follows:\n High bits are used for flags\n 255 bit `_MAKER_AMOUNT_FLAG`           - If set, the taking amount is calculated based on making amount, otherwise making amount is calculated based on taking amount.\n 254 bit `_UNWRAP_WETH_FLAG`            - If set, the WETH will be unwrapped into ETH before sending to taker.\n 253 bit `_SKIP_ORDER_PERMIT_FLAG`      - If set, the order skips maker's permit execution.\n 252 bit `_USE_PERMIT2_FLAG`            - If set, the order uses the permit2 function for authorization.\n 251 bit `_ARGS_HAS_TARGET`             - If set, then first 20 bytes of args are treated as target address for maker’s funds transfer.\n 224-247 bits `ARGS_EXTENSION_LENGTH`   - The length of the extension calldata in the args.\n 200-223 bits `ARGS_INTERACTION_LENGTH` - The length of the interaction calldata in the args.\n 0-184 bits                             - The threshold amount (the maximum amount a taker agrees to give in exchange for a making amount)."},"fullyImplemented":true,"id":3084,"linearizedBaseContracts":[3084],"name":"TakerTraitsLib","nameLocation":"78600:14:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2891,"mutability":"constant","name":"_MAKER_AMOUNT_FLAG","nameLocation":"78646:18:0","nodeType":"VariableDeclaration","scope":3084,"src":"78621:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"78621:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78667:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323535","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78672:3:0","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"78667:8:0","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"constant":true,"id":2896,"mutability":"constant","name":"_UNWRAP_WETH_FLAG","nameLocation":"78706:17:0","nodeType":"VariableDeclaration","scope":3084,"src":"78681:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"78681:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"},"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78726:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323534","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78731:3:0","typeDescriptions":{"typeIdentifier":"t_rational_254_by_1","typeString":"int_const 254"},"value":"254"},"src":"78726:8:0","typeDescriptions":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"}},"visibility":"private"},{"constant":true,"id":2901,"mutability":"constant","name":"_SKIP_ORDER_PERMIT_FLAG","nameLocation":"78765:23:0","nodeType":"VariableDeclaration","scope":3084,"src":"78740:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"78740:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_14474011154664524427946373126085988481658748083205070504932198000989141204992_by_1","typeString":"int_const 1447...(69 digits omitted)...4992"},"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78791:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323533","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78796:3:0","typeDescriptions":{"typeIdentifier":"t_rational_253_by_1","typeString":"int_const 253"},"value":"253"},"src":"78791:8:0","typeDescriptions":{"typeIdentifier":"t_rational_14474011154664524427946373126085988481658748083205070504932198000989141204992_by_1","typeString":"int_const 1447...(69 digits omitted)...4992"}},"visibility":"private"},{"constant":true,"id":2906,"mutability":"constant","name":"_USE_PERMIT2_FLAG","nameLocation":"78830:17:0","nodeType":"VariableDeclaration","scope":3084,"src":"78805:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"78805:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_7237005577332262213973186563042994240829374041602535252466099000494570602496_by_1","typeString":"int_const 7237...(68 digits omitted)...2496"},"id":2905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78850:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323532","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78855:3:0","typeDescriptions":{"typeIdentifier":"t_rational_252_by_1","typeString":"int_const 252"},"value":"252"},"src":"78850:8:0","typeDescriptions":{"typeIdentifier":"t_rational_7237005577332262213973186563042994240829374041602535252466099000494570602496_by_1","typeString":"int_const 7237...(68 digits omitted)...2496"}},"visibility":"private"},{"constant":true,"id":2911,"mutability":"constant","name":"_ARGS_HAS_TARGET","nameLocation":"78889:16:0","nodeType":"VariableDeclaration","scope":3084,"src":"78864:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"78864:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1","typeString":"int_const 3618...(68 digits omitted)...1248"},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78908:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323531","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78913:3:0","typeDescriptions":{"typeIdentifier":"t_rational_251_by_1","typeString":"int_const 251"},"value":"251"},"src":"78908:8:0","typeDescriptions":{"typeIdentifier":"t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1","typeString":"int_const 3618...(68 digits omitted)...1248"}},"visibility":"private"},{"constant":true,"id":2914,"mutability":"constant","name":"_ARGS_EXTENSION_LENGTH_OFFSET","nameLocation":"78948:29:0","nodeType":"VariableDeclaration","scope":3084,"src":"78923:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"78923:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323234","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78980:3:0","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},"visibility":"private"},{"constant":true,"id":2917,"mutability":"constant","name":"_ARGS_EXTENSION_LENGTH_MASK","nameLocation":"79014:27:0","nodeType":"VariableDeclaration","scope":3084,"src":"78989:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"78989:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078666666666666","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"79044:8:0","typeDescriptions":{"typeIdentifier":"t_rational_16777215_by_1","typeString":"int_const 16777215"},"value":"0xffffff"},"visibility":"private"},{"constant":true,"id":2920,"mutability":"constant","name":"_ARGS_INTERACTION_LENGTH_OFFSET","nameLocation":"79083:31:0","nodeType":"VariableDeclaration","scope":3084,"src":"79058:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2918,"name":"uint256","nodeType":"ElementaryTypeName","src":"79058:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323030","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"79117:3:0","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"private"},{"constant":true,"id":2923,"mutability":"constant","name":"_ARGS_INTERACTION_LENGTH_MASK","nameLocation":"79151:29:0","nodeType":"VariableDeclaration","scope":3084,"src":"79126:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"79126:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078666666666666","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"79183:8:0","typeDescriptions":{"typeIdentifier":"t_rational_16777215_by_1","typeString":"int_const 16777215"},"value":"0xffffff"},"visibility":"private"},{"constant":true,"id":2926,"mutability":"constant","name":"_AMOUNT_MASK","nameLocation":"79223:12:0","nodeType":"VariableDeclaration","scope":3084,"src":"79198:106:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"79198:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307830303030303030303030303030303030303066666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"79238:66:0","typeDescriptions":{"typeIdentifier":"t_rational_24519928653854221733733552434404946937899825954937634815_by_1","typeString":"int_const 2451...(48 digits omitted)...4815"},"value":"0x000000000000000000ffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"private"},{"body":{"id":2945,"nodeType":"Block","src":"79611:81:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2937,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"79648:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}],"expression":{"id":2935,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"79629:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$2885_$","typeString":"type(TakerTraits)"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"79641:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"79629:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$2885_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"79629:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2939,"name":"_ARGS_HAS_TARGET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"79663:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"79629:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"79628:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"79684:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"79628:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2934,"id":2944,"nodeType":"Return","src":"79621:64:0"}]},"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"79311:218:0","text":" @notice Checks if the args should contain target address.\n @param takerTraits The traits of the taker.\n @return result A boolean indicating whether the args should contain target address."},"id":2946,"implemented":true,"kind":"function","modifiers":[],"name":"argsHasTarget","nameLocation":"79543:13:0","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"takerTraits","nameLocation":"79569:11:0","nodeType":"VariableDeclaration","scope":2946,"src":"79557:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":2929,"nodeType":"UserDefinedTypeName","pathNode":{"id":2928,"name":"TakerTraits","nameLocations":["79557:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"79557:11:0"},"referencedDeclaration":2885,"src":"79557:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"79556:25:0"},"returnParameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2946,"src":"79605:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2932,"name":"bool","nodeType":"ElementaryTypeName","src":"79605:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"79604:6:0"},"scope":3084,"src":"79534:158:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2965,"nodeType":"Block","src":"80022:120:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2957,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"80059:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}],"expression":{"id":2955,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"80040:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$2885_$","typeString":"type(TakerTraits)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"80052:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"80040:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$2885_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"80040:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2959,"name":"_ARGS_EXTENSION_LENGTH_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"80075:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"80040:64:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"80039:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2962,"name":"_ARGS_EXTENSION_LENGTH_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"80108:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"80039:96:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2954,"id":2964,"nodeType":"Return","src":"80032:103:0"}]},"documentation":{"id":2947,"nodeType":"StructuredDocumentation","src":"79698:233:0","text":" @notice Retrieves the length of the extension calldata from the takerTraits.\n @param takerTraits The traits of the taker.\n @return result The length of the extension calldata encoded in the takerTraits."},"id":2966,"implemented":true,"kind":"function","modifiers":[],"name":"argsExtensionLength","nameLocation":"79945:19:0","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"takerTraits","nameLocation":"79977:11:0","nodeType":"VariableDeclaration","scope":2966,"src":"79965:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":2949,"nodeType":"UserDefinedTypeName","pathNode":{"id":2948,"name":"TakerTraits","nameLocations":["79965:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"79965:11:0"},"referencedDeclaration":2885,"src":"79965:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"79964:25:0"},"returnParameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2966,"src":"80013:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"80013:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80012:9:0"},"scope":3084,"src":"79936:206:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2985,"nodeType":"Block","src":"80478:124:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2977,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"80515:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}],"expression":{"id":2975,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"80496:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$2885_$","typeString":"type(TakerTraits)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"80508:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"80496:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$2885_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"80496:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2979,"name":"_ARGS_INTERACTION_LENGTH_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"80531:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"80496:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2981,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"80495:68:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2982,"name":"_ARGS_INTERACTION_LENGTH_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"80566:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"80495:100:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2974,"id":2984,"nodeType":"Return","src":"80488:107:0"}]},"documentation":{"id":2967,"nodeType":"StructuredDocumentation","src":"80148:237:0","text":" @notice Retrieves the length of the interaction calldata from the takerTraits.\n @param takerTraits The traits of the taker.\n @return result The length of the interaction calldata encoded in the takerTraits."},"id":2986,"implemented":true,"kind":"function","modifiers":[],"name":"argsInteractionLength","nameLocation":"80399:21:0","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"takerTraits","nameLocation":"80433:11:0","nodeType":"VariableDeclaration","scope":2986,"src":"80421:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":2969,"nodeType":"UserDefinedTypeName","pathNode":{"id":2968,"name":"TakerTraits","nameLocations":["80421:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"80421:11:0"},"referencedDeclaration":2885,"src":"80421:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"80420:25:0"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2986,"src":"80469:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"80469:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80468:9:0"},"scope":3084,"src":"80390:212:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3005,"nodeType":"Block","src":"80955:83:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2997,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"80992:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}],"expression":{"id":2995,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"80973:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$2885_$","typeString":"type(TakerTraits)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"80985:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"80973:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$2885_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"80973:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2999,"name":"_MAKER_AMOUNT_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"81007:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"80973:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"80972:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"81030:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"80972:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2994,"id":3004,"nodeType":"Return","src":"80965:66:0"}]},"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"80608:264:0","text":" @notice Checks if the taking amount should be calculated based on making amount.\n @param takerTraits The traits of the taker.\n @return result A boolean indicating whether the taking amount should be calculated based on making amount."},"id":3006,"implemented":true,"kind":"function","modifiers":[],"name":"isMakingAmount","nameLocation":"80886:14:0","nodeType":"FunctionDefinition","parameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"takerTraits","nameLocation":"80913:11:0","nodeType":"VariableDeclaration","scope":3006,"src":"80901:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":2989,"nodeType":"UserDefinedTypeName","pathNode":{"id":2988,"name":"TakerTraits","nameLocations":["80901:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"80901:11:0"},"referencedDeclaration":2885,"src":"80901:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"80900:25:0"},"returnParameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3006,"src":"80949:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2992,"name":"bool","nodeType":"ElementaryTypeName","src":"80949:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"80948:6:0"},"scope":3084,"src":"80877:161:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3025,"nodeType":"Block","src":"81343:82:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3017,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"81380:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}],"expression":{"id":3015,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"81361:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$2885_$","typeString":"type(TakerTraits)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"81373:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"81361:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$2885_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"81361:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3019,"name":"_UNWRAP_WETH_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"81395:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"81361:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"81360:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"81417:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"81360:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3014,"id":3024,"nodeType":"Return","src":"81353:65:0"}]},"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"81044:220:0","text":" @notice Checks if the order should unwrap WETH and send ETH to taker.\n @param takerTraits The traits of the taker.\n @return result A boolean indicating whether the order should unwrap WETH."},"id":3026,"implemented":true,"kind":"function","modifiers":[],"name":"unwrapWeth","nameLocation":"81278:10:0","nodeType":"FunctionDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"takerTraits","nameLocation":"81301:11:0","nodeType":"VariableDeclaration","scope":3026,"src":"81289:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":3009,"nodeType":"UserDefinedTypeName","pathNode":{"id":3008,"name":"TakerTraits","nameLocations":["81289:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"81289:11:0"},"referencedDeclaration":2885,"src":"81289:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"81288:25:0"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3026,"src":"81337:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3012,"name":"bool","nodeType":"ElementaryTypeName","src":"81337:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"81336:6:0"},"scope":3084,"src":"81269:156:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3045,"nodeType":"Block","src":"81731:88:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3037,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"81768:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}],"expression":{"id":3035,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"81749:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$2885_$","typeString":"type(TakerTraits)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"81761:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"81749:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$2885_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"81749:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3039,"name":"_SKIP_ORDER_PERMIT_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"81783:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"81749:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3041,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"81748:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"81811:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"81748:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3034,"id":3044,"nodeType":"Return","src":"81741:71:0"}]},"documentation":{"id":3027,"nodeType":"StructuredDocumentation","src":"81431:216:0","text":" @notice Checks if the order should skip maker's permit execution.\n @param takerTraits The traits of the taker.\n @return result A boolean indicating whether the order don't apply permit."},"id":3046,"implemented":true,"kind":"function","modifiers":[],"name":"skipMakerPermit","nameLocation":"81661:15:0","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"takerTraits","nameLocation":"81689:11:0","nodeType":"VariableDeclaration","scope":3046,"src":"81677:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":3029,"nodeType":"UserDefinedTypeName","pathNode":{"id":3028,"name":"TakerTraits","nameLocations":["81677:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"81677:11:0"},"referencedDeclaration":2885,"src":"81677:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"81676:25:0"},"returnParameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3046,"src":"81725:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3032,"name":"bool","nodeType":"ElementaryTypeName","src":"81725:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"81724:6:0"},"scope":3084,"src":"81652:167:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3065,"nodeType":"Block","src":"82116:82:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3057,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"82153:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}],"expression":{"id":3055,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"82134:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$2885_$","typeString":"type(TakerTraits)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"82146:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"82134:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$2885_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"82134:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3059,"name":"_USE_PERMIT2_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"82168:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"82134:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"82133:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"82190:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"82133:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3054,"id":3064,"nodeType":"Return","src":"82126:65:0"}]},"documentation":{"id":3047,"nodeType":"StructuredDocumentation","src":"81825:212:0","text":" @notice Checks if the order uses the permit2 instead of permit.\n @param takerTraits The traits of the taker.\n @return result A boolean indicating whether the order uses the permit2."},"id":3066,"implemented":true,"kind":"function","modifiers":[],"name":"usePermit2","nameLocation":"82051:10:0","nodeType":"FunctionDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"takerTraits","nameLocation":"82074:11:0","nodeType":"VariableDeclaration","scope":3066,"src":"82062:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":3049,"nodeType":"UserDefinedTypeName","pathNode":{"id":3048,"name":"TakerTraits","nameLocations":["82062:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"82062:11:0"},"referencedDeclaration":2885,"src":"82062:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"82061:25:0"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3066,"src":"82110:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3052,"name":"bool","nodeType":"ElementaryTypeName","src":"82110:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"82109:6:0"},"scope":3084,"src":"82042:156:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3082,"nodeType":"Block","src":"82568:70:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3077,"name":"takerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"82604:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}],"expression":{"id":3075,"name":"TakerTraits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"82585:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TakerTraits_$2885_$","typeString":"type(TakerTraits)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"82597:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"82585:18:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TakerTraits_$2885_$returns$_t_uint256_$","typeString":"function (TakerTraits) pure returns (uint256)"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"82585:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3079,"name":"_AMOUNT_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"82619:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"82585:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3074,"id":3081,"nodeType":"Return","src":"82578:53:0"}]},"documentation":{"id":3067,"nodeType":"StructuredDocumentation","src":"82204:283:0","text":" @notice Retrieves the threshold amount from the takerTraits.\n The maximum amount a taker agrees to give in exchange for a making amount.\n @param takerTraits The traits of the taker.\n @return result The threshold amount encoded in the takerTraits."},"id":3083,"implemented":true,"kind":"function","modifiers":[],"name":"threshold","nameLocation":"82501:9:0","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"takerTraits","nameLocation":"82523:11:0","nodeType":"VariableDeclaration","scope":3083,"src":"82511:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":3069,"nodeType":"UserDefinedTypeName","pathNode":{"id":3068,"name":"TakerTraits","nameLocations":["82511:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"82511:11:0"},"referencedDeclaration":2885,"src":"82511:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"82510:25:0"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3083,"src":"82559:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"82559:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82558:9:0"},"scope":3084,"src":"82492:146:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"78592:4048:0","usedErrors":[],"usedEvents":[]},{"canonicalName":"Timelocks","id":3086,"name":"Timelocks","nameLocation":"83749:9:0","nodeType":"UserDefinedValueTypeDefinition","src":"83744:26:0","underlyingType":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"83762:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"abstract":false,"baseContracts":[],"canonicalName":"TimelocksLib","contractDependencies":[],"contractKind":"library","documentation":{"id":3087,"nodeType":"StructuredDocumentation","src":"83772:82:0","text":" @title Timelocks library for compact storage of timelocks in a uint256."},"fullyImplemented":true,"id":3198,"linearizedBaseContracts":[3198],"name":"TimelocksLib","nameLocation":"83863:12:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"TimelocksLib.Stage","id":3095,"members":[{"id":3088,"name":"SrcWithdrawal","nameLocation":"83903:13:0","nodeType":"EnumValue","src":"83903:13:0"},{"id":3089,"name":"SrcPublicWithdrawal","nameLocation":"83926:19:0","nodeType":"EnumValue","src":"83926:19:0"},{"id":3090,"name":"SrcCancellation","nameLocation":"83955:15:0","nodeType":"EnumValue","src":"83955:15:0"},{"id":3091,"name":"SrcPublicCancellation","nameLocation":"83980:21:0","nodeType":"EnumValue","src":"83980:21:0"},{"id":3092,"name":"DstWithdrawal","nameLocation":"84011:13:0","nodeType":"EnumValue","src":"84011:13:0"},{"id":3093,"name":"DstPublicWithdrawal","nameLocation":"84034:19:0","nodeType":"EnumValue","src":"84034:19:0"},{"id":3094,"name":"DstCancellation","nameLocation":"84063:15:0","nodeType":"EnumValue","src":"84063:15:0"}],"name":"Stage","nameLocation":"83887:5:0","nodeType":"EnumDefinition","src":"83882:202:0"},{"constant":true,"id":3098,"mutability":"constant","name":"_DEPLOYED_AT_MASK","nameLocation":"84115:17:0","nodeType":"VariableDeclaration","scope":3198,"src":"84090:111:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"84090:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307866666666666666663030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"84135:66:0","typeDescriptions":{"typeIdentifier":"t_rational_115792089210356248756420345214020892766250353992003419616917011526809519390720_by_1","typeString":"int_const 1157...(70 digits omitted)...0720"},"value":"0xffffffff00000000000000000000000000000000000000000000000000000000"},"visibility":"private"},{"constant":true,"id":3101,"mutability":"constant","name":"_DEPLOYED_AT_OFFSET","nameLocation":"84232:19:0","nodeType":"VariableDeclaration","scope":3198,"src":"84207:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"84207:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323234","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"84254:3:0","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},"visibility":"private"},{"body":{"id":3132,"nodeType":"Block","src":"84621:130:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3117,"name":"timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"84671:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}],"expression":{"id":3115,"name":"Timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"84654:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"type(Timelocks)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"84664:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"84654:16:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Timelocks_$3086_$returns$_t_uint256_$","typeString":"function (Timelocks) pure returns (uint256)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84654:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"84684:27:0","subExpression":{"arguments":[{"id":3121,"name":"_DEPLOYED_AT_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"84693:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"84685:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"84685:7:0","typeDescriptions":{}}},"id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84685:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"84654:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"84653:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"84715:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3127,"name":"_DEPLOYED_AT_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"84724:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"84715:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"84653:90:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3113,"name":"Timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"84638:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"type(Timelocks)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"84648:4:0","memberName":"wrap","nodeType":"MemberAccess","src":"84638:14:0","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (uint256) pure returns (Timelocks)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84638:106:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"functionReturnParameters":3112,"id":3131,"nodeType":"Return","src":"84631:113:0"}]},"documentation":{"id":3102,"nodeType":"StructuredDocumentation","src":"84264:259:0","text":" @notice Sets the Escrow deployment timestamp.\n @param timelocks The timelocks to set the deployment timestamp to.\n @param value The new Escrow deployment timestamp.\n @return The timelocks with the deployment timestamp set."},"id":3133,"implemented":true,"kind":"function","modifiers":[],"name":"setDeployedAt","nameLocation":"84537:13:0","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"timelocks","nameLocation":"84561:9:0","nodeType":"VariableDeclaration","scope":3133,"src":"84551:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"},"typeName":{"id":3104,"nodeType":"UserDefinedTypeName","pathNode":{"id":3103,"name":"Timelocks","nameLocations":["84551:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"84551:9:0"},"referencedDeclaration":3086,"src":"84551:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"value","nameLocation":"84580:5:0","nodeType":"VariableDeclaration","scope":3133,"src":"84572:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"84572:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84550:36:0"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3133,"src":"84610:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"},"typeName":{"id":3110,"nodeType":"UserDefinedTypeName","pathNode":{"id":3109,"name":"Timelocks","nameLocations":["84610:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"84610:9:0"},"referencedDeclaration":3086,"src":"84610:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"visibility":"internal"}],"src":"84609:11:0"},"scope":3198,"src":"84528:223:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3155,"nodeType":"Block","src":"85038:124:0","statements":[{"id":3154,"nodeType":"UncheckedBlock","src":"85048:108:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"rescueDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"85079:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3147,"name":"timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"85111:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}],"expression":{"id":3145,"name":"Timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"85094:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"type(Timelocks)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"85104:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"85094:16:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Timelocks_$3086_$returns$_t_uint256_$","typeString":"function (Timelocks) pure returns (uint256)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85094:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3149,"name":"_DEPLOYED_AT_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"85125:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"85094:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"85093:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"85079:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3143,"id":3153,"nodeType":"Return","src":"85072:73:0"}]}]},"documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"84757:181:0","text":" @notice Returns the start of the rescue period.\n @param timelocks The timelocks to get the rescue delay from.\n @return The start of the rescue period."},"id":3156,"implemented":true,"kind":"function","modifiers":[],"name":"rescueStart","nameLocation":"84952:11:0","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"timelocks","nameLocation":"84974:9:0","nodeType":"VariableDeclaration","scope":3156,"src":"84964:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"},"typeName":{"id":3136,"nodeType":"UserDefinedTypeName","pathNode":{"id":3135,"name":"Timelocks","nameLocations":["84964:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"84964:9:0"},"referencedDeclaration":3086,"src":"84964:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"rescueDelay","nameLocation":"84993:11:0","nodeType":"VariableDeclaration","scope":3156,"src":"84985:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"84985:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84963:42:0"},"returnParameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3156,"src":"85029:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3141,"name":"uint256","nodeType":"ElementaryTypeName","src":"85029:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85028:9:0"},"scope":3198,"src":"84943:219:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3196,"nodeType":"Block","src":"85494:241:0","statements":[{"assignments":[3169],"declarations":[{"constant":false,"id":3169,"mutability":"mutable","name":"data","nameLocation":"85512:4:0","nodeType":"VariableDeclaration","scope":3196,"src":"85504:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"85504:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3174,"initialValue":{"arguments":[{"id":3172,"name":"timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"85536:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}],"expression":{"id":3170,"name":"Timelocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"85519:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"type(Timelocks)"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"85529:6:0","memberName":"unwrap","nodeType":"MemberAccess","src":"85519:16:0","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Timelocks_$3086_$returns$_t_uint256_$","typeString":"function (Timelocks) pure returns (uint256)"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85519:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"85504:42:0"},{"assignments":[3176],"declarations":[{"constant":false,"id":3176,"mutability":"mutable","name":"bitShift","nameLocation":"85564:8:0","nodeType":"VariableDeclaration","scope":3196,"src":"85556:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"85556:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3183,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3179,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"85583:5:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"85575:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"85575:7:0","typeDescriptions":{}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85575:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"85592:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"85575:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"85556:38:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3184,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"85673:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3185,"name":"_DEPLOYED_AT_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"85681:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"85673:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"85672:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3190,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"85711:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3191,"name":"bitShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"85719:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"85711:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"85704:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3188,"name":"uint32","nodeType":"ElementaryTypeName","src":"85704:6:0","typeDescriptions":{}}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85704:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"85672:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3167,"id":3195,"nodeType":"Return","src":"85665:63:0"}]},"documentation":{"id":3157,"nodeType":"StructuredDocumentation","src":"85168:242:0","text":" @notice Returns the timelock value for the given stage.\n @param timelocks The timelocks to get the value from.\n @param stage The stage to get the value for.\n @return The timelock value for the given stage."},"id":3197,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"85424:3:0","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"timelocks","nameLocation":"85438:9:0","nodeType":"VariableDeclaration","scope":3197,"src":"85428:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"},"typeName":{"id":3159,"nodeType":"UserDefinedTypeName","pathNode":{"id":3158,"name":"Timelocks","nameLocations":["85428:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"85428:9:0"},"referencedDeclaration":3086,"src":"85428:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"visibility":"internal"},{"constant":false,"id":3163,"mutability":"mutable","name":"stage","nameLocation":"85455:5:0","nodeType":"VariableDeclaration","scope":3197,"src":"85449:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"},"typeName":{"id":3162,"nodeType":"UserDefinedTypeName","pathNode":{"id":3161,"name":"Stage","nameLocations":["85449:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":3095,"src":"85449:5:0"},"referencedDeclaration":3095,"src":"85449:5:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}},"visibility":"internal"}],"src":"85427:34:0"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3197,"src":"85485:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"85485:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85484:9:0"},"scope":3198,"src":"85415:320:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"83855:1882:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"85896:599:0","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."},"fullyImplemented":true,"id":3357,"linearizedBaseContracts":[3357],"name":"Clones","nameLocation":"86504:6:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":3212,"nodeType":"Block","src":"86789:48:0","statements":[{"expression":{"arguments":[{"id":3208,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"86812:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"86828:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3207,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[3213,3258],"referencedDeclaration":3258,"src":"86806:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$","typeString":"function (address,uint256) returns (address)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"86806:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3206,"id":3211,"nodeType":"Return","src":"86799:31:0"}]},"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"86517:192:0","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."},"id":3213,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"86723:5:0","nodeType":"FunctionDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"implementation","nameLocation":"86737:14:0","nodeType":"VariableDeclaration","scope":3213,"src":"86729:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"86729:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86728:24:0"},"returnParameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"instance","nameLocation":"86779:8:0","nodeType":"VariableDeclaration","scope":3213,"src":"86771:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"86771:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86770:18:0"},"scope":3357,"src":"86714:123:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3257,"nodeType":"Block","src":"87319:757:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3225,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"87341:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3357","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3357","typeString":"library Clones"}],"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"87333:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3223,"name":"address","nodeType":"ElementaryTypeName","src":"87333:7:0","typeDescriptions":{}}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87333:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"87347:7:0","memberName":"balance","nodeType":"MemberAccess","src":"87333:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"87357:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"87333:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3242,"nodeType":"IfStatement","src":"87329:123:0","trueBody":{"id":3241,"nodeType":"Block","src":"87364:88:0","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3235,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"87420:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3357","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3357","typeString":"library Clones"}],"id":3234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"87412:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3233,"name":"address","nodeType":"ElementaryTypeName","src":"87412:7:0","typeDescriptions":{}}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87412:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"87426:7:0","memberName":"balance","nodeType":"MemberAccess","src":"87412:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"87435:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3230,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"87385:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$145_$","typeString":"type(library Errors)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"87392:19:0","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":138,"src":"87385:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87385:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3240,"nodeType":"RevertStatement","src":"87378:63:0"}]}},{"AST":{"nativeSrc":"87513:463:0","nodeType":"YulBlock","src":"87513:463:0","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"87583:4:0","nodeType":"YulLiteral","src":"87583:4:0","type":"","value":"0x20"},{"kind":"number","nativeSrc":"87589:32:0","nodeType":"YulLiteral","src":"87589:32:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"mstore","nativeSrc":"87576:6:0","nodeType":"YulIdentifier","src":"87576:6:0"},"nativeSrc":"87576:46:0","nodeType":"YulFunctionCall","src":"87576:46:0"},"nativeSrc":"87576:46:0","nodeType":"YulExpressionStatement","src":"87576:46:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"87680:4:0","nodeType":"YulLiteral","src":"87680:4:0","type":"","value":"0x11"},{"name":"implementation","nativeSrc":"87686:14:0","nodeType":"YulIdentifier","src":"87686:14:0"}],"functionName":{"name":"mstore","nativeSrc":"87673:6:0","nodeType":"YulIdentifier","src":"87673:6:0"},"nativeSrc":"87673:28:0","nodeType":"YulFunctionCall","src":"87673:28:0"},"nativeSrc":"87673:28:0","nodeType":"YulExpressionStatement","src":"87673:28:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"87830:4:0","nodeType":"YulLiteral","src":"87830:4:0","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"87843:4:0","nodeType":"YulLiteral","src":"87843:4:0","type":"","value":"0x88"},{"name":"implementation","nativeSrc":"87849:14:0","nodeType":"YulIdentifier","src":"87849:14:0"}],"functionName":{"name":"shr","nativeSrc":"87839:3:0","nodeType":"YulIdentifier","src":"87839:3:0"},"nativeSrc":"87839:25:0","nodeType":"YulFunctionCall","src":"87839:25:0"},{"kind":"number","nativeSrc":"87866:48:0","nodeType":"YulLiteral","src":"87866:48:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nativeSrc":"87836:2:0","nodeType":"YulIdentifier","src":"87836:2:0"},"nativeSrc":"87836:79:0","nodeType":"YulFunctionCall","src":"87836:79:0"}],"functionName":{"name":"mstore","nativeSrc":"87823:6:0","nodeType":"YulIdentifier","src":"87823:6:0"},"nativeSrc":"87823:93:0","nodeType":"YulFunctionCall","src":"87823:93:0"},"nativeSrc":"87823:93:0","nodeType":"YulExpressionStatement","src":"87823:93:0"},{"nativeSrc":"87929:37:0","nodeType":"YulAssignment","src":"87929:37:0","value":{"arguments":[{"name":"value","nativeSrc":"87948:5:0","nodeType":"YulIdentifier","src":"87948:5:0"},{"kind":"number","nativeSrc":"87955:4:0","nodeType":"YulLiteral","src":"87955:4:0","type":"","value":"0x09"},{"kind":"number","nativeSrc":"87961:4:0","nodeType":"YulLiteral","src":"87961:4:0","type":"","value":"0x37"}],"functionName":{"name":"create","nativeSrc":"87941:6:0","nodeType":"YulIdentifier","src":"87941:6:0"},"nativeSrc":"87941:25:0","nodeType":"YulFunctionCall","src":"87941:25:0"},"variableNames":[{"name":"instance","nativeSrc":"87929:8:0","nodeType":"YulIdentifier","src":"87929:8:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3216,"isOffset":false,"isSlot":false,"src":"87686:14:0","valueSize":1},{"declaration":3216,"isOffset":false,"isSlot":false,"src":"87849:14:0","valueSize":1},{"declaration":3221,"isOffset":false,"isSlot":false,"src":"87929:8:0","valueSize":1},{"declaration":3218,"isOffset":false,"isSlot":false,"src":"87948:5:0","valueSize":1}],"id":3243,"nodeType":"InlineAssembly","src":"87504:472:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3244,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"87989:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"88009:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"88001:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"88001:7:0","typeDescriptions":{}}},"id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88001:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"87989:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3256,"nodeType":"IfStatement","src":"87985:85:0","trueBody":{"id":3255,"nodeType":"Block","src":"88013:57:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3250,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"88034:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$145_$","typeString":"type(library Errors)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"88041:16:0","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":144,"src":"88034:23:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88034:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3254,"nodeType":"RevertStatement","src":"88027:32:0"}]}}]},"documentation":{"id":3214,"nodeType":"StructuredDocumentation","src":"86843:381:0","text":" @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"87238:5:0","nodeType":"FunctionDefinition","parameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"implementation","nameLocation":"87252:14:0","nodeType":"VariableDeclaration","scope":3258,"src":"87244:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3215,"name":"address","nodeType":"ElementaryTypeName","src":"87244:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"value","nameLocation":"87276:5:0","nodeType":"VariableDeclaration","scope":3258,"src":"87268:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"87268:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87243:39:0"},"returnParameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"instance","nameLocation":"87309:8:0","nodeType":"VariableDeclaration","scope":3258,"src":"87301:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3220,"name":"address","nodeType":"ElementaryTypeName","src":"87301:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"87300:18:0"},"scope":3357,"src":"87229:847:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3274,"nodeType":"Block","src":"88553:67:0","statements":[{"expression":{"arguments":[{"id":3269,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"88589:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3270,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"88605:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"88611:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3268,"name":"cloneDeterministic","nodeType":"Identifier","overloadedDeclarations":[3275,3322],"referencedDeclaration":3322,"src":"88570:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes32,uint256) returns (address)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88570:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3267,"id":3273,"nodeType":"Return","src":"88563:50:0"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"88082:364:0","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."},"id":3275,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"88460:18:0","nodeType":"FunctionDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"implementation","nameLocation":"88487:14:0","nodeType":"VariableDeclaration","scope":3275,"src":"88479:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3260,"name":"address","nodeType":"ElementaryTypeName","src":"88479:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"salt","nameLocation":"88511:4:0","nodeType":"VariableDeclaration","scope":3275,"src":"88503:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"88503:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"88478:38:0"},"returnParameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"instance","nameLocation":"88543:8:0","nodeType":"VariableDeclaration","scope":3275,"src":"88535:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3265,"name":"address","nodeType":"ElementaryTypeName","src":"88535:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88534:18:0"},"scope":3357,"src":"88451:169:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3321,"nodeType":"Block","src":"89193:764:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3289,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"89215:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3357","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3357","typeString":"library Clones"}],"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"89207:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"89207:7:0","typeDescriptions":{}}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"89207:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"89221:7:0","memberName":"balance","nodeType":"MemberAccess","src":"89207:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"89231:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"89207:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3306,"nodeType":"IfStatement","src":"89203:123:0","trueBody":{"id":3305,"nodeType":"Block","src":"89238:88:0","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3299,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"89294:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3357","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3357","typeString":"library Clones"}],"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"89286:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"89286:7:0","typeDescriptions":{}}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"89286:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"89300:7:0","memberName":"balance","nodeType":"MemberAccess","src":"89286:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"89309:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3294,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"89259:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$145_$","typeString":"type(library Errors)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"89266:19:0","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":138,"src":"89259:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"89259:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3304,"nodeType":"RevertStatement","src":"89252:63:0"}]}},{"AST":{"nativeSrc":"89387:470:0","nodeType":"YulBlock","src":"89387:470:0","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"89457:4:0","nodeType":"YulLiteral","src":"89457:4:0","type":"","value":"0x20"},{"kind":"number","nativeSrc":"89463:32:0","nodeType":"YulLiteral","src":"89463:32:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"mstore","nativeSrc":"89450:6:0","nodeType":"YulIdentifier","src":"89450:6:0"},"nativeSrc":"89450:46:0","nodeType":"YulFunctionCall","src":"89450:46:0"},"nativeSrc":"89450:46:0","nodeType":"YulExpressionStatement","src":"89450:46:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"89554:4:0","nodeType":"YulLiteral","src":"89554:4:0","type":"","value":"0x11"},{"name":"implementation","nativeSrc":"89560:14:0","nodeType":"YulIdentifier","src":"89560:14:0"}],"functionName":{"name":"mstore","nativeSrc":"89547:6:0","nodeType":"YulIdentifier","src":"89547:6:0"},"nativeSrc":"89547:28:0","nodeType":"YulFunctionCall","src":"89547:28:0"},"nativeSrc":"89547:28:0","nodeType":"YulExpressionStatement","src":"89547:28:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"89704:4:0","nodeType":"YulLiteral","src":"89704:4:0","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"89717:4:0","nodeType":"YulLiteral","src":"89717:4:0","type":"","value":"0x88"},{"name":"implementation","nativeSrc":"89723:14:0","nodeType":"YulIdentifier","src":"89723:14:0"}],"functionName":{"name":"shr","nativeSrc":"89713:3:0","nodeType":"YulIdentifier","src":"89713:3:0"},"nativeSrc":"89713:25:0","nodeType":"YulFunctionCall","src":"89713:25:0"},{"kind":"number","nativeSrc":"89740:48:0","nodeType":"YulLiteral","src":"89740:48:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nativeSrc":"89710:2:0","nodeType":"YulIdentifier","src":"89710:2:0"},"nativeSrc":"89710:79:0","nodeType":"YulFunctionCall","src":"89710:79:0"}],"functionName":{"name":"mstore","nativeSrc":"89697:6:0","nodeType":"YulIdentifier","src":"89697:6:0"},"nativeSrc":"89697:93:0","nodeType":"YulFunctionCall","src":"89697:93:0"},"nativeSrc":"89697:93:0","nodeType":"YulExpressionStatement","src":"89697:93:0"},{"nativeSrc":"89803:44:0","nodeType":"YulAssignment","src":"89803:44:0","value":{"arguments":[{"name":"value","nativeSrc":"89823:5:0","nodeType":"YulIdentifier","src":"89823:5:0"},{"kind":"number","nativeSrc":"89830:4:0","nodeType":"YulLiteral","src":"89830:4:0","type":"","value":"0x09"},{"kind":"number","nativeSrc":"89836:4:0","nodeType":"YulLiteral","src":"89836:4:0","type":"","value":"0x37"},{"name":"salt","nativeSrc":"89842:4:0","nodeType":"YulIdentifier","src":"89842:4:0"}],"functionName":{"name":"create2","nativeSrc":"89815:7:0","nodeType":"YulIdentifier","src":"89815:7:0"},"nativeSrc":"89815:32:0","nodeType":"YulFunctionCall","src":"89815:32:0"},"variableNames":[{"name":"instance","nativeSrc":"89803:8:0","nodeType":"YulIdentifier","src":"89803:8:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3278,"isOffset":false,"isSlot":false,"src":"89560:14:0","valueSize":1},{"declaration":3278,"isOffset":false,"isSlot":false,"src":"89723:14:0","valueSize":1},{"declaration":3285,"isOffset":false,"isSlot":false,"src":"89803:8:0","valueSize":1},{"declaration":3280,"isOffset":false,"isSlot":false,"src":"89842:4:0","valueSize":1},{"declaration":3282,"isOffset":false,"isSlot":false,"src":"89823:5:0","valueSize":1}],"id":3307,"nodeType":"InlineAssembly","src":"89378:479:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3308,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"89870:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"89890:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"89882:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3309,"name":"address","nodeType":"ElementaryTypeName","src":"89882:7:0","typeDescriptions":{}}},"id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"89882:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"89870:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3320,"nodeType":"IfStatement","src":"89866:85:0","trueBody":{"id":3319,"nodeType":"Block","src":"89894:57:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3314,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"89915:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$145_$","typeString":"type(library Errors)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"89922:16:0","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":144,"src":"89915:23:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"89915:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3318,"nodeType":"RevertStatement","src":"89908:32:0"}]}}]},"documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"88626:415:0","text":" @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":3322,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"89055:18:0","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"implementation","nameLocation":"89091:14:0","nodeType":"VariableDeclaration","scope":3322,"src":"89083:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3277,"name":"address","nodeType":"ElementaryTypeName","src":"89083:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"salt","nameLocation":"89123:4:0","nodeType":"VariableDeclaration","scope":3322,"src":"89115:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89115:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"value","nameLocation":"89145:5:0","nodeType":"VariableDeclaration","scope":3322,"src":"89137:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"89137:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89073:83:0"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"instance","nameLocation":"89183:8:0","nodeType":"VariableDeclaration","scope":3322,"src":"89175:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"89175:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89174:18:0"},"scope":3357,"src":"89046:911:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3335,"nodeType":"Block","src":"90232:564:0","statements":[{"AST":{"nativeSrc":"90294:496:0","nodeType":"YulBlock","src":"90294:496:0","statements":[{"nativeSrc":"90308:22:0","nodeType":"YulVariableDeclaration","src":"90308:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"90325:4:0","nodeType":"YulLiteral","src":"90325:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"90319:5:0","nodeType":"YulIdentifier","src":"90319:5:0"},"nativeSrc":"90319:11:0","nodeType":"YulFunctionCall","src":"90319:11:0"},"variables":[{"name":"ptr","nativeSrc":"90312:3:0","nodeType":"YulTypedName","src":"90312:3:0","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"90354:3:0","nodeType":"YulIdentifier","src":"90354:3:0"},{"kind":"number","nativeSrc":"90359:4:0","nodeType":"YulLiteral","src":"90359:4:0","type":"","value":"0x38"}],"functionName":{"name":"add","nativeSrc":"90350:3:0","nodeType":"YulIdentifier","src":"90350:3:0"},"nativeSrc":"90350:14:0","nodeType":"YulFunctionCall","src":"90350:14:0"},{"name":"deployer","nativeSrc":"90366:8:0","nodeType":"YulIdentifier","src":"90366:8:0"}],"functionName":{"name":"mstore","nativeSrc":"90343:6:0","nodeType":"YulIdentifier","src":"90343:6:0"},"nativeSrc":"90343:32:0","nodeType":"YulFunctionCall","src":"90343:32:0"},"nativeSrc":"90343:32:0","nodeType":"YulExpressionStatement","src":"90343:32:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"90399:3:0","nodeType":"YulIdentifier","src":"90399:3:0"},{"kind":"number","nativeSrc":"90404:4:0","nodeType":"YulLiteral","src":"90404:4:0","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"90395:3:0","nodeType":"YulIdentifier","src":"90395:3:0"},"nativeSrc":"90395:14:0","nodeType":"YulFunctionCall","src":"90395:14:0"},{"kind":"number","nativeSrc":"90411:34:0","nodeType":"YulLiteral","src":"90411:34:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff"}],"functionName":{"name":"mstore","nativeSrc":"90388:6:0","nodeType":"YulIdentifier","src":"90388:6:0"},"nativeSrc":"90388:58:0","nodeType":"YulFunctionCall","src":"90388:58:0"},"nativeSrc":"90388:58:0","nodeType":"YulExpressionStatement","src":"90388:58:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"90470:3:0","nodeType":"YulIdentifier","src":"90470:3:0"},{"kind":"number","nativeSrc":"90475:4:0","nodeType":"YulLiteral","src":"90475:4:0","type":"","value":"0x14"}],"functionName":{"name":"add","nativeSrc":"90466:3:0","nodeType":"YulIdentifier","src":"90466:3:0"},"nativeSrc":"90466:14:0","nodeType":"YulFunctionCall","src":"90466:14:0"},{"name":"implementation","nativeSrc":"90482:14:0","nodeType":"YulIdentifier","src":"90482:14:0"}],"functionName":{"name":"mstore","nativeSrc":"90459:6:0","nodeType":"YulIdentifier","src":"90459:6:0"},"nativeSrc":"90459:38:0","nodeType":"YulFunctionCall","src":"90459:38:0"},"nativeSrc":"90459:38:0","nodeType":"YulExpressionStatement","src":"90459:38:0"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"90517:3:0","nodeType":"YulIdentifier","src":"90517:3:0"},{"kind":"number","nativeSrc":"90522:42:0","nodeType":"YulLiteral","src":"90522:42:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73"}],"functionName":{"name":"mstore","nativeSrc":"90510:6:0","nodeType":"YulIdentifier","src":"90510:6:0"},"nativeSrc":"90510:55:0","nodeType":"YulFunctionCall","src":"90510:55:0"},"nativeSrc":"90510:55:0","nodeType":"YulExpressionStatement","src":"90510:55:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"90589:3:0","nodeType":"YulIdentifier","src":"90589:3:0"},{"kind":"number","nativeSrc":"90594:4:0","nodeType":"YulLiteral","src":"90594:4:0","type":"","value":"0x58"}],"functionName":{"name":"add","nativeSrc":"90585:3:0","nodeType":"YulIdentifier","src":"90585:3:0"},"nativeSrc":"90585:14:0","nodeType":"YulFunctionCall","src":"90585:14:0"},{"name":"salt","nativeSrc":"90601:4:0","nodeType":"YulIdentifier","src":"90601:4:0"}],"functionName":{"name":"mstore","nativeSrc":"90578:6:0","nodeType":"YulIdentifier","src":"90578:6:0"},"nativeSrc":"90578:28:0","nodeType":"YulFunctionCall","src":"90578:28:0"},"nativeSrc":"90578:28:0","nodeType":"YulExpressionStatement","src":"90578:28:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"90630:3:0","nodeType":"YulIdentifier","src":"90630:3:0"},{"kind":"number","nativeSrc":"90635:4:0","nodeType":"YulLiteral","src":"90635:4:0","type":"","value":"0x78"}],"functionName":{"name":"add","nativeSrc":"90626:3:0","nodeType":"YulIdentifier","src":"90626:3:0"},"nativeSrc":"90626:14:0","nodeType":"YulFunctionCall","src":"90626:14:0"},{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"90656:3:0","nodeType":"YulIdentifier","src":"90656:3:0"},{"kind":"number","nativeSrc":"90661:4:0","nodeType":"YulLiteral","src":"90661:4:0","type":"","value":"0x0c"}],"functionName":{"name":"add","nativeSrc":"90652:3:0","nodeType":"YulIdentifier","src":"90652:3:0"},"nativeSrc":"90652:14:0","nodeType":"YulFunctionCall","src":"90652:14:0"},{"kind":"number","nativeSrc":"90668:4:0","nodeType":"YulLiteral","src":"90668:4:0","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nativeSrc":"90642:9:0","nodeType":"YulIdentifier","src":"90642:9:0"},"nativeSrc":"90642:31:0","nodeType":"YulFunctionCall","src":"90642:31:0"}],"functionName":{"name":"mstore","nativeSrc":"90619:6:0","nodeType":"YulIdentifier","src":"90619:6:0"},"nativeSrc":"90619:55:0","nodeType":"YulFunctionCall","src":"90619:55:0"},"nativeSrc":"90619:55:0","nodeType":"YulExpressionStatement","src":"90619:55:0"},{"nativeSrc":"90687:93:0","nodeType":"YulAssignment","src":"90687:93:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"90718:3:0","nodeType":"YulIdentifier","src":"90718:3:0"},{"kind":"number","nativeSrc":"90723:4:0","nodeType":"YulLiteral","src":"90723:4:0","type":"","value":"0x43"}],"functionName":{"name":"add","nativeSrc":"90714:3:0","nodeType":"YulIdentifier","src":"90714:3:0"},"nativeSrc":"90714:14:0","nodeType":"YulFunctionCall","src":"90714:14:0"},{"kind":"number","nativeSrc":"90730:4:0","nodeType":"YulLiteral","src":"90730:4:0","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nativeSrc":"90704:9:0","nodeType":"YulIdentifier","src":"90704:9:0"},"nativeSrc":"90704:31:0","nodeType":"YulFunctionCall","src":"90704:31:0"},{"kind":"number","nativeSrc":"90737:42:0","nodeType":"YulLiteral","src":"90737:42:0","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"90700:3:0","nodeType":"YulIdentifier","src":"90700:3:0"},"nativeSrc":"90700:80:0","nodeType":"YulFunctionCall","src":"90700:80:0"},"variableNames":[{"name":"predicted","nativeSrc":"90687:9:0","nodeType":"YulIdentifier","src":"90687:9:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3329,"isOffset":false,"isSlot":false,"src":"90366:8:0","valueSize":1},{"declaration":3325,"isOffset":false,"isSlot":false,"src":"90482:14:0","valueSize":1},{"declaration":3332,"isOffset":false,"isSlot":false,"src":"90687:9:0","valueSize":1},{"declaration":3327,"isOffset":false,"isSlot":false,"src":"90601:4:0","valueSize":1}],"id":3334,"nodeType":"InlineAssembly","src":"90285:505:0"}]},"documentation":{"id":3323,"nodeType":"StructuredDocumentation","src":"89963:99:0","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":3336,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"90076:27:0","nodeType":"FunctionDefinition","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"implementation","nameLocation":"90121:14:0","nodeType":"VariableDeclaration","scope":3336,"src":"90113:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3324,"name":"address","nodeType":"ElementaryTypeName","src":"90113:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"salt","nameLocation":"90153:4:0","nodeType":"VariableDeclaration","scope":3336,"src":"90145:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90145:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"deployer","nameLocation":"90175:8:0","nodeType":"VariableDeclaration","scope":3336,"src":"90167:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3328,"name":"address","nodeType":"ElementaryTypeName","src":"90167:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90103:86:0"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"predicted","nameLocation":"90221:9:0","nodeType":"VariableDeclaration","scope":3336,"src":"90213:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3331,"name":"address","nodeType":"ElementaryTypeName","src":"90213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90212:19:0"},"scope":3357,"src":"90067:729:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3355,"nodeType":"Block","src":"91045:88:0","statements":[{"expression":{"arguments":[{"id":3347,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"91090:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3348,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"91106:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3351,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"91120:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3357","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3357","typeString":"library Clones"}],"id":3350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"91112:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3349,"name":"address","nodeType":"ElementaryTypeName","src":"91112:7:0","typeDescriptions":{}}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"91112:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3346,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[3336,3356],"referencedDeclaration":3336,"src":"91062:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"91062:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3345,"id":3354,"nodeType":"Return","src":"91055:71:0"}]},"documentation":{"id":3337,"nodeType":"StructuredDocumentation","src":"90802:99:0","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":3356,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"90915:27:0","nodeType":"FunctionDefinition","parameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"implementation","nameLocation":"90960:14:0","nodeType":"VariableDeclaration","scope":3356,"src":"90952:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3338,"name":"address","nodeType":"ElementaryTypeName","src":"90952:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3341,"mutability":"mutable","name":"salt","nameLocation":"90992:4:0","nodeType":"VariableDeclaration","scope":3356,"src":"90984:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90984:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"90942:60:0"},"returnParameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"predicted","nameLocation":"91034:9:0","nodeType":"VariableDeclaration","scope":3356,"src":"91026:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3343,"name":"address","nodeType":"ElementaryTypeName","src":"91026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91025:19:0"},"scope":3357,"src":"90906:227:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":10322,"src":"86496:4639:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":3358,"nodeType":"StructuredDocumentation","src":"91296:367:0","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":3452,"linearizedBaseContracts":[3452],"name":"Create2","nameLocation":"91672:7:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3359,"nodeType":"StructuredDocumentation","src":"91686:50:0","text":" @dev There's no code to deploy."},"errorSelector":"4ca249dc","id":3361,"name":"Create2EmptyBytecode","nameLocation":"91747:20:0","nodeType":"ErrorDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[],"src":"91767:2:0"},"src":"91741:29:0"},{"body":{"id":3416,"nodeType":"Block","src":"92442:472:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3375,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"92464:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$3452","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$3452","typeString":"library Create2"}],"id":3374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"92456:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3373,"name":"address","nodeType":"ElementaryTypeName","src":"92456:7:0","typeDescriptions":{}}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"92456:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"92470:7:0","memberName":"balance","nodeType":"MemberAccess","src":"92456:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3378,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"92480:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"92456:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3392,"nodeType":"IfStatement","src":"92452:125:0","trueBody":{"id":3391,"nodeType":"Block","src":"92488:89:0","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3385,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"92544:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$3452","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$3452","typeString":"library Create2"}],"id":3384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"92536:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3383,"name":"address","nodeType":"ElementaryTypeName","src":"92536:7:0","typeDescriptions":{}}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"92536:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"92550:7:0","memberName":"balance","nodeType":"MemberAccess","src":"92536:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3388,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"92559:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3380,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"92509:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$145_$","typeString":"type(library Errors)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"92516:19:0","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":138,"src":"92509:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"92509:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3390,"nodeType":"RevertStatement","src":"92502:64:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3393,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"92590:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"92599:6:0","memberName":"length","nodeType":"MemberAccess","src":"92590:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"92609:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"92590:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3401,"nodeType":"IfStatement","src":"92586:80:0","trueBody":{"id":3400,"nodeType":"Block","src":"92612:54:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3397,"name":"Create2EmptyBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"92633:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"92633:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3399,"nodeType":"RevertStatement","src":"92626:29:0"}]}},{"AST":{"nativeSrc":"92727:91:0","nodeType":"YulBlock","src":"92727:91:0","statements":[{"nativeSrc":"92741:67:0","nodeType":"YulAssignment","src":"92741:67:0","value":{"arguments":[{"name":"amount","nativeSrc":"92757:6:0","nodeType":"YulIdentifier","src":"92757:6:0"},{"arguments":[{"name":"bytecode","nativeSrc":"92769:8:0","nodeType":"YulIdentifier","src":"92769:8:0"},{"kind":"number","nativeSrc":"92779:4:0","nodeType":"YulLiteral","src":"92779:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"92765:3:0","nodeType":"YulIdentifier","src":"92765:3:0"},"nativeSrc":"92765:19:0","nodeType":"YulFunctionCall","src":"92765:19:0"},{"arguments":[{"name":"bytecode","nativeSrc":"92792:8:0","nodeType":"YulIdentifier","src":"92792:8:0"}],"functionName":{"name":"mload","nativeSrc":"92786:5:0","nodeType":"YulIdentifier","src":"92786:5:0"},"nativeSrc":"92786:15:0","nodeType":"YulFunctionCall","src":"92786:15:0"},{"name":"salt","nativeSrc":"92803:4:0","nodeType":"YulIdentifier","src":"92803:4:0"}],"functionName":{"name":"create2","nativeSrc":"92749:7:0","nodeType":"YulIdentifier","src":"92749:7:0"},"nativeSrc":"92749:59:0","nodeType":"YulFunctionCall","src":"92749:59:0"},"variableNames":[{"name":"addr","nativeSrc":"92741:4:0","nodeType":"YulIdentifier","src":"92741:4:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3371,"isOffset":false,"isSlot":false,"src":"92741:4:0","valueSize":1},{"declaration":3364,"isOffset":false,"isSlot":false,"src":"92757:6:0","valueSize":1},{"declaration":3368,"isOffset":false,"isSlot":false,"src":"92769:8:0","valueSize":1},{"declaration":3368,"isOffset":false,"isSlot":false,"src":"92792:8:0","valueSize":1},{"declaration":3366,"isOffset":false,"isSlot":false,"src":"92803:4:0","valueSize":1}],"id":3402,"nodeType":"InlineAssembly","src":"92718:100:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"92831:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"92847:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"92839:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3404,"name":"address","nodeType":"ElementaryTypeName","src":"92839:7:0","typeDescriptions":{}}},"id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"92839:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"92831:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3415,"nodeType":"IfStatement","src":"92827:81:0","trueBody":{"id":3414,"nodeType":"Block","src":"92851:57:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3409,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"92872:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$145_$","typeString":"type(library Errors)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"92879:16:0","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":144,"src":"92872:23:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"92872:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3413,"nodeType":"RevertStatement","src":"92865:32:0"}]}}]},"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"91776:560:0","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":3417,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"92350:6:0","nodeType":"FunctionDefinition","parameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"amount","nameLocation":"92365:6:0","nodeType":"VariableDeclaration","scope":3417,"src":"92357:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"92357:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3366,"mutability":"mutable","name":"salt","nameLocation":"92381:4:0","nodeType":"VariableDeclaration","scope":3417,"src":"92373:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92373:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"bytecode","nameLocation":"92400:8:0","nodeType":"VariableDeclaration","scope":3417,"src":"92387:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3367,"name":"bytes","nodeType":"ElementaryTypeName","src":"92387:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92356:53:0"},"returnParameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"addr","nameLocation":"92436:4:0","nodeType":"VariableDeclaration","scope":3417,"src":"92428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3370,"name":"address","nodeType":"ElementaryTypeName","src":"92428:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92427:14:0"},"scope":3452,"src":"92341:573:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3436,"nodeType":"Block","src":"93210:73:0","statements":[{"expression":{"arguments":[{"id":3428,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"93242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3429,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"93248:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3432,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"93270:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$3452","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$3452","typeString":"library Create2"}],"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"93262:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3430,"name":"address","nodeType":"ElementaryTypeName","src":"93262:7:0","typeDescriptions":{}}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"93262:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3427,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[3437,3451],"referencedDeclaration":3451,"src":"93227:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"93227:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3426,"id":3435,"nodeType":"Return","src":"93220:56:0"}]},"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"92920:193:0","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":3437,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"93127:14:0","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"salt","nameLocation":"93150:4:0","nodeType":"VariableDeclaration","scope":3437,"src":"93142:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"93142:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"bytecodeHash","nameLocation":"93164:12:0","nodeType":"VariableDeclaration","scope":3437,"src":"93156:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"93156:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"93141:36:0"},"returnParameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3437,"src":"93201:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3424,"name":"address","nodeType":"ElementaryTypeName","src":"93201:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"93200:9:0"},"scope":3452,"src":"93118:165:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3450,"nodeType":"Block","src":"93641:1706:0","statements":[{"AST":{"nativeSrc":"93703:1638:0","nodeType":"YulBlock","src":"93703:1638:0","statements":[{"nativeSrc":"93717:22:0","nodeType":"YulVariableDeclaration","src":"93717:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"93734:4:0","nodeType":"YulLiteral","src":"93734:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"93728:5:0","nodeType":"YulIdentifier","src":"93728:5:0"},"nativeSrc":"93728:11:0","nodeType":"YulFunctionCall","src":"93728:11:0"},"variables":[{"name":"ptr","nativeSrc":"93721:3:0","nodeType":"YulTypedName","src":"93721:3:0","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"94941:3:0","nodeType":"YulIdentifier","src":"94941:3:0"},{"kind":"number","nativeSrc":"94946:4:0","nodeType":"YulLiteral","src":"94946:4:0","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"94937:3:0","nodeType":"YulIdentifier","src":"94937:3:0"},"nativeSrc":"94937:14:0","nodeType":"YulFunctionCall","src":"94937:14:0"},{"name":"bytecodeHash","nativeSrc":"94953:12:0","nodeType":"YulIdentifier","src":"94953:12:0"}],"functionName":{"name":"mstore","nativeSrc":"94930:6:0","nodeType":"YulIdentifier","src":"94930:6:0"},"nativeSrc":"94930:36:0","nodeType":"YulFunctionCall","src":"94930:36:0"},"nativeSrc":"94930:36:0","nodeType":"YulExpressionStatement","src":"94930:36:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"94990:3:0","nodeType":"YulIdentifier","src":"94990:3:0"},{"kind":"number","nativeSrc":"94995:4:0","nodeType":"YulLiteral","src":"94995:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"94986:3:0","nodeType":"YulIdentifier","src":"94986:3:0"},"nativeSrc":"94986:14:0","nodeType":"YulFunctionCall","src":"94986:14:0"},{"name":"salt","nativeSrc":"95002:4:0","nodeType":"YulIdentifier","src":"95002:4:0"}],"functionName":{"name":"mstore","nativeSrc":"94979:6:0","nodeType":"YulIdentifier","src":"94979:6:0"},"nativeSrc":"94979:28:0","nodeType":"YulFunctionCall","src":"94979:28:0"},"nativeSrc":"94979:28:0","nodeType":"YulExpressionStatement","src":"94979:28:0"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"95027:3:0","nodeType":"YulIdentifier","src":"95027:3:0"},{"name":"deployer","nativeSrc":"95032:8:0","nodeType":"YulIdentifier","src":"95032:8:0"}],"functionName":{"name":"mstore","nativeSrc":"95020:6:0","nodeType":"YulIdentifier","src":"95020:6:0"},"nativeSrc":"95020:21:0","nodeType":"YulFunctionCall","src":"95020:21:0"},"nativeSrc":"95020:21:0","nodeType":"YulExpressionStatement","src":"95020:21:0"},{"nativeSrc":"95103:27:0","nodeType":"YulVariableDeclaration","src":"95103:27:0","value":{"arguments":[{"name":"ptr","nativeSrc":"95120:3:0","nodeType":"YulIdentifier","src":"95120:3:0"},{"kind":"number","nativeSrc":"95125:4:0","nodeType":"YulLiteral","src":"95125:4:0","type":"","value":"0x0b"}],"functionName":{"name":"add","nativeSrc":"95116:3:0","nodeType":"YulIdentifier","src":"95116:3:0"},"nativeSrc":"95116:14:0","nodeType":"YulFunctionCall","src":"95116:14:0"},"variables":[{"name":"start","nativeSrc":"95107:5:0","nodeType":"YulTypedName","src":"95107:5:0","type":""}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"95229:5:0","nodeType":"YulIdentifier","src":"95229:5:0"},{"kind":"number","nativeSrc":"95236:4:0","nodeType":"YulLiteral","src":"95236:4:0","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nativeSrc":"95221:7:0","nodeType":"YulIdentifier","src":"95221:7:0"},"nativeSrc":"95221:20:0","nodeType":"YulFunctionCall","src":"95221:20:0"},"nativeSrc":"95221:20:0","nodeType":"YulExpressionStatement","src":"95221:20:0"},{"nativeSrc":"95254:77:0","nodeType":"YulAssignment","src":"95254:77:0","value":{"arguments":[{"arguments":[{"name":"start","nativeSrc":"95276:5:0","nodeType":"YulIdentifier","src":"95276:5:0"},{"kind":"number","nativeSrc":"95283:2:0","nodeType":"YulLiteral","src":"95283:2:0","type":"","value":"85"}],"functionName":{"name":"keccak256","nativeSrc":"95266:9:0","nodeType":"YulIdentifier","src":"95266:9:0"},"nativeSrc":"95266:20:0","nodeType":"YulFunctionCall","src":"95266:20:0"},{"kind":"number","nativeSrc":"95288:42:0","nodeType":"YulLiteral","src":"95288:42:0","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"95262:3:0","nodeType":"YulIdentifier","src":"95262:3:0"},"nativeSrc":"95262:69:0","nodeType":"YulFunctionCall","src":"95262:69:0"},"variableNames":[{"name":"addr","nativeSrc":"95254:4:0","nodeType":"YulIdentifier","src":"95254:4:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3447,"isOffset":false,"isSlot":false,"src":"95254:4:0","valueSize":1},{"declaration":3442,"isOffset":false,"isSlot":false,"src":"94953:12:0","valueSize":1},{"declaration":3444,"isOffset":false,"isSlot":false,"src":"95032:8:0","valueSize":1},{"declaration":3440,"isOffset":false,"isSlot":false,"src":"95002:4:0","valueSize":1}],"id":3449,"nodeType":"InlineAssembly","src":"93694:1647:0"}]},"documentation":{"id":3438,"nodeType":"StructuredDocumentation","src":"93289:232:0","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":3451,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"93535:14:0","nodeType":"FunctionDefinition","parameters":{"id":3445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"salt","nameLocation":"93558:4:0","nodeType":"VariableDeclaration","scope":3451,"src":"93550:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"93550:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3442,"mutability":"mutable","name":"bytecodeHash","nameLocation":"93572:12:0","nodeType":"VariableDeclaration","scope":3451,"src":"93564:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"93564:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3444,"mutability":"mutable","name":"deployer","nameLocation":"93594:8:0","nodeType":"VariableDeclaration","scope":3451,"src":"93586:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3443,"name":"address","nodeType":"ElementaryTypeName","src":"93586:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"93549:54:0"},"returnParameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3447,"mutability":"mutable","name":"addr","nameLocation":"93635:4:0","nodeType":"VariableDeclaration","scope":3451,"src":"93627:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3446,"name":"address","nodeType":"ElementaryTypeName","src":"93627:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"93626:14:0"},"scope":3452,"src":"93526:1821:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"91664:3685:0","usedErrors":[3361],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":3454,"name":"IERC20","nameLocations":["95674:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"95674:6:0"},"id":3455,"nodeType":"InheritanceSpecifier","src":"95674:6:0"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3453,"nodeType":"StructuredDocumentation","src":"95558:87:0","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":3474,"linearizedBaseContracts":[3474,379],"name":"IERC20Metadata","nameLocation":"95656:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3456,"nodeType":"StructuredDocumentation","src":"95687:54:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":3461,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"95755:4:0","nodeType":"FunctionDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[],"src":"95759:2:0"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3461,"src":"95785:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3458,"name":"string","nodeType":"ElementaryTypeName","src":"95785:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95784:15:0"},"scope":3474,"src":"95746:54:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3462,"nodeType":"StructuredDocumentation","src":"95806:56:0","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":3467,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"95876:6:0","nodeType":"FunctionDefinition","parameters":{"id":3463,"nodeType":"ParameterList","parameters":[],"src":"95882:2:0"},"returnParameters":{"id":3466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3467,"src":"95908:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3464,"name":"string","nodeType":"ElementaryTypeName","src":"95908:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95907:15:0"},"scope":3474,"src":"95867:56:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3468,"nodeType":"StructuredDocumentation","src":"95929:65:0","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":3473,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"96008:8:0","nodeType":"FunctionDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[],"src":"96016:2:0"},"returnParameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3473,"src":"96042:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3470,"name":"uint8","nodeType":"ElementaryTypeName","src":"96042:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"96041:7:0"},"scope":3474,"src":"95999:50:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10322,"src":"95646:405:0","usedErrors":[],"usedEvents":[313,322]},{"abstract":false,"baseContracts":[],"canonicalName":"IFeeBankCharger","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3510,"linearizedBaseContracts":[3510],"name":"IFeeBankCharger","nameLocation":"96166:15:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"96188:125:0","text":" @notice Returns the instance of the FeeBank contract.\n @return The instance of the FeeBank contract."},"functionSelector":"2ce26aeb","id":3481,"implemented":false,"kind":"function","modifiers":[],"name":"FEE_BANK","nameLocation":"96327:8:0","nodeType":"FunctionDefinition","parameters":{"id":3476,"nodeType":"ParameterList","parameters":[],"src":"96335:2:0"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"96361:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBank_$510","typeString":"contract IFeeBank"},"typeName":{"id":3478,"nodeType":"UserDefinedTypeName","pathNode":{"id":3477,"name":"IFeeBank","nameLocations":["96361:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":510,"src":"96361:8:0"},"referencedDeclaration":510,"src":"96361:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBank_$510","typeString":"contract IFeeBank"}},"visibility":"internal"}],"src":"96360:10:0"},"scope":3510,"src":"96318:53:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"96421:234:0","text":" @notice Returns the available credit for a given account.\n @param account The address of the account for which the available credit is being queried.\n @return The available credit of the queried account."},"functionSelector":"5886216f","id":3489,"implemented":false,"kind":"function","modifiers":[],"name":"availableCredit","nameLocation":"96669:15:0","nodeType":"FunctionDefinition","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"account","nameLocation":"96693:7:0","nodeType":"VariableDeclaration","scope":3489,"src":"96685:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3483,"name":"address","nodeType":"ElementaryTypeName","src":"96685:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96684:17:0"},"returnParameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3489,"src":"96725:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"96725:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96724:9:0"},"scope":3510,"src":"96660:74:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3490,"nodeType":"StructuredDocumentation","src":"96740:360:0","text":" @notice Increases the available credit of a given account by a specified amount.\n @param account The address of the account for which the available credit is being increased.\n @param amount The amount by which the available credit will be increased.\n @return allowance The updated available credit of the specified account."},"functionSelector":"3ee5ef1f","id":3499,"implemented":false,"kind":"function","modifiers":[],"name":"increaseAvailableCredit","nameLocation":"97114:23:0","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"account","nameLocation":"97146:7:0","nodeType":"VariableDeclaration","scope":3499,"src":"97138:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3491,"name":"address","nodeType":"ElementaryTypeName","src":"97138:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"amount","nameLocation":"97163:6:0","nodeType":"VariableDeclaration","scope":3499,"src":"97155:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"97155:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97137:33:0"},"returnParameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"mutability":"mutable","name":"allowance","nameLocation":"97197:9:0","nodeType":"VariableDeclaration","scope":3499,"src":"97189:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"97189:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97188:19:0"},"scope":3510,"src":"97105:103:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3500,"nodeType":"StructuredDocumentation","src":"97214:360:0","text":" @notice Decreases the available credit of a given account by a specified amount.\n @param account The address of the account for which the available credit is being decreased.\n @param amount The amount by which the available credit will be decreased.\n @return allowance The updated available credit of the specified account."},"functionSelector":"85eda2de","id":3509,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseAvailableCredit","nameLocation":"97588:23:0","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"account","nameLocation":"97620:7:0","nodeType":"VariableDeclaration","scope":3509,"src":"97612:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3501,"name":"address","nodeType":"ElementaryTypeName","src":"97612:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"amount","nameLocation":"97637:6:0","nodeType":"VariableDeclaration","scope":3509,"src":"97629:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"97629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97611:33:0"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"allowance","nameLocation":"97671:9:0","nodeType":"VariableDeclaration","scope":3509,"src":"97663:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"97663:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97662:19:0"},"scope":3510,"src":"97579:103:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"96156:1528:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":3512,"name":"IERC20","nameLocations":["97864:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"97864:6:0"},"id":3513,"nodeType":"InheritanceSpecifier","src":"97864:6:0"}],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","documentation":{"id":3511,"nodeType":"StructuredDocumentation","src":"97771:73:0","text":" @title IWETH\n @dev Interface for wrapper as WETH-like token."},"fullyImplemented":false,"id":3538,"linearizedBaseContracts":[3538,379],"name":"IWETH","nameLocation":"97855:5:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3514,"nodeType":"StructuredDocumentation","src":"97877:81:0","text":" @notice Emitted when Ether is deposited to get wrapper tokens."},"eventSelector":"e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c","id":3520,"name":"Deposit","nameLocation":"97969:7:0","nodeType":"EventDefinition","parameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"indexed":true,"mutability":"mutable","name":"dst","nameLocation":"97993:3:0","nodeType":"VariableDeclaration","scope":3520,"src":"97977:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3515,"name":"address","nodeType":"ElementaryTypeName","src":"97977:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3518,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"98006:3:0","nodeType":"VariableDeclaration","scope":3520,"src":"97998:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"97998:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97976:34:0"},"src":"97963:48:0"},{"anonymous":false,"documentation":{"id":3521,"nodeType":"StructuredDocumentation","src":"98017:77:0","text":" @notice Emitted when wrapper tokens is withdrawn as Ether."},"eventSelector":"7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65","id":3527,"name":"Withdrawal","nameLocation":"98105:10:0","nodeType":"EventDefinition","parameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"indexed":true,"mutability":"mutable","name":"src","nameLocation":"98132:3:0","nodeType":"VariableDeclaration","scope":3527,"src":"98116:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3522,"name":"address","nodeType":"ElementaryTypeName","src":"98116:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3525,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"98145:3:0","nodeType":"VariableDeclaration","scope":3527,"src":"98137:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"98137:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98115:34:0"},"src":"98099:51:0"},{"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"98156:63:0","text":" @notice Deposit Ether to get wrapper tokens."},"functionSelector":"d0e30db0","id":3531,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"98233:7:0","nodeType":"FunctionDefinition","parameters":{"id":3529,"nodeType":"ParameterList","parameters":[],"src":"98240:2:0"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[],"src":"98259:0:0"},"scope":3538,"src":"98224:36:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3532,"nodeType":"StructuredDocumentation","src":"98266:119:0","text":" @notice Withdraw wrapped tokens as Ether.\n @param amount Amount of wrapped tokens to withdraw."},"functionSelector":"2e1a7d4d","id":3537,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"98399:8:0","nodeType":"FunctionDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"amount","nameLocation":"98416:6:0","nodeType":"VariableDeclaration","scope":3537,"src":"98408:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"98408:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98407:16:0"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[],"src":"98432:0:0"},"scope":3538,"src":"98390:43:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"97845:590:0","usedErrors":[],"usedEvents":[313,322,3520,3527]},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":3539,"nodeType":"StructuredDocumentation","src":"98630:658:0","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":4041,"linearizedBaseContracts":[4041],"name":"MerkleProof","nameLocation":"99297:11:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3540,"nodeType":"StructuredDocumentation","src":"99315:60:0","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":3542,"name":"MerkleProofInvalidMultiproof","nameLocation":"99386:28:0","nodeType":"ErrorDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[],"src":"99414:2:0"},"src":"99380:37:0"},{"body":{"id":3562,"nodeType":"Block","src":"99848:57:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3556,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"99878:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3557,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"99885:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3555,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"99865:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"99865:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3559,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"99894:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"99865:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3554,"id":3561,"nodeType":"Return","src":"99858:40:0"}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"99423:323:0","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":3563,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"99760:6:0","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3546,"mutability":"mutable","name":"proof","nameLocation":"99784:5:0","nodeType":"VariableDeclaration","scope":3563,"src":"99767:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"99767:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3545,"nodeType":"ArrayTypeName","src":"99767:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"root","nameLocation":"99799:4:0","nodeType":"VariableDeclaration","scope":3563,"src":"99791:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"99791:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"leaf","nameLocation":"99813:4:0","nodeType":"VariableDeclaration","scope":3563,"src":"99805:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"99805:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"99766:52:0"},"returnParameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3563,"src":"99842:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3552,"name":"bool","nodeType":"ElementaryTypeName","src":"99842:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"99841:6:0"},"scope":4041,"src":"99751:154:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3583,"nodeType":"Block","src":"100075:65:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3577,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"100113:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3578,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"100120:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3576,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"100092:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"100092:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3580,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"100129:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"100092:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3575,"id":3582,"nodeType":"Return","src":"100085:48:0"}]},"documentation":{"id":3564,"nodeType":"StructuredDocumentation","src":"99911:52:0","text":" @dev Calldata version of {verify}"},"id":3584,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"99977:14:0","nodeType":"FunctionDefinition","parameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3567,"mutability":"mutable","name":"proof","nameLocation":"100011:5:0","nodeType":"VariableDeclaration","scope":3584,"src":"99992:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"99992:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3566,"nodeType":"ArrayTypeName","src":"99992:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3569,"mutability":"mutable","name":"root","nameLocation":"100026:4:0","nodeType":"VariableDeclaration","scope":3584,"src":"100018:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100018:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3571,"mutability":"mutable","name":"leaf","nameLocation":"100040:4:0","nodeType":"VariableDeclaration","scope":3584,"src":"100032:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100032:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"99991:54:0"},"returnParameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3584,"src":"100069:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3573,"name":"bool","nodeType":"ElementaryTypeName","src":"100069:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"100068:6:0"},"scope":4041,"src":"99968:172:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"100545:216:0","statements":[{"assignments":[3596],"declarations":[{"constant":false,"id":3596,"mutability":"mutable","name":"computedHash","nameLocation":"100563:12:0","nodeType":"VariableDeclaration","scope":3624,"src":"100555:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100555:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3598,"initialValue":{"id":3597,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"100578:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"100555:27:0"},{"body":{"id":3620,"nodeType":"Block","src":"100635:91:0","statements":[{"expression":{"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3610,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"100649:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3613,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"100692:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3614,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"100706:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3616,"indexExpression":{"id":3615,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"100712:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"100706:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3611,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"100664:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$281_$","typeString":"type(library Hashes)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"100671:20:0","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":268,"src":"100664:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"100664:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"100649:66:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3619,"nodeType":"ExpressionStatement","src":"100649:66:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3603,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"100612:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3604,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"100616:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"100622:6:0","memberName":"length","nodeType":"MemberAccess","src":"100616:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"100612:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3621,"initializationExpression":{"assignments":[3600],"declarations":[{"constant":false,"id":3600,"mutability":"mutable","name":"i","nameLocation":"100605:1:0","nodeType":"VariableDeclaration","scope":3621,"src":"100597:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3599,"name":"uint256","nodeType":"ElementaryTypeName","src":"100597:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3602,"initialValue":{"hexValue":"30","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"100609:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"100597:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"100630:3:0","subExpression":{"id":3607,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"100630:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3609,"nodeType":"ExpressionStatement","src":"100630:3:0"},"nodeType":"ForStatement","src":"100592:134:0"},{"expression":{"id":3622,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"100742:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3594,"id":3623,"nodeType":"Return","src":"100735:19:0"}]},"documentation":{"id":3585,"nodeType":"StructuredDocumentation","src":"100146:302:0","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted."},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"100462:12:0","nodeType":"FunctionDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"proof","nameLocation":"100492:5:0","nodeType":"VariableDeclaration","scope":3625,"src":"100475:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100475:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3587,"nodeType":"ArrayTypeName","src":"100475:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"leaf","nameLocation":"100507:4:0","nodeType":"VariableDeclaration","scope":3625,"src":"100499:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100499:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"100474:38:0"},"returnParameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3625,"src":"100536:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100536:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"100535:9:0"},"scope":4041,"src":"100453:308:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3665,"nodeType":"Block","src":"100932:216:0","statements":[{"assignments":[3637],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"computedHash","nameLocation":"100950:12:0","nodeType":"VariableDeclaration","scope":3665,"src":"100942:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100942:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3639,"initialValue":{"id":3638,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"100965:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"100942:27:0"},{"body":{"id":3661,"nodeType":"Block","src":"101022:91:0","statements":[{"expression":{"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3651,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"101036:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3654,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"101079:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3655,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"101093:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3657,"indexExpression":{"id":3656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"101099:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"101093:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3652,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"101051:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$281_$","typeString":"type(library Hashes)"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"101058:20:0","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":268,"src":"101051:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"101051:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"101036:66:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3660,"nodeType":"ExpressionStatement","src":"101036:66:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3644,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"100999:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3645,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"101003:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"101009:6:0","memberName":"length","nodeType":"MemberAccess","src":"101003:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"100999:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3662,"initializationExpression":{"assignments":[3641],"declarations":[{"constant":false,"id":3641,"mutability":"mutable","name":"i","nameLocation":"100992:1:0","nodeType":"VariableDeclaration","scope":3662,"src":"100984:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"100984:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3643,"initialValue":{"hexValue":"30","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"100996:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"100984:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"101017:3:0","subExpression":{"id":3648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"101017:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3650,"nodeType":"ExpressionStatement","src":"101017:3:0"},"nodeType":"ForStatement","src":"100979:134:0"},{"expression":{"id":3663,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"101129:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3635,"id":3664,"nodeType":"Return","src":"101122:19:0"}]},"documentation":{"id":3626,"nodeType":"StructuredDocumentation","src":"100767:58:0","text":" @dev Calldata version of {processProof}"},"id":3666,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"100839:20:0","nodeType":"FunctionDefinition","parameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"mutability":"mutable","name":"proof","nameLocation":"100879:5:0","nodeType":"VariableDeclaration","scope":3666,"src":"100860:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100860:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3628,"nodeType":"ArrayTypeName","src":"100860:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"leaf","nameLocation":"100894:4:0","nodeType":"VariableDeclaration","scope":3666,"src":"100886:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100886:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"100859:40:0"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3666,"src":"100923:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100923:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"100922:9:0"},"scope":4041,"src":"100830:318:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3691,"nodeType":"Block","src":"101653:76:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3684,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"101688:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3685,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"101695:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":3686,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"101707:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3683,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"101670:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"101670:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3688,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"101718:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"101670:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3682,"id":3690,"nodeType":"Return","src":"101663:59:0"}]},"documentation":{"id":3667,"nodeType":"StructuredDocumentation","src":"101154:312:0","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":3692,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"101480:16:0","nodeType":"FunctionDefinition","parameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"proof","nameLocation":"101523:5:0","nodeType":"VariableDeclaration","scope":3692,"src":"101506:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101506:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3669,"nodeType":"ArrayTypeName","src":"101506:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"proofFlags","nameLocation":"101552:10:0","nodeType":"VariableDeclaration","scope":3692,"src":"101538:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3671,"name":"bool","nodeType":"ElementaryTypeName","src":"101538:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3672,"nodeType":"ArrayTypeName","src":"101538:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"root","nameLocation":"101580:4:0","nodeType":"VariableDeclaration","scope":3692,"src":"101572:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101572:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3678,"mutability":"mutable","name":"leaves","nameLocation":"101611:6:0","nodeType":"VariableDeclaration","scope":3692,"src":"101594:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101594:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3677,"nodeType":"ArrayTypeName","src":"101594:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"101496:127:0"},"returnParameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3692,"src":"101647:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3680,"name":"bool","nodeType":"ElementaryTypeName","src":"101647:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"101646:6:0"},"scope":4041,"src":"101471:258:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3717,"nodeType":"Block","src":"102096:84:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3710,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"102139:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3711,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"102146:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":3712,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"102158:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3709,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"102113:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102113:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3714,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"102169:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"102113:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3708,"id":3716,"nodeType":"Return","src":"102106:67:0"}]},"documentation":{"id":3693,"nodeType":"StructuredDocumentation","src":"101735:162:0","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":3718,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"101911:24:0","nodeType":"FunctionDefinition","parameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3696,"mutability":"mutable","name":"proof","nameLocation":"101964:5:0","nodeType":"VariableDeclaration","scope":3718,"src":"101945:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101945:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3695,"nodeType":"ArrayTypeName","src":"101945:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3699,"mutability":"mutable","name":"proofFlags","nameLocation":"101995:10:0","nodeType":"VariableDeclaration","scope":3718,"src":"101979:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3697,"name":"bool","nodeType":"ElementaryTypeName","src":"101979:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3698,"nodeType":"ArrayTypeName","src":"101979:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3701,"mutability":"mutable","name":"root","nameLocation":"102023:4:0","nodeType":"VariableDeclaration","scope":3718,"src":"102015:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"102015:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"leaves","nameLocation":"102054:6:0","nodeType":"VariableDeclaration","scope":3718,"src":"102037:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"102037:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3703,"nodeType":"ArrayTypeName","src":"102037:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"101935:131:0"},"returnParameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3718,"src":"102090:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3706,"name":"bool","nodeType":"ElementaryTypeName","src":"102090:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"102089:6:0"},"scope":4041,"src":"101902:278:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3878,"nodeType":"Block","src":"103096:2125:0","statements":[{"assignments":[3734],"declarations":[{"constant":false,"id":3734,"mutability":"mutable","name":"leavesLen","nameLocation":"103488:9:0","nodeType":"VariableDeclaration","scope":3878,"src":"103480:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"103480:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3737,"initialValue":{"expression":{"id":3735,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"103500:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"103507:6:0","memberName":"length","nodeType":"MemberAccess","src":"103500:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"103480:33:0"},{"assignments":[3739],"declarations":[{"constant":false,"id":3739,"mutability":"mutable","name":"proofLen","nameLocation":"103531:8:0","nodeType":"VariableDeclaration","scope":3878,"src":"103523:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"103523:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3742,"initialValue":{"expression":{"id":3740,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"103542:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"103548:6:0","memberName":"length","nodeType":"MemberAccess","src":"103542:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"103523:31:0"},{"assignments":[3744],"declarations":[{"constant":false,"id":3744,"mutability":"mutable","name":"totalHashes","nameLocation":"103572:11:0","nodeType":"VariableDeclaration","scope":3878,"src":"103564:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"103564:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3747,"initialValue":{"expression":{"id":3745,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"103586:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"103597:6:0","memberName":"length","nodeType":"MemberAccess","src":"103586:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"103564:39:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3748,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"103651:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3749,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"103663:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"103651:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"103675:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"103689:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"103675:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"103651:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3759,"nodeType":"IfStatement","src":"103647:107:0","trueBody":{"id":3758,"nodeType":"Block","src":"103692:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3755,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"103713:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"103713:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3757,"nodeType":"RevertStatement","src":"103706:37:0"}]}},{"assignments":[3764],"declarations":[{"constant":false,"id":3764,"mutability":"mutable","name":"hashes","nameLocation":"104015:6:0","nodeType":"VariableDeclaration","scope":3878,"src":"103998:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"103998:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3763,"nodeType":"ArrayTypeName","src":"103998:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3770,"initialValue":{"arguments":[{"id":3768,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"104038:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"104024:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104028:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3766,"nodeType":"ArrayTypeName","src":"104028:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"104024:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"103998:52:0"},{"assignments":[3772],"declarations":[{"constant":false,"id":3772,"mutability":"mutable","name":"leafPos","nameLocation":"104068:7:0","nodeType":"VariableDeclaration","scope":3878,"src":"104060:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"104060:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3774,"initialValue":{"hexValue":"30","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"104078:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"104060:19:0"},{"assignments":[3776],"declarations":[{"constant":false,"id":3776,"mutability":"mutable","name":"hashPos","nameLocation":"104097:7:0","nodeType":"VariableDeclaration","scope":3878,"src":"104089:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"104089:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3778,"initialValue":{"hexValue":"30","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"104107:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"104089:19:0"},{"assignments":[3780],"declarations":[{"constant":false,"id":3780,"mutability":"mutable","name":"proofPos","nameLocation":"104126:8:0","nodeType":"VariableDeclaration","scope":3878,"src":"104118:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"104118:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3782,"initialValue":{"hexValue":"30","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"104137:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"104118:20:0"},{"body":{"id":3842,"nodeType":"Block","src":"104556:310:0","statements":[{"assignments":[3794],"declarations":[{"constant":false,"id":3794,"mutability":"mutable","name":"a","nameLocation":"104578:1:0","nodeType":"VariableDeclaration","scope":3842,"src":"104570:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104570:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3807,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"104582:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3796,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"104592:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"104582:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3802,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"104624:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3805,"indexExpression":{"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"104631:9:0","subExpression":{"id":3803,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"104631:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"104624:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"104582:59:0","trueExpression":{"baseExpression":{"id":3798,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"104604:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3801,"indexExpression":{"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"104611:9:0","subExpression":{"id":3799,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"104611:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"104604:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"104570:71:0"},{"assignments":[3809],"declarations":[{"constant":false,"id":3809,"mutability":"mutable","name":"b","nameLocation":"104663:1:0","nodeType":"VariableDeclaration","scope":3842,"src":"104655:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104655:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3831,"initialValue":{"condition":{"baseExpression":{"id":3810,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"104667:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3812,"indexExpression":{"id":3811,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"104678:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"104667:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3826,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"104779:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3829,"indexExpression":{"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"104785:10:0","subExpression":{"id":3827,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"104785:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"104779:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"104667:129:0","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"104700:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3814,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"104710:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"104700:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3820,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"104742:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3823,"indexExpression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"104749:9:0","subExpression":{"id":3821,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"104749:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"104742:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"104700:59:0","trueExpression":{"baseExpression":{"id":3816,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"104722:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3819,"indexExpression":{"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"104729:9:0","subExpression":{"id":3817,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"104729:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"104722:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"104699:61:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"104655:141:0"},{"expression":{"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3832,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"104810:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3834,"indexExpression":{"id":3833,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"104817:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"104810:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"104850:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3838,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"104853:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3835,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"104822:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$281_$","typeString":"type(library Hashes)"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"104829:20:0","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":268,"src":"104822:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"104822:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"104810:45:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3841,"nodeType":"ExpressionStatement","src":"104810:45:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"104534:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3788,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"104538:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"104534:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3843,"initializationExpression":{"assignments":[3784],"declarations":[{"constant":false,"id":3784,"mutability":"mutable","name":"i","nameLocation":"104527:1:0","nodeType":"VariableDeclaration","scope":3843,"src":"104519:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"104519:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3786,"initialValue":{"hexValue":"30","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"104531:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"104519:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"104551:3:0","subExpression":{"id":3790,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"104551:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3792,"nodeType":"ExpressionStatement","src":"104551:3:0"},"nodeType":"ForStatement","src":"104514:352:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3844,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"104880:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"104894:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"104880:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"105113:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"105125:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"105113:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3875,"nodeType":"Block","src":"105175:40:0","statements":[{"expression":{"baseExpression":{"id":3871,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"105196:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3873,"indexExpression":{"hexValue":"30","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"105202:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"105196:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3732,"id":3874,"nodeType":"Return","src":"105189:15:0"}]},"id":3876,"nodeType":"IfStatement","src":"105109:106:0","trueBody":{"id":3870,"nodeType":"Block","src":"105128:41:0","statements":[{"expression":{"baseExpression":{"id":3866,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"105149:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3868,"indexExpression":{"hexValue":"30","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"105156:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"105149:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3732,"id":3869,"nodeType":"Return","src":"105142:16:0"}]}},"id":3877,"nodeType":"IfStatement","src":"104876:339:0","trueBody":{"id":3862,"nodeType":"Block","src":"104897:206:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3847,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"104915:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3848,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"104927:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"104915:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3854,"nodeType":"IfStatement","src":"104911:96:0","trueBody":{"id":3853,"nodeType":"Block","src":"104937:70:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3850,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"104962:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"104962:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3852,"nodeType":"RevertStatement","src":"104955:37:0"}]}},{"id":3861,"nodeType":"UncheckedBlock","src":"105020:73:0","statements":[{"expression":{"baseExpression":{"id":3855,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"105055:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3859,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3856,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"105062:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"105076:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"105062:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"105055:23:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3732,"id":3860,"nodeType":"Return","src":"105048:30:0"}]}]}}]},"documentation":{"id":3719,"nodeType":"StructuredDocumentation","src":"102186:730:0","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer)."},"id":3879,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"102930:17:0","nodeType":"FunctionDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"proof","nameLocation":"102974:5:0","nodeType":"VariableDeclaration","scope":3879,"src":"102957:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"102957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3721,"nodeType":"ArrayTypeName","src":"102957:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"proofFlags","nameLocation":"103003:10:0","nodeType":"VariableDeclaration","scope":3879,"src":"102989:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3723,"name":"bool","nodeType":"ElementaryTypeName","src":"102989:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"ArrayTypeName","src":"102989:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"leaves","nameLocation":"103040:6:0","nodeType":"VariableDeclaration","scope":3879,"src":"103023:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"103023:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3727,"nodeType":"ArrayTypeName","src":"103023:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"102947:105:0"},"returnParameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"merkleRoot","nameLocation":"103084:10:0","nodeType":"VariableDeclaration","scope":3879,"src":"103076:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"103076:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"103075:20:0"},"scope":4041,"src":"102921:2300:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4039,"nodeType":"Block","src":"105583:2125:0","statements":[{"assignments":[3895],"declarations":[{"constant":false,"id":3895,"mutability":"mutable","name":"leavesLen","nameLocation":"105975:9:0","nodeType":"VariableDeclaration","scope":4039,"src":"105967:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"105967:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3898,"initialValue":{"expression":{"id":3896,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"105987:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"105994:6:0","memberName":"length","nodeType":"MemberAccess","src":"105987:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"105967:33:0"},{"assignments":[3900],"declarations":[{"constant":false,"id":3900,"mutability":"mutable","name":"proofLen","nameLocation":"106018:8:0","nodeType":"VariableDeclaration","scope":4039,"src":"106010:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"106010:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3903,"initialValue":{"expression":{"id":3901,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"106029:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"106035:6:0","memberName":"length","nodeType":"MemberAccess","src":"106029:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"106010:31:0"},{"assignments":[3905],"declarations":[{"constant":false,"id":3905,"mutability":"mutable","name":"totalHashes","nameLocation":"106059:11:0","nodeType":"VariableDeclaration","scope":4039,"src":"106051:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"106051:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3908,"initialValue":{"expression":{"id":3906,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"106073:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"106084:6:0","memberName":"length","nodeType":"MemberAccess","src":"106073:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"106051:39:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3909,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"106138:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3910,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"106150:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"106138:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3912,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"106162:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"106176:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"106162:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"106138:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3920,"nodeType":"IfStatement","src":"106134:107:0","trueBody":{"id":3919,"nodeType":"Block","src":"106179:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3916,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"106200:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"106200:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3918,"nodeType":"RevertStatement","src":"106193:37:0"}]}},{"assignments":[3925],"declarations":[{"constant":false,"id":3925,"mutability":"mutable","name":"hashes","nameLocation":"106502:6:0","nodeType":"VariableDeclaration","scope":4039,"src":"106485:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"106485:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3924,"nodeType":"ArrayTypeName","src":"106485:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3931,"initialValue":{"arguments":[{"id":3929,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"106525:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"106511:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"106515:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3927,"nodeType":"ArrayTypeName","src":"106515:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"106511:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"106485:52:0"},{"assignments":[3933],"declarations":[{"constant":false,"id":3933,"mutability":"mutable","name":"leafPos","nameLocation":"106555:7:0","nodeType":"VariableDeclaration","scope":4039,"src":"106547:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3932,"name":"uint256","nodeType":"ElementaryTypeName","src":"106547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3935,"initialValue":{"hexValue":"30","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"106565:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"106547:19:0"},{"assignments":[3937],"declarations":[{"constant":false,"id":3937,"mutability":"mutable","name":"hashPos","nameLocation":"106584:7:0","nodeType":"VariableDeclaration","scope":4039,"src":"106576:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"106576:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3939,"initialValue":{"hexValue":"30","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"106594:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"106576:19:0"},{"assignments":[3941],"declarations":[{"constant":false,"id":3941,"mutability":"mutable","name":"proofPos","nameLocation":"106613:8:0","nodeType":"VariableDeclaration","scope":4039,"src":"106605:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"106605:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3943,"initialValue":{"hexValue":"30","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"106624:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"106605:20:0"},{"body":{"id":4003,"nodeType":"Block","src":"107043:310:0","statements":[{"assignments":[3955],"declarations":[{"constant":false,"id":3955,"mutability":"mutable","name":"a","nameLocation":"107065:1:0","nodeType":"VariableDeclaration","scope":4003,"src":"107057:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"107057:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3968,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"107069:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3957,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"107079:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"107069:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3963,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"107111:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3966,"indexExpression":{"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"107118:9:0","subExpression":{"id":3964,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"107118:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"107111:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"107069:59:0","trueExpression":{"baseExpression":{"id":3959,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"107091:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3962,"indexExpression":{"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"107098:9:0","subExpression":{"id":3960,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"107098:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"107091:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"107057:71:0"},{"assignments":[3970],"declarations":[{"constant":false,"id":3970,"mutability":"mutable","name":"b","nameLocation":"107150:1:0","nodeType":"VariableDeclaration","scope":4003,"src":"107142:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"107142:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3992,"initialValue":{"condition":{"baseExpression":{"id":3971,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"107154:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":3973,"indexExpression":{"id":3972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"107165:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"107154:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3987,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"107266:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3990,"indexExpression":{"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"107272:10:0","subExpression":{"id":3988,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"107272:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"107266:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"107154:129:0","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3974,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"107187:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3975,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"107197:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"107187:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3981,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"107229:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3984,"indexExpression":{"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"107236:9:0","subExpression":{"id":3982,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"107236:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"107229:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"107187:59:0","trueExpression":{"baseExpression":{"id":3977,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"107209:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3980,"indexExpression":{"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"107216:9:0","subExpression":{"id":3978,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"107216:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"107209:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3986,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"107186:61:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"107142:141:0"},{"expression":{"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3993,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"107297:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3995,"indexExpression":{"id":3994,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"107304:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"107297:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3998,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"107337:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3999,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"107340:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3996,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"107309:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$281_$","typeString":"type(library Hashes)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"107316:20:0","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":268,"src":"107309:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"107309:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"107297:45:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4002,"nodeType":"ExpressionStatement","src":"107297:45:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"107021:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3949,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"107025:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"107021:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4004,"initializationExpression":{"assignments":[3945],"declarations":[{"constant":false,"id":3945,"mutability":"mutable","name":"i","nameLocation":"107014:1:0","nodeType":"VariableDeclaration","scope":4004,"src":"107006:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"107006:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3947,"initialValue":{"hexValue":"30","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"107018:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"107006:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"107038:3:0","subExpression":{"id":3951,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"107038:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3953,"nodeType":"ExpressionStatement","src":"107038:3:0"},"nodeType":"ForStatement","src":"107001:352:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4005,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"107367:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"107381:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"107367:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4024,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"107600:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"107612:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"107600:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4036,"nodeType":"Block","src":"107662:40:0","statements":[{"expression":{"baseExpression":{"id":4032,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"107683:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4034,"indexExpression":{"hexValue":"30","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"107689:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"107683:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3893,"id":4035,"nodeType":"Return","src":"107676:15:0"}]},"id":4037,"nodeType":"IfStatement","src":"107596:106:0","trueBody":{"id":4031,"nodeType":"Block","src":"107615:41:0","statements":[{"expression":{"baseExpression":{"id":4027,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"107636:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4029,"indexExpression":{"hexValue":"30","id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"107643:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"107636:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3893,"id":4030,"nodeType":"Return","src":"107629:16:0"}]}},"id":4038,"nodeType":"IfStatement","src":"107363:339:0","trueBody":{"id":4023,"nodeType":"Block","src":"107384:206:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"107402:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4009,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"107414:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"107402:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4015,"nodeType":"IfStatement","src":"107398:96:0","trueBody":{"id":4014,"nodeType":"Block","src":"107424:70:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4011,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"107449:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"107449:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4013,"nodeType":"RevertStatement","src":"107442:37:0"}]}},{"id":4022,"nodeType":"UncheckedBlock","src":"107507:73:0","statements":[{"expression":{"baseExpression":{"id":4016,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"107542:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4020,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"107549:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"107563:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"107549:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"107542:23:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3893,"id":4021,"nodeType":"Return","src":"107535:30:0"}]}]}}]},"documentation":{"id":3880,"nodeType":"StructuredDocumentation","src":"105227:164:0","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":4040,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"105405:25:0","nodeType":"FunctionDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"proof","nameLocation":"105459:5:0","nodeType":"VariableDeclaration","scope":4040,"src":"105440:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"105440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3882,"nodeType":"ArrayTypeName","src":"105440:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3886,"mutability":"mutable","name":"proofFlags","nameLocation":"105490:10:0","nodeType":"VariableDeclaration","scope":4040,"src":"105474:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3884,"name":"bool","nodeType":"ElementaryTypeName","src":"105474:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3885,"nodeType":"ArrayTypeName","src":"105474:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3889,"mutability":"mutable","name":"leaves","nameLocation":"105527:6:0","nodeType":"VariableDeclaration","scope":4040,"src":"105510:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"105510:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3888,"nodeType":"ArrayTypeName","src":"105510:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"105430:109:0"},"returnParameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"merkleRoot","nameLocation":"105571:10:0","nodeType":"VariableDeclaration","scope":4040,"src":"105563:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"105563:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"105562:20:0"},"scope":4041,"src":"105396:2312:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"99289:8421:0","usedErrors":[3542],"usedEvents":[]},{"abstract":true,"baseContracts":[{"baseName":{"id":4043,"name":"Context","nameLocations":["108390:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":130,"src":"108390:7:0"},"id":4044,"nodeType":"InheritanceSpecifier","src":"108390:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4042,"nodeType":"StructuredDocumentation","src":"107873:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":4185,"linearizedBaseContracts":[4185,130],"name":"Ownable","nameLocation":"108379:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4046,"mutability":"mutable","name":"_owner","nameLocation":"108420:6:0","nodeType":"VariableDeclaration","scope":4185,"src":"108404:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4045,"name":"address","nodeType":"ElementaryTypeName","src":"108404:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"108433:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":4051,"name":"OwnableUnauthorizedAccount","nameLocation":"108529:26:0","nodeType":"ErrorDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"account","nameLocation":"108564:7:0","nodeType":"VariableDeclaration","scope":4051,"src":"108556:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4048,"name":"address","nodeType":"ElementaryTypeName","src":"108556:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108555:17:0"},"src":"108523:50:0"},{"documentation":{"id":4052,"nodeType":"StructuredDocumentation","src":"108579:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":4056,"name":"OwnableInvalidOwner","nameLocation":"108672:19:0","nodeType":"ErrorDefinition","parameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"owner","nameLocation":"108700:5:0","nodeType":"VariableDeclaration","scope":4056,"src":"108692:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4053,"name":"address","nodeType":"ElementaryTypeName","src":"108692:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108691:15:0"},"src":"108666:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":4062,"name":"OwnershipTransferred","nameLocation":"108719:20:0","nodeType":"EventDefinition","parameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"108756:13:0","nodeType":"VariableDeclaration","scope":4062,"src":"108740:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4057,"name":"address","nodeType":"ElementaryTypeName","src":"108740:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4060,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"108787:8:0","nodeType":"VariableDeclaration","scope":4062,"src":"108771:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4059,"name":"address","nodeType":"ElementaryTypeName","src":"108771:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108739:57:0"},"src":"108713:84:0"},{"body":{"id":4087,"nodeType":"Block","src":"108957:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4068,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"108971:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"108995:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"108987:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4069,"name":"address","nodeType":"ElementaryTypeName","src":"108987:7:0","typeDescriptions":{}}},"id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"108987:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"108971:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4082,"nodeType":"IfStatement","src":"108967:95:0","trueBody":{"id":4081,"nodeType":"Block","src":"108999:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"109048:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"109040:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4075,"name":"address","nodeType":"ElementaryTypeName","src":"109040:7:0","typeDescriptions":{}}},"id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109040:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4074,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"109020:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109020:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4080,"nodeType":"RevertStatement","src":"109013:38:0"}]}},{"expression":{"arguments":[{"id":4084,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"109090:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4083,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"109071:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109071:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4086,"nodeType":"ExpressionStatement","src":"109071:32:0"}]},"documentation":{"id":4063,"nodeType":"StructuredDocumentation","src":"108803:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":4088,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"mutability":"mutable","name":"initialOwner","nameLocation":"108943:12:0","nodeType":"VariableDeclaration","scope":4088,"src":"108935:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4064,"name":"address","nodeType":"ElementaryTypeName","src":"108935:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108934:22:0"},"returnParameters":{"id":4067,"nodeType":"ParameterList","parameters":[],"src":"108957:0:0"},"scope":4185,"src":"108923:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4095,"nodeType":"Block","src":"109219:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4091,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"109229:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109229:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4093,"nodeType":"ExpressionStatement","src":"109229:13:0"},{"id":4094,"nodeType":"PlaceholderStatement","src":"109252:1:0"}]},"documentation":{"id":4089,"nodeType":"StructuredDocumentation","src":"109116:77:0","text":" @dev Throws if called by any account other than the owner."},"id":4096,"name":"onlyOwner","nameLocation":"109207:9:0","nodeType":"ModifierDefinition","parameters":{"id":4090,"nodeType":"ParameterList","parameters":[],"src":"109216:2:0"},"src":"109198:62:0","virtual":false,"visibility":"internal"},{"body":{"id":4104,"nodeType":"Block","src":"109391:30:0","statements":[{"expression":{"id":4102,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"109408:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4101,"id":4103,"nodeType":"Return","src":"109401:13:0"}]},"documentation":{"id":4097,"nodeType":"StructuredDocumentation","src":"109266:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":4105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"109345:5:0","nodeType":"FunctionDefinition","parameters":{"id":4098,"nodeType":"ParameterList","parameters":[],"src":"109350:2:0"},"returnParameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4105,"src":"109382:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4099,"name":"address","nodeType":"ElementaryTypeName","src":"109382:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"109381:9:0"},"scope":4185,"src":"109336:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4121,"nodeType":"Block","src":"109539:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"109553:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109553:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"109564:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109564:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"109553:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4120,"nodeType":"IfStatement","src":"109549:101:0","trueBody":{"id":4119,"nodeType":"Block","src":"109578:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"109626:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109626:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"109599:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109599:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4118,"nodeType":"RevertStatement","src":"109592:47:0"}]}}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"109427:62:0","text":" @dev Throws if the sender is not the owner."},"id":4122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"109503:11:0","nodeType":"FunctionDefinition","parameters":{"id":4107,"nodeType":"ParameterList","parameters":[],"src":"109514:2:0"},"returnParameters":{"id":4108,"nodeType":"ParameterList","parameters":[],"src":"109539:0:0"},"scope":4185,"src":"109494:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4135,"nodeType":"Block","src":"110045:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110082:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"110074:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4129,"name":"address","nodeType":"ElementaryTypeName","src":"110074:7:0","typeDescriptions":{}}},"id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"110074:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"110055:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"110055:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4134,"nodeType":"ExpressionStatement","src":"110055:30:0"}]},"documentation":{"id":4123,"nodeType":"StructuredDocumentation","src":"109662:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":4136,"implemented":true,"kind":"function","modifiers":[{"id":4126,"kind":"modifierInvocation","modifierName":{"id":4125,"name":"onlyOwner","nameLocations":["110035:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":4096,"src":"110035:9:0"},"nodeType":"ModifierInvocation","src":"110035:9:0"}],"name":"renounceOwnership","nameLocation":"110000:17:0","nodeType":"FunctionDefinition","parameters":{"id":4124,"nodeType":"ParameterList","parameters":[],"src":"110017:2:0"},"returnParameters":{"id":4127,"nodeType":"ParameterList","parameters":[],"src":"110045:0:0"},"scope":4185,"src":"109991:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4163,"nodeType":"Block","src":"110311:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"110325:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110345:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"110337:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4145,"name":"address","nodeType":"ElementaryTypeName","src":"110337:7:0","typeDescriptions":{}}},"id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"110337:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"110325:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4158,"nodeType":"IfStatement","src":"110321:91:0","trueBody":{"id":4157,"nodeType":"Block","src":"110349:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110398:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"110390:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4151,"name":"address","nodeType":"ElementaryTypeName","src":"110390:7:0","typeDescriptions":{}}},"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"110390:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"110370:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"110370:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4156,"nodeType":"RevertStatement","src":"110363:38:0"}]}},{"expression":{"arguments":[{"id":4160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"110440:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"110421:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"110421:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4162,"nodeType":"ExpressionStatement","src":"110421:28:0"}]},"documentation":{"id":4137,"nodeType":"StructuredDocumentation","src":"110098:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":4164,"implemented":true,"kind":"function","modifiers":[{"id":4142,"kind":"modifierInvocation","modifierName":{"id":4141,"name":"onlyOwner","nameLocations":["110301:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":4096,"src":"110301:9:0"},"nodeType":"ModifierInvocation","src":"110301:9:0"}],"name":"transferOwnership","nameLocation":"110250:17:0","nodeType":"FunctionDefinition","parameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"newOwner","nameLocation":"110276:8:0","nodeType":"VariableDeclaration","scope":4164,"src":"110268:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4138,"name":"address","nodeType":"ElementaryTypeName","src":"110268:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"110267:18:0"},"returnParameters":{"id":4143,"nodeType":"ParameterList","parameters":[],"src":"110311:0:0"},"scope":4185,"src":"110241:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4183,"nodeType":"Block","src":"110673:124:0","statements":[{"assignments":[4171],"declarations":[{"constant":false,"id":4171,"mutability":"mutable","name":"oldOwner","nameLocation":"110691:8:0","nodeType":"VariableDeclaration","scope":4183,"src":"110683:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4170,"name":"address","nodeType":"ElementaryTypeName","src":"110683:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4173,"initialValue":{"id":4172,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"110702:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"110683:25:0"},{"expression":{"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"110718:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4175,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"110727:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"110718:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4177,"nodeType":"ExpressionStatement","src":"110718:17:0"},{"eventCall":{"arguments":[{"id":4179,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"110771:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4180,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"110781:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4178,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"110750:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"110750:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4182,"nodeType":"EmitStatement","src":"110745:45:0"}]},"documentation":{"id":4165,"nodeType":"StructuredDocumentation","src":"110462:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":4184,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"110619:18:0","nodeType":"FunctionDefinition","parameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"newOwner","nameLocation":"110646:8:0","nodeType":"VariableDeclaration","scope":4184,"src":"110638:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4166,"name":"address","nodeType":"ElementaryTypeName","src":"110638:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"110637:18:0"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[],"src":"110673:0:0"},"scope":4185,"src":"110610:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":10322,"src":"108361:2438:0","usedErrors":[4051,4056],"usedEvents":[4062]},{"abstract":false,"baseContracts":[],"canonicalName":"IBaseEscrow","contractDependencies":[],"contractKind":"interface","documentation":{"id":4186,"nodeType":"StructuredDocumentation","src":"110873:234:0","text":" @title Base Escrow interface for cross-chain atomic swap.\n @notice Interface implies locking funds initially and then unlocking them with verification of the secret presented.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":4272,"linearizedBaseContracts":[4272],"name":"IBaseEscrow","nameLocation":"111118:11:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaseEscrow.Immutables","id":4207,"members":[{"constant":false,"id":4188,"mutability":"mutable","name":"orderHash","nameLocation":"111172:9:0","nodeType":"VariableDeclaration","scope":4207,"src":"111164:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"111164:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4190,"mutability":"mutable","name":"hashlock","nameLocation":"111199:8:0","nodeType":"VariableDeclaration","scope":4207,"src":"111191:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"111191:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4193,"mutability":"mutable","name":"maker","nameLocation":"111249:5:0","nodeType":"VariableDeclaration","scope":4207,"src":"111241:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":4192,"nodeType":"UserDefinedTypeName","pathNode":{"id":4191,"name":"Address","nameLocations":["111241:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"111241:7:0"},"referencedDeclaration":3,"src":"111241:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":4196,"mutability":"mutable","name":"taker","nameLocation":"111272:5:0","nodeType":"VariableDeclaration","scope":4207,"src":"111264:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":4195,"nodeType":"UserDefinedTypeName","pathNode":{"id":4194,"name":"Address","nameLocations":["111264:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"111264:7:0"},"referencedDeclaration":3,"src":"111264:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":4199,"mutability":"mutable","name":"token","nameLocation":"111295:5:0","nodeType":"VariableDeclaration","scope":4207,"src":"111287:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":4198,"nodeType":"UserDefinedTypeName","pathNode":{"id":4197,"name":"Address","nameLocations":["111287:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"111287:7:0"},"referencedDeclaration":3,"src":"111287:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"amount","nameLocation":"111318:6:0","nodeType":"VariableDeclaration","scope":4207,"src":"111310:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"111310:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4203,"mutability":"mutable","name":"safetyDeposit","nameLocation":"111342:13:0","nodeType":"VariableDeclaration","scope":4207,"src":"111334:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4202,"name":"uint256","nodeType":"ElementaryTypeName","src":"111334:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4206,"mutability":"mutable","name":"timelocks","nameLocation":"111375:9:0","nodeType":"VariableDeclaration","scope":4207,"src":"111365:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"},"typeName":{"id":4205,"nodeType":"UserDefinedTypeName","pathNode":{"id":4204,"name":"Timelocks","nameLocations":["111365:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"111365:9:0"},"referencedDeclaration":3086,"src":"111365:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"visibility":"internal"}],"name":"Immutables","nameLocation":"111143:10:0","nodeType":"StructDefinition","scope":4272,"src":"111136:255:0","visibility":"public"},{"anonymous":false,"documentation":{"id":4208,"nodeType":"StructuredDocumentation","src":"111397:58:0","text":" @notice Emitted on escrow cancellation."},"eventSelector":"6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a9","id":4210,"name":"EscrowCancelled","nameLocation":"111466:15:0","nodeType":"EventDefinition","parameters":{"id":4209,"nodeType":"ParameterList","parameters":[],"src":"111481:2:0"},"src":"111460:24:0"},{"anonymous":false,"documentation":{"id":4211,"nodeType":"StructuredDocumentation","src":"111490:194:0","text":" @notice Emitted when funds are rescued.\n @param token The address of the token rescued. Zero address for native token.\n @param amount The amount of tokens rescued."},"eventSelector":"c4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac","id":4217,"name":"FundsRescued","nameLocation":"111695:12:0","nodeType":"EventDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"111716:5:0","nodeType":"VariableDeclaration","scope":4217,"src":"111708:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4212,"name":"address","nodeType":"ElementaryTypeName","src":"111708:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4215,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"111731:6:0","nodeType":"VariableDeclaration","scope":4217,"src":"111723:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"111723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"111707:31:0"},"src":"111689:50:0"},{"anonymous":false,"documentation":{"id":4218,"nodeType":"StructuredDocumentation","src":"111745:117:0","text":" @notice Emitted on successful withdrawal.\n @param secret The secret that unlocks the escrow."},"eventSelector":"0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b","id":4222,"name":"Withdrawal","nameLocation":"111873:10:0","nodeType":"EventDefinition","parameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"111892:6:0","nodeType":"VariableDeclaration","scope":4222,"src":"111884:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"111884:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"111883:16:0"},"src":"111867:33:0"},{"errorSelector":"48f5c3ed","id":4224,"name":"InvalidCaller","nameLocation":"111912:13:0","nodeType":"ErrorDefinition","parameters":{"id":4223,"nodeType":"ParameterList","parameters":[],"src":"111925:2:0"},"src":"111906:22:0"},{"errorSelector":"a269484a","id":4226,"name":"InvalidImmutables","nameLocation":"111939:17:0","nodeType":"ErrorDefinition","parameters":{"id":4225,"nodeType":"ParameterList","parameters":[],"src":"111956:2:0"},"src":"111933:26:0"},{"errorSelector":"abab6bd7","id":4228,"name":"InvalidSecret","nameLocation":"111970:13:0","nodeType":"ErrorDefinition","parameters":{"id":4227,"nodeType":"ParameterList","parameters":[],"src":"111983:2:0"},"src":"111964:22:0"},{"errorSelector":"6f7eac26","id":4230,"name":"InvalidTime","nameLocation":"111997:11:0","nodeType":"ErrorDefinition","parameters":{"id":4229,"nodeType":"ParameterList","parameters":[],"src":"112008:2:0"},"src":"111991:20:0"},{"errorSelector":"8a0332d5","id":4232,"name":"NativeTokenSendingFailure","nameLocation":"112022:25:0","nodeType":"ErrorDefinition","parameters":{"id":4231,"nodeType":"ParameterList","parameters":[],"src":"112047:2:0"},"src":"112016:34:0"},{"documentation":{"id":4233,"nodeType":"StructuredDocumentation","src":"112102:65:0","text":"@notice Returns the delay for rescuing funds from the escrow."},"functionSelector":"f56cd69c","id":4238,"implemented":false,"kind":"function","modifiers":[],"name":"RESCUE_DELAY","nameLocation":"112181:12:0","nodeType":"FunctionDefinition","parameters":{"id":4234,"nodeType":"ParameterList","parameters":[],"src":"112193:2:0"},"returnParameters":{"id":4237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4238,"src":"112219:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"112219:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"112218:9:0"},"scope":4272,"src":"112172:56:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4239,"nodeType":"StructuredDocumentation","src":"112233:71:0","text":"@notice Returns the address of the factory that created the escrow."},"functionSelector":"2dd31000","id":4244,"implemented":false,"kind":"function","modifiers":[],"name":"FACTORY","nameLocation":"112318:7:0","nodeType":"FunctionDefinition","parameters":{"id":4240,"nodeType":"ParameterList","parameters":[],"src":"112325:2:0"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"112351:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4241,"name":"address","nodeType":"ElementaryTypeName","src":"112351:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"112350:9:0"},"scope":4272,"src":"112309:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"112411:359:0","text":" @notice Withdraws funds to a predetermined recipient.\n @dev Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock.\n The safety deposit is sent to the caller.\n @param secret The secret that unlocks the escrow.\n @param immutables The immutables of the escrow contract."},"functionSelector":"23305703","id":4253,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"112784:8:0","nodeType":"FunctionDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"secret","nameLocation":"112801:6:0","nodeType":"VariableDeclaration","scope":4253,"src":"112793:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"112793:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"immutables","nameLocation":"112829:10:0","nodeType":"VariableDeclaration","scope":4253,"src":"112809:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":4249,"nodeType":"UserDefinedTypeName","pathNode":{"id":4248,"name":"Immutables","nameLocations":["112809:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"112809:10:0"},"referencedDeclaration":4207,"src":"112809:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"112792:48:0"},"returnParameters":{"id":4252,"nodeType":"ParameterList","parameters":[],"src":"112849:0:0"},"scope":4272,"src":"112775:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4254,"nodeType":"StructuredDocumentation","src":"112856:284:0","text":" @notice Cancels the escrow and returns tokens to a predetermined recipient.\n @dev The escrow can only be cancelled during the cancellation period.\n The safety deposit is sent to the caller.\n @param immutables The immutables of the escrow contract."},"functionSelector":"90d3252f","id":4260,"implemented":false,"kind":"function","modifiers":[],"name":"cancel","nameLocation":"113154:6:0","nodeType":"FunctionDefinition","parameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"immutables","nameLocation":"113181:10:0","nodeType":"VariableDeclaration","scope":4260,"src":"113161:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":4256,"nodeType":"UserDefinedTypeName","pathNode":{"id":4255,"name":"Immutables","nameLocations":["113161:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"113161:10:0"},"referencedDeclaration":4207,"src":"113161:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"113160:32:0"},"returnParameters":{"id":4259,"nodeType":"ParameterList","parameters":[],"src":"113201:0:0"},"scope":4272,"src":"113145:57:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4261,"nodeType":"StructuredDocumentation","src":"113208:336:0","text":" @notice Rescues funds from the escrow.\n @dev Funds can only be rescued by the taker after the rescue delay.\n @param token The address of the token to rescue. Zero address for native token.\n @param amount The amount of tokens to rescue.\n @param immutables The immutables of the escrow contract."},"functionSelector":"4649088b","id":4271,"implemented":false,"kind":"function","modifiers":[],"name":"rescueFunds","nameLocation":"113558:11:0","nodeType":"FunctionDefinition","parameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"token","nameLocation":"113578:5:0","nodeType":"VariableDeclaration","scope":4271,"src":"113570:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4262,"name":"address","nodeType":"ElementaryTypeName","src":"113570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"amount","nameLocation":"113593:6:0","nodeType":"VariableDeclaration","scope":4271,"src":"113585:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"113585:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4268,"mutability":"mutable","name":"immutables","nameLocation":"113621:10:0","nodeType":"VariableDeclaration","scope":4271,"src":"113601:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":4267,"nodeType":"UserDefinedTypeName","pathNode":{"id":4266,"name":"Immutables","nameLocations":["113601:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"113601:10:0"},"referencedDeclaration":4207,"src":"113601:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"113569:63:0"},"returnParameters":{"id":4270,"nodeType":"ParameterList","parameters":[],"src":"113641:0:0"},"scope":4272,"src":"113549:93:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"111108:2536:0","usedErrors":[4224,4226,4228,4230,4232],"usedEvents":[4210,4217,4222]},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4273,"nodeType":"StructuredDocumentation","src":"113809:73:0","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5818,"linearizedBaseContracts":[5818],"name":"Math","nameLocation":"113891:4:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4278,"members":[{"id":4274,"name":"Floor","nameLocation":"113926:5:0","nodeType":"EnumValue","src":"113926:5:0"},{"id":4275,"name":"Ceil","nameLocation":"113969:4:0","nodeType":"EnumValue","src":"113969:4:0"},{"id":4276,"name":"Trunc","nameLocation":"114011:5:0","nodeType":"EnumValue","src":"114011:5:0"},{"id":4277,"name":"Expand","nameLocation":"114041:6:0","nodeType":"EnumValue","src":"114041:6:0"}],"name":"Rounding","nameLocation":"113907:8:0","nodeType":"EnumDefinition","src":"113902:169:0"},{"body":{"id":4309,"nodeType":"Block","src":"114279:140:0","statements":[{"id":4308,"nodeType":"UncheckedBlock","src":"114289:124:0","statements":[{"assignments":[4291],"declarations":[{"constant":false,"id":4291,"mutability":"mutable","name":"c","nameLocation":"114321:1:0","nodeType":"VariableDeclaration","scope":4308,"src":"114313:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4290,"name":"uint256","nodeType":"ElementaryTypeName","src":"114313:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4295,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4292,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"114325:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4293,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"114329:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"114325:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"114313:17:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4296,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"114348:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4297,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"114352:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"114348:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4303,"nodeType":"IfStatement","src":"114344:28:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"114363:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114370:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"114362:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4289,"id":4302,"nodeType":"Return","src":"114355:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"114394:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4305,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"114400:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"114393:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4289,"id":4307,"nodeType":"Return","src":"114386:16:0"}]}]},"documentation":{"id":4279,"nodeType":"StructuredDocumentation","src":"114077:106:0","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4310,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"114197:6:0","nodeType":"FunctionDefinition","parameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"a","nameLocation":"114212:1:0","nodeType":"VariableDeclaration","scope":4310,"src":"114204:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"114204:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"b","nameLocation":"114223:1:0","nodeType":"VariableDeclaration","scope":4310,"src":"114215:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4282,"name":"uint256","nodeType":"ElementaryTypeName","src":"114215:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114203:22:0"},"returnParameters":{"id":4289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"success","nameLocation":"114254:7:0","nodeType":"VariableDeclaration","scope":4310,"src":"114249:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4285,"name":"bool","nodeType":"ElementaryTypeName","src":"114249:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4288,"mutability":"mutable","name":"result","nameLocation":"114271:6:0","nodeType":"VariableDeclaration","scope":4310,"src":"114263:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4287,"name":"uint256","nodeType":"ElementaryTypeName","src":"114263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114248:30:0"},"scope":5818,"src":"114188:231:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4337,"nodeType":"Block","src":"114630:113:0","statements":[{"id":4336,"nodeType":"UncheckedBlock","src":"114640:97:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"114668:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"114672:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"114668:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4329,"nodeType":"IfStatement","src":"114664:28:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"114683:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114690:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4327,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"114682:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4321,"id":4328,"nodeType":"Return","src":"114675:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"114714:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"114720:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4332,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"114724:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"114720:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"114713:13:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4321,"id":4335,"nodeType":"Return","src":"114706:20:0"}]}]},"documentation":{"id":4311,"nodeType":"StructuredDocumentation","src":"114425:109:0","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4338,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"114548:6:0","nodeType":"FunctionDefinition","parameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4313,"mutability":"mutable","name":"a","nameLocation":"114563:1:0","nodeType":"VariableDeclaration","scope":4338,"src":"114555:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"114555:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4315,"mutability":"mutable","name":"b","nameLocation":"114574:1:0","nodeType":"VariableDeclaration","scope":4338,"src":"114566:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"114566:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114554:22:0"},"returnParameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"success","nameLocation":"114605:7:0","nodeType":"VariableDeclaration","scope":4338,"src":"114600:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4317,"name":"bool","nodeType":"ElementaryTypeName","src":"114600:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4320,"mutability":"mutable","name":"result","nameLocation":"114622:6:0","nodeType":"VariableDeclaration","scope":4338,"src":"114614:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"114614:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114599:30:0"},"scope":5818,"src":"114539:204:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4379,"nodeType":"Block","src":"114957:417:0","statements":[{"id":4378,"nodeType":"UncheckedBlock","src":"114967:401:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"115225:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115230:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"115225:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4357,"nodeType":"IfStatement","src":"115221:28:0","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"115241:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115247:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"115240:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4349,"id":4356,"nodeType":"Return","src":"115233:16:0"}},{"assignments":[4359],"declarations":[{"constant":false,"id":4359,"mutability":"mutable","name":"c","nameLocation":"115271:1:0","nodeType":"VariableDeclaration","scope":4378,"src":"115263:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"115263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4363,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"115275:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4361,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"115279:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"115275:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"115263:17:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"115298:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"115302:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"115298:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"115307:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"115298:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4373,"nodeType":"IfStatement","src":"115294:33:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"115318:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115325:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"115317:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4349,"id":4372,"nodeType":"Return","src":"115310:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"115349:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4375,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"115355:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"115348:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4349,"id":4377,"nodeType":"Return","src":"115341:16:0"}]}]},"documentation":{"id":4339,"nodeType":"StructuredDocumentation","src":"114749:112:0","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":4380,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"114875:6:0","nodeType":"FunctionDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"a","nameLocation":"114890:1:0","nodeType":"VariableDeclaration","scope":4380,"src":"114882:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"114882:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"b","nameLocation":"114901:1:0","nodeType":"VariableDeclaration","scope":4380,"src":"114893:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"114893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114881:22:0"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"success","nameLocation":"114932:7:0","nodeType":"VariableDeclaration","scope":4380,"src":"114927:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4345,"name":"bool","nodeType":"ElementaryTypeName","src":"114927:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4348,"mutability":"mutable","name":"result","nameLocation":"114949:6:0","nodeType":"VariableDeclaration","scope":4380,"src":"114941:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"114941:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114926:30:0"},"scope":5818,"src":"114866:508:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4407,"nodeType":"Block","src":"115589:114:0","statements":[{"id":4406,"nodeType":"UncheckedBlock","src":"115599:98:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"115627:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115632:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"115627:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4399,"nodeType":"IfStatement","src":"115623:29:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"115643:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115650:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"115642:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4391,"id":4398,"nodeType":"Return","src":"115635:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"115674:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"115680:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4402,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"115684:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"115680:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"115673:13:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4391,"id":4405,"nodeType":"Return","src":"115666:20:0"}]}]},"documentation":{"id":4381,"nodeType":"StructuredDocumentation","src":"115380:113:0","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4408,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"115507:6:0","nodeType":"FunctionDefinition","parameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4383,"mutability":"mutable","name":"a","nameLocation":"115522:1:0","nodeType":"VariableDeclaration","scope":4408,"src":"115514:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"115514:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4385,"mutability":"mutable","name":"b","nameLocation":"115533:1:0","nodeType":"VariableDeclaration","scope":4408,"src":"115525:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"115525:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115513:22:0"},"returnParameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"success","nameLocation":"115564:7:0","nodeType":"VariableDeclaration","scope":4408,"src":"115559:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4387,"name":"bool","nodeType":"ElementaryTypeName","src":"115559:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4390,"mutability":"mutable","name":"result","nameLocation":"115581:6:0","nodeType":"VariableDeclaration","scope":4408,"src":"115573:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4389,"name":"uint256","nodeType":"ElementaryTypeName","src":"115573:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115558:30:0"},"scope":5818,"src":"115498:205:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4435,"nodeType":"Block","src":"115928:114:0","statements":[{"id":4434,"nodeType":"UncheckedBlock","src":"115938:98:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"115966:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115971:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"115966:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4427,"nodeType":"IfStatement","src":"115962:29:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"115982:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115989:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"115981:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4419,"id":4426,"nodeType":"Return","src":"115974:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"116013:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"116019:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4430,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"116023:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"116019:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"116012:13:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4419,"id":4433,"nodeType":"Return","src":"116005:20:0"}]}]},"documentation":{"id":4409,"nodeType":"StructuredDocumentation","src":"115709:123:0","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4436,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"115846:6:0","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4411,"mutability":"mutable","name":"a","nameLocation":"115861:1:0","nodeType":"VariableDeclaration","scope":4436,"src":"115853:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"115853:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4413,"mutability":"mutable","name":"b","nameLocation":"115872:1:0","nodeType":"VariableDeclaration","scope":4436,"src":"115864:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"115864:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115852:22:0"},"returnParameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"success","nameLocation":"115903:7:0","nodeType":"VariableDeclaration","scope":4436,"src":"115898:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4415,"name":"bool","nodeType":"ElementaryTypeName","src":"115898:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"result","nameLocation":"115920:6:0","nodeType":"VariableDeclaration","scope":4436,"src":"115912:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"115912:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115897:30:0"},"scope":5818,"src":"115837:205:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4453,"nodeType":"Block","src":"116179:37:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4446,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"116196:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4447,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"116200:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"116196:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4450,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"116208:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"116196:13:0","trueExpression":{"id":4449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"116204:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4445,"id":4452,"nodeType":"Return","src":"116189:20:0"}]},"documentation":{"id":4437,"nodeType":"StructuredDocumentation","src":"116048:59:0","text":" @dev Returns the largest of two numbers."},"id":4454,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"116121:3:0","nodeType":"FunctionDefinition","parameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"mutability":"mutable","name":"a","nameLocation":"116133:1:0","nodeType":"VariableDeclaration","scope":4454,"src":"116125:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"116125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4441,"mutability":"mutable","name":"b","nameLocation":"116144:1:0","nodeType":"VariableDeclaration","scope":4454,"src":"116136:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"116136:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116124:22:0"},"returnParameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4454,"src":"116170:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"116170:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116169:9:0"},"scope":5818,"src":"116112:104:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4471,"nodeType":"Block","src":"116354:37:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4464,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"116371:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4465,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"116375:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"116371:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4468,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"116383:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"116371:13:0","trueExpression":{"id":4467,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"116379:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4463,"id":4470,"nodeType":"Return","src":"116364:20:0"}]},"documentation":{"id":4455,"nodeType":"StructuredDocumentation","src":"116222:60:0","text":" @dev Returns the smallest of two numbers."},"id":4472,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"116296:3:0","nodeType":"FunctionDefinition","parameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"a","nameLocation":"116308:1:0","nodeType":"VariableDeclaration","scope":4472,"src":"116300:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4456,"name":"uint256","nodeType":"ElementaryTypeName","src":"116300:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4459,"mutability":"mutable","name":"b","nameLocation":"116319:1:0","nodeType":"VariableDeclaration","scope":4472,"src":"116311:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"116311:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116299:22:0"},"returnParameters":{"id":4463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4472,"src":"116345:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"116345:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116344:9:0"},"scope":5818,"src":"116287:104:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4494,"nodeType":"Block","src":"116575:82:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"116630:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"116634:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"116630:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"116629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4486,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"116640:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4487,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"116644:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"116640:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4489,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"116639:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116649:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"116639:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"116629:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4481,"id":4493,"nodeType":"Return","src":"116622:28:0"}]},"documentation":{"id":4473,"nodeType":"StructuredDocumentation","src":"116397:102:0","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4495,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"116513:7:0","nodeType":"FunctionDefinition","parameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"a","nameLocation":"116529:1:0","nodeType":"VariableDeclaration","scope":4495,"src":"116521:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"116521:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4477,"mutability":"mutable","name":"b","nameLocation":"116540:1:0","nodeType":"VariableDeclaration","scope":4495,"src":"116532:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4476,"name":"uint256","nodeType":"ElementaryTypeName","src":"116532:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116520:22:0"},"returnParameters":{"id":4481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4495,"src":"116566:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4479,"name":"uint256","nodeType":"ElementaryTypeName","src":"116566:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116565:9:0"},"scope":5818,"src":"116504:153:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4532,"nodeType":"Block","src":"116949:619:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"116963:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116968:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"116963:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4516,"nodeType":"IfStatement","src":"116959:150:0","trueBody":{"id":4515,"nodeType":"Block","src":"116971:138:0","statements":[{"expression":{"arguments":[{"expression":{"id":4511,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"117075:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1048_$","typeString":"type(library Panic)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"117081:16:0","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1015,"src":"117075:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4508,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"117063:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1048_$","typeString":"type(library Panic)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"117069:5:0","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"117063:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"117063:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4514,"nodeType":"ExpressionStatement","src":"117063:35:0"}]}},{"id":4531,"nodeType":"UncheckedBlock","src":"117492:70:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"117523:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117528:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"117523:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"117537:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117541:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"117537:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"117536:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"117546:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"117536:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117550:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"117536:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"117523:28:0","trueExpression":{"hexValue":"30","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117532:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4504,"id":4530,"nodeType":"Return","src":"117516:35:0"}]}]},"documentation":{"id":4496,"nodeType":"StructuredDocumentation","src":"116663:210:0","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4533,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"116887:7:0","nodeType":"FunctionDefinition","parameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"a","nameLocation":"116903:1:0","nodeType":"VariableDeclaration","scope":4533,"src":"116895:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"116895:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"b","nameLocation":"116914:1:0","nodeType":"VariableDeclaration","scope":4533,"src":"116906:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"116906:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116894:22:0"},"returnParameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4533,"src":"116940:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"116940:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116939:9:0"},"scope":5818,"src":"116878:690:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4668,"nodeType":"Block","src":"117989:4125:0","statements":[{"id":4667,"nodeType":"UncheckedBlock","src":"117999:4109:0","statements":[{"assignments":[4546],"declarations":[{"constant":false,"id":4546,"mutability":"mutable","name":"prod0","nameLocation":"118340:5:0","nodeType":"VariableDeclaration","scope":4667,"src":"118332:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4545,"name":"uint256","nodeType":"ElementaryTypeName","src":"118332:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4550,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4547,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"118348:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4548,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"118352:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"118348:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"118332:21:0"},{"assignments":[4552],"declarations":[{"constant":false,"id":4552,"mutability":"mutable","name":"prod1","nameLocation":"118420:5:0","nodeType":"VariableDeclaration","scope":4667,"src":"118412:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"118412:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4553,"nodeType":"VariableDeclarationStatement","src":"118412:13:0"},{"AST":{"nativeSrc":"118492:122:0","nodeType":"YulBlock","src":"118492:122:0","statements":[{"nativeSrc":"118510:30:0","nodeType":"YulVariableDeclaration","src":"118510:30:0","value":{"arguments":[{"name":"x","nativeSrc":"118527:1:0","nodeType":"YulIdentifier","src":"118527:1:0"},{"name":"y","nativeSrc":"118530:1:0","nodeType":"YulIdentifier","src":"118530:1:0"},{"arguments":[{"kind":"number","nativeSrc":"118537:1:0","nodeType":"YulLiteral","src":"118537:1:0","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"118533:3:0","nodeType":"YulIdentifier","src":"118533:3:0"},"nativeSrc":"118533:6:0","nodeType":"YulFunctionCall","src":"118533:6:0"}],"functionName":{"name":"mulmod","nativeSrc":"118520:6:0","nodeType":"YulIdentifier","src":"118520:6:0"},"nativeSrc":"118520:20:0","nodeType":"YulFunctionCall","src":"118520:20:0"},"variables":[{"name":"mm","nativeSrc":"118514:2:0","nodeType":"YulTypedName","src":"118514:2:0","type":""}]},{"nativeSrc":"118557:43:0","nodeType":"YulAssignment","src":"118557:43:0","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"118574:2:0","nodeType":"YulIdentifier","src":"118574:2:0"},{"name":"prod0","nativeSrc":"118578:5:0","nodeType":"YulIdentifier","src":"118578:5:0"}],"functionName":{"name":"sub","nativeSrc":"118570:3:0","nodeType":"YulIdentifier","src":"118570:3:0"},"nativeSrc":"118570:14:0","nodeType":"YulFunctionCall","src":"118570:14:0"},{"arguments":[{"name":"mm","nativeSrc":"118589:2:0","nodeType":"YulIdentifier","src":"118589:2:0"},{"name":"prod0","nativeSrc":"118593:5:0","nodeType":"YulIdentifier","src":"118593:5:0"}],"functionName":{"name":"lt","nativeSrc":"118586:2:0","nodeType":"YulIdentifier","src":"118586:2:0"},"nativeSrc":"118586:13:0","nodeType":"YulFunctionCall","src":"118586:13:0"}],"functionName":{"name":"sub","nativeSrc":"118566:3:0","nodeType":"YulIdentifier","src":"118566:3:0"},"nativeSrc":"118566:34:0","nodeType":"YulFunctionCall","src":"118566:34:0"},"variableNames":[{"name":"prod1","nativeSrc":"118557:5:0","nodeType":"YulIdentifier","src":"118557:5:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4546,"isOffset":false,"isSlot":false,"src":"118578:5:0","valueSize":1},{"declaration":4546,"isOffset":false,"isSlot":false,"src":"118593:5:0","valueSize":1},{"declaration":4552,"isOffset":false,"isSlot":false,"src":"118557:5:0","valueSize":1},{"declaration":4536,"isOffset":false,"isSlot":false,"src":"118527:1:0","valueSize":1},{"declaration":4538,"isOffset":false,"isSlot":false,"src":"118530:1:0","valueSize":1}],"id":4554,"nodeType":"InlineAssembly","src":"118483:131:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4555,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"118695:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"118704:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"118695:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4563,"nodeType":"IfStatement","src":"118691:368:0","trueBody":{"id":4562,"nodeType":"Block","src":"118707:352:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"119025:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4559,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"119033:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"119025:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4544,"id":4561,"nodeType":"Return","src":"119018:26:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4564,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"119169:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4565,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"119184:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"119169:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4581,"nodeType":"IfStatement","src":"119165:136:0","trueBody":{"id":4580,"nodeType":"Block","src":"119191:110:0","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"119221:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119236:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"119221:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":4575,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"119265:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1048_$","typeString":"type(library Panic)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"119271:14:0","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1011,"src":"119265:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"119221:64:0","trueExpression":{"expression":{"id":4573,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"119240:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1048_$","typeString":"type(library Panic)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"119246:16:0","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1015,"src":"119240:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4567,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"119209:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1048_$","typeString":"type(library Panic)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"119215:5:0","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"119209:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"119209:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4579,"nodeType":"ExpressionStatement","src":"119209:77:0"}]}},{"assignments":[4583],"declarations":[{"constant":false,"id":4583,"mutability":"mutable","name":"remainder","nameLocation":"119564:9:0","nodeType":"VariableDeclaration","scope":4667,"src":"119556:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"119556:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4584,"nodeType":"VariableDeclarationStatement","src":"119556:17:0"},{"AST":{"nativeSrc":"119596:291:0","nodeType":"YulBlock","src":"119596:291:0","statements":[{"nativeSrc":"119665:38:0","nodeType":"YulAssignment","src":"119665:38:0","value":{"arguments":[{"name":"x","nativeSrc":"119685:1:0","nodeType":"YulIdentifier","src":"119685:1:0"},{"name":"y","nativeSrc":"119688:1:0","nodeType":"YulIdentifier","src":"119688:1:0"},{"name":"denominator","nativeSrc":"119691:11:0","nodeType":"YulIdentifier","src":"119691:11:0"}],"functionName":{"name":"mulmod","nativeSrc":"119678:6:0","nodeType":"YulIdentifier","src":"119678:6:0"},"nativeSrc":"119678:25:0","nodeType":"YulFunctionCall","src":"119678:25:0"},"variableNames":[{"name":"remainder","nativeSrc":"119665:9:0","nodeType":"YulIdentifier","src":"119665:9:0"}]},{"nativeSrc":"119785:41:0","nodeType":"YulAssignment","src":"119785:41:0","value":{"arguments":[{"name":"prod1","nativeSrc":"119798:5:0","nodeType":"YulIdentifier","src":"119798:5:0"},{"arguments":[{"name":"remainder","nativeSrc":"119808:9:0","nodeType":"YulIdentifier","src":"119808:9:0"},{"name":"prod0","nativeSrc":"119819:5:0","nodeType":"YulIdentifier","src":"119819:5:0"}],"functionName":{"name":"gt","nativeSrc":"119805:2:0","nodeType":"YulIdentifier","src":"119805:2:0"},"nativeSrc":"119805:20:0","nodeType":"YulFunctionCall","src":"119805:20:0"}],"functionName":{"name":"sub","nativeSrc":"119794:3:0","nodeType":"YulIdentifier","src":"119794:3:0"},"nativeSrc":"119794:32:0","nodeType":"YulFunctionCall","src":"119794:32:0"},"variableNames":[{"name":"prod1","nativeSrc":"119785:5:0","nodeType":"YulIdentifier","src":"119785:5:0"}]},{"nativeSrc":"119843:30:0","nodeType":"YulAssignment","src":"119843:30:0","value":{"arguments":[{"name":"prod0","nativeSrc":"119856:5:0","nodeType":"YulIdentifier","src":"119856:5:0"},{"name":"remainder","nativeSrc":"119863:9:0","nodeType":"YulIdentifier","src":"119863:9:0"}],"functionName":{"name":"sub","nativeSrc":"119852:3:0","nodeType":"YulIdentifier","src":"119852:3:0"},"nativeSrc":"119852:21:0","nodeType":"YulFunctionCall","src":"119852:21:0"},"variableNames":[{"name":"prod0","nativeSrc":"119843:5:0","nodeType":"YulIdentifier","src":"119843:5:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4540,"isOffset":false,"isSlot":false,"src":"119691:11:0","valueSize":1},{"declaration":4546,"isOffset":false,"isSlot":false,"src":"119819:5:0","valueSize":1},{"declaration":4546,"isOffset":false,"isSlot":false,"src":"119843:5:0","valueSize":1},{"declaration":4546,"isOffset":false,"isSlot":false,"src":"119856:5:0","valueSize":1},{"declaration":4552,"isOffset":false,"isSlot":false,"src":"119785:5:0","valueSize":1},{"declaration":4552,"isOffset":false,"isSlot":false,"src":"119798:5:0","valueSize":1},{"declaration":4583,"isOffset":false,"isSlot":false,"src":"119665:9:0","valueSize":1},{"declaration":4583,"isOffset":false,"isSlot":false,"src":"119808:9:0","valueSize":1},{"declaration":4583,"isOffset":false,"isSlot":false,"src":"119863:9:0","valueSize":1},{"declaration":4536,"isOffset":false,"isSlot":false,"src":"119685:1:0","valueSize":1},{"declaration":4538,"isOffset":false,"isSlot":false,"src":"119688:1:0","valueSize":1}],"id":4585,"nodeType":"InlineAssembly","src":"119587:300:0"},{"assignments":[4587],"declarations":[{"constant":false,"id":4587,"mutability":"mutable","name":"twos","nameLocation":"120099:4:0","nodeType":"VariableDeclaration","scope":4667,"src":"120091:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"120091:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4594,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4588,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"120106:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120121:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4590,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"120125:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"120121:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"120120:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"120106:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"120091:46:0"},{"AST":{"nativeSrc":"120160:366:0","nodeType":"YulBlock","src":"120160:366:0","statements":[{"nativeSrc":"120225:37:0","nodeType":"YulAssignment","src":"120225:37:0","value":{"arguments":[{"name":"denominator","nativeSrc":"120244:11:0","nodeType":"YulIdentifier","src":"120244:11:0"},{"name":"twos","nativeSrc":"120257:4:0","nodeType":"YulIdentifier","src":"120257:4:0"}],"functionName":{"name":"div","nativeSrc":"120240:3:0","nodeType":"YulIdentifier","src":"120240:3:0"},"nativeSrc":"120240:22:0","nodeType":"YulFunctionCall","src":"120240:22:0"},"variableNames":[{"name":"denominator","nativeSrc":"120225:11:0","nodeType":"YulIdentifier","src":"120225:11:0"}]},{"nativeSrc":"120329:25:0","nodeType":"YulAssignment","src":"120329:25:0","value":{"arguments":[{"name":"prod0","nativeSrc":"120342:5:0","nodeType":"YulIdentifier","src":"120342:5:0"},{"name":"twos","nativeSrc":"120349:4:0","nodeType":"YulIdentifier","src":"120349:4:0"}],"functionName":{"name":"div","nativeSrc":"120338:3:0","nodeType":"YulIdentifier","src":"120338:3:0"},"nativeSrc":"120338:16:0","nodeType":"YulFunctionCall","src":"120338:16:0"},"variableNames":[{"name":"prod0","nativeSrc":"120329:5:0","nodeType":"YulIdentifier","src":"120329:5:0"}]},{"nativeSrc":"120473:39:0","nodeType":"YulAssignment","src":"120473:39:0","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"120493:1:0","nodeType":"YulLiteral","src":"120493:1:0","type":"","value":"0"},{"name":"twos","nativeSrc":"120496:4:0","nodeType":"YulIdentifier","src":"120496:4:0"}],"functionName":{"name":"sub","nativeSrc":"120489:3:0","nodeType":"YulIdentifier","src":"120489:3:0"},"nativeSrc":"120489:12:0","nodeType":"YulFunctionCall","src":"120489:12:0"},{"name":"twos","nativeSrc":"120503:4:0","nodeType":"YulIdentifier","src":"120503:4:0"}],"functionName":{"name":"div","nativeSrc":"120485:3:0","nodeType":"YulIdentifier","src":"120485:3:0"},"nativeSrc":"120485:23:0","nodeType":"YulFunctionCall","src":"120485:23:0"},{"kind":"number","nativeSrc":"120510:1:0","nodeType":"YulLiteral","src":"120510:1:0","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"120481:3:0","nodeType":"YulIdentifier","src":"120481:3:0"},"nativeSrc":"120481:31:0","nodeType":"YulFunctionCall","src":"120481:31:0"},"variableNames":[{"name":"twos","nativeSrc":"120473:4:0","nodeType":"YulIdentifier","src":"120473:4:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4540,"isOffset":false,"isSlot":false,"src":"120225:11:0","valueSize":1},{"declaration":4540,"isOffset":false,"isSlot":false,"src":"120244:11:0","valueSize":1},{"declaration":4546,"isOffset":false,"isSlot":false,"src":"120329:5:0","valueSize":1},{"declaration":4546,"isOffset":false,"isSlot":false,"src":"120342:5:0","valueSize":1},{"declaration":4587,"isOffset":false,"isSlot":false,"src":"120257:4:0","valueSize":1},{"declaration":4587,"isOffset":false,"isSlot":false,"src":"120349:4:0","valueSize":1},{"declaration":4587,"isOffset":false,"isSlot":false,"src":"120473:4:0","valueSize":1},{"declaration":4587,"isOffset":false,"isSlot":false,"src":"120496:4:0","valueSize":1},{"declaration":4587,"isOffset":false,"isSlot":false,"src":"120503:4:0","valueSize":1}],"id":4595,"nodeType":"InlineAssembly","src":"120151:375:0"},{"expression":{"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4596,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"120592:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4597,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"120601:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4598,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"120609:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"120601:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"120592:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4601,"nodeType":"ExpressionStatement","src":"120592:21:0"},{"assignments":[4603],"declarations":[{"constant":false,"id":4603,"mutability":"mutable","name":"inverse","nameLocation":"120956:7:0","nodeType":"VariableDeclaration","scope":4667,"src":"120948:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"120948:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4610,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120967:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4605,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"120971:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"120967:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"120966:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120986:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"120966:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"120948:39:0"},{"expression":{"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4611,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121204:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121215:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4613,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"121219:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4614,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121233:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121219:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121215:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121204:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4618,"nodeType":"ExpressionStatement","src":"121204:36:0"},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4619,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121274:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121285:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"121289:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4622,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121303:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121289:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121285:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121274:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4626,"nodeType":"ExpressionStatement","src":"121274:36:0"},{"expression":{"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4627,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121346:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121357:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4629,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"121361:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4630,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121375:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121361:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121357:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121346:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4634,"nodeType":"ExpressionStatement","src":"121346:36:0"},{"expression":{"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4635,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121417:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121428:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4637,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"121432:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4638,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121446:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121432:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121428:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121417:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4642,"nodeType":"ExpressionStatement","src":"121417:36:0"},{"expression":{"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4643,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121490:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121501:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"121505:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4646,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121519:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121505:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121501:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121490:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4650,"nodeType":"ExpressionStatement","src":"121490:36:0"},{"expression":{"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4651,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121564:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121575:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4653,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"121579:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4654,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"121593:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121579:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121575:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121564:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4658,"nodeType":"ExpressionStatement","src":"121564:36:0"},{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"122046:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4660,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"122055:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4661,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"122063:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"122055:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"122046:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"122046:24:0"},{"expression":{"id":4665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"122091:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4544,"id":4666,"nodeType":"Return","src":"122084:13:0"}]}]},"documentation":{"id":4534,"nodeType":"StructuredDocumentation","src":"117574:312:0","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4669,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"117900:6:0","nodeType":"FunctionDefinition","parameters":{"id":4541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"x","nameLocation":"117915:1:0","nodeType":"VariableDeclaration","scope":4669,"src":"117907:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"117907:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4538,"mutability":"mutable","name":"y","nameLocation":"117926:1:0","nodeType":"VariableDeclaration","scope":4669,"src":"117918:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"117918:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4540,"mutability":"mutable","name":"denominator","nameLocation":"117937:11:0","nodeType":"VariableDeclaration","scope":4669,"src":"117929:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"117929:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"117906:43:0"},"returnParameters":{"id":4544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4543,"mutability":"mutable","name":"result","nameLocation":"117981:6:0","nodeType":"VariableDeclaration","scope":4669,"src":"117973:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4542,"name":"uint256","nodeType":"ElementaryTypeName","src":"117973:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"117972:16:0"},"scope":5818,"src":"117891:4223:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4705,"nodeType":"Block","src":"122353:128:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4685,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"122377:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4686,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"122380:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4687,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"122383:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4684,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4669,4706],"referencedDeclaration":4669,"src":"122370:6:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"122370:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4692,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"122431:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}],"id":4691,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"122414:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4278_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"122414:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4695,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"122451:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4696,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"122454:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4697,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"122457:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4694,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"122444:6:0","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"122444:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122472:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"122444:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"122414:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4689,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"122398:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"122407:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"122398:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"122398:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"122370:104:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4683,"id":4704,"nodeType":"Return","src":"122363:111:0"}]},"documentation":{"id":4670,"nodeType":"StructuredDocumentation","src":"122120:118:0","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4706,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"122252:6:0","nodeType":"FunctionDefinition","parameters":{"id":4680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"x","nameLocation":"122267:1:0","nodeType":"VariableDeclaration","scope":4706,"src":"122259:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"122259:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4674,"mutability":"mutable","name":"y","nameLocation":"122278:1:0","nodeType":"VariableDeclaration","scope":4706,"src":"122270:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4673,"name":"uint256","nodeType":"ElementaryTypeName","src":"122270:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4676,"mutability":"mutable","name":"denominator","nameLocation":"122289:11:0","nodeType":"VariableDeclaration","scope":4706,"src":"122281:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"122281:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4679,"mutability":"mutable","name":"rounding","nameLocation":"122311:8:0","nodeType":"VariableDeclaration","scope":4706,"src":"122302:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"},"typeName":{"id":4678,"nodeType":"UserDefinedTypeName","pathNode":{"id":4677,"name":"Rounding","nameLocations":["122302:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":4278,"src":"122302:8:0"},"referencedDeclaration":4278,"src":"122302:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"122258:62:0"},"returnParameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4706,"src":"122344:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"122344:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"122343:9:0"},"scope":5818,"src":"122243:238:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4802,"nodeType":"Block","src":"123095:1844:0","statements":[{"id":4801,"nodeType":"UncheckedBlock","src":"123105:1828:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4716,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"123133:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"123138:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"123133:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4721,"nodeType":"IfStatement","src":"123129:20:0","trueBody":{"expression":{"hexValue":"30","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"123148:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4715,"id":4720,"nodeType":"Return","src":"123141:8:0"}},{"assignments":[4723],"declarations":[{"constant":false,"id":4723,"mutability":"mutable","name":"remainder","nameLocation":"123628:9:0","nodeType":"VariableDeclaration","scope":4801,"src":"123620:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"123620:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4727,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4724,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"123640:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4725,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"123644:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"123640:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"123620:25:0"},{"assignments":[4729],"declarations":[{"constant":false,"id":4729,"mutability":"mutable","name":"gcd","nameLocation":"123667:3:0","nodeType":"VariableDeclaration","scope":4801,"src":"123659:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"123659:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4731,"initialValue":{"id":4730,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"123673:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"123659:15:0"},{"assignments":[4733],"declarations":[{"constant":false,"id":4733,"mutability":"mutable","name":"x","nameLocation":"123817:1:0","nodeType":"VariableDeclaration","scope":4801,"src":"123810:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4732,"name":"int256","nodeType":"ElementaryTypeName","src":"123810:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4735,"initialValue":{"hexValue":"30","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"123821:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"123810:12:0"},{"assignments":[4737],"declarations":[{"constant":false,"id":4737,"mutability":"mutable","name":"y","nameLocation":"123843:1:0","nodeType":"VariableDeclaration","scope":4801,"src":"123836:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4736,"name":"int256","nodeType":"ElementaryTypeName","src":"123836:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4739,"initialValue":{"hexValue":"31","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"123847:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"123836:12:0"},{"body":{"id":4776,"nodeType":"Block","src":"123886:882:0","statements":[{"assignments":[4744],"declarations":[{"constant":false,"id":4744,"mutability":"mutable","name":"quotient","nameLocation":"123912:8:0","nodeType":"VariableDeclaration","scope":4776,"src":"123904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"123904:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4748,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4745,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"123923:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4746,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"123929:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"123923:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"123904:34:0"},{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4749,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"123958:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4750,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"123963:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4751,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"123957:16:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4752,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"124063:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"124308:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"124314:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4755,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"124326:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"124314:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"124308:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"123976:376:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"123957:395:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4760,"nodeType":"ExpressionStatement","src":"123957:395:0"},{"expression":{"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4761,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"124372:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4762,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"124375:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4763,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"124371:6:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4764,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"124457:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4765,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"124711:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4766,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"124715:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4769,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"124726:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"124719:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4767,"name":"int256","nodeType":"ElementaryTypeName","src":"124719:6:0","typeDescriptions":{}}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"124719:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"124715:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"124711:24:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"124380:373:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"124371:382:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4775,"nodeType":"ExpressionStatement","src":"124371:382:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4740,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"123870:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"123883:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"123870:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4777,"nodeType":"WhileStatement","src":"123863:905:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4778,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"124786:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"124793:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"124786:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4783,"nodeType":"IfStatement","src":"124782:22:0","trueBody":{"expression":{"hexValue":"30","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"124803:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4715,"id":4782,"nodeType":"Return","src":"124796:8:0"}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4784,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"124847:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"124851:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"124847:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4797,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"124883:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"124875:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4795,"name":"uint256","nodeType":"ElementaryTypeName","src":"124875:7:0","typeDescriptions":{}}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"124875:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"124847:38:0","trueExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"124856:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"124868:2:0","subExpression":{"id":4790,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"124869:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"124860:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"124860:7:0","typeDescriptions":{}}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"124860:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"124856:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"124855:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4715,"id":4800,"nodeType":"Return","src":"124840:45:0"}]}]},"documentation":{"id":4707,"nodeType":"StructuredDocumentation","src":"122487:533:0","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, expect 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Ferma's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`."},"id":4803,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"123034:6:0","nodeType":"FunctionDefinition","parameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4709,"mutability":"mutable","name":"a","nameLocation":"123049:1:0","nodeType":"VariableDeclaration","scope":4803,"src":"123041:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4708,"name":"uint256","nodeType":"ElementaryTypeName","src":"123041:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4711,"mutability":"mutable","name":"n","nameLocation":"123060:1:0","nodeType":"VariableDeclaration","scope":4803,"src":"123052:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4710,"name":"uint256","nodeType":"ElementaryTypeName","src":"123052:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"123040:22:0"},"returnParameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4803,"src":"123086:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"123086:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"123085:9:0"},"scope":5818,"src":"123025:1914:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4838,"nodeType":"Block","src":"125709:174:0","statements":[{"assignments":[4816,4818],"declarations":[{"constant":false,"id":4816,"mutability":"mutable","name":"success","nameLocation":"125725:7:0","nodeType":"VariableDeclaration","scope":4838,"src":"125720:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4815,"name":"bool","nodeType":"ElementaryTypeName","src":"125720:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4818,"mutability":"mutable","name":"result","nameLocation":"125742:6:0","nodeType":"VariableDeclaration","scope":4838,"src":"125734:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4817,"name":"uint256","nodeType":"ElementaryTypeName","src":"125734:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4824,"initialValue":{"arguments":[{"id":4820,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"125762:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4821,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"125765:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4822,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"125768:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4819,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4863,4945],"referencedDeclaration":4863,"src":"125752:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"125752:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"125719:51:0"},{"condition":{"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"125784:8:0","subExpression":{"id":4825,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"125785:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4835,"nodeType":"IfStatement","src":"125780:74:0","trueBody":{"id":4834,"nodeType":"Block","src":"125794:60:0","statements":[{"expression":{"arguments":[{"expression":{"id":4830,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"125820:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1048_$","typeString":"type(library Panic)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"125826:16:0","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1015,"src":"125820:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4827,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"125808:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1048_$","typeString":"type(library Panic)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"125814:5:0","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"125808:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"125808:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4833,"nodeType":"ExpressionStatement","src":"125808:35:0"}]}},{"expression":{"id":4836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"125870:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4814,"id":4837,"nodeType":"Return","src":"125863:13:0"}]},"documentation":{"id":4804,"nodeType":"StructuredDocumentation","src":"124945:678:0","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4839,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"125637:6:0","nodeType":"FunctionDefinition","parameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"b","nameLocation":"125652:1:0","nodeType":"VariableDeclaration","scope":4839,"src":"125644:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4805,"name":"uint256","nodeType":"ElementaryTypeName","src":"125644:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4808,"mutability":"mutable","name":"e","nameLocation":"125663:1:0","nodeType":"VariableDeclaration","scope":4839,"src":"125655:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4807,"name":"uint256","nodeType":"ElementaryTypeName","src":"125655:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4810,"mutability":"mutable","name":"m","nameLocation":"125674:1:0","nodeType":"VariableDeclaration","scope":4839,"src":"125666:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4809,"name":"uint256","nodeType":"ElementaryTypeName","src":"125666:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"125643:33:0"},"returnParameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4839,"src":"125700:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4812,"name":"uint256","nodeType":"ElementaryTypeName","src":"125700:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"125699:9:0"},"scope":5818,"src":"125628:255:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4862,"nodeType":"Block","src":"126738:1520:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"126752:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"126757:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"126752:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4860,"nodeType":"IfStatement","src":"126748:29:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"126768:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"126775:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"126767:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4852,"id":4859,"nodeType":"Return","src":"126760:17:0"}},{"AST":{"nativeSrc":"126839:1413:0","nodeType":"YulBlock","src":"126839:1413:0","statements":[{"nativeSrc":"126853:22:0","nodeType":"YulVariableDeclaration","src":"126853:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"126870:4:0","nodeType":"YulLiteral","src":"126870:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"126864:5:0","nodeType":"YulIdentifier","src":"126864:5:0"},"nativeSrc":"126864:11:0","nodeType":"YulFunctionCall","src":"126864:11:0"},"variables":[{"name":"ptr","nativeSrc":"126857:3:0","nodeType":"YulTypedName","src":"126857:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"127783:3:0","nodeType":"YulIdentifier","src":"127783:3:0"},{"kind":"number","nativeSrc":"127788:4:0","nodeType":"YulLiteral","src":"127788:4:0","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"127776:6:0","nodeType":"YulIdentifier","src":"127776:6:0"},"nativeSrc":"127776:17:0","nodeType":"YulFunctionCall","src":"127776:17:0"},"nativeSrc":"127776:17:0","nodeType":"YulExpressionStatement","src":"127776:17:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"127817:3:0","nodeType":"YulIdentifier","src":"127817:3:0"},{"kind":"number","nativeSrc":"127822:4:0","nodeType":"YulLiteral","src":"127822:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"127813:3:0","nodeType":"YulIdentifier","src":"127813:3:0"},"nativeSrc":"127813:14:0","nodeType":"YulFunctionCall","src":"127813:14:0"},{"kind":"number","nativeSrc":"127829:4:0","nodeType":"YulLiteral","src":"127829:4:0","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"127806:6:0","nodeType":"YulIdentifier","src":"127806:6:0"},"nativeSrc":"127806:28:0","nodeType":"YulFunctionCall","src":"127806:28:0"},"nativeSrc":"127806:28:0","nodeType":"YulExpressionStatement","src":"127806:28:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"127858:3:0","nodeType":"YulIdentifier","src":"127858:3:0"},{"kind":"number","nativeSrc":"127863:4:0","nodeType":"YulLiteral","src":"127863:4:0","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"127854:3:0","nodeType":"YulIdentifier","src":"127854:3:0"},"nativeSrc":"127854:14:0","nodeType":"YulFunctionCall","src":"127854:14:0"},{"kind":"number","nativeSrc":"127870:4:0","nodeType":"YulLiteral","src":"127870:4:0","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"127847:6:0","nodeType":"YulIdentifier","src":"127847:6:0"},"nativeSrc":"127847:28:0","nodeType":"YulFunctionCall","src":"127847:28:0"},"nativeSrc":"127847:28:0","nodeType":"YulExpressionStatement","src":"127847:28:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"127899:3:0","nodeType":"YulIdentifier","src":"127899:3:0"},{"kind":"number","nativeSrc":"127904:4:0","nodeType":"YulLiteral","src":"127904:4:0","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"127895:3:0","nodeType":"YulIdentifier","src":"127895:3:0"},"nativeSrc":"127895:14:0","nodeType":"YulFunctionCall","src":"127895:14:0"},{"name":"b","nativeSrc":"127911:1:0","nodeType":"YulIdentifier","src":"127911:1:0"}],"functionName":{"name":"mstore","nativeSrc":"127888:6:0","nodeType":"YulIdentifier","src":"127888:6:0"},"nativeSrc":"127888:25:0","nodeType":"YulFunctionCall","src":"127888:25:0"},"nativeSrc":"127888:25:0","nodeType":"YulExpressionStatement","src":"127888:25:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"127937:3:0","nodeType":"YulIdentifier","src":"127937:3:0"},{"kind":"number","nativeSrc":"127942:4:0","nodeType":"YulLiteral","src":"127942:4:0","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"127933:3:0","nodeType":"YulIdentifier","src":"127933:3:0"},"nativeSrc":"127933:14:0","nodeType":"YulFunctionCall","src":"127933:14:0"},{"name":"e","nativeSrc":"127949:1:0","nodeType":"YulIdentifier","src":"127949:1:0"}],"functionName":{"name":"mstore","nativeSrc":"127926:6:0","nodeType":"YulIdentifier","src":"127926:6:0"},"nativeSrc":"127926:25:0","nodeType":"YulFunctionCall","src":"127926:25:0"},"nativeSrc":"127926:25:0","nodeType":"YulExpressionStatement","src":"127926:25:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"127975:3:0","nodeType":"YulIdentifier","src":"127975:3:0"},{"kind":"number","nativeSrc":"127980:4:0","nodeType":"YulLiteral","src":"127980:4:0","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"127971:3:0","nodeType":"YulIdentifier","src":"127971:3:0"},"nativeSrc":"127971:14:0","nodeType":"YulFunctionCall","src":"127971:14:0"},{"name":"m","nativeSrc":"127987:1:0","nodeType":"YulIdentifier","src":"127987:1:0"}],"functionName":{"name":"mstore","nativeSrc":"127964:6:0","nodeType":"YulIdentifier","src":"127964:6:0"},"nativeSrc":"127964:25:0","nodeType":"YulFunctionCall","src":"127964:25:0"},"nativeSrc":"127964:25:0","nodeType":"YulExpressionStatement","src":"127964:25:0"},{"nativeSrc":"128151:57:0","nodeType":"YulAssignment","src":"128151:57:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"128173:3:0","nodeType":"YulIdentifier","src":"128173:3:0"},"nativeSrc":"128173:5:0","nodeType":"YulFunctionCall","src":"128173:5:0"},{"kind":"number","nativeSrc":"128180:4:0","nodeType":"YulLiteral","src":"128180:4:0","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"128186:3:0","nodeType":"YulIdentifier","src":"128186:3:0"},{"kind":"number","nativeSrc":"128191:4:0","nodeType":"YulLiteral","src":"128191:4:0","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"128197:4:0","nodeType":"YulLiteral","src":"128197:4:0","type":"","value":"0x00"},{"kind":"number","nativeSrc":"128203:4:0","nodeType":"YulLiteral","src":"128203:4:0","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"128162:10:0","nodeType":"YulIdentifier","src":"128162:10:0"},"nativeSrc":"128162:46:0","nodeType":"YulFunctionCall","src":"128162:46:0"},"variableNames":[{"name":"success","nativeSrc":"128151:7:0","nodeType":"YulIdentifier","src":"128151:7:0"}]},{"nativeSrc":"128221:21:0","nodeType":"YulAssignment","src":"128221:21:0","value":{"arguments":[{"kind":"number","nativeSrc":"128237:4:0","nodeType":"YulLiteral","src":"128237:4:0","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"128231:5:0","nodeType":"YulIdentifier","src":"128231:5:0"},"nativeSrc":"128231:11:0","nodeType":"YulFunctionCall","src":"128231:11:0"},"variableNames":[{"name":"result","nativeSrc":"128221:6:0","nodeType":"YulIdentifier","src":"128221:6:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4842,"isOffset":false,"isSlot":false,"src":"127911:1:0","valueSize":1},{"declaration":4844,"isOffset":false,"isSlot":false,"src":"127949:1:0","valueSize":1},{"declaration":4846,"isOffset":false,"isSlot":false,"src":"127987:1:0","valueSize":1},{"declaration":4851,"isOffset":false,"isSlot":false,"src":"128221:6:0","valueSize":1},{"declaration":4849,"isOffset":false,"isSlot":false,"src":"128151:7:0","valueSize":1}],"id":4861,"nodeType":"InlineAssembly","src":"126830:1422:0"}]},"documentation":{"id":4840,"nodeType":"StructuredDocumentation","src":"125889:739:0","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked has failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4863,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"126642:9:0","nodeType":"FunctionDefinition","parameters":{"id":4847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"b","nameLocation":"126660:1:0","nodeType":"VariableDeclaration","scope":4863,"src":"126652:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"126652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4844,"mutability":"mutable","name":"e","nameLocation":"126671:1:0","nodeType":"VariableDeclaration","scope":4863,"src":"126663:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4843,"name":"uint256","nodeType":"ElementaryTypeName","src":"126663:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4846,"mutability":"mutable","name":"m","nameLocation":"126682:1:0","nodeType":"VariableDeclaration","scope":4863,"src":"126674:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4845,"name":"uint256","nodeType":"ElementaryTypeName","src":"126674:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"126651:33:0"},"returnParameters":{"id":4852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4849,"mutability":"mutable","name":"success","nameLocation":"126713:7:0","nodeType":"VariableDeclaration","scope":4863,"src":"126708:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4848,"name":"bool","nodeType":"ElementaryTypeName","src":"126708:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4851,"mutability":"mutable","name":"result","nameLocation":"126730:6:0","nodeType":"VariableDeclaration","scope":4863,"src":"126722:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4850,"name":"uint256","nodeType":"ElementaryTypeName","src":"126722:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"126707:30:0"},"scope":5818,"src":"126633:1625:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4898,"nodeType":"Block","src":"128455:179:0","statements":[{"assignments":[4876,4878],"declarations":[{"constant":false,"id":4876,"mutability":"mutable","name":"success","nameLocation":"128471:7:0","nodeType":"VariableDeclaration","scope":4898,"src":"128466:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4875,"name":"bool","nodeType":"ElementaryTypeName","src":"128466:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4878,"mutability":"mutable","name":"result","nameLocation":"128493:6:0","nodeType":"VariableDeclaration","scope":4898,"src":"128480:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4877,"name":"bytes","nodeType":"ElementaryTypeName","src":"128480:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4884,"initialValue":{"arguments":[{"id":4880,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"128513:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4881,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"128516:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4882,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"128519:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4879,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4863,4945],"referencedDeclaration":4945,"src":"128503:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"128503:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"128465:56:0"},{"condition":{"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"128535:8:0","subExpression":{"id":4885,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"128536:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4895,"nodeType":"IfStatement","src":"128531:74:0","trueBody":{"id":4894,"nodeType":"Block","src":"128545:60:0","statements":[{"expression":{"arguments":[{"expression":{"id":4890,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"128571:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1048_$","typeString":"type(library Panic)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"128577:16:0","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1015,"src":"128571:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4887,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"128559:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1048_$","typeString":"type(library Panic)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"128565:5:0","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"128559:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"128559:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4893,"nodeType":"ExpressionStatement","src":"128559:35:0"}]}},{"expression":{"id":4896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"128621:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4874,"id":4897,"nodeType":"Return","src":"128614:13:0"}]},"documentation":{"id":4864,"nodeType":"StructuredDocumentation","src":"128264:85:0","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4899,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"128363:6:0","nodeType":"FunctionDefinition","parameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"b","nameLocation":"128383:1:0","nodeType":"VariableDeclaration","scope":4899,"src":"128370:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4865,"name":"bytes","nodeType":"ElementaryTypeName","src":"128370:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4868,"mutability":"mutable","name":"e","nameLocation":"128399:1:0","nodeType":"VariableDeclaration","scope":4899,"src":"128386:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4867,"name":"bytes","nodeType":"ElementaryTypeName","src":"128386:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4870,"mutability":"mutable","name":"m","nameLocation":"128415:1:0","nodeType":"VariableDeclaration","scope":4899,"src":"128402:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4869,"name":"bytes","nodeType":"ElementaryTypeName","src":"128402:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"128369:48:0"},"returnParameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4899,"src":"128441:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4872,"name":"bytes","nodeType":"ElementaryTypeName","src":"128441:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"128440:14:0"},"scope":5818,"src":"128354:280:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4944,"nodeType":"Block","src":"128888:798:0","statements":[{"condition":{"arguments":[{"id":4914,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"128913:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4913,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"128902:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"128902:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4923,"nodeType":"IfStatement","src":"128898:47:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"128925:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128942:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"128932:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4917,"name":"bytes","nodeType":"ElementaryTypeName","src":"128936:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"128932:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"128924:21:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4912,"id":4922,"nodeType":"Return","src":"128917:28:0"}},{"assignments":[4925],"declarations":[{"constant":false,"id":4925,"mutability":"mutable","name":"mLen","nameLocation":"128964:4:0","nodeType":"VariableDeclaration","scope":4944,"src":"128956:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"128956:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4928,"initialValue":{"expression":{"id":4926,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"128971:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"128973:6:0","memberName":"length","nodeType":"MemberAccess","src":"128971:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"128956:23:0"},{"expression":{"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"129061:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4932,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"129087:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"129089:6:0","memberName":"length","nodeType":"MemberAccess","src":"129087:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4934,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"129097:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"129099:6:0","memberName":"length","nodeType":"MemberAccess","src":"129097:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4936,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"129107:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4937,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"129113:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4938,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"129116:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4939,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"129119:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4930,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"129070:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"129074:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"129070:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"129070:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"129061:60:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4942,"nodeType":"ExpressionStatement","src":"129061:60:0"},{"AST":{"nativeSrc":"129184:496:0","nodeType":"YulBlock","src":"129184:496:0","statements":[{"nativeSrc":"129198:32:0","nodeType":"YulVariableDeclaration","src":"129198:32:0","value":{"arguments":[{"name":"result","nativeSrc":"129217:6:0","nodeType":"YulIdentifier","src":"129217:6:0"},{"kind":"number","nativeSrc":"129225:4:0","nodeType":"YulLiteral","src":"129225:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"129213:3:0","nodeType":"YulIdentifier","src":"129213:3:0"},"nativeSrc":"129213:17:0","nodeType":"YulFunctionCall","src":"129213:17:0"},"variables":[{"name":"dataPtr","nativeSrc":"129202:7:0","nodeType":"YulTypedName","src":"129202:7:0","type":""}]},{"nativeSrc":"129320:73:0","nodeType":"YulAssignment","src":"129320:73:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"129342:3:0","nodeType":"YulIdentifier","src":"129342:3:0"},"nativeSrc":"129342:5:0","nodeType":"YulFunctionCall","src":"129342:5:0"},{"kind":"number","nativeSrc":"129349:4:0","nodeType":"YulLiteral","src":"129349:4:0","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"129355:7:0","nodeType":"YulIdentifier","src":"129355:7:0"},{"arguments":[{"name":"result","nativeSrc":"129370:6:0","nodeType":"YulIdentifier","src":"129370:6:0"}],"functionName":{"name":"mload","nativeSrc":"129364:5:0","nodeType":"YulIdentifier","src":"129364:5:0"},"nativeSrc":"129364:13:0","nodeType":"YulFunctionCall","src":"129364:13:0"},{"name":"dataPtr","nativeSrc":"129379:7:0","nodeType":"YulIdentifier","src":"129379:7:0"},{"name":"mLen","nativeSrc":"129388:4:0","nodeType":"YulIdentifier","src":"129388:4:0"}],"functionName":{"name":"staticcall","nativeSrc":"129331:10:0","nodeType":"YulIdentifier","src":"129331:10:0"},"nativeSrc":"129331:62:0","nodeType":"YulFunctionCall","src":"129331:62:0"},"variableNames":[{"name":"success","nativeSrc":"129320:7:0","nodeType":"YulIdentifier","src":"129320:7:0"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"129549:6:0","nodeType":"YulIdentifier","src":"129549:6:0"},{"name":"mLen","nativeSrc":"129557:4:0","nodeType":"YulIdentifier","src":"129557:4:0"}],"functionName":{"name":"mstore","nativeSrc":"129542:6:0","nodeType":"YulIdentifier","src":"129542:6:0"},"nativeSrc":"129542:20:0","nodeType":"YulFunctionCall","src":"129542:20:0"},"nativeSrc":"129542:20:0","nodeType":"YulExpressionStatement","src":"129542:20:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"129645:4:0","nodeType":"YulLiteral","src":"129645:4:0","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"129655:7:0","nodeType":"YulIdentifier","src":"129655:7:0"},{"name":"mLen","nativeSrc":"129664:4:0","nodeType":"YulIdentifier","src":"129664:4:0"}],"functionName":{"name":"add","nativeSrc":"129651:3:0","nodeType":"YulIdentifier","src":"129651:3:0"},"nativeSrc":"129651:18:0","nodeType":"YulFunctionCall","src":"129651:18:0"}],"functionName":{"name":"mstore","nativeSrc":"129638:6:0","nodeType":"YulIdentifier","src":"129638:6:0"},"nativeSrc":"129638:32:0","nodeType":"YulFunctionCall","src":"129638:32:0"},"nativeSrc":"129638:32:0","nodeType":"YulExpressionStatement","src":"129638:32:0"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4925,"isOffset":false,"isSlot":false,"src":"129388:4:0","valueSize":1},{"declaration":4925,"isOffset":false,"isSlot":false,"src":"129557:4:0","valueSize":1},{"declaration":4925,"isOffset":false,"isSlot":false,"src":"129664:4:0","valueSize":1},{"declaration":4911,"isOffset":false,"isSlot":false,"src":"129217:6:0","valueSize":1},{"declaration":4911,"isOffset":false,"isSlot":false,"src":"129370:6:0","valueSize":1},{"declaration":4911,"isOffset":false,"isSlot":false,"src":"129549:6:0","valueSize":1},{"declaration":4909,"isOffset":false,"isSlot":false,"src":"129320:7:0","valueSize":1}],"id":4943,"nodeType":"InlineAssembly","src":"129175:505:0"}]},"documentation":{"id":4900,"nodeType":"StructuredDocumentation","src":"128640:88:0","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4945,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"128742:9:0","nodeType":"FunctionDefinition","parameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4902,"mutability":"mutable","name":"b","nameLocation":"128774:1:0","nodeType":"VariableDeclaration","scope":4945,"src":"128761:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4901,"name":"bytes","nodeType":"ElementaryTypeName","src":"128761:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4904,"mutability":"mutable","name":"e","nameLocation":"128798:1:0","nodeType":"VariableDeclaration","scope":4945,"src":"128785:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4903,"name":"bytes","nodeType":"ElementaryTypeName","src":"128785:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4906,"mutability":"mutable","name":"m","nameLocation":"128822:1:0","nodeType":"VariableDeclaration","scope":4945,"src":"128809:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4905,"name":"bytes","nodeType":"ElementaryTypeName","src":"128809:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"128751:78:0"},"returnParameters":{"id":4912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"success","nameLocation":"128858:7:0","nodeType":"VariableDeclaration","scope":4945,"src":"128853:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4908,"name":"bool","nodeType":"ElementaryTypeName","src":"128853:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4911,"mutability":"mutable","name":"result","nameLocation":"128880:6:0","nodeType":"VariableDeclaration","scope":4945,"src":"128867:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4910,"name":"bytes","nodeType":"ElementaryTypeName","src":"128867:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"128852:35:0"},"scope":5818,"src":"128733:953:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4977,"nodeType":"Block","src":"129841:176:0","statements":[{"body":{"id":4973,"nodeType":"Block","src":"129898:92:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4964,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"129916:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4966,"indexExpression":{"id":4965,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"129926:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"129916:12:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"129932:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"129916:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4972,"nodeType":"IfStatement","src":"129912:68:0","trueBody":{"id":4971,"nodeType":"Block","src":"129935:45:0","statements":[{"expression":{"hexValue":"66616c7365","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"129960:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4952,"id":4970,"nodeType":"Return","src":"129953:12:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"129871:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4958,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"129875:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"129885:6:0","memberName":"length","nodeType":"MemberAccess","src":"129875:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"129871:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4974,"initializationExpression":{"assignments":[4954],"declarations":[{"constant":false,"id":4954,"mutability":"mutable","name":"i","nameLocation":"129864:1:0","nodeType":"VariableDeclaration","scope":4974,"src":"129856:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4953,"name":"uint256","nodeType":"ElementaryTypeName","src":"129856:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4956,"initialValue":{"hexValue":"30","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"129868:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"129856:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"129893:3:0","subExpression":{"id":4961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"129895:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4963,"nodeType":"ExpressionStatement","src":"129893:3:0"},"nodeType":"ForStatement","src":"129851:139:0"},{"expression":{"hexValue":"74727565","id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"130006:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4952,"id":4976,"nodeType":"Return","src":"129999:11:0"}]},"documentation":{"id":4946,"nodeType":"StructuredDocumentation","src":"129692:72:0","text":" @dev Returns whether the provided byte array is zero."},"id":4978,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"129778:10:0","nodeType":"FunctionDefinition","parameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"byteArray","nameLocation":"129802:9:0","nodeType":"VariableDeclaration","scope":4978,"src":"129789:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4947,"name":"bytes","nodeType":"ElementaryTypeName","src":"129789:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"129788:24:0"},"returnParameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4978,"src":"129835:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4950,"name":"bool","nodeType":"ElementaryTypeName","src":"129835:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"129834:6:0"},"scope":5818,"src":"129769:248:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5196,"nodeType":"Block","src":"130377:5124:0","statements":[{"id":5195,"nodeType":"UncheckedBlock","src":"130387:5108:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"130481:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"130486:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"130481:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4992,"nodeType":"IfStatement","src":"130477:53:0","trueBody":{"id":4991,"nodeType":"Block","src":"130489:41:0","statements":[{"expression":{"id":4989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"130514:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4985,"id":4990,"nodeType":"Return","src":"130507:8:0"}]}},{"assignments":[4994],"declarations":[{"constant":false,"id":4994,"mutability":"mutable","name":"aa","nameLocation":"131465:2:0","nodeType":"VariableDeclaration","scope":5195,"src":"131457:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"131457:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4996,"initialValue":{"id":4995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"131470:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"131457:14:0"},{"assignments":[4998],"declarations":[{"constant":false,"id":4998,"mutability":"mutable","name":"xn","nameLocation":"131493:2:0","nodeType":"VariableDeclaration","scope":5195,"src":"131485:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"131485:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5000,"initialValue":{"hexValue":"31","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131498:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"131485:14:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5001,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"131518:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131525:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131530:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"131525:8:0","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"131524:10:0","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"131518:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5016,"nodeType":"IfStatement","src":"131514:92:0","trueBody":{"id":5015,"nodeType":"Block","src":"131536:70:0","statements":[{"expression":{"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5007,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"131554:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131561:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"131554:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5010,"nodeType":"ExpressionStatement","src":"131554:10:0"},{"expression":{"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5011,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"131582:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131589:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"131582:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5014,"nodeType":"ExpressionStatement","src":"131582:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5017,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"131623:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131630:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131635:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"131630:7:0","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"131629:9:0","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"131623:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5032,"nodeType":"IfStatement","src":"131619:90:0","trueBody":{"id":5031,"nodeType":"Block","src":"131640:69:0","statements":[{"expression":{"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5023,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"131658:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131665:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"131658:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5026,"nodeType":"ExpressionStatement","src":"131658:9:0"},{"expression":{"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5027,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"131685:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131692:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"131685:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5030,"nodeType":"ExpressionStatement","src":"131685:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5033,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"131726:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131733:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131738:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"131733:7:0","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"131732:9:0","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"131726:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5048,"nodeType":"IfStatement","src":"131722:90:0","trueBody":{"id":5047,"nodeType":"Block","src":"131743:69:0","statements":[{"expression":{"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5039,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"131761:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131768:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"131761:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5042,"nodeType":"ExpressionStatement","src":"131761:9:0"},{"expression":{"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5043,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"131788:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131795:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"131788:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5046,"nodeType":"ExpressionStatement","src":"131788:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5049,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"131829:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131836:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131841:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"131836:7:0","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"131835:9:0","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"131829:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5064,"nodeType":"IfStatement","src":"131825:89:0","trueBody":{"id":5063,"nodeType":"Block","src":"131846:68:0","statements":[{"expression":{"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5055,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"131864:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131871:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"131864:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5058,"nodeType":"ExpressionStatement","src":"131864:9:0"},{"expression":{"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5059,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"131891:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131898:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"131891:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5062,"nodeType":"ExpressionStatement","src":"131891:8:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5065,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"131931:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131938:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131943:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"131938:6:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"131937:8:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"131931:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5080,"nodeType":"IfStatement","src":"131927:87:0","trueBody":{"id":5079,"nodeType":"Block","src":"131947:67:0","statements":[{"expression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5071,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"131965:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131972:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"131965:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5074,"nodeType":"ExpressionStatement","src":"131965:8:0"},{"expression":{"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5075,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"131991:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"131998:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"131991:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5078,"nodeType":"ExpressionStatement","src":"131991:8:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5081,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"132031:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"132038:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"132043:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"132038:6:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"132037:8:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"132031:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5096,"nodeType":"IfStatement","src":"132027:87:0","trueBody":{"id":5095,"nodeType":"Block","src":"132047:67:0","statements":[{"expression":{"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5087,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"132065:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"132072:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"132065:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5090,"nodeType":"ExpressionStatement","src":"132065:8:0"},{"expression":{"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5091,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"132091:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"132098:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"132091:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5094,"nodeType":"ExpressionStatement","src":"132091:8:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5097,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"132131:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"132138:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"132143:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"132138:6:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"132137:8:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"132131:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5108,"nodeType":"IfStatement","src":"132127:61:0","trueBody":{"id":5107,"nodeType":"Block","src":"132147:41:0","statements":[{"expression":{"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5103,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"132165:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"132172:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"132165:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5106,"nodeType":"ExpressionStatement","src":"132165:8:0"}]}},{"expression":{"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5109,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"132608:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"132614:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5111,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"132618:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"132614:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"132613:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"132625:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"132613:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"132608:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5117,"nodeType":"ExpressionStatement","src":"132608:18:0"},{"expression":{"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5118,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134513:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5119,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134519:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"134524:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5121,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134528:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134524:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134519:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"134518:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"134535:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"134518:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134513:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5128,"nodeType":"ExpressionStatement","src":"134513:23:0"},{"expression":{"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5129,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134622:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5130,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134628:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5131,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"134633:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5132,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134637:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134633:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134628:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"134627:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"134644:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"134627:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134622:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5139,"nodeType":"ExpressionStatement","src":"134622:23:0"},{"expression":{"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5140,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134733:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5141,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134739:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5142,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"134744:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5143,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134748:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134744:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134739:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"134738:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"134755:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"134738:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134733:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5150,"nodeType":"ExpressionStatement","src":"134733:23:0"},{"expression":{"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5151,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134842:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5152,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134848:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"134853:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5154,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134857:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134853:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134848:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"134847:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"134864:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"134847:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134842:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5161,"nodeType":"ExpressionStatement","src":"134842:23:0"},{"expression":{"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5162,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134952:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5163,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134958:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"134963:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5165,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"134967:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134963:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134958:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"134957:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"134974:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"134957:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"134952:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5172,"nodeType":"ExpressionStatement","src":"134952:23:0"},{"expression":{"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5173,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"135062:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5174,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"135068:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"135073:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5176,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"135077:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"135073:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"135068:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"135067:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"135084:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"135067:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"135062:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5183,"nodeType":"ExpressionStatement","src":"135062:23:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5184,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"135451:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5187,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"135472:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5188,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"135477:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5189,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"135481:2:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"135477:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"135472:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5185,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"135456:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"135465:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"135456:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"135456:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"135451:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4985,"id":5194,"nodeType":"Return","src":"135444:40:0"}]}]},"documentation":{"id":4979,"nodeType":"StructuredDocumentation","src":"130023:292:0","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5197,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"130329:4:0","nodeType":"FunctionDefinition","parameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4981,"mutability":"mutable","name":"a","nameLocation":"130342:1:0","nodeType":"VariableDeclaration","scope":5197,"src":"130334:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"130334:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"130333:11:0"},"returnParameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5197,"src":"130368:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"130368:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"130367:9:0"},"scope":5818,"src":"130320:5181:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5230,"nodeType":"Block","src":"135674:171:0","statements":[{"id":5229,"nodeType":"UncheckedBlock","src":"135684:155:0","statements":[{"assignments":[5209],"declarations":[{"constant":false,"id":5209,"mutability":"mutable","name":"result","nameLocation":"135716:6:0","nodeType":"VariableDeclaration","scope":5229,"src":"135708:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"135708:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5213,"initialValue":{"arguments":[{"id":5211,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"135730:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5210,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5197,5231],"referencedDeclaration":5197,"src":"135725:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"135725:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"135708:24:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"135753:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5218,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"135795:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}],"id":5217,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"135778:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4278_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"135778:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"135808:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"135817:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"135808:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5223,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"135826:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"135808:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"135778:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5215,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"135762:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"135771:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"135762:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"135762:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"135753:75:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5207,"id":5228,"nodeType":"Return","src":"135746:82:0"}]}]},"documentation":{"id":5198,"nodeType":"StructuredDocumentation","src":"135507:86:0","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5231,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"135607:4:0","nodeType":"FunctionDefinition","parameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"a","nameLocation":"135620:1:0","nodeType":"VariableDeclaration","scope":5231,"src":"135612:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5199,"name":"uint256","nodeType":"ElementaryTypeName","src":"135612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5203,"mutability":"mutable","name":"rounding","nameLocation":"135632:8:0","nodeType":"VariableDeclaration","scope":5231,"src":"135623:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"},"typeName":{"id":5202,"nodeType":"UserDefinedTypeName","pathNode":{"id":5201,"name":"Rounding","nameLocations":["135623:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":4278,"src":"135623:8:0"},"referencedDeclaration":4278,"src":"135623:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"135611:30:0"},"returnParameters":{"id":5207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5231,"src":"135665:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5205,"name":"uint256","nodeType":"ElementaryTypeName","src":"135665:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"135664:9:0"},"scope":5818,"src":"135598:247:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5426,"nodeType":"Block","src":"136036:981:0","statements":[{"assignments":[5240],"declarations":[{"constant":false,"id":5240,"mutability":"mutable","name":"result","nameLocation":"136054:6:0","nodeType":"VariableDeclaration","scope":5426,"src":"136046:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5239,"name":"uint256","nodeType":"ElementaryTypeName","src":"136046:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5242,"initialValue":{"hexValue":"30","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136063:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"136046:18:0"},{"assignments":[5244],"declarations":[{"constant":false,"id":5244,"mutability":"mutable","name":"exp","nameLocation":"136082:3:0","nodeType":"VariableDeclaration","scope":5426,"src":"136074:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5243,"name":"uint256","nodeType":"ElementaryTypeName","src":"136074:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5245,"nodeType":"VariableDeclarationStatement","src":"136074:11:0"},{"id":5423,"nodeType":"UncheckedBlock","src":"136095:893:0","statements":[{"expression":{"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5246,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136119:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136125:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136147:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136156:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136161:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"136156:8:0","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"136155:10:0","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136168:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"136155:14:0","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"136147:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5248,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"136131:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"136140:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"136131:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"136131:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136125:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136119:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5261,"nodeType":"ExpressionStatement","src":"136119:51:0"},{"expression":{"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136184:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5263,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136194:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136184:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5265,"nodeType":"ExpressionStatement","src":"136184:13:0"},{"expression":{"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"136211:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5267,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136221:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136211:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5269,"nodeType":"ExpressionStatement","src":"136211:13:0"},{"expression":{"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5270,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136239:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136245:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136266:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136275:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136280:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"136275:7:0","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"136274:9:0","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136286:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"136274:13:0","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"136266:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5272,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"136250:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"136259:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"136250:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"136250:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136245:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136239:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5285,"nodeType":"ExpressionStatement","src":"136239:49:0"},{"expression":{"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136302:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5287,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136312:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136302:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5289,"nodeType":"ExpressionStatement","src":"136302:13:0"},{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"136329:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5291,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136339:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136329:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5293,"nodeType":"ExpressionStatement","src":"136329:13:0"},{"expression":{"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5294,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136357:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136363:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136384:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136393:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136398:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"136393:7:0","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"136392:9:0","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136404:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"136392:13:0","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"136384:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5296,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"136368:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"136377:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"136368:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"136368:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136363:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136357:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5309,"nodeType":"ExpressionStatement","src":"136357:49:0"},{"expression":{"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136420:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5311,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136430:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136420:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5313,"nodeType":"ExpressionStatement","src":"136420:13:0"},{"expression":{"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"136447:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5315,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136457:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136447:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5317,"nodeType":"ExpressionStatement","src":"136447:13:0"},{"expression":{"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5318,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136475:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136481:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136502:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136511:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136516:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"136511:7:0","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"136510:9:0","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136522:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"136510:13:0","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"136502:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5320,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"136486:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"136495:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"136486:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"136486:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136481:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136475:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5333,"nodeType":"ExpressionStatement","src":"136475:49:0"},{"expression":{"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136538:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5335,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136548:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136538:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5337,"nodeType":"ExpressionStatement","src":"136538:13:0"},{"expression":{"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"136565:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5339,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136575:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136565:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5341,"nodeType":"ExpressionStatement","src":"136565:13:0"},{"expression":{"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5342,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136593:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136599:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136619:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136628:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136633:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"136628:6:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"136627:8:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136638:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"136627:12:0","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"136619:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5344,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"136603:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"136612:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"136603:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"136603:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136599:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136593:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5357,"nodeType":"ExpressionStatement","src":"136593:47:0"},{"expression":{"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136654:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5359,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136664:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136654:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5361,"nodeType":"ExpressionStatement","src":"136654:13:0"},{"expression":{"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"136681:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5363,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136691:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136681:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5365,"nodeType":"ExpressionStatement","src":"136681:13:0"},{"expression":{"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5366,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136709:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136715:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136735:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136744:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136749:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"136744:6:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"136743:8:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136754:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"136743:12:0","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"136735:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5368,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"136719:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"136728:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"136719:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"136719:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136715:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136709:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5381,"nodeType":"ExpressionStatement","src":"136709:47:0"},{"expression":{"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136770:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5383,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136780:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136770:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5385,"nodeType":"ExpressionStatement","src":"136770:13:0"},{"expression":{"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5386,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"136797:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5387,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136807:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136797:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5389,"nodeType":"ExpressionStatement","src":"136797:13:0"},{"expression":{"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5390,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136825:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136831:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136851:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136860:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136865:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"136860:6:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"136859:8:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136870:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"136859:12:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"136851:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5392,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"136835:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"136844:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"136835:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"136835:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136831:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136825:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5405,"nodeType":"ExpressionStatement","src":"136825:47:0"},{"expression":{"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136886:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5407,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136896:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136886:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5409,"nodeType":"ExpressionStatement","src":"136886:13:0"},{"expression":{"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5410,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"136913:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5411,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"136923:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136913:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5413,"nodeType":"ExpressionStatement","src":"136913:13:0"},{"expression":{"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"136941:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"136967:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136975:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"136967:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5415,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"136951:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"136960:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"136951:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"136951:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"136941:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5422,"nodeType":"ExpressionStatement","src":"136941:36:0"}]},{"expression":{"id":5424,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"137004:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5238,"id":5425,"nodeType":"Return","src":"136997:13:0"}]},"documentation":{"id":5232,"nodeType":"StructuredDocumentation","src":"135851:119:0","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5427,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"135984:4:0","nodeType":"FunctionDefinition","parameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"value","nameLocation":"135997:5:0","nodeType":"VariableDeclaration","scope":5427,"src":"135989:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5233,"name":"uint256","nodeType":"ElementaryTypeName","src":"135989:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"135988:15:0"},"returnParameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5427,"src":"136027:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5236,"name":"uint256","nodeType":"ElementaryTypeName","src":"136027:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"136026:9:0"},"scope":5818,"src":"135975:1042:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5460,"nodeType":"Block","src":"137250:175:0","statements":[{"id":5459,"nodeType":"UncheckedBlock","src":"137260:159:0","statements":[{"assignments":[5439],"declarations":[{"constant":false,"id":5439,"mutability":"mutable","name":"result","nameLocation":"137292:6:0","nodeType":"VariableDeclaration","scope":5459,"src":"137284:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5438,"name":"uint256","nodeType":"ElementaryTypeName","src":"137284:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5443,"initialValue":{"arguments":[{"id":5441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"137306:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5440,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5427,5461],"referencedDeclaration":5427,"src":"137301:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"137301:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"137284:28:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"137333:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5448,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"137375:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}],"id":5447,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"137358:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4278_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"137358:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137388:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"137393:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"137388:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"137402:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"137388:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"137358:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5445,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"137342:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"137351:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"137342:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"137342:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"137333:75:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5437,"id":5458,"nodeType":"Return","src":"137326:82:0"}]}]},"documentation":{"id":5428,"nodeType":"StructuredDocumentation","src":"137023:142:0","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5461,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"137179:4:0","nodeType":"FunctionDefinition","parameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"value","nameLocation":"137192:5:0","nodeType":"VariableDeclaration","scope":5461,"src":"137184:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5429,"name":"uint256","nodeType":"ElementaryTypeName","src":"137184:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5433,"mutability":"mutable","name":"rounding","nameLocation":"137208:8:0","nodeType":"VariableDeclaration","scope":5461,"src":"137199:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"},"typeName":{"id":5432,"nodeType":"UserDefinedTypeName","pathNode":{"id":5431,"name":"Rounding","nameLocations":["137199:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":4278,"src":"137199:8:0"},"referencedDeclaration":4278,"src":"137199:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"137183:34:0"},"returnParameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5461,"src":"137241:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"137241:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"137240:9:0"},"scope":5818,"src":"137170:255:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5589,"nodeType":"Block","src":"137618:854:0","statements":[{"assignments":[5470],"declarations":[{"constant":false,"id":5470,"mutability":"mutable","name":"result","nameLocation":"137636:6:0","nodeType":"VariableDeclaration","scope":5589,"src":"137628:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"137628:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5472,"initialValue":{"hexValue":"30","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137645:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"137628:18:0"},{"id":5586,"nodeType":"UncheckedBlock","src":"137656:787:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"137684:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137693:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137699:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"137693:8:0","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"137684:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5489,"nodeType":"IfStatement","src":"137680:103:0","trueBody":{"id":5488,"nodeType":"Block","src":"137703:80:0","statements":[{"expression":{"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"137721:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137730:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137736:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"137730:8:0","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"137721:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5483,"nodeType":"ExpressionStatement","src":"137721:17:0"},{"expression":{"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5484,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"137756:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137766:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"137756:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5487,"nodeType":"ExpressionStatement","src":"137756:12:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"137800:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137809:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137815:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"137809:8:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"137800:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5506,"nodeType":"IfStatement","src":"137796:103:0","trueBody":{"id":5505,"nodeType":"Block","src":"137819:80:0","statements":[{"expression":{"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"137837:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137846:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137852:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"137846:8:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"137837:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5500,"nodeType":"ExpressionStatement","src":"137837:17:0"},{"expression":{"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"137872:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137882:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"137872:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5504,"nodeType":"ExpressionStatement","src":"137872:12:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"137916:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137925:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137931:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"137925:8:0","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"137916:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5523,"nodeType":"IfStatement","src":"137912:103:0","trueBody":{"id":5522,"nodeType":"Block","src":"137935:80:0","statements":[{"expression":{"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"137953:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137962:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137968:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"137962:8:0","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"137953:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5517,"nodeType":"ExpressionStatement","src":"137953:17:0"},{"expression":{"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"137988:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137998:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"137988:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5521,"nodeType":"ExpressionStatement","src":"137988:12:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"138032:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138041:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138047:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"138041:7:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"138032:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5540,"nodeType":"IfStatement","src":"138028:100:0","trueBody":{"id":5539,"nodeType":"Block","src":"138050:78:0","statements":[{"expression":{"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"138068:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138077:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138083:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"138077:7:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"138068:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5534,"nodeType":"ExpressionStatement","src":"138068:16:0"},{"expression":{"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"138102:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138112:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"138102:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5538,"nodeType":"ExpressionStatement","src":"138102:11:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"138145:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138154:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138160:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"138154:7:0","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"138145:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5557,"nodeType":"IfStatement","src":"138141:100:0","trueBody":{"id":5556,"nodeType":"Block","src":"138163:78:0","statements":[{"expression":{"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"138181:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138190:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138196:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"138190:7:0","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"138181:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5551,"nodeType":"ExpressionStatement","src":"138181:16:0"},{"expression":{"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"138215:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138225:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"138215:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5555,"nodeType":"ExpressionStatement","src":"138215:11:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"138258:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138267:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138273:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"138267:7:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"138258:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5574,"nodeType":"IfStatement","src":"138254:100:0","trueBody":{"id":5573,"nodeType":"Block","src":"138276:78:0","statements":[{"expression":{"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"138294:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138303:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138309:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"138303:7:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"138294:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5568,"nodeType":"ExpressionStatement","src":"138294:16:0"},{"expression":{"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"138328:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138338:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"138328:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5572,"nodeType":"ExpressionStatement","src":"138328:11:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"138371:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138380:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138386:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"138380:7:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"138371:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5585,"nodeType":"IfStatement","src":"138367:66:0","trueBody":{"id":5584,"nodeType":"Block","src":"138389:44:0","statements":[{"expression":{"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"138407:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138417:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"138407:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5583,"nodeType":"ExpressionStatement","src":"138407:11:0"}]}}]},{"expression":{"id":5587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"138459:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5468,"id":5588,"nodeType":"Return","src":"138452:13:0"}]},"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"137431:120:0","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5590,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"137565:5:0","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"value","nameLocation":"137579:5:0","nodeType":"VariableDeclaration","scope":5590,"src":"137571:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"137571:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"137570:15:0"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5590,"src":"137609:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"137609:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"137608:9:0"},"scope":5818,"src":"137556:916:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5623,"nodeType":"Block","src":"138707:177:0","statements":[{"id":5622,"nodeType":"UncheckedBlock","src":"138717:161:0","statements":[{"assignments":[5602],"declarations":[{"constant":false,"id":5602,"mutability":"mutable","name":"result","nameLocation":"138749:6:0","nodeType":"VariableDeclaration","scope":5622,"src":"138741:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5601,"name":"uint256","nodeType":"ElementaryTypeName","src":"138741:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5606,"initialValue":{"arguments":[{"id":5604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"138764:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5603,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5590,5624],"referencedDeclaration":5590,"src":"138758:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"138758:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"138741:29:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"138791:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5611,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"138833:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}],"id":5610,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"138816:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4278_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"138816:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138846:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"138852:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"138846:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"138861:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"138846:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"138816:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5608,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"138800:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"138809:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"138800:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"138800:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"138791:76:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5600,"id":5621,"nodeType":"Return","src":"138784:83:0"}]}]},"documentation":{"id":5591,"nodeType":"StructuredDocumentation","src":"138478:143:0","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5624,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"138635:5:0","nodeType":"FunctionDefinition","parameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5593,"mutability":"mutable","name":"value","nameLocation":"138649:5:0","nodeType":"VariableDeclaration","scope":5624,"src":"138641:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5592,"name":"uint256","nodeType":"ElementaryTypeName","src":"138641:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5596,"mutability":"mutable","name":"rounding","nameLocation":"138665:8:0","nodeType":"VariableDeclaration","scope":5624,"src":"138656:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"},"typeName":{"id":5595,"nodeType":"UserDefinedTypeName","pathNode":{"id":5594,"name":"Rounding","nameLocations":["138656:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":4278,"src":"138656:8:0"},"referencedDeclaration":4278,"src":"138656:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"138640:34:0"},"returnParameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5624,"src":"138698:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5598,"name":"uint256","nodeType":"ElementaryTypeName","src":"138698:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"138697:9:0"},"scope":5818,"src":"138626:258:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5760,"nodeType":"Block","src":"139204:674:0","statements":[{"assignments":[5633],"declarations":[{"constant":false,"id":5633,"mutability":"mutable","name":"result","nameLocation":"139222:6:0","nodeType":"VariableDeclaration","scope":5760,"src":"139214:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5632,"name":"uint256","nodeType":"ElementaryTypeName","src":"139214:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5635,"initialValue":{"hexValue":"30","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139231:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"139214:18:0"},{"assignments":[5637],"declarations":[{"constant":false,"id":5637,"mutability":"mutable","name":"isGt","nameLocation":"139250:4:0","nodeType":"VariableDeclaration","scope":5760,"src":"139242:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5636,"name":"uint256","nodeType":"ElementaryTypeName","src":"139242:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5638,"nodeType":"VariableDeclarationStatement","src":"139242:12:0"},{"id":5757,"nodeType":"UncheckedBlock","src":"139264:585:0","statements":[{"expression":{"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5639,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139288:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"139311:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139320:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139325:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"139320:8:0","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"139319:10:0","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139332:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"139319:14:0","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"139311:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5640,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"139295:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"139304:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"139295:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"139295:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139288:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5652,"nodeType":"ExpressionStatement","src":"139288:46:0"},{"expression":{"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"139348:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5654,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139358:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139365:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"139358:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139348:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5658,"nodeType":"ExpressionStatement","src":"139348:20:0"},{"expression":{"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"139382:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5660,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139392:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139399:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"139392:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139382:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5664,"nodeType":"ExpressionStatement","src":"139382:19:0"},{"expression":{"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5665,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139416:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"139439:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139448:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139453:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"139448:7:0","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"139447:9:0","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139459:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"139447:13:0","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"139439:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5666,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"139423:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"139432:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"139423:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"139423:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139416:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5678,"nodeType":"ExpressionStatement","src":"139416:45:0"},{"expression":{"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"139475:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5680,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139485:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139492:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"139485:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139475:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5684,"nodeType":"ExpressionStatement","src":"139475:19:0"},{"expression":{"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"139508:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139518:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139525:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"139518:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139508:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5690,"nodeType":"ExpressionStatement","src":"139508:18:0"},{"expression":{"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5691,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139541:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"139564:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139573:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139578:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"139573:7:0","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"139572:9:0","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139584:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"139572:13:0","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"139564:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5692,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"139548:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"139557:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"139548:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"139548:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139541:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5704,"nodeType":"ExpressionStatement","src":"139541:45:0"},{"expression":{"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"139600:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5706,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139610:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139617:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"139610:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139600:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5710,"nodeType":"ExpressionStatement","src":"139600:19:0"},{"expression":{"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"139633:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5712,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139643:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139650:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"139643:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139633:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5716,"nodeType":"ExpressionStatement","src":"139633:18:0"},{"expression":{"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5717,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139666:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"139689:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139698:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139703:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"139698:7:0","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"139697:9:0","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139709:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"139697:13:0","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"139689:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5718,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"139673:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"139682:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"139673:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"139673:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139666:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5730,"nodeType":"ExpressionStatement","src":"139666:45:0"},{"expression":{"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"139725:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5732,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139735:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139742:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"139735:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139725:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5736,"nodeType":"ExpressionStatement","src":"139725:19:0"},{"expression":{"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"139758:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5738,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"139768:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139775:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"139768:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139758:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5742,"nodeType":"ExpressionStatement","src":"139758:18:0"},{"expression":{"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"139791:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"139817:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139826:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139831:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"139826:6:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"139825:8:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139836:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"139825:12:0","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"139817:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5744,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"139801:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"139810:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"139801:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"139801:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139791:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5756,"nodeType":"ExpressionStatement","src":"139791:47:0"}]},{"expression":{"id":5758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"139865:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5631,"id":5759,"nodeType":"Return","src":"139858:13:0"}]},"documentation":{"id":5625,"nodeType":"StructuredDocumentation","src":"138890:246:0","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5761,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"139150:6:0","nodeType":"FunctionDefinition","parameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"value","nameLocation":"139165:5:0","nodeType":"VariableDeclaration","scope":5761,"src":"139157:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"139157:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"139156:15:0"},"returnParameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5761,"src":"139195:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5629,"name":"uint256","nodeType":"ElementaryTypeName","src":"139195:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"139194:9:0"},"scope":5818,"src":"139141:737:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5797,"nodeType":"Block","src":"140115:184:0","statements":[{"id":5796,"nodeType":"UncheckedBlock","src":"140125:168:0","statements":[{"assignments":[5773],"declarations":[{"constant":false,"id":5773,"mutability":"mutable","name":"result","nameLocation":"140157:6:0","nodeType":"VariableDeclaration","scope":5796,"src":"140149:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5772,"name":"uint256","nodeType":"ElementaryTypeName","src":"140149:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5777,"initialValue":{"arguments":[{"id":5775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"140173:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5774,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5761,5798],"referencedDeclaration":5761,"src":"140166:6:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"140166:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"140149:30:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"140200:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5782,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"140242:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}],"id":5781,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"140225:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4278_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"140225:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"140255:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5785,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"140261:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"140271:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"140261:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"140260:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"140255:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"140276:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"140255:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"140225:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5779,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"140209:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2839_$","typeString":"type(library SafeCast)"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"140218:6:0","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"140209:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"140209:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"140200:82:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5771,"id":5795,"nodeType":"Return","src":"140193:89:0"}]}]},"documentation":{"id":5762,"nodeType":"StructuredDocumentation","src":"139884:144:0","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5798,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"140042:6:0","nodeType":"FunctionDefinition","parameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5764,"mutability":"mutable","name":"value","nameLocation":"140057:5:0","nodeType":"VariableDeclaration","scope":5798,"src":"140049:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5763,"name":"uint256","nodeType":"ElementaryTypeName","src":"140049:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5767,"mutability":"mutable","name":"rounding","nameLocation":"140073:8:0","nodeType":"VariableDeclaration","scope":5798,"src":"140064:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"},"typeName":{"id":5766,"nodeType":"UserDefinedTypeName","pathNode":{"id":5765,"name":"Rounding","nameLocations":["140064:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":4278,"src":"140064:8:0"},"referencedDeclaration":4278,"src":"140064:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"140048:34:0"},"returnParameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5798,"src":"140106:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5769,"name":"uint256","nodeType":"ElementaryTypeName","src":"140106:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"140105:9:0"},"scope":5818,"src":"140033:266:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5816,"nodeType":"Block","src":"140497:48:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5809,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"140520:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}],"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"140514:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5807,"name":"uint8","nodeType":"ElementaryTypeName","src":"140514:5:0","typeDescriptions":{}}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"140514:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"140532:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"140514:19:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"140537:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"140514:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5806,"id":5815,"nodeType":"Return","src":"140507:31:0"}]},"documentation":{"id":5799,"nodeType":"StructuredDocumentation","src":"140305:113:0","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5817,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"140432:16:0","nodeType":"FunctionDefinition","parameters":{"id":5803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"rounding","nameLocation":"140458:8:0","nodeType":"VariableDeclaration","scope":5817,"src":"140449:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"},"typeName":{"id":5801,"nodeType":"UserDefinedTypeName","pathNode":{"id":5800,"name":"Rounding","nameLocations":["140449:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":4278,"src":"140449:8:0"},"referencedDeclaration":4278,"src":"140449:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"140448:19:0"},"returnParameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5817,"src":"140491:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5804,"name":"bool","nodeType":"ElementaryTypeName","src":"140491:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"140490:6:0"},"scope":5818,"src":"140423:122:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"113883:26664:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":5820,"name":"IBaseEscrow","nameLocations":["140868:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":4272,"src":"140868:11:0"},"id":5821,"nodeType":"InheritanceSpecifier","src":"140868:11:0"}],"canonicalName":"IEscrow","contractDependencies":[],"contractKind":"interface","documentation":{"id":5819,"nodeType":"StructuredDocumentation","src":"140617:229:0","text":" @title Escrow interface for cross-chain atomic swap.\n @notice Interface implies locking funds initially and then unlocking them with verification of the secret presented.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":5828,"linearizedBaseContracts":[5828,4272],"name":"IEscrow","nameLocation":"140857:7:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5822,"nodeType":"StructuredDocumentation","src":"140886:60:0","text":"@notice Returns the bytecode hash of the proxy contract."},"functionSelector":"34862b6a","id":5827,"implemented":false,"kind":"function","modifiers":[],"name":"PROXY_BYTECODE_HASH","nameLocation":"140960:19:0","nodeType":"FunctionDefinition","parameters":{"id":5823,"nodeType":"ParameterList","parameters":[],"src":"140979:2:0"},"returnParameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5827,"src":"141005:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"141005:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"141004:9:0"},"scope":5828,"src":"140951:63:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10322,"src":"140847:213:0","usedErrors":[4224,4226,4228,4230,4232],"usedEvents":[4210,4217,4222]},{"abstract":false,"baseContracts":[],"canonicalName":"IEscrowFactory","contractDependencies":[],"contractKind":"interface","documentation":{"id":5829,"nodeType":"StructuredDocumentation","src":"141137:254:0","text":" @title Escrow Factory interface for cross-chain atomic swap.\n @notice Interface to deploy escrow contracts for the destination chain and to get the deterministic address of escrow on both chains.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":5922,"linearizedBaseContracts":[5922],"name":"IEscrowFactory","nameLocation":"141402:14:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IEscrowFactory.ExtraDataArgs","id":5842,"members":[{"constant":false,"id":5831,"mutability":"mutable","name":"hashlockInfo","nameLocation":"141462:12:0","nodeType":"VariableDeclaration","scope":5842,"src":"141454:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"141454:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5833,"mutability":"mutable","name":"dstChainId","nameLocation":"141568:10:0","nodeType":"VariableDeclaration","scope":5842,"src":"141560:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5832,"name":"uint256","nodeType":"ElementaryTypeName","src":"141560:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5836,"mutability":"mutable","name":"dstToken","nameLocation":"141596:8:0","nodeType":"VariableDeclaration","scope":5842,"src":"141588:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":5835,"nodeType":"UserDefinedTypeName","pathNode":{"id":5834,"name":"Address","nameLocations":["141588:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"141588:7:0"},"referencedDeclaration":3,"src":"141588:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":5838,"mutability":"mutable","name":"deposits","nameLocation":"141622:8:0","nodeType":"VariableDeclaration","scope":5842,"src":"141614:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5837,"name":"uint256","nodeType":"ElementaryTypeName","src":"141614:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5841,"mutability":"mutable","name":"timelocks","nameLocation":"141650:9:0","nodeType":"VariableDeclaration","scope":5842,"src":"141640:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"},"typeName":{"id":5840,"nodeType":"UserDefinedTypeName","pathNode":{"id":5839,"name":"Timelocks","nameLocations":["141640:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"141640:9:0"},"referencedDeclaration":3086,"src":"141640:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"visibility":"internal"}],"name":"ExtraDataArgs","nameLocation":"141430:13:0","nodeType":"StructDefinition","scope":5922,"src":"141423:243:0","visibility":"public"},{"canonicalName":"IEscrowFactory.DstImmutablesComplement","id":5855,"members":[{"constant":false,"id":5845,"mutability":"mutable","name":"maker","nameLocation":"141721:5:0","nodeType":"VariableDeclaration","scope":5855,"src":"141713:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":5844,"nodeType":"UserDefinedTypeName","pathNode":{"id":5843,"name":"Address","nameLocations":["141713:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"141713:7:0"},"referencedDeclaration":3,"src":"141713:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":5847,"mutability":"mutable","name":"amount","nameLocation":"141744:6:0","nodeType":"VariableDeclaration","scope":5855,"src":"141736:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"141736:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5850,"mutability":"mutable","name":"token","nameLocation":"141768:5:0","nodeType":"VariableDeclaration","scope":5855,"src":"141760:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":5849,"nodeType":"UserDefinedTypeName","pathNode":{"id":5848,"name":"Address","nameLocations":["141760:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"141760:7:0"},"referencedDeclaration":3,"src":"141760:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":5852,"mutability":"mutable","name":"safetyDeposit","nameLocation":"141791:13:0","nodeType":"VariableDeclaration","scope":5855,"src":"141783:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5851,"name":"uint256","nodeType":"ElementaryTypeName","src":"141783:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5854,"mutability":"mutable","name":"chainId","nameLocation":"141822:7:0","nodeType":"VariableDeclaration","scope":5855,"src":"141814:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5853,"name":"uint256","nodeType":"ElementaryTypeName","src":"141814:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"DstImmutablesComplement","nameLocation":"141679:23:0","nodeType":"StructDefinition","scope":5922,"src":"141672:164:0","visibility":"public"},{"errorSelector":"34f5151d","id":5857,"name":"InsufficientEscrowBalance","nameLocation":"141848:25:0","nodeType":"ErrorDefinition","parameters":{"id":5856,"nodeType":"ParameterList","parameters":[],"src":"141873:2:0"},"src":"141842:34:0"},{"errorSelector":"f4840e96","id":5859,"name":"InvalidCreationTime","nameLocation":"141887:19:0","nodeType":"ErrorDefinition","parameters":{"id":5858,"nodeType":"ParameterList","parameters":[],"src":"141906:2:0"},"src":"141881:28:0"},{"errorSelector":"eab3a174","id":5861,"name":"InvalidPartialFill","nameLocation":"141920:18:0","nodeType":"ErrorDefinition","parameters":{"id":5860,"nodeType":"ParameterList","parameters":[],"src":"141938:2:0"},"src":"141914:27:0"},{"errorSelector":"10d629d3","id":5863,"name":"InvalidSecretsAmount","nameLocation":"141952:20:0","nodeType":"ErrorDefinition","parameters":{"id":5862,"nodeType":"ParameterList","parameters":[],"src":"141972:2:0"},"src":"141946:29:0"},{"anonymous":false,"documentation":{"id":5864,"nodeType":"StructuredDocumentation","src":"141981:348:0","text":" @notice Emitted on EscrowSrc deployment to recreate EscrowSrc and EscrowDst immutables off-chain.\n @param srcImmutables The immutables of the escrow contract that are used in deployment on the source chain.\n @param dstImmutablesComplement Additional immutables related to the escrow contract on the destination chain."},"eventSelector":"0e534c62f0afd2fa0f0fa71198e8aa2d549f24daf2bb47de0d5486c7ce9288ca","id":5872,"name":"SrcEscrowCreated","nameLocation":"142340:16:0","nodeType":"EventDefinition","parameters":{"id":5871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5867,"indexed":false,"mutability":"mutable","name":"srcImmutables","nameLocation":"142380:13:0","nodeType":"VariableDeclaration","scope":5872,"src":"142357:36:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":5866,"nodeType":"UserDefinedTypeName","pathNode":{"id":5865,"name":"IBaseEscrow.Immutables","nameLocations":["142357:11:0","142369:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"142357:22:0"},"referencedDeclaration":4207,"src":"142357:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"},{"constant":false,"id":5870,"indexed":false,"mutability":"mutable","name":"dstImmutablesComplement","nameLocation":"142419:23:0","nodeType":"VariableDeclaration","scope":5872,"src":"142395:47:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_DstImmutablesComplement_$5855_memory_ptr","typeString":"struct IEscrowFactory.DstImmutablesComplement"},"typeName":{"id":5869,"nodeType":"UserDefinedTypeName","pathNode":{"id":5868,"name":"DstImmutablesComplement","nameLocations":["142395:23:0"],"nodeType":"IdentifierPath","referencedDeclaration":5855,"src":"142395:23:0"},"referencedDeclaration":5855,"src":"142395:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_DstImmutablesComplement_$5855_storage_ptr","typeString":"struct IEscrowFactory.DstImmutablesComplement"}},"visibility":"internal"}],"src":"142356:87:0"},"src":"142334:110:0"},{"anonymous":false,"documentation":{"id":5873,"nodeType":"StructuredDocumentation","src":"142449:208:0","text":" @notice Emitted on EscrowDst deployment.\n @param escrow The address of the created escrow.\n @param hashlock The hash of the secret.\n @param taker The address of the taker."},"eventSelector":"c30e111dcc74fddc2c3a4d98ffb97adec4485c0a687946bf5b22c2a99c7ff96d","id":5882,"name":"DstEscrowCreated","nameLocation":"142668:16:0","nodeType":"EventDefinition","parameters":{"id":5881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"indexed":false,"mutability":"mutable","name":"escrow","nameLocation":"142693:6:0","nodeType":"VariableDeclaration","scope":5882,"src":"142685:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5874,"name":"address","nodeType":"ElementaryTypeName","src":"142685:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5877,"indexed":false,"mutability":"mutable","name":"hashlock","nameLocation":"142709:8:0","nodeType":"VariableDeclaration","scope":5882,"src":"142701:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"142701:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5880,"indexed":false,"mutability":"mutable","name":"taker","nameLocation":"142727:5:0","nodeType":"VariableDeclaration","scope":5882,"src":"142719:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":5879,"nodeType":"UserDefinedTypeName","pathNode":{"id":5878,"name":"Address","nameLocations":["142719:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"142719:7:0"},"referencedDeclaration":3,"src":"142719:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"}],"src":"142684:49:0"},"src":"142662:72:0"},{"documentation":{"id":5883,"nodeType":"StructuredDocumentation","src":"142786:70:0","text":"@notice Returns the address of implementation on the source chain."},"functionSelector":"7040f173","id":5888,"implemented":false,"kind":"function","modifiers":[],"name":"ESCROW_SRC_IMPLEMENTATION","nameLocation":"142870:25:0","nodeType":"FunctionDefinition","parameters":{"id":5884,"nodeType":"ParameterList","parameters":[],"src":"142895:2:0"},"returnParameters":{"id":5887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5888,"src":"142921:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5885,"name":"address","nodeType":"ElementaryTypeName","src":"142921:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"142920:9:0"},"scope":5922,"src":"142861:69:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5889,"nodeType":"StructuredDocumentation","src":"142935:75:0","text":"@notice Returns the address of implementation on the destination chain."},"functionSelector":"ba551177","id":5894,"implemented":false,"kind":"function","modifiers":[],"name":"ESCROW_DST_IMPLEMENTATION","nameLocation":"143024:25:0","nodeType":"FunctionDefinition","parameters":{"id":5890,"nodeType":"ParameterList","parameters":[],"src":"143049:2:0"},"returnParameters":{"id":5893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5894,"src":"143075:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5891,"name":"address","nodeType":"ElementaryTypeName","src":"143075:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"143074:9:0"},"scope":5922,"src":"143015:69:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5895,"nodeType":"StructuredDocumentation","src":"143135:468:0","text":" @notice Creates a new escrow contract for taker on the destination chain.\n @dev The caller must send the safety deposit in the native token along with the function call\n and approve the destination token to be transferred to the created escrow.\n @param dstImmutables The immutables of the escrow contract that are used in deployment.\n @param srcCancellationTimestamp The start of the cancellation period for the source chain."},"functionSelector":"dea024e4","id":5903,"implemented":false,"kind":"function","modifiers":[],"name":"createDstEscrow","nameLocation":"143617:15:0","nodeType":"FunctionDefinition","parameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5898,"mutability":"mutable","name":"dstImmutables","nameLocation":"143665:13:0","nodeType":"VariableDeclaration","scope":5903,"src":"143633:45:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":5897,"nodeType":"UserDefinedTypeName","pathNode":{"id":5896,"name":"IBaseEscrow.Immutables","nameLocations":["143633:11:0","143645:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"143633:22:0"},"referencedDeclaration":4207,"src":"143633:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"},{"constant":false,"id":5900,"mutability":"mutable","name":"srcCancellationTimestamp","nameLocation":"143688:24:0","nodeType":"VariableDeclaration","scope":5903,"src":"143680:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5899,"name":"uint256","nodeType":"ElementaryTypeName","src":"143680:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"143632:81:0"},"returnParameters":{"id":5902,"nodeType":"ParameterList","parameters":[],"src":"143730:0:0"},"scope":5922,"src":"143608:123:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":5904,"nodeType":"StructuredDocumentation","src":"143737:244:0","text":" @notice Returns the deterministic address of the source escrow based on the salt.\n @param immutables The immutable arguments used to compute salt for escrow deployment.\n @return The computed address of the escrow."},"functionSelector":"fb6bd47e","id":5912,"implemented":false,"kind":"function","modifiers":[],"name":"addressOfEscrowSrc","nameLocation":"143995:18:0","nodeType":"FunctionDefinition","parameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"immutables","nameLocation":"144046:10:0","nodeType":"VariableDeclaration","scope":5912,"src":"144014:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":5906,"nodeType":"UserDefinedTypeName","pathNode":{"id":5905,"name":"IBaseEscrow.Immutables","nameLocations":["144014:11:0","144026:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"144014:22:0"},"referencedDeclaration":4207,"src":"144014:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"144013:44:0"},"returnParameters":{"id":5911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5912,"src":"144081:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5909,"name":"address","nodeType":"ElementaryTypeName","src":"144081:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"144080:9:0"},"scope":5922,"src":"143986:104:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5913,"nodeType":"StructuredDocumentation","src":"144096:249:0","text":" @notice Returns the deterministic address of the destination escrow based on the salt.\n @param immutables The immutable arguments used to compute salt for escrow deployment.\n @return The computed address of the escrow."},"functionSelector":"be58e91c","id":5921,"implemented":false,"kind":"function","modifiers":[],"name":"addressOfEscrowDst","nameLocation":"144359:18:0","nodeType":"FunctionDefinition","parameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"immutables","nameLocation":"144410:10:0","nodeType":"VariableDeclaration","scope":5921,"src":"144378:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":5915,"nodeType":"UserDefinedTypeName","pathNode":{"id":5914,"name":"IBaseEscrow.Immutables","nameLocations":["144378:11:0","144390:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"144378:22:0"},"referencedDeclaration":4207,"src":"144378:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"144377:44:0"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5921,"src":"144445:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5918,"name":"address","nodeType":"ElementaryTypeName","src":"144445:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"144444:9:0"},"scope":5922,"src":"144350:104:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10322,"src":"141392:3064:0","usedErrors":[5857,5859,5861,5863],"usedEvents":[5872,5882]},{"abstract":false,"baseContracts":[],"canonicalName":"IOrderMixin","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6172,"linearizedBaseContracts":[6172],"name":"IOrderMixin","nameLocation":"144565:11:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IOrderMixin.Order","id":5944,"members":[{"constant":false,"id":5924,"mutability":"mutable","name":"salt","nameLocation":"144614:4:0","nodeType":"VariableDeclaration","scope":5944,"src":"144606:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5923,"name":"uint256","nodeType":"ElementaryTypeName","src":"144606:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5927,"mutability":"mutable","name":"maker","nameLocation":"144636:5:0","nodeType":"VariableDeclaration","scope":5944,"src":"144628:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":5926,"nodeType":"UserDefinedTypeName","pathNode":{"id":5925,"name":"Address","nameLocations":["144628:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"144628:7:0"},"referencedDeclaration":3,"src":"144628:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":5930,"mutability":"mutable","name":"receiver","nameLocation":"144659:8:0","nodeType":"VariableDeclaration","scope":5944,"src":"144651:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":5929,"nodeType":"UserDefinedTypeName","pathNode":{"id":5928,"name":"Address","nameLocations":["144651:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"144651:7:0"},"referencedDeclaration":3,"src":"144651:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":5933,"mutability":"mutable","name":"makerAsset","nameLocation":"144685:10:0","nodeType":"VariableDeclaration","scope":5944,"src":"144677:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":5932,"nodeType":"UserDefinedTypeName","pathNode":{"id":5931,"name":"Address","nameLocations":["144677:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"144677:7:0"},"referencedDeclaration":3,"src":"144677:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":5936,"mutability":"mutable","name":"takerAsset","nameLocation":"144713:10:0","nodeType":"VariableDeclaration","scope":5944,"src":"144705:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},"typeName":{"id":5935,"nodeType":"UserDefinedTypeName","pathNode":{"id":5934,"name":"Address","nameLocations":["144705:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"144705:7:0"},"referencedDeclaration":3,"src":"144705:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"visibility":"internal"},{"constant":false,"id":5938,"mutability":"mutable","name":"makingAmount","nameLocation":"144741:12:0","nodeType":"VariableDeclaration","scope":5944,"src":"144733:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5937,"name":"uint256","nodeType":"ElementaryTypeName","src":"144733:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5940,"mutability":"mutable","name":"takingAmount","nameLocation":"144771:12:0","nodeType":"VariableDeclaration","scope":5944,"src":"144763:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5939,"name":"uint256","nodeType":"ElementaryTypeName","src":"144763:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5943,"mutability":"mutable","name":"makerTraits","nameLocation":"144805:11:0","nodeType":"VariableDeclaration","scope":5944,"src":"144793:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":5942,"nodeType":"UserDefinedTypeName","pathNode":{"id":5941,"name":"MakerTraits","nameLocations":["144793:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"144793:11:0"},"referencedDeclaration":606,"src":"144793:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"}],"name":"Order","nameLocation":"144590:5:0","nodeType":"StructDefinition","scope":6172,"src":"144583:240:0","visibility":"public"},{"errorSelector":"f71fbda2","id":5946,"name":"InvalidatedOrder","nameLocation":"144835:16:0","nodeType":"ErrorDefinition","parameters":{"id":5945,"nodeType":"ParameterList","parameters":[],"src":"144851:2:0"},"src":"144829:25:0"},{"errorSelector":"7f902a93","id":5948,"name":"TakingAmountExceeded","nameLocation":"144865:20:0","nodeType":"ErrorDefinition","parameters":{"id":5947,"nodeType":"ParameterList","parameters":[],"src":"144885:2:0"},"src":"144859:29:0"},{"errorSelector":"d4dfdafe","id":5950,"name":"PrivateOrder","nameLocation":"144899:12:0","nodeType":"ErrorDefinition","parameters":{"id":5949,"nodeType":"ParameterList","parameters":[],"src":"144911:2:0"},"src":"144893:21:0"},{"errorSelector":"5cd5d233","id":5952,"name":"BadSignature","nameLocation":"144925:12:0","nodeType":"ErrorDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[],"src":"144937:2:0"},"src":"144919:21:0"},{"errorSelector":"c56873ba","id":5954,"name":"OrderExpired","nameLocation":"144951:12:0","nodeType":"ErrorDefinition","parameters":{"id":5953,"nodeType":"ParameterList","parameters":[],"src":"144963:2:0"},"src":"144945:21:0"},{"errorSelector":"e3e8b052","id":5956,"name":"WrongSeriesNonce","nameLocation":"144977:16:0","nodeType":"ErrorDefinition","parameters":{"id":5955,"nodeType":"ParameterList","parameters":[],"src":"144993:2:0"},"src":"144971:25:0"},{"errorSelector":"fba5a276","id":5958,"name":"SwapWithZeroAmount","nameLocation":"145007:18:0","nodeType":"ErrorDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[],"src":"145025:2:0"},"src":"145001:27:0"},{"errorSelector":"8ef0017c","id":5960,"name":"PartialFillNotAllowed","nameLocation":"145039:21:0","nodeType":"ErrorDefinition","parameters":{"id":5959,"nodeType":"ParameterList","parameters":[],"src":"145060:2:0"},"src":"145033:30:0"},{"errorSelector":"86bffaca","id":5962,"name":"OrderIsNotSuitableForMassInvalidation","nameLocation":"145074:37:0","nodeType":"ErrorDefinition","parameters":{"id":5961,"nodeType":"ParameterList","parameters":[],"src":"145111:2:0"},"src":"145068:46:0"},{"errorSelector":"9e744e25","id":5964,"name":"EpochManagerAndBitInvalidatorsAreIncompatible","nameLocation":"145125:45:0","nodeType":"ErrorDefinition","parameters":{"id":5963,"nodeType":"ParameterList","parameters":[],"src":"145170:2:0"},"src":"145119:54:0"},{"errorSelector":"c5f2be51","id":5966,"name":"ReentrancyDetected","nameLocation":"145184:18:0","nodeType":"ErrorDefinition","parameters":{"id":5965,"nodeType":"ParameterList","parameters":[],"src":"145202:2:0"},"src":"145178:27:0"},{"errorSelector":"b6629c02","id":5968,"name":"PredicateIsNotTrue","nameLocation":"145216:18:0","nodeType":"ErrorDefinition","parameters":{"id":5967,"nodeType":"ParameterList","parameters":[],"src":"145234:2:0"},"src":"145210:27:0"},{"errorSelector":"fb8ae129","id":5970,"name":"TakingAmountTooHigh","nameLocation":"145248:19:0","nodeType":"ErrorDefinition","parameters":{"id":5969,"nodeType":"ParameterList","parameters":[],"src":"145267:2:0"},"src":"145242:28:0"},{"errorSelector":"481ea392","id":5972,"name":"MakingAmountTooLow","nameLocation":"145281:18:0","nodeType":"ErrorDefinition","parameters":{"id":5971,"nodeType":"ParameterList","parameters":[],"src":"145299:2:0"},"src":"145275:27:0"},{"errorSelector":"70a03f48","id":5974,"name":"TransferFromMakerToTakerFailed","nameLocation":"145313:30:0","nodeType":"ErrorDefinition","parameters":{"id":5973,"nodeType":"ParameterList","parameters":[],"src":"145343:2:0"},"src":"145307:39:0"},{"errorSelector":"478a5205","id":5976,"name":"TransferFromTakerToMakerFailed","nameLocation":"145357:30:0","nodeType":"ErrorDefinition","parameters":{"id":5975,"nodeType":"ParameterList","parameters":[],"src":"145387:2:0"},"src":"145351:39:0"},{"errorSelector":"d97cd9d8","id":5978,"name":"MismatchArraysLengths","nameLocation":"145401:21:0","nodeType":"ErrorDefinition","parameters":{"id":5977,"nodeType":"ParameterList","parameters":[],"src":"145422:2:0"},"src":"145395:30:0"},{"errorSelector":"2aefd060","id":5980,"name":"InvalidPermit2Transfer","nameLocation":"145436:22:0","nodeType":"ErrorDefinition","parameters":{"id":5979,"nodeType":"ParameterList","parameters":[],"src":"145458:2:0"},"src":"145430:31:0"},{"errorSelector":"1934afc8","id":5986,"name":"SimulationResults","nameLocation":"145472:17:0","nodeType":"ErrorDefinition","parameters":{"id":5985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5982,"mutability":"mutable","name":"success","nameLocation":"145495:7:0","nodeType":"VariableDeclaration","scope":5986,"src":"145490:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5981,"name":"bool","nodeType":"ElementaryTypeName","src":"145490:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5984,"mutability":"mutable","name":"res","nameLocation":"145510:3:0","nodeType":"VariableDeclaration","scope":5986,"src":"145504:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5983,"name":"bytes","nodeType":"ElementaryTypeName","src":"145504:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"145489:25:0"},"src":"145466:49:0"},{"anonymous":false,"documentation":{"id":5987,"nodeType":"StructuredDocumentation","src":"145521:181:0","text":" @notice Emitted when order gets filled\n @param orderHash Hash of the order\n @param remainingAmount Amount of the maker asset that remains to be filled"},"eventSelector":"fec331350fce78ba658e082a71da20ac9f8d798a99b3c79681c8440cbfe77e07","id":5993,"name":"OrderFilled","nameLocation":"145713:11:0","nodeType":"EventDefinition","parameters":{"id":5992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"indexed":false,"mutability":"mutable","name":"orderHash","nameLocation":"145742:9:0","nodeType":"VariableDeclaration","scope":5993,"src":"145734:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"145734:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5991,"indexed":false,"mutability":"mutable","name":"remainingAmount","nameLocation":"145769:15:0","nodeType":"VariableDeclaration","scope":5993,"src":"145761:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5990,"name":"uint256","nodeType":"ElementaryTypeName","src":"145761:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"145724:66:0"},"src":"145707:84:0"},{"anonymous":false,"documentation":{"id":5994,"nodeType":"StructuredDocumentation","src":"145797:130:0","text":" @notice Emitted when order without `useBitInvalidator` gets cancelled\n @param orderHash Hash of the order"},"eventSelector":"5152abf959f6564662358c2e52b702259b78bac5ee7842a0f01937e670efcc7d","id":5998,"name":"OrderCancelled","nameLocation":"145938:14:0","nodeType":"EventDefinition","parameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"indexed":false,"mutability":"mutable","name":"orderHash","nameLocation":"145970:9:0","nodeType":"VariableDeclaration","scope":5998,"src":"145962:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"145962:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"145952:33:0"},"src":"145932:54:0"},{"anonymous":false,"documentation":{"id":5999,"nodeType":"StructuredDocumentation","src":"145992:210:0","text":" @notice Emitted when order with `useBitInvalidator` gets cancelled\n @param maker Maker address\n @param slotIndex Slot index that was updated\n @param slotValue New slot value"},"eventSelector":"cda0f7e73d07bdb14b141f2cf4745926629a1b63e7c6a3dd8a80232cb459a850","id":6007,"name":"BitInvalidatorUpdated","nameLocation":"146213:21:0","nodeType":"EventDefinition","parameters":{"id":6006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6001,"indexed":true,"mutability":"mutable","name":"maker","nameLocation":"146260:5:0","nodeType":"VariableDeclaration","scope":6007,"src":"146244:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6000,"name":"address","nodeType":"ElementaryTypeName","src":"146244:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6003,"indexed":false,"mutability":"mutable","name":"slotIndex","nameLocation":"146283:9:0","nodeType":"VariableDeclaration","scope":6007,"src":"146275:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6002,"name":"uint256","nodeType":"ElementaryTypeName","src":"146275:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6005,"indexed":false,"mutability":"mutable","name":"slotValue","nameLocation":"146310:9:0","nodeType":"VariableDeclaration","scope":6007,"src":"146302:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6004,"name":"uint256","nodeType":"ElementaryTypeName","src":"146302:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"146234:91:0"},"src":"146207:119:0"},{"documentation":{"id":6008,"nodeType":"StructuredDocumentation","src":"146332:300:0","text":" @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n @param maker Maker address\n @param slot Slot number to return bitmask for\n @return result Each bit represents whether corresponding was already invalidated"},"functionSelector":"143e86a7","id":6017,"implemented":false,"kind":"function","modifiers":[],"name":"bitInvalidatorForOrder","nameLocation":"146646:22:0","nodeType":"FunctionDefinition","parameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"maker","nameLocation":"146677:5:0","nodeType":"VariableDeclaration","scope":6017,"src":"146669:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6009,"name":"address","nodeType":"ElementaryTypeName","src":"146669:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6012,"mutability":"mutable","name":"slot","nameLocation":"146692:4:0","nodeType":"VariableDeclaration","scope":6017,"src":"146684:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6011,"name":"uint256","nodeType":"ElementaryTypeName","src":"146684:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"146668:29:0"},"returnParameters":{"id":6016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6015,"mutability":"mutable","name":"result","nameLocation":"146728:6:0","nodeType":"VariableDeclaration","scope":6017,"src":"146720:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6014,"name":"uint256","nodeType":"ElementaryTypeName","src":"146720:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"146719:16:0"},"scope":6172,"src":"146637:99:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6018,"nodeType":"StructuredDocumentation","src":"146742:222:0","text":" @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n @param orderHash Hash of the order\n @return remaining Remaining amount of the order"},"functionSelector":"435b9789","id":6027,"implemented":false,"kind":"function","modifiers":[],"name":"remainingInvalidatorForOrder","nameLocation":"146978:28:0","nodeType":"FunctionDefinition","parameters":{"id":6023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6020,"mutability":"mutable","name":"maker","nameLocation":"147015:5:0","nodeType":"VariableDeclaration","scope":6027,"src":"147007:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6019,"name":"address","nodeType":"ElementaryTypeName","src":"147007:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6022,"mutability":"mutable","name":"orderHash","nameLocation":"147030:9:0","nodeType":"VariableDeclaration","scope":6027,"src":"147022:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"147022:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"147006:34:0"},"returnParameters":{"id":6026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6025,"mutability":"mutable","name":"remaining","nameLocation":"147071:9:0","nodeType":"VariableDeclaration","scope":6027,"src":"147063:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6024,"name":"uint256","nodeType":"ElementaryTypeName","src":"147063:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"147062:19:0"},"scope":6172,"src":"146969:113:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6028,"nodeType":"StructuredDocumentation","src":"147088:287:0","text":" @notice Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\n @param orderHash Hash of the order\n @return remainingRaw Inverse of the remaining amount of the order if order was filled at least once, otherwise 0"},"functionSelector":"c2a40753","id":6037,"implemented":false,"kind":"function","modifiers":[],"name":"rawRemainingInvalidatorForOrder","nameLocation":"147389:31:0","nodeType":"FunctionDefinition","parameters":{"id":6033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6030,"mutability":"mutable","name":"maker","nameLocation":"147429:5:0","nodeType":"VariableDeclaration","scope":6037,"src":"147421:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6029,"name":"address","nodeType":"ElementaryTypeName","src":"147421:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6032,"mutability":"mutable","name":"orderHash","nameLocation":"147444:9:0","nodeType":"VariableDeclaration","scope":6037,"src":"147436:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"147436:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"147420:34:0"},"returnParameters":{"id":6036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6035,"mutability":"mutable","name":"remainingRaw","nameLocation":"147485:12:0","nodeType":"VariableDeclaration","scope":6037,"src":"147477:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6034,"name":"uint256","nodeType":"ElementaryTypeName","src":"147477:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"147476:22:0"},"scope":6172,"src":"147380:119:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6038,"nodeType":"StructuredDocumentation","src":"147505:144:0","text":" @notice Cancels order's quote\n @param makerTraits Order makerTraits\n @param orderHash Hash of the order to cancel"},"functionSelector":"b68fb020","id":6046,"implemented":false,"kind":"function","modifiers":[],"name":"cancelOrder","nameLocation":"147663:11:0","nodeType":"FunctionDefinition","parameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6041,"mutability":"mutable","name":"makerTraits","nameLocation":"147687:11:0","nodeType":"VariableDeclaration","scope":6046,"src":"147675:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":6040,"nodeType":"UserDefinedTypeName","pathNode":{"id":6039,"name":"MakerTraits","nameLocations":["147675:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"147675:11:0"},"referencedDeclaration":606,"src":"147675:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"},{"constant":false,"id":6043,"mutability":"mutable","name":"orderHash","nameLocation":"147708:9:0","nodeType":"VariableDeclaration","scope":6046,"src":"147700:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"147700:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"147674:44:0"},"returnParameters":{"id":6045,"nodeType":"ParameterList","parameters":[],"src":"147727:0:0"},"scope":6172,"src":"147654:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6047,"nodeType":"StructuredDocumentation","src":"147734:151:0","text":" @notice Cancels orders' quotes\n @param makerTraits Orders makerTraits\n @param orderHashes Hashes of the orders to cancel"},"functionSelector":"89e7c650","id":6057,"implemented":false,"kind":"function","modifiers":[],"name":"cancelOrders","nameLocation":"147899:12:0","nodeType":"FunctionDefinition","parameters":{"id":6055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6051,"mutability":"mutable","name":"makerTraits","nameLocation":"147935:11:0","nodeType":"VariableDeclaration","scope":6057,"src":"147912:34:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_userDefinedValueType$_MakerTraits_$606_$dyn_calldata_ptr","typeString":"MakerTraits[]"},"typeName":{"baseType":{"id":6049,"nodeType":"UserDefinedTypeName","pathNode":{"id":6048,"name":"MakerTraits","nameLocations":["147912:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"147912:11:0"},"referencedDeclaration":606,"src":"147912:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"id":6050,"nodeType":"ArrayTypeName","src":"147912:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_userDefinedValueType$_MakerTraits_$606_$dyn_storage_ptr","typeString":"MakerTraits[]"}},"visibility":"internal"},{"constant":false,"id":6054,"mutability":"mutable","name":"orderHashes","nameLocation":"147967:11:0","nodeType":"VariableDeclaration","scope":6057,"src":"147948:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"147948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6053,"nodeType":"ArrayTypeName","src":"147948:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"147911:68:0"},"returnParameters":{"id":6056,"nodeType":"ParameterList","parameters":[],"src":"147988:0:0"},"scope":6172,"src":"147890:99:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6058,"nodeType":"StructuredDocumentation","src":"147995:212:0","text":" @notice Cancels all quotes of the maker (works for bit-invalidating orders only)\n @param makerTraits Order makerTraits\n @param additionalMask Additional bitmask to invalidate orders"},"functionSelector":"05b1ea03","id":6066,"implemented":false,"kind":"function","modifiers":[],"name":"bitsInvalidateForOrder","nameLocation":"148221:22:0","nodeType":"FunctionDefinition","parameters":{"id":6064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6061,"mutability":"mutable","name":"makerTraits","nameLocation":"148256:11:0","nodeType":"VariableDeclaration","scope":6066,"src":"148244:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"},"typeName":{"id":6060,"nodeType":"UserDefinedTypeName","pathNode":{"id":6059,"name":"MakerTraits","nameLocations":["148244:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"148244:11:0"},"referencedDeclaration":606,"src":"148244:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}},"visibility":"internal"},{"constant":false,"id":6063,"mutability":"mutable","name":"additionalMask","nameLocation":"148277:14:0","nodeType":"VariableDeclaration","scope":6066,"src":"148269:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6062,"name":"uint256","nodeType":"ElementaryTypeName","src":"148269:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"148243:49:0"},"returnParameters":{"id":6065,"nodeType":"ParameterList","parameters":[],"src":"148301:0:0"},"scope":6172,"src":"148212:90:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6067,"nodeType":"StructuredDocumentation","src":"148308:164:0","text":" @notice Returns order hash, hashed with limit order protocol contract EIP712\n @param order Order\n @return orderHash Hash of the order"},"functionSelector":"802b2ef1","id":6075,"implemented":false,"kind":"function","modifiers":[],"name":"hashOrder","nameLocation":"148486:9:0","nodeType":"FunctionDefinition","parameters":{"id":6071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6070,"mutability":"mutable","name":"order","nameLocation":"148523:5:0","nodeType":"VariableDeclaration","scope":6075,"src":"148496:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":6069,"nodeType":"UserDefinedTypeName","pathNode":{"id":6068,"name":"IOrderMixin.Order","nameLocations":["148496:11:0","148508:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"148496:17:0"},"referencedDeclaration":5944,"src":"148496:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"}],"src":"148495:34:0"},"returnParameters":{"id":6074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"orderHash","nameLocation":"148560:9:0","nodeType":"VariableDeclaration","scope":6075,"src":"148552:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"148552:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"148551:19:0"},"scope":6172,"src":"148477:94:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6076,"nodeType":"StructuredDocumentation","src":"148577:333:0","text":" @notice Delegates execution to custom implementation. Could be used to validate if `transferFrom` works properly\n @dev The function always reverts and returns the simulation results in revert data.\n @param target Addresses that will be delegated\n @param data Data that will be passed to delegatee"},"functionSelector":"bd61951d","id":6083,"implemented":false,"kind":"function","modifiers":[],"name":"simulate","nameLocation":"148924:8:0","nodeType":"FunctionDefinition","parameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"target","nameLocation":"148941:6:0","nodeType":"VariableDeclaration","scope":6083,"src":"148933:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6077,"name":"address","nodeType":"ElementaryTypeName","src":"148933:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6080,"mutability":"mutable","name":"data","nameLocation":"148964:4:0","nodeType":"VariableDeclaration","scope":6083,"src":"148949:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6079,"name":"bytes","nodeType":"ElementaryTypeName","src":"148949:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"148932:37:0"},"returnParameters":{"id":6082,"nodeType":"ParameterList","parameters":[],"src":"148978:0:0"},"scope":6172,"src":"148915:64:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6084,"nodeType":"StructuredDocumentation","src":"148985:707:0","text":" @notice Fills order's quote, fully or partially (whichever is possible).\n @param order Order quote to fill\n @param r R component of signature\n @param vs VS component of signature\n @param amount Taker amount to fill\n @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n @return makingAmount Actual amount transferred from maker to taker\n @return takingAmount Actual amount transferred from taker to maker\n @return orderHash Hash of the filled order"},"functionSelector":"9fda64bd","id":6105,"implemented":false,"kind":"function","modifiers":[],"name":"fillOrder","nameLocation":"149706:9:0","nodeType":"FunctionDefinition","parameters":{"id":6097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"order","nameLocation":"149740:5:0","nodeType":"VariableDeclaration","scope":6105,"src":"149725:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":6086,"nodeType":"UserDefinedTypeName","pathNode":{"id":6085,"name":"Order","nameLocations":["149725:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"149725:5:0"},"referencedDeclaration":5944,"src":"149725:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":6089,"mutability":"mutable","name":"r","nameLocation":"149763:1:0","nodeType":"VariableDeclaration","scope":6105,"src":"149755:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"149755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6091,"mutability":"mutable","name":"vs","nameLocation":"149782:2:0","nodeType":"VariableDeclaration","scope":6105,"src":"149774:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"149774:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6093,"mutability":"mutable","name":"amount","nameLocation":"149802:6:0","nodeType":"VariableDeclaration","scope":6105,"src":"149794:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6092,"name":"uint256","nodeType":"ElementaryTypeName","src":"149794:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6096,"mutability":"mutable","name":"takerTraits","nameLocation":"149830:11:0","nodeType":"VariableDeclaration","scope":6105,"src":"149818:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":6095,"nodeType":"UserDefinedTypeName","pathNode":{"id":6094,"name":"TakerTraits","nameLocations":["149818:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"149818:11:0"},"referencedDeclaration":2885,"src":"149818:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"149715:132:0"},"returnParameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6099,"mutability":"mutable","name":"makingAmount","nameLocation":"149881:12:0","nodeType":"VariableDeclaration","scope":6105,"src":"149873:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6098,"name":"uint256","nodeType":"ElementaryTypeName","src":"149873:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6101,"mutability":"mutable","name":"takingAmount","nameLocation":"149903:12:0","nodeType":"VariableDeclaration","scope":6105,"src":"149895:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6100,"name":"uint256","nodeType":"ElementaryTypeName","src":"149895:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6103,"mutability":"mutable","name":"orderHash","nameLocation":"149925:9:0","nodeType":"VariableDeclaration","scope":6105,"src":"149917:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"149917:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"149872:63:0"},"scope":6172,"src":"149697:239:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":6106,"nodeType":"StructuredDocumentation","src":"149942:819:0","text":" @notice Same as `fillOrder` but allows to specify arguments that are used by the taker.\n @param order Order quote to fill\n @param r R component of signature\n @param vs VS component of signature\n @param amount Taker amount to fill\n @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n @param args Arguments that are used by the taker (target, extension, interaction, permit)\n @return makingAmount Actual amount transferred from maker to taker\n @return takingAmount Actual amount transferred from taker to maker\n @return orderHash Hash of the filled order"},"functionSelector":"f497df75","id":6129,"implemented":false,"kind":"function","modifiers":[],"name":"fillOrderArgs","nameLocation":"150775:13:0","nodeType":"FunctionDefinition","parameters":{"id":6121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"order","nameLocation":"150825:5:0","nodeType":"VariableDeclaration","scope":6129,"src":"150798:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":6108,"nodeType":"UserDefinedTypeName","pathNode":{"id":6107,"name":"IOrderMixin.Order","nameLocations":["150798:11:0","150810:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"150798:17:0"},"referencedDeclaration":5944,"src":"150798:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":6111,"mutability":"mutable","name":"r","nameLocation":"150848:1:0","nodeType":"VariableDeclaration","scope":6129,"src":"150840:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"150840:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6113,"mutability":"mutable","name":"vs","nameLocation":"150867:2:0","nodeType":"VariableDeclaration","scope":6129,"src":"150859:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"150859:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6115,"mutability":"mutable","name":"amount","nameLocation":"150887:6:0","nodeType":"VariableDeclaration","scope":6129,"src":"150879:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6114,"name":"uint256","nodeType":"ElementaryTypeName","src":"150879:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6118,"mutability":"mutable","name":"takerTraits","nameLocation":"150915:11:0","nodeType":"VariableDeclaration","scope":6129,"src":"150903:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":6117,"nodeType":"UserDefinedTypeName","pathNode":{"id":6116,"name":"TakerTraits","nameLocations":["150903:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"150903:11:0"},"referencedDeclaration":2885,"src":"150903:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"},{"constant":false,"id":6120,"mutability":"mutable","name":"args","nameLocation":"150951:4:0","nodeType":"VariableDeclaration","scope":6129,"src":"150936:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6119,"name":"bytes","nodeType":"ElementaryTypeName","src":"150936:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"150788:173:0"},"returnParameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6123,"mutability":"mutable","name":"makingAmount","nameLocation":"150995:12:0","nodeType":"VariableDeclaration","scope":6129,"src":"150987:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6122,"name":"uint256","nodeType":"ElementaryTypeName","src":"150987:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6125,"mutability":"mutable","name":"takingAmount","nameLocation":"151017:12:0","nodeType":"VariableDeclaration","scope":6129,"src":"151009:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6124,"name":"uint256","nodeType":"ElementaryTypeName","src":"151009:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6127,"mutability":"mutable","name":"orderHash","nameLocation":"151039:9:0","nodeType":"VariableDeclaration","scope":6129,"src":"151031:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"151031:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"150986:63:0"},"scope":6172,"src":"150766:284:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":6130,"nodeType":"StructuredDocumentation","src":"151056:710:0","text":" @notice Same as `fillOrder` but uses contract-based signatures.\n @param order Order quote to fill\n @param signature Signature to confirm quote ownership\n @param amount Taker amount to fill\n @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n @return makingAmount Actual amount transferred from maker to taker\n @return takingAmount Actual amount transferred from taker to maker\n @return orderHash Hash of the filled order\n @dev See tests for examples"},"functionSelector":"cc713a04","id":6149,"implemented":false,"kind":"function","modifiers":[],"name":"fillContractOrder","nameLocation":"151780:17:0","nodeType":"FunctionDefinition","parameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"order","nameLocation":"151822:5:0","nodeType":"VariableDeclaration","scope":6149,"src":"151807:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":6132,"nodeType":"UserDefinedTypeName","pathNode":{"id":6131,"name":"Order","nameLocations":["151807:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"151807:5:0"},"referencedDeclaration":5944,"src":"151807:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":6135,"mutability":"mutable","name":"signature","nameLocation":"151852:9:0","nodeType":"VariableDeclaration","scope":6149,"src":"151837:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6134,"name":"bytes","nodeType":"ElementaryTypeName","src":"151837:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6137,"mutability":"mutable","name":"amount","nameLocation":"151879:6:0","nodeType":"VariableDeclaration","scope":6149,"src":"151871:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"151871:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6140,"mutability":"mutable","name":"takerTraits","nameLocation":"151907:11:0","nodeType":"VariableDeclaration","scope":6149,"src":"151895:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":6139,"nodeType":"UserDefinedTypeName","pathNode":{"id":6138,"name":"TakerTraits","nameLocations":["151895:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"151895:11:0"},"referencedDeclaration":2885,"src":"151895:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"}],"src":"151797:127:0"},"returnParameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"makingAmount","nameLocation":"151950:12:0","nodeType":"VariableDeclaration","scope":6149,"src":"151942:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6142,"name":"uint256","nodeType":"ElementaryTypeName","src":"151942:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6145,"mutability":"mutable","name":"takingAmount","nameLocation":"151972:12:0","nodeType":"VariableDeclaration","scope":6149,"src":"151964:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6144,"name":"uint256","nodeType":"ElementaryTypeName","src":"151964:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6147,"mutability":"mutable","name":"orderHash","nameLocation":"151994:9:0","nodeType":"VariableDeclaration","scope":6149,"src":"151986:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"151986:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"151941:63:0"},"scope":6172,"src":"151771:234:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6150,"nodeType":"StructuredDocumentation","src":"152011:839:0","text":" @notice Same as `fillContractOrder` but allows to specify arguments that are used by the taker.\n @param order Order quote to fill\n @param signature Signature to confirm quote ownership\n @param amount Taker amount to fill\n @param takerTraits Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies\n minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\n @param args Arguments that are used by the taker (target, extension, interaction, permit)\n @return makingAmount Actual amount transferred from maker to taker\n @return takingAmount Actual amount transferred from taker to maker\n @return orderHash Hash of the filled order\n @dev See tests for examples"},"functionSelector":"56a75868","id":6171,"implemented":false,"kind":"function","modifiers":[],"name":"fillContractOrderArgs","nameLocation":"152864:21:0","nodeType":"FunctionDefinition","parameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6153,"mutability":"mutable","name":"order","nameLocation":"152910:5:0","nodeType":"VariableDeclaration","scope":6171,"src":"152895:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":6152,"nodeType":"UserDefinedTypeName","pathNode":{"id":6151,"name":"Order","nameLocations":["152895:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"152895:5:0"},"referencedDeclaration":5944,"src":"152895:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":6155,"mutability":"mutable","name":"signature","nameLocation":"152940:9:0","nodeType":"VariableDeclaration","scope":6171,"src":"152925:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6154,"name":"bytes","nodeType":"ElementaryTypeName","src":"152925:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6157,"mutability":"mutable","name":"amount","nameLocation":"152967:6:0","nodeType":"VariableDeclaration","scope":6171,"src":"152959:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6156,"name":"uint256","nodeType":"ElementaryTypeName","src":"152959:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6160,"mutability":"mutable","name":"takerTraits","nameLocation":"152995:11:0","nodeType":"VariableDeclaration","scope":6171,"src":"152983:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"},"typeName":{"id":6159,"nodeType":"UserDefinedTypeName","pathNode":{"id":6158,"name":"TakerTraits","nameLocations":["152983:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2885,"src":"152983:11:0"},"referencedDeclaration":2885,"src":"152983:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TakerTraits_$2885","typeString":"TakerTraits"}},"visibility":"internal"},{"constant":false,"id":6162,"mutability":"mutable","name":"args","nameLocation":"153031:4:0","nodeType":"VariableDeclaration","scope":6171,"src":"153016:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6161,"name":"bytes","nodeType":"ElementaryTypeName","src":"153016:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"152885:156:0"},"returnParameters":{"id":6170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"makingAmount","nameLocation":"153067:12:0","nodeType":"VariableDeclaration","scope":6171,"src":"153059:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"153059:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6167,"mutability":"mutable","name":"takingAmount","nameLocation":"153089:12:0","nodeType":"VariableDeclaration","scope":6171,"src":"153081:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6166,"name":"uint256","nodeType":"ElementaryTypeName","src":"153081:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6169,"mutability":"mutable","name":"orderHash","nameLocation":"153111:9:0","nodeType":"VariableDeclaration","scope":6171,"src":"153103:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"153103:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"153058:63:0"},"scope":6172,"src":"152855:267:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"144555:8569:0","usedErrors":[5946,5948,5950,5952,5954,5956,5958,5960,5962,5964,5966,5968,5970,5972,5974,5976,5978,5980,5986],"usedEvents":[5993,5998,6007]},{"abstract":false,"baseContracts":[],"canonicalName":"ImmutablesLib","contractDependencies":[],"contractKind":"library","documentation":{"id":6173,"nodeType":"StructuredDocumentation","src":"153199:94:0","text":" @title Library for escrow immutables.\n @custom:security-contact security@1inch.io"},"fullyImplemented":true,"id":6199,"linearizedBaseContracts":[6199],"name":"ImmutablesLib","nameLocation":"153302:13:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":6176,"mutability":"constant","name":"ESCROW_IMMUTABLES_SIZE","nameLocation":"153348:22:0","nodeType":"VariableDeclaration","scope":6199,"src":"153322:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6174,"name":"uint256","nodeType":"ElementaryTypeName","src":"153322:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078313030","id":6175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153373:5:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"visibility":"internal"},{"body":{"id":6186,"nodeType":"Block","src":"153632:211:0","statements":[{"AST":{"nativeSrc":"153667:170:0","nodeType":"YulBlock","src":"153667:170:0","statements":[{"nativeSrc":"153681:22:0","nodeType":"YulVariableDeclaration","src":"153681:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"153698:4:0","nodeType":"YulLiteral","src":"153698:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"153692:5:0","nodeType":"YulIdentifier","src":"153692:5:0"},"nativeSrc":"153692:11:0","nodeType":"YulFunctionCall","src":"153692:11:0"},"variables":[{"name":"ptr","nativeSrc":"153685:3:0","nodeType":"YulTypedName","src":"153685:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"153729:3:0","nodeType":"YulIdentifier","src":"153729:3:0"},{"name":"immutables","nativeSrc":"153734:10:0","nodeType":"YulIdentifier","src":"153734:10:0"},{"name":"ESCROW_IMMUTABLES_SIZE","nativeSrc":"153746:22:0","nodeType":"YulIdentifier","src":"153746:22:0"}],"functionName":{"name":"calldatacopy","nativeSrc":"153716:12:0","nodeType":"YulIdentifier","src":"153716:12:0"},"nativeSrc":"153716:53:0","nodeType":"YulFunctionCall","src":"153716:53:0"},"nativeSrc":"153716:53:0","nodeType":"YulExpressionStatement","src":"153716:53:0"},{"nativeSrc":"153782:45:0","nodeType":"YulAssignment","src":"153782:45:0","value":{"arguments":[{"name":"ptr","nativeSrc":"153799:3:0","nodeType":"YulIdentifier","src":"153799:3:0"},{"name":"ESCROW_IMMUTABLES_SIZE","nativeSrc":"153804:22:0","nodeType":"YulIdentifier","src":"153804:22:0"}],"functionName":{"name":"keccak256","nativeSrc":"153789:9:0","nodeType":"YulIdentifier","src":"153789:9:0"},"nativeSrc":"153789:38:0","nodeType":"YulFunctionCall","src":"153789:38:0"},"variableNames":[{"name":"ret","nativeSrc":"153782:3:0","nodeType":"YulIdentifier","src":"153782:3:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6176,"isOffset":false,"isSlot":false,"src":"153746:22:0","valueSize":1},{"declaration":6176,"isOffset":false,"isSlot":false,"src":"153804:22:0","valueSize":1},{"declaration":6180,"isOffset":false,"isSlot":false,"src":"153734:10:0","valueSize":1},{"declaration":6183,"isOffset":false,"isSlot":false,"src":"153782:3:0","valueSize":1}],"flags":["memory-safe"],"id":6185,"nodeType":"InlineAssembly","src":"153642:195:0"}]},"documentation":{"id":6177,"nodeType":"StructuredDocumentation","src":"153385:149:0","text":" @notice Returns the hash of the immutables.\n @param immutables The immutables to hash.\n @return ret The computed hash."},"id":6187,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"153548:4:0","nodeType":"FunctionDefinition","parameters":{"id":6181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6180,"mutability":"mutable","name":"immutables","nameLocation":"153585:10:0","nodeType":"VariableDeclaration","scope":6187,"src":"153553:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":6179,"nodeType":"UserDefinedTypeName","pathNode":{"id":6178,"name":"IBaseEscrow.Immutables","nameLocations":["153553:11:0","153565:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"153553:22:0"},"referencedDeclaration":4207,"src":"153553:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"153552:44:0"},"returnParameters":{"id":6184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6183,"mutability":"mutable","name":"ret","nameLocation":"153627:3:0","nodeType":"VariableDeclaration","scope":6187,"src":"153619:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"153619:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"153618:13:0"},"scope":6199,"src":"153539:304:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6197,"nodeType":"Block","src":"154097:117:0","statements":[{"AST":{"nativeSrc":"154132:76:0","nodeType":"YulBlock","src":"154132:76:0","statements":[{"nativeSrc":"154146:52:0","nodeType":"YulAssignment","src":"154146:52:0","value":{"arguments":[{"name":"immutables","nativeSrc":"154163:10:0","nodeType":"YulIdentifier","src":"154163:10:0"},{"name":"ESCROW_IMMUTABLES_SIZE","nativeSrc":"154175:22:0","nodeType":"YulIdentifier","src":"154175:22:0"}],"functionName":{"name":"keccak256","nativeSrc":"154153:9:0","nodeType":"YulIdentifier","src":"154153:9:0"},"nativeSrc":"154153:45:0","nodeType":"YulFunctionCall","src":"154153:45:0"},"variableNames":[{"name":"ret","nativeSrc":"154146:3:0","nodeType":"YulIdentifier","src":"154146:3:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6176,"isOffset":false,"isSlot":false,"src":"154175:22:0","valueSize":1},{"declaration":6191,"isOffset":false,"isSlot":false,"src":"154163:10:0","valueSize":1},{"declaration":6194,"isOffset":false,"isSlot":false,"src":"154146:3:0","valueSize":1}],"flags":["memory-safe"],"id":6196,"nodeType":"InlineAssembly","src":"154107:101:0"}]},"documentation":{"id":6188,"nodeType":"StructuredDocumentation","src":"153849:149:0","text":" @notice Returns the hash of the immutables.\n @param immutables The immutables to hash.\n @return ret The computed hash."},"id":6198,"implemented":true,"kind":"function","modifiers":[],"name":"hashMem","nameLocation":"154012:7:0","nodeType":"FunctionDefinition","parameters":{"id":6192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6191,"mutability":"mutable","name":"immutables","nameLocation":"154050:10:0","nodeType":"VariableDeclaration","scope":6198,"src":"154020:40:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":6190,"nodeType":"UserDefinedTypeName","pathNode":{"id":6189,"name":"IBaseEscrow.Immutables","nameLocations":["154020:11:0","154032:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"154020:22:0"},"referencedDeclaration":4207,"src":"154020:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"154019:42:0"},"returnParameters":{"id":6195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6194,"mutability":"mutable","name":"ret","nameLocation":"154092:3:0","nodeType":"VariableDeclaration","scope":6198,"src":"154084:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"154084:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"154083:13:0"},"scope":6199,"src":"154003:211:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"153294:922:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IAmountGetter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6242,"linearizedBaseContracts":[6242],"name":"IAmountGetter","nameLocation":"154327:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"154347:421:0","text":" @notice View method that gets called to determine the actual making amount\n @param order Order being processed\n @param extension Order extension data\n @param orderHash Hash of the order being processed\n @param taker Taker address\n @param takingAmount Actual taking amount\n @param remainingMakingAmount Order remaining making amount\n @param extraData Extra data"},"functionSelector":"1d9671c3","id":6220,"implemented":false,"kind":"function","modifiers":[],"name":"getMakingAmount","nameLocation":"154782:15:0","nodeType":"FunctionDefinition","parameters":{"id":6216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6203,"mutability":"mutable","name":"order","nameLocation":"154834:5:0","nodeType":"VariableDeclaration","scope":6220,"src":"154807:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":6202,"nodeType":"UserDefinedTypeName","pathNode":{"id":6201,"name":"IOrderMixin.Order","nameLocations":["154807:11:0","154819:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"154807:17:0"},"referencedDeclaration":5944,"src":"154807:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":6205,"mutability":"mutable","name":"extension","nameLocation":"154864:9:0","nodeType":"VariableDeclaration","scope":6220,"src":"154849:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6204,"name":"bytes","nodeType":"ElementaryTypeName","src":"154849:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6207,"mutability":"mutable","name":"orderHash","nameLocation":"154891:9:0","nodeType":"VariableDeclaration","scope":6220,"src":"154883:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"154883:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6209,"mutability":"mutable","name":"taker","nameLocation":"154918:5:0","nodeType":"VariableDeclaration","scope":6220,"src":"154910:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6208,"name":"address","nodeType":"ElementaryTypeName","src":"154910:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6211,"mutability":"mutable","name":"takingAmount","nameLocation":"154941:12:0","nodeType":"VariableDeclaration","scope":6220,"src":"154933:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6210,"name":"uint256","nodeType":"ElementaryTypeName","src":"154933:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6213,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"154971:21:0","nodeType":"VariableDeclaration","scope":6220,"src":"154963:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6212,"name":"uint256","nodeType":"ElementaryTypeName","src":"154963:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6215,"mutability":"mutable","name":"extraData","nameLocation":"155017:9:0","nodeType":"VariableDeclaration","scope":6220,"src":"155002:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6214,"name":"bytes","nodeType":"ElementaryTypeName","src":"155002:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"154797:235:0"},"returnParameters":{"id":6219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6220,"src":"155056:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6217,"name":"uint256","nodeType":"ElementaryTypeName","src":"155056:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"155055:9:0"},"scope":6242,"src":"154773:292:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6221,"nodeType":"StructuredDocumentation","src":"155071:421:0","text":" @notice View method that gets called to determine the actual making amount\n @param order Order being processed\n @param extension Order extension data\n @param orderHash Hash of the order being processed\n @param taker Taker address\n @param makingAmount Actual taking amount\n @param remainingMakingAmount Order remaining making amount\n @param extraData Extra data"},"functionSelector":"d7ff8a80","id":6241,"implemented":false,"kind":"function","modifiers":[],"name":"getTakingAmount","nameLocation":"155506:15:0","nodeType":"FunctionDefinition","parameters":{"id":6237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"order","nameLocation":"155558:5:0","nodeType":"VariableDeclaration","scope":6241,"src":"155531:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":6223,"nodeType":"UserDefinedTypeName","pathNode":{"id":6222,"name":"IOrderMixin.Order","nameLocations":["155531:11:0","155543:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"155531:17:0"},"referencedDeclaration":5944,"src":"155531:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":6226,"mutability":"mutable","name":"extension","nameLocation":"155588:9:0","nodeType":"VariableDeclaration","scope":6241,"src":"155573:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6225,"name":"bytes","nodeType":"ElementaryTypeName","src":"155573:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6228,"mutability":"mutable","name":"orderHash","nameLocation":"155615:9:0","nodeType":"VariableDeclaration","scope":6241,"src":"155607:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"155607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6230,"mutability":"mutable","name":"taker","nameLocation":"155642:5:0","nodeType":"VariableDeclaration","scope":6241,"src":"155634:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6229,"name":"address","nodeType":"ElementaryTypeName","src":"155634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6232,"mutability":"mutable","name":"makingAmount","nameLocation":"155665:12:0","nodeType":"VariableDeclaration","scope":6241,"src":"155657:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6231,"name":"uint256","nodeType":"ElementaryTypeName","src":"155657:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6234,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"155695:21:0","nodeType":"VariableDeclaration","scope":6241,"src":"155687:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6233,"name":"uint256","nodeType":"ElementaryTypeName","src":"155687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6236,"mutability":"mutable","name":"extraData","nameLocation":"155741:9:0","nodeType":"VariableDeclaration","scope":6241,"src":"155726:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6235,"name":"bytes","nodeType":"ElementaryTypeName","src":"155726:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"155521:235:0"},"returnParameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6241,"src":"155780:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6238,"name":"uint256","nodeType":"ElementaryTypeName","src":"155780:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"155779:9:0"},"scope":6242,"src":"155497:292:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10322,"src":"154317:1474:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":6244,"name":"IEscrow","nameLocations":["156134:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":5828,"src":"156134:7:0"},"id":6245,"nodeType":"InheritanceSpecifier","src":"156134:7:0"}],"canonicalName":"IEscrowDst","contractDependencies":[],"contractKind":"interface","documentation":{"id":6243,"nodeType":"StructuredDocumentation","src":"155864:245:0","text":" @title Destination Escrow interface for cross-chain atomic swap.\n @notice Interface implies withdrawing funds initially and then unlocking them with verification of the secret presented.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":6255,"linearizedBaseContracts":[6255,5828,4272],"name":"IEscrowDst","nameLocation":"156120:10:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6246,"nodeType":"StructuredDocumentation","src":"156148:289:0","text":" @notice Withdraws funds to maker\n @dev Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock.\n @param secret The secret that unlocks the escrow.\n @param immutables The immutables of the escrow contract."},"functionSelector":"0af97558","id":6254,"implemented":false,"kind":"function","modifiers":[],"name":"publicWithdraw","nameLocation":"156451:14:0","nodeType":"FunctionDefinition","parameters":{"id":6252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6248,"mutability":"mutable","name":"secret","nameLocation":"156474:6:0","nodeType":"VariableDeclaration","scope":6254,"src":"156466:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"156466:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6251,"mutability":"mutable","name":"immutables","nameLocation":"156514:10:0","nodeType":"VariableDeclaration","scope":6254,"src":"156482:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":6250,"nodeType":"UserDefinedTypeName","pathNode":{"id":6249,"name":"IBaseEscrow.Immutables","nameLocations":["156482:11:0","156494:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"156482:22:0"},"referencedDeclaration":4207,"src":"156482:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"156465:60:0"},"returnParameters":{"id":6253,"nodeType":"ParameterList","parameters":[],"src":"156534:0:0"},"scope":6255,"src":"156442:93:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"156110:427:0","usedErrors":[4224,4226,4228,4230,4232],"usedEvents":[4210,4217,4222]},{"abstract":false,"baseContracts":[{"baseName":{"id":6257,"name":"IEscrow","nameLocations":["156871:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":5828,"src":"156871:7:0"},"id":6258,"nodeType":"InheritanceSpecifier","src":"156871:7:0"}],"canonicalName":"IEscrowSrc","contractDependencies":[],"contractKind":"interface","documentation":{"id":6256,"nodeType":"StructuredDocumentation","src":"156610:236:0","text":" @title Source Escrow interface for cross-chain atomic swap.\n @notice Interface implies locking funds initially and then unlocking them with verification of the secret presented.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":6286,"linearizedBaseContracts":[6286,5828,4272],"name":"IEscrowSrc","nameLocation":"156857:10:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6259,"nodeType":"StructuredDocumentation","src":"156885:411:0","text":" @notice Withdraws funds to a specified target.\n @dev Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock.\n The safety deposit is sent to the caller.\n @param secret The secret that unlocks the escrow.\n @param target The address to withdraw the funds to.\n @param immutables The immutables of the escrow contract."},"functionSelector":"6c10c0c8","id":6269,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"157310:10:0","nodeType":"FunctionDefinition","parameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"secret","nameLocation":"157329:6:0","nodeType":"VariableDeclaration","scope":6269,"src":"157321:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"157321:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6263,"mutability":"mutable","name":"target","nameLocation":"157345:6:0","nodeType":"VariableDeclaration","scope":6269,"src":"157337:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6262,"name":"address","nodeType":"ElementaryTypeName","src":"157337:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6266,"mutability":"mutable","name":"immutables","nameLocation":"157385:10:0","nodeType":"VariableDeclaration","scope":6269,"src":"157353:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":6265,"nodeType":"UserDefinedTypeName","pathNode":{"id":6264,"name":"IBaseEscrow.Immutables","nameLocations":["157353:11:0","157365:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"157353:22:0"},"referencedDeclaration":4207,"src":"157353:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"157320:76:0"},"returnParameters":{"id":6268,"nodeType":"ParameterList","parameters":[],"src":"157405:0:0"},"scope":6286,"src":"157301:105:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6270,"nodeType":"StructuredDocumentation","src":"157412:301:0","text":" @notice Withdraws funds to the taker.\n @dev Withdrawal can only be made during the public withdrawal period and with secret with hash matches the hashlock.\n @param secret The secret that unlocks the escrow.\n @param immutables The immutables of the escrow contract."},"functionSelector":"0af97558","id":6278,"implemented":false,"kind":"function","modifiers":[],"name":"publicWithdraw","nameLocation":"157727:14:0","nodeType":"FunctionDefinition","parameters":{"id":6276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6272,"mutability":"mutable","name":"secret","nameLocation":"157750:6:0","nodeType":"VariableDeclaration","scope":6278,"src":"157742:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"157742:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6275,"mutability":"mutable","name":"immutables","nameLocation":"157778:10:0","nodeType":"VariableDeclaration","scope":6278,"src":"157758:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":6274,"nodeType":"UserDefinedTypeName","pathNode":{"id":6273,"name":"Immutables","nameLocations":["157758:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"157758:10:0"},"referencedDeclaration":4207,"src":"157758:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"157741:48:0"},"returnParameters":{"id":6277,"nodeType":"ParameterList","parameters":[],"src":"157798:0:0"},"scope":6286,"src":"157718:81:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6279,"nodeType":"StructuredDocumentation","src":"157805:275:0","text":" @notice Cancels the escrow and returns tokens to the maker.\n @dev The escrow can only be cancelled during the public cancellation period.\n The safety deposit is sent to the caller.\n @param immutables The immutables of the escrow contract."},"functionSelector":"daff233e","id":6285,"implemented":false,"kind":"function","modifiers":[],"name":"publicCancel","nameLocation":"158094:12:0","nodeType":"FunctionDefinition","parameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6282,"mutability":"mutable","name":"immutables","nameLocation":"158139:10:0","nodeType":"VariableDeclaration","scope":6285,"src":"158107:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":6281,"nodeType":"UserDefinedTypeName","pathNode":{"id":6280,"name":"IBaseEscrow.Immutables","nameLocations":["158107:11:0","158119:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"158107:22:0"},"referencedDeclaration":4207,"src":"158107:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"158106:44:0"},"returnParameters":{"id":6284,"nodeType":"ParameterList","parameters":[],"src":"158159:0:0"},"scope":6286,"src":"158085:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"156847:1315:0","usedErrors":[4224,4226,4228,4230,4232],"usedEvents":[4210,4217,4222]},{"abstract":false,"baseContracts":[],"canonicalName":"IPostInteraction","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6308,"linearizedBaseContracts":[6308],"name":"IPostInteraction","nameLocation":"158276:16:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6287,"nodeType":"StructuredDocumentation","src":"158299:460:0","text":" @notice Callback method that gets called after all fund transfers\n @param order Order being processed\n @param extension Order extension data\n @param orderHash Hash of the order being processed\n @param taker Taker address\n @param makingAmount Actual making amount\n @param takingAmount Actual taking amount\n @param remainingMakingAmount Order remaining making amount\n @param extraData Extra data"},"functionSelector":"462ebde2","id":6307,"implemented":false,"kind":"function","modifiers":[],"name":"postInteraction","nameLocation":"158773:15:0","nodeType":"FunctionDefinition","parameters":{"id":6305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6290,"mutability":"mutable","name":"order","nameLocation":"158825:5:0","nodeType":"VariableDeclaration","scope":6307,"src":"158798:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":6289,"nodeType":"UserDefinedTypeName","pathNode":{"id":6288,"name":"IOrderMixin.Order","nameLocations":["158798:11:0","158810:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"158798:17:0"},"referencedDeclaration":5944,"src":"158798:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":6292,"mutability":"mutable","name":"extension","nameLocation":"158855:9:0","nodeType":"VariableDeclaration","scope":6307,"src":"158840:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6291,"name":"bytes","nodeType":"ElementaryTypeName","src":"158840:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6294,"mutability":"mutable","name":"orderHash","nameLocation":"158882:9:0","nodeType":"VariableDeclaration","scope":6307,"src":"158874:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"158874:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6296,"mutability":"mutable","name":"taker","nameLocation":"158909:5:0","nodeType":"VariableDeclaration","scope":6307,"src":"158901:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6295,"name":"address","nodeType":"ElementaryTypeName","src":"158901:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6298,"mutability":"mutable","name":"makingAmount","nameLocation":"158932:12:0","nodeType":"VariableDeclaration","scope":6307,"src":"158924:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6297,"name":"uint256","nodeType":"ElementaryTypeName","src":"158924:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6300,"mutability":"mutable","name":"takingAmount","nameLocation":"158962:12:0","nodeType":"VariableDeclaration","scope":6307,"src":"158954:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6299,"name":"uint256","nodeType":"ElementaryTypeName","src":"158954:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6302,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"158992:21:0","nodeType":"VariableDeclaration","scope":6307,"src":"158984:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6301,"name":"uint256","nodeType":"ElementaryTypeName","src":"158984:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6304,"mutability":"mutable","name":"extraData","nameLocation":"159038:9:0","nodeType":"VariableDeclaration","scope":6307,"src":"159023:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6303,"name":"bytes","nodeType":"ElementaryTypeName","src":"159023:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"158788:265:0"},"returnParameters":{"id":6306,"nodeType":"ParameterList","parameters":[],"src":"159062:0:0"},"scope":6308,"src":"158764:299:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"158266:799:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IPreInteraction","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6330,"linearizedBaseContracts":[6330],"name":"IPreInteraction","nameLocation":"159178:15:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6309,"nodeType":"StructuredDocumentation","src":"159200:462:0","text":" @notice Callback method that gets called before any funds transfers\n @param order Order being processed\n @param extension Order extension data\n @param orderHash Hash of the order being processed\n @param taker Taker address\n @param makingAmount Actual making amount\n @param takingAmount Actual taking amount\n @param remainingMakingAmount Order remaining making amount\n @param extraData Extra data"},"functionSelector":"0986bdd5","id":6329,"implemented":false,"kind":"function","modifiers":[],"name":"preInteraction","nameLocation":"159676:14:0","nodeType":"FunctionDefinition","parameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6312,"mutability":"mutable","name":"order","nameLocation":"159727:5:0","nodeType":"VariableDeclaration","scope":6329,"src":"159700:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":6311,"nodeType":"UserDefinedTypeName","pathNode":{"id":6310,"name":"IOrderMixin.Order","nameLocations":["159700:11:0","159712:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"159700:17:0"},"referencedDeclaration":5944,"src":"159700:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":6314,"mutability":"mutable","name":"extension","nameLocation":"159757:9:0","nodeType":"VariableDeclaration","scope":6329,"src":"159742:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6313,"name":"bytes","nodeType":"ElementaryTypeName","src":"159742:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6316,"mutability":"mutable","name":"orderHash","nameLocation":"159784:9:0","nodeType":"VariableDeclaration","scope":6329,"src":"159776:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"159776:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6318,"mutability":"mutable","name":"taker","nameLocation":"159811:5:0","nodeType":"VariableDeclaration","scope":6329,"src":"159803:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6317,"name":"address","nodeType":"ElementaryTypeName","src":"159803:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6320,"mutability":"mutable","name":"makingAmount","nameLocation":"159834:12:0","nodeType":"VariableDeclaration","scope":6329,"src":"159826:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6319,"name":"uint256","nodeType":"ElementaryTypeName","src":"159826:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6322,"mutability":"mutable","name":"takingAmount","nameLocation":"159864:12:0","nodeType":"VariableDeclaration","scope":6329,"src":"159856:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6321,"name":"uint256","nodeType":"ElementaryTypeName","src":"159856:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6324,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"159894:21:0","nodeType":"VariableDeclaration","scope":6329,"src":"159886:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6323,"name":"uint256","nodeType":"ElementaryTypeName","src":"159886:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6326,"mutability":"mutable","name":"extraData","nameLocation":"159940:9:0","nodeType":"VariableDeclaration","scope":6329,"src":"159925:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6325,"name":"bytes","nodeType":"ElementaryTypeName","src":"159925:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"159690:265:0"},"returnParameters":{"id":6328,"nodeType":"ParameterList","parameters":[],"src":"159964:0:0"},"scope":6330,"src":"159667:298:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"159168:799:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"ITakerInteraction","contractDependencies":[],"contractKind":"interface","documentation":{"id":6331,"nodeType":"StructuredDocumentation","src":"160072:283:0","text":" @title Interface for interactor which acts after `maker -> taker` transfer but before `taker -> maker` transfer.\n @notice The order filling steps are `preInteraction` =>` Transfer \"maker -> taker\"` => **`Interaction`** => `Transfer \"taker -> maker\"` => `postInteraction`"},"fullyImplemented":false,"id":6353,"linearizedBaseContracts":[6353],"name":"ITakerInteraction","nameLocation":"160366:17:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6332,"nodeType":"StructuredDocumentation","src":"160390:625:0","text":" @dev This callback allows to interactively handle maker aseets to produce takers assets, doesn't supports ETH as taker assets\n @notice Callback method that gets called after maker fund transfer but before taker fund transfer\n @param order Order being processed\n @param extension Order extension data\n @param orderHash Hash of the order being processed\n @param taker Taker address\n @param makingAmount Actual making amount\n @param takingAmount Actual taking amount\n @param remainingMakingAmount Order remaining making amount\n @param extraData Extra data"},"functionSelector":"adf38ba1","id":6352,"implemented":false,"kind":"function","modifiers":[],"name":"takerInteraction","nameLocation":"161029:16:0","nodeType":"FunctionDefinition","parameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"order","nameLocation":"161082:5:0","nodeType":"VariableDeclaration","scope":6352,"src":"161055:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":6334,"nodeType":"UserDefinedTypeName","pathNode":{"id":6333,"name":"IOrderMixin.Order","nameLocations":["161055:11:0","161067:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"161055:17:0"},"referencedDeclaration":5944,"src":"161055:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":6337,"mutability":"mutable","name":"extension","nameLocation":"161112:9:0","nodeType":"VariableDeclaration","scope":6352,"src":"161097:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6336,"name":"bytes","nodeType":"ElementaryTypeName","src":"161097:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6339,"mutability":"mutable","name":"orderHash","nameLocation":"161139:9:0","nodeType":"VariableDeclaration","scope":6352,"src":"161131:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"161131:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6341,"mutability":"mutable","name":"taker","nameLocation":"161166:5:0","nodeType":"VariableDeclaration","scope":6352,"src":"161158:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6340,"name":"address","nodeType":"ElementaryTypeName","src":"161158:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6343,"mutability":"mutable","name":"makingAmount","nameLocation":"161189:12:0","nodeType":"VariableDeclaration","scope":6352,"src":"161181:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6342,"name":"uint256","nodeType":"ElementaryTypeName","src":"161181:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6345,"mutability":"mutable","name":"takingAmount","nameLocation":"161219:12:0","nodeType":"VariableDeclaration","scope":6352,"src":"161211:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6344,"name":"uint256","nodeType":"ElementaryTypeName","src":"161211:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6347,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"161249:21:0","nodeType":"VariableDeclaration","scope":6352,"src":"161241:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6346,"name":"uint256","nodeType":"ElementaryTypeName","src":"161241:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6349,"mutability":"mutable","name":"extraData","nameLocation":"161295:9:0","nodeType":"VariableDeclaration","scope":6352,"src":"161280:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6348,"name":"bytes","nodeType":"ElementaryTypeName","src":"161280:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"161045:265:0"},"returnParameters":{"id":6351,"nodeType":"ParameterList","parameters":[],"src":"161319:0:0"},"scope":6353,"src":"161020:300:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"160356:966:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"ExtensionLib_1","contractDependencies":[],"contractKind":"library","documentation":{"id":6354,"nodeType":"StructuredDocumentation","src":"161421:118:0","text":" @title ExtensionLib\n @notice Library for retrieving extensions information for the IOrderMixin Interface."},"fullyImplemented":true,"id":6571,"linearizedBaseContracts":[6571],"name":"ExtensionLib_1","nameLocation":"161548:14:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6358,"libraryName":{"id":6355,"name":"AddressLib","nameLocations":["161575:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":102,"src":"161575:10:0"},"nodeType":"UsingForDirective","src":"161569:29:0","typeName":{"id":6357,"nodeType":"UserDefinedTypeName","pathNode":{"id":6356,"name":"Address","nameLocations":["161590:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"161590:7:0"},"referencedDeclaration":3,"src":"161590:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}},{"global":false,"id":6362,"libraryName":{"id":6359,"name":"OffsetsLib","nameLocations":["161609:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":998,"src":"161609:10:0"},"nodeType":"UsingForDirective","src":"161603:29:0","typeName":{"id":6361,"nodeType":"UserDefinedTypeName","pathNode":{"id":6360,"name":"Offsets","nameLocations":["161624:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":973,"src":"161624:7:0"},"referencedDeclaration":973,"src":"161624:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Offsets_$973","typeString":"Offsets"}}},{"canonicalName":"ExtensionLib_1.DynamicField","id":6372,"members":[{"id":6363,"name":"MakerAssetSuffix","nameLocation":"161666:16:0","nodeType":"EnumValue","src":"161666:16:0"},{"id":6364,"name":"TakerAssetSuffix","nameLocation":"161692:16:0","nodeType":"EnumValue","src":"161692:16:0"},{"id":6365,"name":"MakingAmountData","nameLocation":"161718:16:0","nodeType":"EnumValue","src":"161718:16:0"},{"id":6366,"name":"TakingAmountData","nameLocation":"161744:16:0","nodeType":"EnumValue","src":"161744:16:0"},{"id":6367,"name":"Predicate","nameLocation":"161770:9:0","nodeType":"EnumValue","src":"161770:9:0"},{"id":6368,"name":"MakerPermit","nameLocation":"161789:11:0","nodeType":"EnumValue","src":"161789:11:0"},{"id":6369,"name":"PreInteractionData","nameLocation":"161810:18:0","nodeType":"EnumValue","src":"161810:18:0"},{"id":6370,"name":"PostInteractionData","nameLocation":"161838:19:0","nodeType":"EnumValue","src":"161838:19:0"},{"id":6371,"name":"CustomData","nameLocation":"161867:10:0","nodeType":"EnumValue","src":"161867:10:0"}],"name":"DynamicField","nameLocation":"161643:12:0","nodeType":"EnumDefinition","src":"161638:245:0"},{"body":{"id":6386,"nodeType":"Block","src":"162231:70:0","statements":[{"expression":{"arguments":[{"id":6381,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"162253:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":6382,"name":"DynamicField","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"162264:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DynamicField_$6372_$","typeString":"type(enum ExtensionLib_1.DynamicField)"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"162277:16:0","memberName":"MakerAssetSuffix","nodeType":"MemberAccess","referencedDeclaration":6363,"src":"162264:29:0","typeDescriptions":{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}],"id":6380,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"162248:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$_t_enum$_DynamicField_$6372_$returns$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,enum ExtensionLib_1.DynamicField) pure returns (bytes calldata)"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"162248:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6379,"id":6385,"nodeType":"Return","src":"162241:53:0"}]},"documentation":{"id":6373,"nodeType":"StructuredDocumentation","src":"161889:247:0","text":" @notice Returns the MakerAssetSuffix from the provided extension calldata.\n @param extension The calldata from which the MakerAssetSuffix is to be retrieved.\n @return calldata Bytes representing the MakerAssetSuffix."},"id":6387,"implemented":true,"kind":"function","modifiers":[],"name":"makerAssetSuffix","nameLocation":"162150:16:0","nodeType":"FunctionDefinition","parameters":{"id":6376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6375,"mutability":"mutable","name":"extension","nameLocation":"162182:9:0","nodeType":"VariableDeclaration","scope":6387,"src":"162167:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6374,"name":"bytes","nodeType":"ElementaryTypeName","src":"162167:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"162166:26:0"},"returnParameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6387,"src":"162215:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6377,"name":"bytes","nodeType":"ElementaryTypeName","src":"162215:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"162214:16:0"},"scope":6571,"src":"162141:160:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6401,"nodeType":"Block","src":"162649:70:0","statements":[{"expression":{"arguments":[{"id":6396,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"162671:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":6397,"name":"DynamicField","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"162682:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DynamicField_$6372_$","typeString":"type(enum ExtensionLib_1.DynamicField)"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"162695:16:0","memberName":"TakerAssetSuffix","nodeType":"MemberAccess","referencedDeclaration":6364,"src":"162682:29:0","typeDescriptions":{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}],"id":6395,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"162666:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$_t_enum$_DynamicField_$6372_$returns$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,enum ExtensionLib_1.DynamicField) pure returns (bytes calldata)"}},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"162666:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6394,"id":6400,"nodeType":"Return","src":"162659:53:0"}]},"documentation":{"id":6388,"nodeType":"StructuredDocumentation","src":"162307:247:0","text":" @notice Returns the TakerAssetSuffix from the provided extension calldata.\n @param extension The calldata from which the TakerAssetSuffix is to be retrieved.\n @return calldata Bytes representing the TakerAssetSuffix."},"id":6402,"implemented":true,"kind":"function","modifiers":[],"name":"takerAssetSuffix","nameLocation":"162568:16:0","nodeType":"FunctionDefinition","parameters":{"id":6391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"extension","nameLocation":"162600:9:0","nodeType":"VariableDeclaration","scope":6402,"src":"162585:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6389,"name":"bytes","nodeType":"ElementaryTypeName","src":"162585:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"162584:26:0"},"returnParameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6402,"src":"162633:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6392,"name":"bytes","nodeType":"ElementaryTypeName","src":"162633:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"162632:16:0"},"scope":6571,"src":"162559:160:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6416,"nodeType":"Block","src":"163067:70:0","statements":[{"expression":{"arguments":[{"id":6411,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"163089:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":6412,"name":"DynamicField","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"163100:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DynamicField_$6372_$","typeString":"type(enum ExtensionLib_1.DynamicField)"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"163113:16:0","memberName":"MakingAmountData","nodeType":"MemberAccess","referencedDeclaration":6365,"src":"163100:29:0","typeDescriptions":{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}],"id":6410,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"163084:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$_t_enum$_DynamicField_$6372_$returns$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,enum ExtensionLib_1.DynamicField) pure returns (bytes calldata)"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"163084:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6409,"id":6415,"nodeType":"Return","src":"163077:53:0"}]},"documentation":{"id":6403,"nodeType":"StructuredDocumentation","src":"162725:247:0","text":" @notice Returns the MakingAmountData from the provided extension calldata.\n @param extension The calldata from which the MakingAmountData is to be retrieved.\n @return calldata Bytes representing the MakingAmountData."},"id":6417,"implemented":true,"kind":"function","modifiers":[],"name":"makingAmountData","nameLocation":"162986:16:0","nodeType":"FunctionDefinition","parameters":{"id":6406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6405,"mutability":"mutable","name":"extension","nameLocation":"163018:9:0","nodeType":"VariableDeclaration","scope":6417,"src":"163003:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6404,"name":"bytes","nodeType":"ElementaryTypeName","src":"163003:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"163002:26:0"},"returnParameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6417,"src":"163051:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6407,"name":"bytes","nodeType":"ElementaryTypeName","src":"163051:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"163050:16:0"},"scope":6571,"src":"162977:160:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6431,"nodeType":"Block","src":"163485:70:0","statements":[{"expression":{"arguments":[{"id":6426,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"163507:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":6427,"name":"DynamicField","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"163518:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DynamicField_$6372_$","typeString":"type(enum ExtensionLib_1.DynamicField)"}},"id":6428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"163531:16:0","memberName":"TakingAmountData","nodeType":"MemberAccess","referencedDeclaration":6366,"src":"163518:29:0","typeDescriptions":{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}],"id":6425,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"163502:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$_t_enum$_DynamicField_$6372_$returns$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,enum ExtensionLib_1.DynamicField) pure returns (bytes calldata)"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"163502:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6424,"id":6430,"nodeType":"Return","src":"163495:53:0"}]},"documentation":{"id":6418,"nodeType":"StructuredDocumentation","src":"163143:247:0","text":" @notice Returns the TakingAmountData from the provided extension calldata.\n @param extension The calldata from which the TakingAmountData is to be retrieved.\n @return calldata Bytes representing the TakingAmountData."},"id":6432,"implemented":true,"kind":"function","modifiers":[],"name":"takingAmountData","nameLocation":"163404:16:0","nodeType":"FunctionDefinition","parameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"extension","nameLocation":"163436:9:0","nodeType":"VariableDeclaration","scope":6432,"src":"163421:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6419,"name":"bytes","nodeType":"ElementaryTypeName","src":"163421:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"163420:26:0"},"returnParameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6432,"src":"163469:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6422,"name":"bytes","nodeType":"ElementaryTypeName","src":"163469:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"163468:16:0"},"scope":6571,"src":"163395:160:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6446,"nodeType":"Block","src":"163883:63:0","statements":[{"expression":{"arguments":[{"id":6441,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"163905:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":6442,"name":"DynamicField","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"163916:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DynamicField_$6372_$","typeString":"type(enum ExtensionLib_1.DynamicField)"}},"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"163929:9:0","memberName":"Predicate","nodeType":"MemberAccess","referencedDeclaration":6367,"src":"163916:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}],"id":6440,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"163900:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$_t_enum$_DynamicField_$6372_$returns$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,enum ExtensionLib_1.DynamicField) pure returns (bytes calldata)"}},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"163900:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6439,"id":6445,"nodeType":"Return","src":"163893:46:0"}]},"documentation":{"id":6433,"nodeType":"StructuredDocumentation","src":"163561:234:0","text":" @notice Returns the order's predicate from the provided extension calldata.\n @param extension The calldata from which the predicate is to be retrieved.\n @return calldata Bytes representing the predicate."},"id":6447,"implemented":true,"kind":"function","modifiers":[],"name":"predicate","nameLocation":"163809:9:0","nodeType":"FunctionDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"extension","nameLocation":"163834:9:0","nodeType":"VariableDeclaration","scope":6447,"src":"163819:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6434,"name":"bytes","nodeType":"ElementaryTypeName","src":"163819:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"163818:26:0"},"returnParameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6447,"src":"163867:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6437,"name":"bytes","nodeType":"ElementaryTypeName","src":"163867:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"163866:16:0"},"scope":6571,"src":"163800:146:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6461,"nodeType":"Block","src":"164283:65:0","statements":[{"expression":{"arguments":[{"id":6456,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"164305:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":6457,"name":"DynamicField","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"164316:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DynamicField_$6372_$","typeString":"type(enum ExtensionLib_1.DynamicField)"}},"id":6458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"164329:11:0","memberName":"MakerPermit","nodeType":"MemberAccess","referencedDeclaration":6368,"src":"164316:24:0","typeDescriptions":{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}],"id":6455,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"164300:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$_t_enum$_DynamicField_$6372_$returns$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,enum ExtensionLib_1.DynamicField) pure returns (bytes calldata)"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"164300:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6454,"id":6460,"nodeType":"Return","src":"164293:48:0"}]},"documentation":{"id":6448,"nodeType":"StructuredDocumentation","src":"163952:241:0","text":" @notice Returns the maker's permit from the provided extension calldata.\n @param extension The calldata from which the maker's permit is to be retrieved.\n @return calldata Bytes representing the maker's permit."},"id":6462,"implemented":true,"kind":"function","modifiers":[],"name":"makerPermit","nameLocation":"164207:11:0","nodeType":"FunctionDefinition","parameters":{"id":6451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6450,"mutability":"mutable","name":"extension","nameLocation":"164234:9:0","nodeType":"VariableDeclaration","scope":6462,"src":"164219:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6449,"name":"bytes","nodeType":"ElementaryTypeName","src":"164219:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"164218:26:0"},"returnParameters":{"id":6454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6462,"src":"164267:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6452,"name":"bytes","nodeType":"ElementaryTypeName","src":"164267:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"164266:16:0"},"scope":6571,"src":"164198:150:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6476,"nodeType":"Block","src":"164704:72:0","statements":[{"expression":{"arguments":[{"id":6471,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"164726:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":6472,"name":"DynamicField","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"164737:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DynamicField_$6372_$","typeString":"type(enum ExtensionLib_1.DynamicField)"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"164750:18:0","memberName":"PreInteractionData","nodeType":"MemberAccess","referencedDeclaration":6369,"src":"164737:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}],"id":6470,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"164721:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$_t_enum$_DynamicField_$6372_$returns$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,enum ExtensionLib_1.DynamicField) pure returns (bytes calldata)"}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"164721:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6469,"id":6475,"nodeType":"Return","src":"164714:55:0"}]},"documentation":{"id":6463,"nodeType":"StructuredDocumentation","src":"164354:244:0","text":" @notice Returns the pre-interaction from the provided extension calldata.\n @param extension The calldata from which the pre-interaction is to be retrieved.\n @return calldata Bytes representing the pre-interaction."},"id":6477,"implemented":true,"kind":"function","modifiers":[],"name":"preInteractionTargetAndData","nameLocation":"164612:27:0","nodeType":"FunctionDefinition","parameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"extension","nameLocation":"164655:9:0","nodeType":"VariableDeclaration","scope":6477,"src":"164640:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6464,"name":"bytes","nodeType":"ElementaryTypeName","src":"164640:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"164639:26:0"},"returnParameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6477,"src":"164688:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6467,"name":"bytes","nodeType":"ElementaryTypeName","src":"164688:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"164687:16:0"},"scope":6571,"src":"164603:173:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6491,"nodeType":"Block","src":"165136:73:0","statements":[{"expression":{"arguments":[{"id":6486,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"165158:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":6487,"name":"DynamicField","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"165169:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DynamicField_$6372_$","typeString":"type(enum ExtensionLib_1.DynamicField)"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"165182:19:0","memberName":"PostInteractionData","nodeType":"MemberAccess","referencedDeclaration":6370,"src":"165169:32:0","typeDescriptions":{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}],"id":6485,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"165153:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$_t_enum$_DynamicField_$6372_$returns$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,enum ExtensionLib_1.DynamicField) pure returns (bytes calldata)"}},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"165153:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6484,"id":6490,"nodeType":"Return","src":"165146:56:0"}]},"documentation":{"id":6478,"nodeType":"StructuredDocumentation","src":"164782:247:0","text":" @notice Returns the post-interaction from the provided extension calldata.\n @param extension The calldata from which the post-interaction is to be retrieved.\n @return calldata Bytes representing the post-interaction."},"id":6492,"implemented":true,"kind":"function","modifiers":[],"name":"postInteractionTargetAndData","nameLocation":"165043:28:0","nodeType":"FunctionDefinition","parameters":{"id":6481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6480,"mutability":"mutable","name":"extension","nameLocation":"165087:9:0","nodeType":"VariableDeclaration","scope":6492,"src":"165072:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6479,"name":"bytes","nodeType":"ElementaryTypeName","src":"165072:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"165071:26:0"},"returnParameters":{"id":6484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6492,"src":"165120:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6482,"name":"bytes","nodeType":"ElementaryTypeName","src":"165120:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"165119:16:0"},"scope":6571,"src":"165034:175:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6530,"nodeType":"Block","src":"165550:206:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6500,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"165564:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"165574:6:0","memberName":"length","nodeType":"MemberAccess","src":"165564:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783230","id":6502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165583:4:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"165564:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6509,"nodeType":"IfStatement","src":"165560:48:0","trueBody":{"expression":{"baseExpression":{"expression":{"id":6504,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"165596:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"165600:4:0","memberName":"data","nodeType":"MemberAccess","src":"165596:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"30","id":6506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165606:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"165596:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":6499,"id":6508,"nodeType":"Return","src":"165589:19:0"}},{"assignments":[6511],"declarations":[{"constant":false,"id":6511,"mutability":"mutable","name":"offsets","nameLocation":"165626:7:0","nodeType":"VariableDeclaration","scope":6530,"src":"165618:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6510,"name":"uint256","nodeType":"ElementaryTypeName","src":"165618:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6519,"initialValue":{"arguments":[{"arguments":[{"id":6516,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"165652:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"165644:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"165644:7:0","typeDescriptions":{}}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"165644:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"165636:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6512,"name":"uint256","nodeType":"ElementaryTypeName","src":"165636:7:0","typeDescriptions":{}}},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"165636:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"165618:45:0"},{"id":6529,"nodeType":"UncheckedBlock","src":"165673:77:0","statements":[{"expression":{"baseExpression":{"id":6520,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"165704:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"165704:35:0","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30783230","id":6521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165714:4:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6522,"name":"offsets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"165722:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323234","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165733:3:0","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},"src":"165722:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"165721:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"165714:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":6499,"id":6528,"nodeType":"Return","src":"165697:42:0"}]}]},"documentation":{"id":6493,"nodeType":"StructuredDocumentation","src":"165215:246:0","text":" @notice Returns extra suffix data from the provided extension calldata.\n @param extension The calldata from which the extra suffix data is to be retrieved.\n @return calldata Bytes representing the extra suffix data."},"id":6531,"implemented":true,"kind":"function","modifiers":[],"name":"customData","nameLocation":"165475:10:0","nodeType":"FunctionDefinition","parameters":{"id":6496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6495,"mutability":"mutable","name":"extension","nameLocation":"165501:9:0","nodeType":"VariableDeclaration","scope":6531,"src":"165486:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6494,"name":"bytes","nodeType":"ElementaryTypeName","src":"165486:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"165485:26:0"},"returnParameters":{"id":6499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6531,"src":"165534:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6497,"name":"bytes","nodeType":"ElementaryTypeName","src":"165534:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"165533:16:0"},"scope":6571,"src":"165466:290:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6569,"nodeType":"Block","src":"166294:432:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6542,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"166308:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"166318:6:0","memberName":"length","nodeType":"MemberAccess","src":"166308:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783230","id":6544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"166327:4:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"166308:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6551,"nodeType":"IfStatement","src":"166304:48:0","trueBody":{"expression":{"baseExpression":{"expression":{"id":6546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"166340:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"166344:4:0","memberName":"data","nodeType":"MemberAccess","src":"166340:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"30","id":6548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"166350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"166340:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":6541,"id":6550,"nodeType":"Return","src":"166333:19:0"}},{"assignments":[6554],"declarations":[{"constant":false,"id":6554,"mutability":"mutable","name":"offsets","nameLocation":"166371:7:0","nodeType":"VariableDeclaration","scope":6569,"src":"166363:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Offsets_$973","typeString":"Offsets"},"typeName":{"id":6553,"nodeType":"UserDefinedTypeName","pathNode":{"id":6552,"name":"Offsets","nameLocations":["166363:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":973,"src":"166363:7:0"},"referencedDeclaration":973,"src":"166363:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Offsets_$973","typeString":"Offsets"}},"visibility":"internal"}],"id":6555,"nodeType":"VariableDeclarationStatement","src":"166363:15:0"},{"assignments":[6557],"declarations":[{"constant":false,"id":6557,"mutability":"mutable","name":"concat","nameLocation":"166403:6:0","nodeType":"VariableDeclaration","scope":6569,"src":"166388:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6556,"name":"bytes","nodeType":"ElementaryTypeName","src":"166388:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6558,"nodeType":"VariableDeclarationStatement","src":"166388:21:0"},{"AST":{"nativeSrc":"166444:223:0","nodeType":"YulBlock","src":"166444:223:0","statements":[{"nativeSrc":"166502:41:0","nodeType":"YulAssignment","src":"166502:41:0","value":{"arguments":[{"name":"extension.offset","nativeSrc":"166526:16:0","nodeType":"YulIdentifier","src":"166526:16:0"}],"functionName":{"name":"calldataload","nativeSrc":"166513:12:0","nodeType":"YulIdentifier","src":"166513:12:0"},"nativeSrc":"166513:30:0","nodeType":"YulFunctionCall","src":"166513:30:0"},"variableNames":[{"name":"offsets","nativeSrc":"166502:7:0","nodeType":"YulIdentifier","src":"166502:7:0"}]},{"nativeSrc":"166556:44:0","nodeType":"YulAssignment","src":"166556:44:0","value":{"arguments":[{"name":"extension.offset","nativeSrc":"166577:16:0","nodeType":"YulIdentifier","src":"166577:16:0"},{"kind":"number","nativeSrc":"166595:4:0","nodeType":"YulLiteral","src":"166595:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"166573:3:0","nodeType":"YulIdentifier","src":"166573:3:0"},"nativeSrc":"166573:27:0","nodeType":"YulFunctionCall","src":"166573:27:0"},"variableNames":[{"name":"concat.offset","nativeSrc":"166556:13:0","nodeType":"YulIdentifier","src":"166556:13:0"}]},{"nativeSrc":"166613:44:0","nodeType":"YulAssignment","src":"166613:44:0","value":{"arguments":[{"name":"extension.length","nativeSrc":"166634:16:0","nodeType":"YulIdentifier","src":"166634:16:0"},{"kind":"number","nativeSrc":"166652:4:0","nodeType":"YulLiteral","src":"166652:4:0","type":"","value":"0x20"}],"functionName":{"name":"sub","nativeSrc":"166630:3:0","nodeType":"YulIdentifier","src":"166630:3:0"},"nativeSrc":"166630:27:0","nodeType":"YulFunctionCall","src":"166630:27:0"},"variableNames":[{"name":"concat.length","nativeSrc":"166613:13:0","nodeType":"YulIdentifier","src":"166613:13:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6557,"isOffset":false,"isSlot":false,"src":"166613:13:0","suffix":"length","valueSize":1},{"declaration":6557,"isOffset":true,"isSlot":false,"src":"166556:13:0","suffix":"offset","valueSize":1},{"declaration":6534,"isOffset":false,"isSlot":false,"src":"166634:16:0","suffix":"length","valueSize":1},{"declaration":6534,"isOffset":true,"isSlot":false,"src":"166526:16:0","suffix":"offset","valueSize":1},{"declaration":6534,"isOffset":true,"isSlot":false,"src":"166577:16:0","suffix":"offset","valueSize":1},{"declaration":6554,"isOffset":false,"isSlot":false,"src":"166502:7:0","valueSize":1}],"flags":["memory-safe"],"id":6559,"nodeType":"InlineAssembly","src":"166419:248:0"},{"expression":{"arguments":[{"id":6562,"name":"concat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"166696:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[{"id":6565,"name":"field","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"166712:5:0","typeDescriptions":{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}],"id":6564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"166704:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6563,"name":"uint256","nodeType":"ElementaryTypeName","src":"166704:7:0","typeDescriptions":{}}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"166704:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6560,"name":"offsets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"166684:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Offsets_$973","typeString":"Offsets"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"166692:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":997,"src":"166684:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Offsets_$973_$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes_calldata_ptr_$attached_to$_t_userDefinedValueType$_Offsets_$973_$","typeString":"function (Offsets,bytes calldata,uint256) pure returns (bytes calldata)"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"166684:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6541,"id":6568,"nodeType":"Return","src":"166677:42:0"}]},"documentation":{"id":6532,"nodeType":"StructuredDocumentation","src":"165762:430:0","text":" @notice Retrieves a specific field from the provided extension calldata.\n @dev The first 32 bytes of an extension calldata contain offsets to the end of each field within the calldata.\n @param extension The calldata from which the field is to be retrieved.\n @param field The specific dynamic field to retrieve from the extension.\n @return calldata Bytes representing the requested field."},"id":6570,"implemented":true,"kind":"function","modifiers":[],"name":"_get","nameLocation":"166206:4:0","nodeType":"FunctionDefinition","parameters":{"id":6538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"extension","nameLocation":"166226:9:0","nodeType":"VariableDeclaration","scope":6570,"src":"166211:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6533,"name":"bytes","nodeType":"ElementaryTypeName","src":"166211:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6537,"mutability":"mutable","name":"field","nameLocation":"166250:5:0","nodeType":"VariableDeclaration","scope":6570,"src":"166237:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"},"typeName":{"id":6536,"nodeType":"UserDefinedTypeName","pathNode":{"id":6535,"name":"DynamicField","nameLocations":["166237:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":6372,"src":"166237:12:0"},"referencedDeclaration":6372,"src":"166237:12:0","typeDescriptions":{"typeIdentifier":"t_enum$_DynamicField_$6372","typeString":"enum ExtensionLib_1.DynamicField"}},"visibility":"internal"}],"src":"166210:46:0"},"returnParameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6570,"src":"166278:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6539,"name":"bytes","nodeType":"ElementaryTypeName","src":"166278:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"166277:16:0"},"scope":6571,"src":"166197:529:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":10322,"src":"161540:5188:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":6572,"nodeType":"StructuredDocumentation","src":"166818:370:0","text":" @title Implements efficient safe methods for ERC20 interface.\n @notice Compared to the standard ERC20, this implementation offers several enhancements:\n 1. more gas-efficient, providing significant savings in transaction costs.\n 2. support for different permit implementations\n 3. forceApprove functionality\n 4. support for WETH deposit and withdraw"},"fullyImplemented":true,"id":7075,"linearizedBaseContracts":[7075],"name":"SafeERC20","nameLocation":"167197:9:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"fb7f5079","id":6574,"name":"SafeTransferFailed","nameLocation":"167219:18:0","nodeType":"ErrorDefinition","parameters":{"id":6573,"nodeType":"ParameterList","parameters":[],"src":"167237:2:0"},"src":"167213:27:0"},{"errorSelector":"f4059071","id":6576,"name":"SafeTransferFromFailed","nameLocation":"167251:22:0","nodeType":"ErrorDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[],"src":"167273:2:0"},"src":"167245:31:0"},{"errorSelector":"19be9a90","id":6578,"name":"ForceApproveFailed","nameLocation":"167287:18:0","nodeType":"ErrorDefinition","parameters":{"id":6577,"nodeType":"ParameterList","parameters":[],"src":"167305:2:0"},"src":"167281:27:0"},{"errorSelector":"8216cd1c","id":6580,"name":"SafeIncreaseAllowanceFailed","nameLocation":"167319:27:0","nodeType":"ErrorDefinition","parameters":{"id":6579,"nodeType":"ParameterList","parameters":[],"src":"167346:2:0"},"src":"167313:36:0"},{"errorSelector":"840bdf26","id":6582,"name":"SafeDecreaseAllowanceFailed","nameLocation":"167360:27:0","nodeType":"ErrorDefinition","parameters":{"id":6581,"nodeType":"ParameterList","parameters":[],"src":"167387:2:0"},"src":"167354:36:0"},{"errorSelector":"68275857","id":6584,"name":"SafePermitBadLength","nameLocation":"167401:19:0","nodeType":"ErrorDefinition","parameters":{"id":6583,"nodeType":"ParameterList","parameters":[],"src":"167420:2:0"},"src":"167395:28:0"},{"errorSelector":"8112e119","id":6586,"name":"Permit2TransferAmountTooHigh","nameLocation":"167434:28:0","nodeType":"ErrorDefinition","parameters":{"id":6585,"nodeType":"ParameterList","parameters":[],"src":"167462:2:0"},"src":"167428:37:0"},{"constant":true,"id":6589,"mutability":"constant","name":"_PERMIT2","nameLocation":"167527:8:0","nodeType":"VariableDeclaration","scope":7075,"src":"167502:78:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6587,"name":"address","nodeType":"ElementaryTypeName","src":"167502:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030323244343733303330463131366444454539463642343361433738424133","id":6588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"167538:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000022D473030F116dDEE9F6B43aC78BA3"},"visibility":"private"},{"constant":true,"id":6592,"mutability":"constant","name":"_PERMIT_LENGTH_ERROR","nameLocation":"167610:20:0","nodeType":"VariableDeclaration","scope":7075,"src":"167586:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6590,"name":"bytes4","nodeType":"ElementaryTypeName","src":"167586:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783638323735383537","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"167633:10:0","typeDescriptions":{"typeIdentifier":"t_rational_1747408983_by_1","typeString":"int_const 1747408983"},"value":"0x68275857"},"visibility":"private"},{"constant":true,"id":6595,"mutability":"constant","name":"_RAW_CALL_GAS_LIMIT","nameLocation":"167707:19:0","nodeType":"VariableDeclaration","scope":7075,"src":"167682:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6593,"name":"uint256","nodeType":"ElementaryTypeName","src":"167682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35303030","id":6594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"167729:4:0","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"visibility":"private"},{"body":{"id":6613,"nodeType":"Block","src":"168478:552:0","statements":[{"assignments":[6607],"declarations":[{"constant":false,"id":6607,"mutability":"mutable","name":"selector","nameLocation":"168495:8:0","nodeType":"VariableDeclaration","scope":6613,"src":"168488:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6606,"name":"bytes4","nodeType":"ElementaryTypeName","src":"168488:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":6611,"initialValue":{"expression":{"expression":{"id":6608,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"168506:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$379_$","typeString":"type(contract IERC20)"}},"id":6609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"168513:9:0","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":336,"src":"168506:16:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_address_$returns$_t_uint256_$","typeString":"function IERC20.balanceOf(address) view returns (uint256)"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"168523:8:0","memberName":"selector","nodeType":"MemberAccess","src":"168506:25:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"168488:43:0"},{"AST":{"nativeSrc":"168566:458:0","nodeType":"YulBlock","src":"168566:458:0","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"168630:4:0","nodeType":"YulLiteral","src":"168630:4:0","type":"","value":"0x00"},{"name":"selector","nativeSrc":"168636:8:0","nodeType":"YulIdentifier","src":"168636:8:0"}],"functionName":{"name":"mstore","nativeSrc":"168623:6:0","nodeType":"YulIdentifier","src":"168623:6:0"},"nativeSrc":"168623:22:0","nodeType":"YulFunctionCall","src":"168623:22:0"},"nativeSrc":"168623:22:0","nodeType":"YulExpressionStatement","src":"168623:22:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"168665:4:0","nodeType":"YulLiteral","src":"168665:4:0","type":"","value":"0x04"},{"name":"account","nativeSrc":"168671:7:0","nodeType":"YulIdentifier","src":"168671:7:0"}],"functionName":{"name":"mstore","nativeSrc":"168658:6:0","nodeType":"YulIdentifier","src":"168658:6:0"},"nativeSrc":"168658:21:0","nodeType":"YulFunctionCall","src":"168658:21:0"},"nativeSrc":"168658:21:0","nodeType":"YulExpressionStatement","src":"168658:21:0"},{"nativeSrc":"168692:63:0","nodeType":"YulVariableDeclaration","src":"168692:63:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"168718:3:0","nodeType":"YulIdentifier","src":"168718:3:0"},"nativeSrc":"168718:5:0","nodeType":"YulFunctionCall","src":"168718:5:0"},{"name":"token","nativeSrc":"168725:5:0","nodeType":"YulIdentifier","src":"168725:5:0"},{"kind":"number","nativeSrc":"168732:4:0","nodeType":"YulLiteral","src":"168732:4:0","type":"","value":"0x00"},{"kind":"number","nativeSrc":"168738:4:0","nodeType":"YulLiteral","src":"168738:4:0","type":"","value":"0x24"},{"kind":"number","nativeSrc":"168744:4:0","nodeType":"YulLiteral","src":"168744:4:0","type":"","value":"0x00"},{"kind":"number","nativeSrc":"168750:4:0","nodeType":"YulLiteral","src":"168750:4:0","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"168707:10:0","nodeType":"YulIdentifier","src":"168707:10:0"},"nativeSrc":"168707:48:0","nodeType":"YulFunctionCall","src":"168707:48:0"},"variables":[{"name":"success","nativeSrc":"168696:7:0","nodeType":"YulTypedName","src":"168696:7:0","type":""}]},{"nativeSrc":"168768:24:0","nodeType":"YulAssignment","src":"168768:24:0","value":{"arguments":[{"kind":"number","nativeSrc":"168790:1:0","nodeType":"YulLiteral","src":"168790:1:0","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"168784:5:0","nodeType":"YulIdentifier","src":"168784:5:0"},"nativeSrc":"168784:8:0","nodeType":"YulFunctionCall","src":"168784:8:0"},"variableNames":[{"name":"tokenBalance","nativeSrc":"168768:12:0","nodeType":"YulIdentifier","src":"168768:12:0"}]},{"body":{"nativeSrc":"168857:157:0","nodeType":"YulBlock","src":"168857:157:0","statements":[{"nativeSrc":"168875:22:0","nodeType":"YulVariableDeclaration","src":"168875:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"168892:4:0","nodeType":"YulLiteral","src":"168892:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"168886:5:0","nodeType":"YulIdentifier","src":"168886:5:0"},"nativeSrc":"168886:11:0","nodeType":"YulFunctionCall","src":"168886:11:0"},"variables":[{"name":"ptr","nativeSrc":"168879:3:0","nodeType":"YulTypedName","src":"168879:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"168929:3:0","nodeType":"YulIdentifier","src":"168929:3:0"},{"kind":"number","nativeSrc":"168934:1:0","nodeType":"YulLiteral","src":"168934:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"168937:14:0","nodeType":"YulIdentifier","src":"168937:14:0"},"nativeSrc":"168937:16:0","nodeType":"YulFunctionCall","src":"168937:16:0"}],"functionName":{"name":"returndatacopy","nativeSrc":"168914:14:0","nodeType":"YulIdentifier","src":"168914:14:0"},"nativeSrc":"168914:40:0","nodeType":"YulFunctionCall","src":"168914:40:0"},"nativeSrc":"168914:40:0","nodeType":"YulExpressionStatement","src":"168914:40:0"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"168978:3:0","nodeType":"YulIdentifier","src":"168978:3:0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"168983:14:0","nodeType":"YulIdentifier","src":"168983:14:0"},"nativeSrc":"168983:16:0","nodeType":"YulFunctionCall","src":"168983:16:0"}],"functionName":{"name":"revert","nativeSrc":"168971:6:0","nodeType":"YulIdentifier","src":"168971:6:0"},"nativeSrc":"168971:29:0","nodeType":"YulFunctionCall","src":"168971:29:0"},"nativeSrc":"168971:29:0","nodeType":"YulExpressionStatement","src":"168971:29:0"}]},"condition":{"arguments":[{"arguments":[{"name":"success","nativeSrc":"168819:7:0","nodeType":"YulIdentifier","src":"168819:7:0"}],"functionName":{"name":"iszero","nativeSrc":"168812:6:0","nodeType":"YulIdentifier","src":"168812:6:0"},"nativeSrc":"168812:15:0","nodeType":"YulFunctionCall","src":"168812:15:0"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"168832:14:0","nodeType":"YulIdentifier","src":"168832:14:0"},"nativeSrc":"168832:16:0","nodeType":"YulFunctionCall","src":"168832:16:0"},{"kind":"number","nativeSrc":"168850:4:0","nodeType":"YulLiteral","src":"168850:4:0","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"168829:2:0","nodeType":"YulIdentifier","src":"168829:2:0"},"nativeSrc":"168829:26:0","nodeType":"YulFunctionCall","src":"168829:26:0"}],"functionName":{"name":"or","nativeSrc":"168809:2:0","nodeType":"YulIdentifier","src":"168809:2:0"},"nativeSrc":"168809:47:0","nodeType":"YulFunctionCall","src":"168809:47:0"},"nativeSrc":"168806:208:0","nodeType":"YulIf","src":"168806:208:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":6601,"isOffset":false,"isSlot":false,"src":"168671:7:0","valueSize":1},{"declaration":6607,"isOffset":false,"isSlot":false,"src":"168636:8:0","valueSize":1},{"declaration":6599,"isOffset":false,"isSlot":false,"src":"168725:5:0","valueSize":1},{"declaration":6604,"isOffset":false,"isSlot":false,"src":"168768:12:0","valueSize":1}],"flags":["memory-safe"],"id":6612,"nodeType":"InlineAssembly","src":"168541:483:0"}]},"documentation":{"id":6596,"nodeType":"StructuredDocumentation","src":"167740:613:0","text":" @notice Fetches the balance of a specific ERC20 token held by an account.\n Consumes less gas then regular `ERC20.balanceOf`.\n @dev Note that the implementation does not perform dirty bits cleaning, so it is the\n responsibility of the caller to make sure that the higher 96 bits of the `account` parameter are clean.\n @param token The IERC20 token contract for which the balance will be fetched.\n @param account The address of the account whose token balance will be fetched.\n @return tokenBalance The balance of the specified ERC20 token held by the account."},"id":6614,"implemented":true,"kind":"function","modifiers":[],"name":"safeBalanceOf","nameLocation":"168367:13:0","nodeType":"FunctionDefinition","parameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6599,"mutability":"mutable","name":"token","nameLocation":"168397:5:0","nodeType":"VariableDeclaration","scope":6614,"src":"168390:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6598,"nodeType":"UserDefinedTypeName","pathNode":{"id":6597,"name":"IERC20","nameLocations":["168390:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"168390:6:0"},"referencedDeclaration":379,"src":"168390:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6601,"mutability":"mutable","name":"account","nameLocation":"168420:7:0","nodeType":"VariableDeclaration","scope":6614,"src":"168412:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6600,"name":"address","nodeType":"ElementaryTypeName","src":"168412:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"168380:53:0"},"returnParameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"tokenBalance","nameLocation":"168464:12:0","nodeType":"VariableDeclaration","scope":6614,"src":"168456:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6603,"name":"uint256","nodeType":"ElementaryTypeName","src":"168456:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"168455:22:0"},"scope":7075,"src":"168358:672:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6647,"nodeType":"Block","src":"170123:174:0","statements":[{"condition":{"id":6629,"name":"permit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"170137:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6645,"nodeType":"Block","src":"170225:66:0","statements":[{"expression":{"arguments":[{"id":6639,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"170256:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"id":6640,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"170263:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6641,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"170269:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6642,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"170273:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6638,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"170239:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"170239:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6644,"nodeType":"ExpressionStatement","src":"170239:41:0"}]},"id":6646,"nodeType":"IfStatement","src":"170133:158:0","trueBody":{"id":6637,"nodeType":"Block","src":"170146:73:0","statements":[{"expression":{"arguments":[{"id":6631,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"170184:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"id":6632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"170191:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"170197:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6634,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"170201:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6630,"name":"safeTransferFromPermit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"170160:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"170160:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6636,"nodeType":"ExpressionStatement","src":"170160:48:0"}]}}]},"documentation":{"id":6615,"nodeType":"StructuredDocumentation","src":"169036:922:0","text":" @notice Attempts to safely transfer tokens from one address to another.\n @dev If permit2 is true, uses the Permit2 standard; otherwise uses the standard ERC20 transferFrom.\n Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n the caller to make sure that the higher 96 bits of the `from` and `to` parameters are clean.\n @param token The IERC20 token contract from which the tokens will be transferred.\n @param from The address from which the tokens will be transferred.\n @param to The address to which the tokens will be transferred.\n @param amount The amount of tokens to transfer.\n @param permit2 If true, uses the Permit2 standard for the transfer; otherwise uses the standard ERC20 transferFrom."},"id":6648,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFromUniversal","nameLocation":"169972:25:0","nodeType":"FunctionDefinition","parameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6618,"mutability":"mutable","name":"token","nameLocation":"170014:5:0","nodeType":"VariableDeclaration","scope":6648,"src":"170007:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6617,"nodeType":"UserDefinedTypeName","pathNode":{"id":6616,"name":"IERC20","nameLocations":["170007:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"170007:6:0"},"referencedDeclaration":379,"src":"170007:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6620,"mutability":"mutable","name":"from","nameLocation":"170037:4:0","nodeType":"VariableDeclaration","scope":6648,"src":"170029:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6619,"name":"address","nodeType":"ElementaryTypeName","src":"170029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6622,"mutability":"mutable","name":"to","nameLocation":"170059:2:0","nodeType":"VariableDeclaration","scope":6648,"src":"170051:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6621,"name":"address","nodeType":"ElementaryTypeName","src":"170051:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6624,"mutability":"mutable","name":"amount","nameLocation":"170079:6:0","nodeType":"VariableDeclaration","scope":6648,"src":"170071:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6623,"name":"uint256","nodeType":"ElementaryTypeName","src":"170071:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6626,"mutability":"mutable","name":"permit2","nameLocation":"170100:7:0","nodeType":"VariableDeclaration","scope":6648,"src":"170095:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6625,"name":"bool","nodeType":"ElementaryTypeName","src":"170095:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"169997:116:0"},"returnParameters":{"id":6628,"nodeType":"ParameterList","parameters":[],"src":"170123:0:0"},"scope":7075,"src":"169963:334:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6677,"nodeType":"Block","src":"171159:793:0","statements":[{"assignments":[6662],"declarations":[{"constant":false,"id":6662,"mutability":"mutable","name":"selector","nameLocation":"171176:8:0","nodeType":"VariableDeclaration","scope":6677,"src":"171169:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6661,"name":"bytes4","nodeType":"ElementaryTypeName","src":"171169:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":6666,"initialValue":{"expression":{"expression":{"id":6663,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"171187:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"171193:12:0","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":378,"src":"171187:18:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"171206:8:0","memberName":"selector","nodeType":"MemberAccess","src":"171187:27:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"171169:45:0"},{"assignments":[6668],"declarations":[{"constant":false,"id":6668,"mutability":"mutable","name":"success","nameLocation":"171229:7:0","nodeType":"VariableDeclaration","scope":6677,"src":"171224:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6667,"name":"bool","nodeType":"ElementaryTypeName","src":"171224:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6669,"nodeType":"VariableDeclarationStatement","src":"171224:12:0"},{"AST":{"nativeSrc":"171271:620:0","nodeType":"YulBlock","src":"171271:620:0","statements":[{"nativeSrc":"171328:23:0","nodeType":"YulVariableDeclaration","src":"171328:23:0","value":{"arguments":[{"kind":"number","nativeSrc":"171346:4:0","nodeType":"YulLiteral","src":"171346:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"171340:5:0","nodeType":"YulIdentifier","src":"171340:5:0"},"nativeSrc":"171340:11:0","nodeType":"YulFunctionCall","src":"171340:11:0"},"variables":[{"name":"data","nativeSrc":"171332:4:0","nodeType":"YulTypedName","src":"171332:4:0","type":""}]},{"expression":{"arguments":[{"name":"data","nativeSrc":"171372:4:0","nodeType":"YulIdentifier","src":"171372:4:0"},{"name":"selector","nativeSrc":"171378:8:0","nodeType":"YulIdentifier","src":"171378:8:0"}],"functionName":{"name":"mstore","nativeSrc":"171365:6:0","nodeType":"YulIdentifier","src":"171365:6:0"},"nativeSrc":"171365:22:0","nodeType":"YulFunctionCall","src":"171365:22:0"},"nativeSrc":"171365:22:0","nodeType":"YulExpressionStatement","src":"171365:22:0"},{"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"171411:4:0","nodeType":"YulIdentifier","src":"171411:4:0"},{"kind":"number","nativeSrc":"171417:4:0","nodeType":"YulLiteral","src":"171417:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"171407:3:0","nodeType":"YulIdentifier","src":"171407:3:0"},"nativeSrc":"171407:15:0","nodeType":"YulFunctionCall","src":"171407:15:0"},{"name":"from","nativeSrc":"171424:4:0","nodeType":"YulIdentifier","src":"171424:4:0"}],"functionName":{"name":"mstore","nativeSrc":"171400:6:0","nodeType":"YulIdentifier","src":"171400:6:0"},"nativeSrc":"171400:29:0","nodeType":"YulFunctionCall","src":"171400:29:0"},"nativeSrc":"171400:29:0","nodeType":"YulExpressionStatement","src":"171400:29:0"},{"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"171453:4:0","nodeType":"YulIdentifier","src":"171453:4:0"},{"kind":"number","nativeSrc":"171459:4:0","nodeType":"YulLiteral","src":"171459:4:0","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"171449:3:0","nodeType":"YulIdentifier","src":"171449:3:0"},"nativeSrc":"171449:15:0","nodeType":"YulFunctionCall","src":"171449:15:0"},{"name":"to","nativeSrc":"171466:2:0","nodeType":"YulIdentifier","src":"171466:2:0"}],"functionName":{"name":"mstore","nativeSrc":"171442:6:0","nodeType":"YulIdentifier","src":"171442:6:0"},"nativeSrc":"171442:27:0","nodeType":"YulFunctionCall","src":"171442:27:0"},"nativeSrc":"171442:27:0","nodeType":"YulExpressionStatement","src":"171442:27:0"},{"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"171493:4:0","nodeType":"YulIdentifier","src":"171493:4:0"},{"kind":"number","nativeSrc":"171499:4:0","nodeType":"YulLiteral","src":"171499:4:0","type":"","value":"0x44"}],"functionName":{"name":"add","nativeSrc":"171489:3:0","nodeType":"YulIdentifier","src":"171489:3:0"},"nativeSrc":"171489:15:0","nodeType":"YulFunctionCall","src":"171489:15:0"},{"name":"amount","nativeSrc":"171506:6:0","nodeType":"YulIdentifier","src":"171506:6:0"}],"functionName":{"name":"mstore","nativeSrc":"171482:6:0","nodeType":"YulIdentifier","src":"171482:6:0"},"nativeSrc":"171482:31:0","nodeType":"YulFunctionCall","src":"171482:31:0"},"nativeSrc":"171482:31:0","nodeType":"YulExpressionStatement","src":"171482:31:0"},{"nativeSrc":"171526:54:0","nodeType":"YulAssignment","src":"171526:54:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"171542:3:0","nodeType":"YulIdentifier","src":"171542:3:0"},"nativeSrc":"171542:5:0","nodeType":"YulFunctionCall","src":"171542:5:0"},{"name":"token","nativeSrc":"171549:5:0","nodeType":"YulIdentifier","src":"171549:5:0"},{"kind":"number","nativeSrc":"171556:1:0","nodeType":"YulLiteral","src":"171556:1:0","type":"","value":"0"},{"name":"data","nativeSrc":"171559:4:0","nodeType":"YulIdentifier","src":"171559:4:0"},{"kind":"number","nativeSrc":"171565:3:0","nodeType":"YulLiteral","src":"171565:3:0","type":"","value":"100"},{"kind":"number","nativeSrc":"171570:3:0","nodeType":"YulLiteral","src":"171570:3:0","type":"","value":"0x0"},{"kind":"number","nativeSrc":"171575:4:0","nodeType":"YulLiteral","src":"171575:4:0","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"171537:4:0","nodeType":"YulIdentifier","src":"171537:4:0"},"nativeSrc":"171537:43:0","nodeType":"YulFunctionCall","src":"171537:43:0"},"variableNames":[{"name":"success","nativeSrc":"171526:7:0","nodeType":"YulIdentifier","src":"171526:7:0"}]},{"body":{"nativeSrc":"171604:277:0","nodeType":"YulBlock","src":"171604:277:0","statements":[{"cases":[{"body":{"nativeSrc":"171669:76:0","nodeType":"YulBlock","src":"171669:76:0","statements":[{"nativeSrc":"171691:36:0","nodeType":"YulAssignment","src":"171691:36:0","value":{"arguments":[{"arguments":[{"name":"token","nativeSrc":"171717:5:0","nodeType":"YulIdentifier","src":"171717:5:0"}],"functionName":{"name":"extcodesize","nativeSrc":"171705:11:0","nodeType":"YulIdentifier","src":"171705:11:0"},"nativeSrc":"171705:18:0","nodeType":"YulFunctionCall","src":"171705:18:0"},{"kind":"number","nativeSrc":"171725:1:0","nodeType":"YulLiteral","src":"171725:1:0","type":"","value":"0"}],"functionName":{"name":"gt","nativeSrc":"171702:2:0","nodeType":"YulIdentifier","src":"171702:2:0"},"nativeSrc":"171702:25:0","nodeType":"YulFunctionCall","src":"171702:25:0"},"variableNames":[{"name":"success","nativeSrc":"171691:7:0","nodeType":"YulIdentifier","src":"171691:7:0"}]}]},"nativeSrc":"171662:83:0","nodeType":"YulCase","src":"171662:83:0","value":{"kind":"number","nativeSrc":"171667:1:0","nodeType":"YulLiteral","src":"171667:1:0","type":"","value":"0"}},{"body":{"nativeSrc":"171770:97:0","nodeType":"YulBlock","src":"171770:97:0","statements":[{"nativeSrc":"171792:57:0","nodeType":"YulAssignment","src":"171792:57:0","value":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"171810:14:0","nodeType":"YulIdentifier","src":"171810:14:0"},"nativeSrc":"171810:16:0","nodeType":"YulFunctionCall","src":"171810:16:0"},{"kind":"number","nativeSrc":"171828:2:0","nodeType":"YulLiteral","src":"171828:2:0","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"171807:2:0","nodeType":"YulIdentifier","src":"171807:2:0"},"nativeSrc":"171807:24:0","nodeType":"YulFunctionCall","src":"171807:24:0"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"171842:1:0","nodeType":"YulLiteral","src":"171842:1:0","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"171836:5:0","nodeType":"YulIdentifier","src":"171836:5:0"},"nativeSrc":"171836:8:0","nodeType":"YulFunctionCall","src":"171836:8:0"},{"kind":"number","nativeSrc":"171846:1:0","nodeType":"YulLiteral","src":"171846:1:0","type":"","value":"1"}],"functionName":{"name":"eq","nativeSrc":"171833:2:0","nodeType":"YulIdentifier","src":"171833:2:0"},"nativeSrc":"171833:15:0","nodeType":"YulFunctionCall","src":"171833:15:0"}],"functionName":{"name":"and","nativeSrc":"171803:3:0","nodeType":"YulIdentifier","src":"171803:3:0"},"nativeSrc":"171803:46:0","nodeType":"YulFunctionCall","src":"171803:46:0"},"variableNames":[{"name":"success","nativeSrc":"171792:7:0","nodeType":"YulIdentifier","src":"171792:7:0"}]}]},"nativeSrc":"171762:105:0","nodeType":"YulCase","src":"171762:105:0","value":"default"}],"expression":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"171629:14:0","nodeType":"YulIdentifier","src":"171629:14:0"},"nativeSrc":"171629:16:0","nodeType":"YulFunctionCall","src":"171629:16:0"},"nativeSrc":"171622:245:0","nodeType":"YulSwitch","src":"171622:245:0"}]},"condition":{"name":"success","nativeSrc":"171596:7:0","nodeType":"YulIdentifier","src":"171596:7:0"},"nativeSrc":"171593:288:0","nodeType":"YulIf","src":"171593:288:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":6658,"isOffset":false,"isSlot":false,"src":"171506:6:0","valueSize":1},{"declaration":6654,"isOffset":false,"isSlot":false,"src":"171424:4:0","valueSize":1},{"declaration":6662,"isOffset":false,"isSlot":false,"src":"171378:8:0","valueSize":1},{"declaration":6668,"isOffset":false,"isSlot":false,"src":"171526:7:0","valueSize":1},{"declaration":6668,"isOffset":false,"isSlot":false,"src":"171596:7:0","valueSize":1},{"declaration":6668,"isOffset":false,"isSlot":false,"src":"171691:7:0","valueSize":1},{"declaration":6668,"isOffset":false,"isSlot":false,"src":"171792:7:0","valueSize":1},{"declaration":6656,"isOffset":false,"isSlot":false,"src":"171466:2:0","valueSize":1},{"declaration":6652,"isOffset":false,"isSlot":false,"src":"171549:5:0","valueSize":1},{"declaration":6652,"isOffset":false,"isSlot":false,"src":"171717:5:0","valueSize":1}],"flags":["memory-safe"],"id":6670,"nodeType":"InlineAssembly","src":"171246:645:0"},{"condition":{"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"171904:8:0","subExpression":{"id":6671,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"171905:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6676,"nodeType":"IfStatement","src":"171900:45:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6673,"name":"SafeTransferFromFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"171921:22:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"171921:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6675,"nodeType":"RevertStatement","src":"171914:31:0"}}]},"documentation":{"id":6649,"nodeType":"StructuredDocumentation","src":"170303:722:0","text":" @notice Attempts to safely transfer tokens from one address to another using the ERC20 standard.\n @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n the caller to make sure that the higher 96 bits of the `from` and `to` parameters are clean.\n @param token The IERC20 token contract from which the tokens will be transferred.\n @param from The address from which the tokens will be transferred.\n @param to The address to which the tokens will be transferred.\n @param amount The amount of tokens to transfer."},"id":6678,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"171039:16:0","nodeType":"FunctionDefinition","parameters":{"id":6659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"token","nameLocation":"171072:5:0","nodeType":"VariableDeclaration","scope":6678,"src":"171065:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6651,"nodeType":"UserDefinedTypeName","pathNode":{"id":6650,"name":"IERC20","nameLocations":["171065:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"171065:6:0"},"referencedDeclaration":379,"src":"171065:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6654,"mutability":"mutable","name":"from","nameLocation":"171095:4:0","nodeType":"VariableDeclaration","scope":6678,"src":"171087:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6653,"name":"address","nodeType":"ElementaryTypeName","src":"171087:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6656,"mutability":"mutable","name":"to","nameLocation":"171117:2:0","nodeType":"VariableDeclaration","scope":6678,"src":"171109:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6655,"name":"address","nodeType":"ElementaryTypeName","src":"171109:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6658,"mutability":"mutable","name":"amount","nameLocation":"171137:6:0","nodeType":"VariableDeclaration","scope":6678,"src":"171129:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6657,"name":"uint256","nodeType":"ElementaryTypeName","src":"171129:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"171055:94:0"},"returnParameters":{"id":6660,"nodeType":"ParameterList","parameters":[],"src":"171159:0:0"},"scope":7075,"src":"171030:922:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6718,"nodeType":"Block","src":"172823:715:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"172837:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"172851:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6693,"name":"uint160","nodeType":"ElementaryTypeName","src":"172851:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6692,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"172846:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"172846:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"172860:3:0","memberName":"max","nodeType":"MemberAccess","src":"172846:17:0","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"172837:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6701,"nodeType":"IfStatement","src":"172833:69:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6698,"name":"Permit2TransferAmountTooHigh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"172872:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"172872:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6700,"nodeType":"RevertStatement","src":"172865:37:0"}},{"assignments":[6703],"declarations":[{"constant":false,"id":6703,"mutability":"mutable","name":"selector","nameLocation":"172919:8:0","nodeType":"VariableDeclaration","scope":6718,"src":"172912:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6702,"name":"bytes4","nodeType":"ElementaryTypeName","src":"172912:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":6707,"initialValue":{"expression":{"expression":{"id":6704,"name":"IPermit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"172930:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPermit2_$604_$","typeString":"type(contract IPermit2)"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"172939:12:0","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":579,"src":"172930:21:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint160_$_t_address_$returns$__$","typeString":"function IPermit2.transferFrom(address,address,uint160,address)"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"172952:8:0","memberName":"selector","nodeType":"MemberAccess","src":"172930:30:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"172912:48:0"},{"assignments":[6709],"declarations":[{"constant":false,"id":6709,"mutability":"mutable","name":"success","nameLocation":"172975:7:0","nodeType":"VariableDeclaration","scope":6718,"src":"172970:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6708,"name":"bool","nodeType":"ElementaryTypeName","src":"172970:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6710,"nodeType":"VariableDeclarationStatement","src":"172970:12:0"},{"AST":{"nativeSrc":"173017:460:0","nodeType":"YulBlock","src":"173017:460:0","statements":[{"nativeSrc":"173074:23:0","nodeType":"YulVariableDeclaration","src":"173074:23:0","value":{"arguments":[{"kind":"number","nativeSrc":"173092:4:0","nodeType":"YulLiteral","src":"173092:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"173086:5:0","nodeType":"YulIdentifier","src":"173086:5:0"},"nativeSrc":"173086:11:0","nodeType":"YulFunctionCall","src":"173086:11:0"},"variables":[{"name":"data","nativeSrc":"173078:4:0","nodeType":"YulTypedName","src":"173078:4:0","type":""}]},{"expression":{"arguments":[{"name":"data","nativeSrc":"173118:4:0","nodeType":"YulIdentifier","src":"173118:4:0"},{"name":"selector","nativeSrc":"173124:8:0","nodeType":"YulIdentifier","src":"173124:8:0"}],"functionName":{"name":"mstore","nativeSrc":"173111:6:0","nodeType":"YulIdentifier","src":"173111:6:0"},"nativeSrc":"173111:22:0","nodeType":"YulFunctionCall","src":"173111:22:0"},"nativeSrc":"173111:22:0","nodeType":"YulExpressionStatement","src":"173111:22:0"},{"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"173157:4:0","nodeType":"YulIdentifier","src":"173157:4:0"},{"kind":"number","nativeSrc":"173163:4:0","nodeType":"YulLiteral","src":"173163:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"173153:3:0","nodeType":"YulIdentifier","src":"173153:3:0"},"nativeSrc":"173153:15:0","nodeType":"YulFunctionCall","src":"173153:15:0"},{"name":"from","nativeSrc":"173170:4:0","nodeType":"YulIdentifier","src":"173170:4:0"}],"functionName":{"name":"mstore","nativeSrc":"173146:6:0","nodeType":"YulIdentifier","src":"173146:6:0"},"nativeSrc":"173146:29:0","nodeType":"YulFunctionCall","src":"173146:29:0"},"nativeSrc":"173146:29:0","nodeType":"YulExpressionStatement","src":"173146:29:0"},{"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"173199:4:0","nodeType":"YulIdentifier","src":"173199:4:0"},{"kind":"number","nativeSrc":"173205:4:0","nodeType":"YulLiteral","src":"173205:4:0","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"173195:3:0","nodeType":"YulIdentifier","src":"173195:3:0"},"nativeSrc":"173195:15:0","nodeType":"YulFunctionCall","src":"173195:15:0"},{"name":"to","nativeSrc":"173212:2:0","nodeType":"YulIdentifier","src":"173212:2:0"}],"functionName":{"name":"mstore","nativeSrc":"173188:6:0","nodeType":"YulIdentifier","src":"173188:6:0"},"nativeSrc":"173188:27:0","nodeType":"YulFunctionCall","src":"173188:27:0"},"nativeSrc":"173188:27:0","nodeType":"YulExpressionStatement","src":"173188:27:0"},{"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"173239:4:0","nodeType":"YulIdentifier","src":"173239:4:0"},{"kind":"number","nativeSrc":"173245:4:0","nodeType":"YulLiteral","src":"173245:4:0","type":"","value":"0x44"}],"functionName":{"name":"add","nativeSrc":"173235:3:0","nodeType":"YulIdentifier","src":"173235:3:0"},"nativeSrc":"173235:15:0","nodeType":"YulFunctionCall","src":"173235:15:0"},{"name":"amount","nativeSrc":"173252:6:0","nodeType":"YulIdentifier","src":"173252:6:0"}],"functionName":{"name":"mstore","nativeSrc":"173228:6:0","nodeType":"YulIdentifier","src":"173228:6:0"},"nativeSrc":"173228:31:0","nodeType":"YulFunctionCall","src":"173228:31:0"},"nativeSrc":"173228:31:0","nodeType":"YulExpressionStatement","src":"173228:31:0"},{"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"173283:4:0","nodeType":"YulIdentifier","src":"173283:4:0"},{"kind":"number","nativeSrc":"173289:4:0","nodeType":"YulLiteral","src":"173289:4:0","type":"","value":"0x64"}],"functionName":{"name":"add","nativeSrc":"173279:3:0","nodeType":"YulIdentifier","src":"173279:3:0"},"nativeSrc":"173279:15:0","nodeType":"YulFunctionCall","src":"173279:15:0"},{"name":"token","nativeSrc":"173296:5:0","nodeType":"YulIdentifier","src":"173296:5:0"}],"functionName":{"name":"mstore","nativeSrc":"173272:6:0","nodeType":"YulIdentifier","src":"173272:6:0"},"nativeSrc":"173272:30:0","nodeType":"YulFunctionCall","src":"173272:30:0"},"nativeSrc":"173272:30:0","nodeType":"YulExpressionStatement","src":"173272:30:0"},{"nativeSrc":"173315:57:0","nodeType":"YulAssignment","src":"173315:57:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"173331:3:0","nodeType":"YulIdentifier","src":"173331:3:0"},"nativeSrc":"173331:5:0","nodeType":"YulFunctionCall","src":"173331:5:0"},{"name":"_PERMIT2","nativeSrc":"173338:8:0","nodeType":"YulIdentifier","src":"173338:8:0"},{"kind":"number","nativeSrc":"173348:1:0","nodeType":"YulLiteral","src":"173348:1:0","type":"","value":"0"},{"name":"data","nativeSrc":"173351:4:0","nodeType":"YulIdentifier","src":"173351:4:0"},{"kind":"number","nativeSrc":"173357:4:0","nodeType":"YulLiteral","src":"173357:4:0","type":"","value":"0x84"},{"kind":"number","nativeSrc":"173363:3:0","nodeType":"YulLiteral","src":"173363:3:0","type":"","value":"0x0"},{"kind":"number","nativeSrc":"173368:3:0","nodeType":"YulLiteral","src":"173368:3:0","type":"","value":"0x0"}],"functionName":{"name":"call","nativeSrc":"173326:4:0","nodeType":"YulIdentifier","src":"173326:4:0"},"nativeSrc":"173326:46:0","nodeType":"YulFunctionCall","src":"173326:46:0"},"variableNames":[{"name":"success","nativeSrc":"173315:7:0","nodeType":"YulIdentifier","src":"173315:7:0"}]},{"body":{"nativeSrc":"173396:71:0","nodeType":"YulBlock","src":"173396:71:0","statements":[{"nativeSrc":"173414:39:0","nodeType":"YulAssignment","src":"173414:39:0","value":{"arguments":[{"arguments":[{"name":"_PERMIT2","nativeSrc":"173440:8:0","nodeType":"YulIdentifier","src":"173440:8:0"}],"functionName":{"name":"extcodesize","nativeSrc":"173428:11:0","nodeType":"YulIdentifier","src":"173428:11:0"},"nativeSrc":"173428:21:0","nodeType":"YulFunctionCall","src":"173428:21:0"},{"kind":"number","nativeSrc":"173451:1:0","nodeType":"YulLiteral","src":"173451:1:0","type":"","value":"0"}],"functionName":{"name":"gt","nativeSrc":"173425:2:0","nodeType":"YulIdentifier","src":"173425:2:0"},"nativeSrc":"173425:28:0","nodeType":"YulFunctionCall","src":"173425:28:0"},"variableNames":[{"name":"success","nativeSrc":"173414:7:0","nodeType":"YulIdentifier","src":"173414:7:0"}]}]},"condition":{"name":"success","nativeSrc":"173388:7:0","nodeType":"YulIdentifier","src":"173388:7:0"},"nativeSrc":"173385:82:0","nodeType":"YulIf","src":"173385:82:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":6589,"isOffset":false,"isSlot":false,"src":"173338:8:0","valueSize":1},{"declaration":6589,"isOffset":false,"isSlot":false,"src":"173440:8:0","valueSize":1},{"declaration":6688,"isOffset":false,"isSlot":false,"src":"173252:6:0","valueSize":1},{"declaration":6684,"isOffset":false,"isSlot":false,"src":"173170:4:0","valueSize":1},{"declaration":6703,"isOffset":false,"isSlot":false,"src":"173124:8:0","valueSize":1},{"declaration":6709,"isOffset":false,"isSlot":false,"src":"173315:7:0","valueSize":1},{"declaration":6709,"isOffset":false,"isSlot":false,"src":"173388:7:0","valueSize":1},{"declaration":6709,"isOffset":false,"isSlot":false,"src":"173414:7:0","valueSize":1},{"declaration":6686,"isOffset":false,"isSlot":false,"src":"173212:2:0","valueSize":1},{"declaration":6682,"isOffset":false,"isSlot":false,"src":"173296:5:0","valueSize":1}],"flags":["memory-safe"],"id":6711,"nodeType":"InlineAssembly","src":"172992:485:0"},{"condition":{"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"173490:8:0","subExpression":{"id":6712,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"173491:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6717,"nodeType":"IfStatement","src":"173486:45:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6714,"name":"SafeTransferFromFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"173507:22:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"173507:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6716,"nodeType":"RevertStatement","src":"173500:31:0"}}]},"documentation":{"id":6679,"nodeType":"StructuredDocumentation","src":"171958:724:0","text":" @notice Attempts to safely transfer tokens from one address to another using the Permit2 standard.\n @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n the caller to make sure that the higher 96 bits of the `from` and `to` parameters are clean.\n @param token The IERC20 token contract from which the tokens will be transferred.\n @param from The address from which the tokens will be transferred.\n @param to The address to which the tokens will be transferred.\n @param amount The amount of tokens to transfer."},"id":6719,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFromPermit2","nameLocation":"172696:23:0","nodeType":"FunctionDefinition","parameters":{"id":6689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"token","nameLocation":"172736:5:0","nodeType":"VariableDeclaration","scope":6719,"src":"172729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6681,"nodeType":"UserDefinedTypeName","pathNode":{"id":6680,"name":"IERC20","nameLocations":["172729:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"172729:6:0"},"referencedDeclaration":379,"src":"172729:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6684,"mutability":"mutable","name":"from","nameLocation":"172759:4:0","nodeType":"VariableDeclaration","scope":6719,"src":"172751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6683,"name":"address","nodeType":"ElementaryTypeName","src":"172751:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6686,"mutability":"mutable","name":"to","nameLocation":"172781:2:0","nodeType":"VariableDeclaration","scope":6719,"src":"172773:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6685,"name":"address","nodeType":"ElementaryTypeName","src":"172773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6688,"mutability":"mutable","name":"amount","nameLocation":"172801:6:0","nodeType":"VariableDeclaration","scope":6719,"src":"172793:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6687,"name":"uint256","nodeType":"ElementaryTypeName","src":"172793:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"172719:94:0"},"returnParameters":{"id":6690,"nodeType":"ParameterList","parameters":[],"src":"172823:0:0"},"scope":7075,"src":"172687:851:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6744,"nodeType":"Block","src":"174252:127:0","statements":[{"condition":{"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"174266:53:0","subExpression":{"arguments":[{"id":6731,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"174277:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"expression":{"expression":{"id":6732,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"174284:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"174290:8:0","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":346,"src":"174284:14:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"174299:8:0","memberName":"selector","nodeType":"MemberAccess","src":"174284:23:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":6735,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"174309:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"174313:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6730,"name":"_makeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"174267:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_bytes4_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes4,address,uint256) returns (bool)"}},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"174267:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6743,"nodeType":"IfStatement","src":"174262:111:0","trueBody":{"id":6742,"nodeType":"Block","src":"174321:52:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6739,"name":"SafeTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"174342:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"174342:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6741,"nodeType":"RevertStatement","src":"174335:27:0"}]}}]},"documentation":{"id":6720,"nodeType":"StructuredDocumentation","src":"173544:601:0","text":" @notice Attempts to safely transfer tokens to another address.\n @dev Either requires `true` in return data, or requires target to be smart-contract and empty return data.\n Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n the caller to make sure that the higher 96 bits of the `to` parameter are clean.\n @param token The IERC20 token contract from which the tokens will be transferred.\n @param to The address to which the tokens will be transferred.\n @param value The amount of tokens to transfer."},"id":6745,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"174159:12:0","nodeType":"FunctionDefinition","parameters":{"id":6728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6723,"mutability":"mutable","name":"token","nameLocation":"174188:5:0","nodeType":"VariableDeclaration","scope":6745,"src":"174181:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6722,"nodeType":"UserDefinedTypeName","pathNode":{"id":6721,"name":"IERC20","nameLocations":["174181:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"174181:6:0"},"referencedDeclaration":379,"src":"174181:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6725,"mutability":"mutable","name":"to","nameLocation":"174211:2:0","nodeType":"VariableDeclaration","scope":6745,"src":"174203:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6724,"name":"address","nodeType":"ElementaryTypeName","src":"174203:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6727,"mutability":"mutable","name":"value","nameLocation":"174231:5:0","nodeType":"VariableDeclaration","scope":6745,"src":"174223:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6726,"name":"uint256","nodeType":"ElementaryTypeName","src":"174223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"174171:71:0"},"returnParameters":{"id":6729,"nodeType":"ParameterList","parameters":[],"src":"174252:0:0"},"scope":7075,"src":"174150:229:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6791,"nodeType":"Block","src":"175103:329:0","statements":[{"condition":{"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"175117:57:0","subExpression":{"arguments":[{"id":6757,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"175128:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"expression":{"expression":{"id":6758,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"175135:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"175141:7:0","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":366,"src":"175135:13:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"175149:8:0","memberName":"selector","nodeType":"MemberAccess","src":"175135:22:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":6761,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"175159:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"175168:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6756,"name":"_makeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"175118:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_bytes4_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes4,address,uint256) returns (bool)"}},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"175118:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6790,"nodeType":"IfStatement","src":"175113:313:0","trueBody":{"id":6789,"nodeType":"Block","src":"175176:250:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"175211:53:0","subExpression":{"arguments":[{"id":6766,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"175222:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"expression":{"expression":{"id":6767,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"175229:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"175235:7:0","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":366,"src":"175229:13:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"175243:8:0","memberName":"selector","nodeType":"MemberAccess","src":"175229:22:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":6770,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"175253:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":6771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"175262:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6765,"name":"_makeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"175212:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_bytes4_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes4,address,uint256) returns (bool)"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"175212:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"175284:57:0","subExpression":{"arguments":[{"id":6775,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"175295:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"expression":{"expression":{"id":6776,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"175302:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"175308:7:0","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":366,"src":"175302:13:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"175316:8:0","memberName":"selector","nodeType":"MemberAccess","src":"175302:22:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":6779,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"175326:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"175335:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6774,"name":"_makeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"175285:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_bytes4_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes4,address,uint256) returns (bool)"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"175285:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"175211:130:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6788,"nodeType":"IfStatement","src":"175190:226:0","trueBody":{"id":6787,"nodeType":"Block","src":"175356:60:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6784,"name":"ForceApproveFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"175381:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"175381:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6786,"nodeType":"RevertStatement","src":"175374:27:0"}]}}]}}]},"documentation":{"id":6746,"nodeType":"StructuredDocumentation","src":"174385:606:0","text":" @notice Attempts to approve a spender to spend a certain amount of tokens.\n @dev If `approve(from, to, amount)` fails, it tries to set the allowance to zero, and retries the `approve` call.\n Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n the caller to make sure that the higher 96 bits of the `spender` parameter are clean.\n @param token The IERC20 token contract on which the call will be made.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent."},"id":6792,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"175005:12:0","nodeType":"FunctionDefinition","parameters":{"id":6754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6749,"mutability":"mutable","name":"token","nameLocation":"175034:5:0","nodeType":"VariableDeclaration","scope":6792,"src":"175027:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6748,"nodeType":"UserDefinedTypeName","pathNode":{"id":6747,"name":"IERC20","nameLocations":["175027:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"175027:6:0"},"referencedDeclaration":379,"src":"175027:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6751,"mutability":"mutable","name":"spender","nameLocation":"175057:7:0","nodeType":"VariableDeclaration","scope":6792,"src":"175049:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6750,"name":"address","nodeType":"ElementaryTypeName","src":"175049:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6753,"mutability":"mutable","name":"value","nameLocation":"175082:5:0","nodeType":"VariableDeclaration","scope":6792,"src":"175074:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6752,"name":"uint256","nodeType":"ElementaryTypeName","src":"175074:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"175017:76:0"},"returnParameters":{"id":6755,"nodeType":"ParameterList","parameters":[],"src":"175103:0:0"},"scope":7075,"src":"174996:436:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6835,"nodeType":"Block","src":"176232:222:0","statements":[{"assignments":[6804],"declarations":[{"constant":false,"id":6804,"mutability":"mutable","name":"allowance","nameLocation":"176250:9:0","nodeType":"VariableDeclaration","scope":6835,"src":"176242:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6803,"name":"uint256","nodeType":"ElementaryTypeName","src":"176242:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6813,"initialValue":{"arguments":[{"arguments":[{"id":6809,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"176286:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$7075","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$7075","typeString":"library SafeERC20"}],"id":6808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"176278:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6807,"name":"address","nodeType":"ElementaryTypeName","src":"176278:7:0","typeDescriptions":{}}},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"176278:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6811,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"176293:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6805,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6796,"src":"176262:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"176268:9:0","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":356,"src":"176262:15:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"176262:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"176242:59:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"176315:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"176328:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6816,"name":"uint256","nodeType":"ElementaryTypeName","src":"176328:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6815,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"176323:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"176323:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"176337:3:0","memberName":"max","nodeType":"MemberAccess","src":"176323:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6820,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"176343:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"176323:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"176315:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6826,"nodeType":"IfStatement","src":"176311:79:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6823,"name":"SafeIncreaseAllowanceFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"176361:27:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"176361:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6825,"nodeType":"RevertStatement","src":"176354:36:0"}},{"expression":{"arguments":[{"id":6828,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6796,"src":"176413:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"id":6829,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"176420:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6830,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"176429:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"176441:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"176429:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6827,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"176400:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"176400:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6834,"nodeType":"ExpressionStatement","src":"176400:47:0"}]},"documentation":{"id":6793,"nodeType":"StructuredDocumentation","src":"175438:673:0","text":" @notice Safely increases the allowance of a spender.\n @dev Increases with safe math check. Checks if the increased allowance will overflow, if yes, then it reverts the transaction.\n Then uses `forceApprove` to increase the allowance.\n Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n the caller to make sure that the higher 96 bits of the `spender` parameter are clean.\n @param token The IERC20 token contract on which the call will be made.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to increase the allowance by."},"id":6836,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"176125:21:0","nodeType":"FunctionDefinition","parameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6796,"mutability":"mutable","name":"token","nameLocation":"176163:5:0","nodeType":"VariableDeclaration","scope":6836,"src":"176156:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6795,"nodeType":"UserDefinedTypeName","pathNode":{"id":6794,"name":"IERC20","nameLocations":["176156:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"176156:6:0"},"referencedDeclaration":379,"src":"176156:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6798,"mutability":"mutable","name":"spender","nameLocation":"176186:7:0","nodeType":"VariableDeclaration","scope":6836,"src":"176178:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6797,"name":"address","nodeType":"ElementaryTypeName","src":"176178:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6800,"mutability":"mutable","name":"value","nameLocation":"176211:5:0","nodeType":"VariableDeclaration","scope":6836,"src":"176203:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6799,"name":"uint256","nodeType":"ElementaryTypeName","src":"176203:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"176146:76:0"},"returnParameters":{"id":6802,"nodeType":"ParameterList","parameters":[],"src":"176232:0:0"},"scope":7075,"src":"176116:338:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6873,"nodeType":"Block","src":"177255:202:0","statements":[{"assignments":[6848],"declarations":[{"constant":false,"id":6848,"mutability":"mutable","name":"allowance","nameLocation":"177273:9:0","nodeType":"VariableDeclaration","scope":6873,"src":"177265:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"177265:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6857,"initialValue":{"arguments":[{"arguments":[{"id":6853,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"177309:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$7075","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$7075","typeString":"library SafeERC20"}],"id":6852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"177301:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6851,"name":"address","nodeType":"ElementaryTypeName","src":"177301:7:0","typeDescriptions":{}}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"177301:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6855,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"177316:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6849,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"177285:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"177291:9:0","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":356,"src":"177285:15:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"177285:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"177265:59:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"177338:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6859,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"177346:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"177338:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6864,"nodeType":"IfStatement","src":"177334:59:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6861,"name":"SafeDecreaseAllowanceFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"177364:27:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"177364:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6863,"nodeType":"RevertStatement","src":"177357:36:0"}},{"expression":{"arguments":[{"id":6866,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"177416:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"id":6867,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"177423:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6868,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"177432:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"177444:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"177432:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6865,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"177403:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"177403:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6872,"nodeType":"ExpressionStatement","src":"177403:47:0"}]},"documentation":{"id":6837,"nodeType":"StructuredDocumentation","src":"176460:674:0","text":" @notice Safely decreases the allowance of a spender.\n @dev Decreases with safe math check. Checks if the decreased allowance will underflow, if yes, then it reverts the transaction.\n Then uses `forceApprove` to increase the allowance.\n Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n the caller to make sure that the higher 96 bits of the `spender` parameter are clean.\n @param token The IERC20 token contract on which the call will be made.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to decrease the allowance by."},"id":6874,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"177148:21:0","nodeType":"FunctionDefinition","parameters":{"id":6845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"token","nameLocation":"177186:5:0","nodeType":"VariableDeclaration","scope":6874,"src":"177179:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6839,"nodeType":"UserDefinedTypeName","pathNode":{"id":6838,"name":"IERC20","nameLocations":["177179:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"177179:6:0"},"referencedDeclaration":379,"src":"177179:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6842,"mutability":"mutable","name":"spender","nameLocation":"177209:7:0","nodeType":"VariableDeclaration","scope":6874,"src":"177201:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6841,"name":"address","nodeType":"ElementaryTypeName","src":"177201:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6844,"mutability":"mutable","name":"value","nameLocation":"177234:5:0","nodeType":"VariableDeclaration","scope":6874,"src":"177226:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6843,"name":"uint256","nodeType":"ElementaryTypeName","src":"177226:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"177169:76:0"},"returnParameters":{"id":6846,"nodeType":"ParameterList","parameters":[],"src":"177255:0:0"},"scope":7075,"src":"177139:318:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6900,"nodeType":"Block","src":"178011:107:0","statements":[{"condition":{"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"178025:52:0","subExpression":{"arguments":[{"id":6884,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"178036:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"expression":{"id":6885,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"178043:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"178047:6:0","memberName":"sender","nodeType":"MemberAccess","src":"178043:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6889,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"178063:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$7075","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$7075","typeString":"library SafeERC20"}],"id":6888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"178055:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6887,"name":"address","nodeType":"ElementaryTypeName","src":"178055:7:0","typeDescriptions":{}}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"178055:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6891,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"178070:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6883,"name":"tryPermit","nodeType":"Identifier","overloadedDeclarations":[6951,6992],"referencedDeclaration":6992,"src":"178026:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,address,address,bytes calldata) returns (bool)"}},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"178026:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6899,"nodeType":"IfStatement","src":"178021:90:0","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6894,"name":"RevertReasonForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"178079:21:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RevertReasonForwarder_$1076_$","typeString":"type(library RevertReasonForwarder)"}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"178101:8:0","memberName":"reRevert","nodeType":"MemberAccess","referencedDeclaration":1067,"src":"178079:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$__$","typeString":"function () pure"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"178079:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6898,"nodeType":"ExpressionStatement","src":"178079:32:0"}}]},"documentation":{"id":6875,"nodeType":"StructuredDocumentation","src":"177463:477:0","text":" @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\n Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\n @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\n @param token The IERC20 token to execute the permit function on.\n @param permit The permit data to be used in the function call."},"id":6901,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"177954:10:0","nodeType":"FunctionDefinition","parameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"token","nameLocation":"177972:5:0","nodeType":"VariableDeclaration","scope":6901,"src":"177965:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6877,"nodeType":"UserDefinedTypeName","pathNode":{"id":6876,"name":"IERC20","nameLocations":["177965:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"177965:6:0"},"referencedDeclaration":379,"src":"177965:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6880,"mutability":"mutable","name":"permit","nameLocation":"177994:6:0","nodeType":"VariableDeclaration","scope":6901,"src":"177979:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6879,"name":"bytes","nodeType":"ElementaryTypeName","src":"177979:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"177964:37:0"},"returnParameters":{"id":6882,"nodeType":"ParameterList","parameters":[],"src":"178011:0:0"},"scope":7075,"src":"177945:173:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6927,"nodeType":"Block","src":"179064:96:0","statements":[{"condition":{"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"179078:41:0","subExpression":{"arguments":[{"id":6915,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"179089:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"id":6916,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"179096:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6917,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"179103:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6918,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"179112:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6914,"name":"tryPermit","nodeType":"Identifier","overloadedDeclarations":[6951,6992],"referencedDeclaration":6992,"src":"179079:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,address,address,bytes calldata) returns (bool)"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"179079:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6926,"nodeType":"IfStatement","src":"179074:79:0","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6921,"name":"RevertReasonForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"179121:21:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RevertReasonForwarder_$1076_$","typeString":"type(library RevertReasonForwarder)"}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"179143:8:0","memberName":"reRevert","nodeType":"MemberAccess","referencedDeclaration":1067,"src":"179121:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$__$","typeString":"function () pure"}},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"179121:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6925,"nodeType":"ExpressionStatement","src":"179121:32:0"}}]},"documentation":{"id":6902,"nodeType":"StructuredDocumentation","src":"178124:837:0","text":" @notice Attempts to execute the `permit` function on the provided token with custom owner and spender parameters.\n Permit type is determined automatically based on permit calldata (IERC20Permit, IDaiLikePermit, and IPermit2).\n @dev Wraps `tryPermit` function and forwards revert reason if permit fails.\n Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n the caller to make sure that the higher 96 bits of the `owner` and `spender` parameters are clean.\n @param token The IERC20 token to execute the permit function on.\n @param owner The owner of the tokens for which the permit is made.\n @param spender The spender allowed to spend the tokens by the permit.\n @param permit The permit data to be used in the function call."},"id":6928,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"178975:10:0","nodeType":"FunctionDefinition","parameters":{"id":6912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6905,"mutability":"mutable","name":"token","nameLocation":"178993:5:0","nodeType":"VariableDeclaration","scope":6928,"src":"178986:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6904,"nodeType":"UserDefinedTypeName","pathNode":{"id":6903,"name":"IERC20","nameLocations":["178986:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"178986:6:0"},"referencedDeclaration":379,"src":"178986:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6907,"mutability":"mutable","name":"owner","nameLocation":"179008:5:0","nodeType":"VariableDeclaration","scope":6928,"src":"179000:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6906,"name":"address","nodeType":"ElementaryTypeName","src":"179000:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6909,"mutability":"mutable","name":"spender","nameLocation":"179023:7:0","nodeType":"VariableDeclaration","scope":6928,"src":"179015:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6908,"name":"address","nodeType":"ElementaryTypeName","src":"179015:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6911,"mutability":"mutable","name":"permit","nameLocation":"179047:6:0","nodeType":"VariableDeclaration","scope":6928,"src":"179032:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6910,"name":"bytes","nodeType":"ElementaryTypeName","src":"179032:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"178985:69:0"},"returnParameters":{"id":6913,"nodeType":"ParameterList","parameters":[],"src":"179064:0:0"},"scope":7075,"src":"178966:194:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6950,"nodeType":"Block","src":"179715:75:0","statements":[{"expression":{"arguments":[{"id":6940,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"179742:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"expression":{"id":6941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"179749:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"179753:6:0","memberName":"sender","nodeType":"MemberAccess","src":"179749:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6945,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"179769:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$7075","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$7075","typeString":"library SafeERC20"}],"id":6944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"179761:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6943,"name":"address","nodeType":"ElementaryTypeName","src":"179761:7:0","typeDescriptions":{}}},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"179761:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6947,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"179776:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6939,"name":"tryPermit","nodeType":"Identifier","overloadedDeclarations":[6951,6992],"referencedDeclaration":6992,"src":"179732:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,address,address,bytes calldata) returns (bool)"}},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"179732:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6938,"id":6949,"nodeType":"Return","src":"179725:58:0"}]},"documentation":{"id":6929,"nodeType":"StructuredDocumentation","src":"179166:457:0","text":" @notice Attempts to execute the `permit` function on the provided token with the sender and contract as parameters.\n @dev Invokes `tryPermit` with sender as owner and contract as spender.\n @param token The IERC20 token to execute the permit function on.\n @param permit The permit data to be used in the function call.\n @return success Returns true if the permit function was successfully executed, false otherwise."},"id":6951,"implemented":true,"kind":"function","modifiers":[],"name":"tryPermit","nameLocation":"179637:9:0","nodeType":"FunctionDefinition","parameters":{"id":6935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6932,"mutability":"mutable","name":"token","nameLocation":"179654:5:0","nodeType":"VariableDeclaration","scope":6951,"src":"179647:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6931,"nodeType":"UserDefinedTypeName","pathNode":{"id":6930,"name":"IERC20","nameLocations":["179647:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"179647:6:0"},"referencedDeclaration":379,"src":"179647:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6934,"mutability":"mutable","name":"permit","nameLocation":"179676:6:0","nodeType":"VariableDeclaration","scope":6951,"src":"179661:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6933,"name":"bytes","nodeType":"ElementaryTypeName","src":"179661:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"179646:37:0"},"returnParameters":{"id":6938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6937,"mutability":"mutable","name":"success","nameLocation":"179706:7:0","nodeType":"VariableDeclaration","scope":6951,"src":"179701:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6936,"name":"bool","nodeType":"ElementaryTypeName","src":"179701:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"179700:14:0"},"scope":7075,"src":"179628:162:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6991,"nodeType":"Block","src":"181455:7291:0","statements":[{"assignments":[6967],"declarations":[{"constant":false,"id":6967,"mutability":"mutable","name":"permitSelector","nameLocation":"181538:14:0","nodeType":"VariableDeclaration","scope":6991,"src":"181531:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6966,"name":"bytes4","nodeType":"ElementaryTypeName","src":"181531:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":6971,"initialValue":{"expression":{"expression":{"id":6968,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"181555:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Permit_$427_$","typeString":"type(contract IERC20Permit)"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"181568:6:0","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":412,"src":"181555:19:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function IERC20Permit.permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"181575:8:0","memberName":"selector","nodeType":"MemberAccess","src":"181555:28:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"181531:52:0"},{"assignments":[6973],"declarations":[{"constant":false,"id":6973,"mutability":"mutable","name":"daiPermitSelector","nameLocation":"181600:17:0","nodeType":"VariableDeclaration","scope":6991,"src":"181593:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6972,"name":"bytes4","nodeType":"ElementaryTypeName","src":"181593:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":6977,"initialValue":{"expression":{"expression":{"id":6974,"name":"IDaiLikePermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"181620:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDaiLikePermit_$303_$","typeString":"type(contract IDaiLikePermit)"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"181635:6:0","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":302,"src":"181620:21:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function IDaiLikePermit.permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"}},"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"181642:8:0","memberName":"selector","nodeType":"MemberAccess","src":"181620:30:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"181593:57:0"},{"assignments":[6979],"declarations":[{"constant":false,"id":6979,"mutability":"mutable","name":"permit2Selector","nameLocation":"181667:15:0","nodeType":"VariableDeclaration","scope":6991,"src":"181660:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6978,"name":"bytes4","nodeType":"ElementaryTypeName","src":"181660:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":6983,"initialValue":{"expression":{"expression":{"id":6980,"name":"IPermit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"181685:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPermit2_$604_$","typeString":"type(contract IPermit2)"}},"id":6981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"181694:6:0","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":590,"src":"181685:15:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_struct$_PermitSingle_$559_memory_ptr_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function IPermit2.permit(address,struct IPermit2.PermitSingle memory,bytes calldata)"}},"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"181701:8:0","memberName":"selector","nodeType":"MemberAccess","src":"181685:24:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"181660:49:0"},{"assignments":[6985],"declarations":[{"constant":false,"id":6985,"mutability":"mutable","name":"erc7597PermitSelector","nameLocation":"181726:21:0","nodeType":"VariableDeclaration","scope":6991,"src":"181719:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6984,"name":"bytes4","nodeType":"ElementaryTypeName","src":"181719:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":6989,"initialValue":{"expression":{"expression":{"id":6986,"name":"IERC7597Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"181750:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC7597Permit_$443_$","typeString":"type(contract IERC7597Permit)"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"181765:6:0","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":442,"src":"181750:21:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function IERC7597Permit.permit(address,address,uint256,uint256,bytes memory)"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"181772:8:0","memberName":"selector","nodeType":"MemberAccess","src":"181750:30:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"181719:61:0"},{"AST":{"nativeSrc":"181815:6925:0","nodeType":"YulBlock","src":"181815:6925:0","statements":[{"nativeSrc":"181872:22:0","nodeType":"YulVariableDeclaration","src":"181872:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"181889:4:0","nodeType":"YulLiteral","src":"181889:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"181883:5:0","nodeType":"YulIdentifier","src":"181883:5:0"},"nativeSrc":"181883:11:0","nodeType":"YulFunctionCall","src":"181883:11:0"},"variables":[{"name":"ptr","nativeSrc":"181876:3:0","nodeType":"YulTypedName","src":"181876:3:0","type":""}]},{"cases":[{"body":{"nativeSrc":"182081:1465:0","nodeType":"YulBlock","src":"182081:1465:0","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"182106:3:0","nodeType":"YulIdentifier","src":"182106:3:0"},{"name":"permitSelector","nativeSrc":"182111:14:0","nodeType":"YulIdentifier","src":"182111:14:0"}],"functionName":{"name":"mstore","nativeSrc":"182099:6:0","nodeType":"YulIdentifier","src":"182099:6:0"},"nativeSrc":"182099:27:0","nodeType":"YulFunctionCall","src":"182099:27:0"},"nativeSrc":"182099:27:0","nodeType":"YulExpressionStatement","src":"182099:27:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"182176:3:0","nodeType":"YulIdentifier","src":"182176:3:0"},{"kind":"number","nativeSrc":"182181:4:0","nodeType":"YulLiteral","src":"182181:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"182172:3:0","nodeType":"YulIdentifier","src":"182172:3:0"},"nativeSrc":"182172:14:0","nodeType":"YulFunctionCall","src":"182172:14:0"},{"name":"owner","nativeSrc":"182188:5:0","nodeType":"YulIdentifier","src":"182188:5:0"}],"functionName":{"name":"mstore","nativeSrc":"182165:6:0","nodeType":"YulIdentifier","src":"182165:6:0"},"nativeSrc":"182165:29:0","nodeType":"YulFunctionCall","src":"182165:29:0"},"nativeSrc":"182165:29:0","nodeType":"YulExpressionStatement","src":"182165:29:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"182239:3:0","nodeType":"YulIdentifier","src":"182239:3:0"},{"kind":"number","nativeSrc":"182244:4:0","nodeType":"YulLiteral","src":"182244:4:0","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"182235:3:0","nodeType":"YulIdentifier","src":"182235:3:0"},"nativeSrc":"182235:14:0","nodeType":"YulFunctionCall","src":"182235:14:0"},{"name":"spender","nativeSrc":"182251:7:0","nodeType":"YulIdentifier","src":"182251:7:0"}],"functionName":{"name":"mstore","nativeSrc":"182228:6:0","nodeType":"YulIdentifier","src":"182228:6:0"},"nativeSrc":"182228:31:0","nodeType":"YulFunctionCall","src":"182228:31:0"},"nativeSrc":"182228:31:0","nodeType":"YulExpressionStatement","src":"182228:31:0"},{"nativeSrc":"182396:935:0","nodeType":"YulBlock","src":"182396:935:0","statements":[{"nativeSrc":"182437:64:0","nodeType":"YulVariableDeclaration","src":"182437:64:0","value":{"arguments":[{"kind":"number","nativeSrc":"182457:3:0","nodeType":"YulLiteral","src":"182457:3:0","type":"","value":"224"},{"arguments":[{"arguments":[{"name":"permit.offset","nativeSrc":"182479:13:0","nodeType":"YulIdentifier","src":"182479:13:0"},{"kind":"number","nativeSrc":"182494:4:0","nodeType":"YulLiteral","src":"182494:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"182475:3:0","nodeType":"YulIdentifier","src":"182475:3:0"},"nativeSrc":"182475:24:0","nodeType":"YulFunctionCall","src":"182475:24:0"}],"functionName":{"name":"calldataload","nativeSrc":"182462:12:0","nodeType":"YulIdentifier","src":"182462:12:0"},"nativeSrc":"182462:38:0","nodeType":"YulFunctionCall","src":"182462:38:0"}],"functionName":{"name":"shr","nativeSrc":"182453:3:0","nodeType":"YulIdentifier","src":"182453:3:0"},"nativeSrc":"182453:48:0","nodeType":"YulFunctionCall","src":"182453:48:0"},"variables":[{"name":"deadline","nativeSrc":"182441:8:0","nodeType":"YulTypedName","src":"182441:8:0","type":""}]},{"nativeSrc":"182556:48:0","nodeType":"YulVariableDeclaration","src":"182556:48:0","value":{"arguments":[{"arguments":[{"name":"permit.offset","nativeSrc":"182583:13:0","nodeType":"YulIdentifier","src":"182583:13:0"},{"kind":"number","nativeSrc":"182598:4:0","nodeType":"YulLiteral","src":"182598:4:0","type":"","value":"0x44"}],"functionName":{"name":"add","nativeSrc":"182579:3:0","nodeType":"YulIdentifier","src":"182579:3:0"},"nativeSrc":"182579:24:0","nodeType":"YulFunctionCall","src":"182579:24:0"}],"functionName":{"name":"calldataload","nativeSrc":"182566:12:0","nodeType":"YulIdentifier","src":"182566:12:0"},"nativeSrc":"182566:38:0","nodeType":"YulFunctionCall","src":"182566:38:0"},"variables":[{"name":"vs","nativeSrc":"182560:2:0","nodeType":"YulTypedName","src":"182560:2:0","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"182693:3:0","nodeType":"YulIdentifier","src":"182693:3:0"},{"kind":"number","nativeSrc":"182698:4:0","nodeType":"YulLiteral","src":"182698:4:0","type":"","value":"0x44"}],"functionName":{"name":"add","nativeSrc":"182689:3:0","nodeType":"YulIdentifier","src":"182689:3:0"},"nativeSrc":"182689:14:0","nodeType":"YulFunctionCall","src":"182689:14:0"},{"name":"permit.offset","nativeSrc":"182705:13:0","nodeType":"YulIdentifier","src":"182705:13:0"},{"kind":"number","nativeSrc":"182720:4:0","nodeType":"YulLiteral","src":"182720:4:0","type":"","value":"0x20"}],"functionName":{"name":"calldatacopy","nativeSrc":"182676:12:0","nodeType":"YulIdentifier","src":"182676:12:0"},"nativeSrc":"182676:49:0","nodeType":"YulFunctionCall","src":"182676:49:0"},"nativeSrc":"182676:49:0","nodeType":"YulExpressionStatement","src":"182676:49:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"182819:3:0","nodeType":"YulIdentifier","src":"182819:3:0"},{"kind":"number","nativeSrc":"182824:4:0","nodeType":"YulLiteral","src":"182824:4:0","type":"","value":"0x64"}],"functionName":{"name":"add","nativeSrc":"182815:3:0","nodeType":"YulIdentifier","src":"182815:3:0"},"nativeSrc":"182815:14:0","nodeType":"YulFunctionCall","src":"182815:14:0"},{"arguments":[{"name":"deadline","nativeSrc":"182835:8:0","nodeType":"YulIdentifier","src":"182835:8:0"},{"kind":"number","nativeSrc":"182845:1:0","nodeType":"YulLiteral","src":"182845:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"182831:3:0","nodeType":"YulIdentifier","src":"182831:3:0"},"nativeSrc":"182831:16:0","nodeType":"YulFunctionCall","src":"182831:16:0"}],"functionName":{"name":"mstore","nativeSrc":"182808:6:0","nodeType":"YulIdentifier","src":"182808:6:0"},"nativeSrc":"182808:40:0","nodeType":"YulFunctionCall","src":"182808:40:0"},"nativeSrc":"182808:40:0","nodeType":"YulExpressionStatement","src":"182808:40:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"182934:3:0","nodeType":"YulIdentifier","src":"182934:3:0"},{"kind":"number","nativeSrc":"182939:4:0","nodeType":"YulLiteral","src":"182939:4:0","type":"","value":"0x84"}],"functionName":{"name":"add","nativeSrc":"182930:3:0","nodeType":"YulIdentifier","src":"182930:3:0"},"nativeSrc":"182930:14:0","nodeType":"YulFunctionCall","src":"182930:14:0"},{"arguments":[{"kind":"number","nativeSrc":"182950:2:0","nodeType":"YulLiteral","src":"182950:2:0","type":"","value":"27"},{"arguments":[{"kind":"number","nativeSrc":"182958:3:0","nodeType":"YulLiteral","src":"182958:3:0","type":"","value":"255"},{"name":"vs","nativeSrc":"182963:2:0","nodeType":"YulIdentifier","src":"182963:2:0"}],"functionName":{"name":"shr","nativeSrc":"182954:3:0","nodeType":"YulIdentifier","src":"182954:3:0"},"nativeSrc":"182954:12:0","nodeType":"YulFunctionCall","src":"182954:12:0"}],"functionName":{"name":"add","nativeSrc":"182946:3:0","nodeType":"YulIdentifier","src":"182946:3:0"},"nativeSrc":"182946:21:0","nodeType":"YulFunctionCall","src":"182946:21:0"}],"functionName":{"name":"mstore","nativeSrc":"182923:6:0","nodeType":"YulIdentifier","src":"182923:6:0"},"nativeSrc":"182923:45:0","nodeType":"YulFunctionCall","src":"182923:45:0"},"nativeSrc":"182923:45:0","nodeType":"YulExpressionStatement","src":"182923:45:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"183085:3:0","nodeType":"YulIdentifier","src":"183085:3:0"},{"kind":"number","nativeSrc":"183090:4:0","nodeType":"YulLiteral","src":"183090:4:0","type":"","value":"0xa4"}],"functionName":{"name":"add","nativeSrc":"183081:3:0","nodeType":"YulIdentifier","src":"183081:3:0"},"nativeSrc":"183081:14:0","nodeType":"YulFunctionCall","src":"183081:14:0"},{"arguments":[{"name":"permit.offset","nativeSrc":"183101:13:0","nodeType":"YulIdentifier","src":"183101:13:0"},{"kind":"number","nativeSrc":"183116:4:0","nodeType":"YulLiteral","src":"183116:4:0","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"183097:3:0","nodeType":"YulIdentifier","src":"183097:3:0"},"nativeSrc":"183097:24:0","nodeType":"YulFunctionCall","src":"183097:24:0"},{"kind":"number","nativeSrc":"183123:4:0","nodeType":"YulLiteral","src":"183123:4:0","type":"","value":"0x20"}],"functionName":{"name":"calldatacopy","nativeSrc":"183068:12:0","nodeType":"YulIdentifier","src":"183068:12:0"},"nativeSrc":"183068:60:0","nodeType":"YulFunctionCall","src":"183068:60:0"},"nativeSrc":"183068:60:0","nodeType":"YulExpressionStatement","src":"183068:60:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"183211:3:0","nodeType":"YulIdentifier","src":"183211:3:0"},{"kind":"number","nativeSrc":"183216:4:0","nodeType":"YulLiteral","src":"183216:4:0","type":"","value":"0xc4"}],"functionName":{"name":"add","nativeSrc":"183207:3:0","nodeType":"YulIdentifier","src":"183207:3:0"},"nativeSrc":"183207:14:0","nodeType":"YulFunctionCall","src":"183207:14:0"},{"arguments":[{"kind":"number","nativeSrc":"183227:1:0","nodeType":"YulLiteral","src":"183227:1:0","type":"","value":"1"},{"arguments":[{"kind":"number","nativeSrc":"183234:1:0","nodeType":"YulLiteral","src":"183234:1:0","type":"","value":"1"},{"name":"vs","nativeSrc":"183237:2:0","nodeType":"YulIdentifier","src":"183237:2:0"}],"functionName":{"name":"shl","nativeSrc":"183230:3:0","nodeType":"YulIdentifier","src":"183230:3:0"},"nativeSrc":"183230:10:0","nodeType":"YulFunctionCall","src":"183230:10:0"}],"functionName":{"name":"shr","nativeSrc":"183223:3:0","nodeType":"YulIdentifier","src":"183223:3:0"},"nativeSrc":"183223:18:0","nodeType":"YulFunctionCall","src":"183223:18:0"}],"functionName":{"name":"mstore","nativeSrc":"183200:6:0","nodeType":"YulIdentifier","src":"183200:6:0"},"nativeSrc":"183200:42:0","nodeType":"YulFunctionCall","src":"183200:42:0"},"nativeSrc":"183200:42:0","nodeType":"YulExpressionStatement","src":"183200:42:0"}]},{"nativeSrc":"183483:49:0","nodeType":"YulAssignment","src":"183483:49:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"183499:3:0","nodeType":"YulIdentifier","src":"183499:3:0"},"nativeSrc":"183499:5:0","nodeType":"YulFunctionCall","src":"183499:5:0"},{"name":"token","nativeSrc":"183506:5:0","nodeType":"YulIdentifier","src":"183506:5:0"},{"kind":"number","nativeSrc":"183513:1:0","nodeType":"YulLiteral","src":"183513:1:0","type":"","value":"0"},{"name":"ptr","nativeSrc":"183516:3:0","nodeType":"YulIdentifier","src":"183516:3:0"},{"kind":"number","nativeSrc":"183521:4:0","nodeType":"YulLiteral","src":"183521:4:0","type":"","value":"0xe4"},{"kind":"number","nativeSrc":"183527:1:0","nodeType":"YulLiteral","src":"183527:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"183530:1:0","nodeType":"YulLiteral","src":"183530:1:0","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"183494:4:0","nodeType":"YulIdentifier","src":"183494:4:0"},"nativeSrc":"183494:38:0","nodeType":"YulFunctionCall","src":"183494:38:0"},"variableNames":[{"name":"success","nativeSrc":"183483:7:0","nodeType":"YulIdentifier","src":"183483:7:0"}]}]},"nativeSrc":"182072:1474:0","nodeType":"YulCase","src":"182072:1474:0","value":{"kind":"number","nativeSrc":"182077:3:0","nodeType":"YulLiteral","src":"182077:3:0","type":"","value":"100"}},{"body":{"nativeSrc":"183605:1575:0","nodeType":"YulBlock","src":"183605:1575:0","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"183630:3:0","nodeType":"YulIdentifier","src":"183630:3:0"},{"name":"daiPermitSelector","nativeSrc":"183635:17:0","nodeType":"YulIdentifier","src":"183635:17:0"}],"functionName":{"name":"mstore","nativeSrc":"183623:6:0","nodeType":"YulIdentifier","src":"183623:6:0"},"nativeSrc":"183623:30:0","nodeType":"YulFunctionCall","src":"183623:30:0"},"nativeSrc":"183623:30:0","nodeType":"YulExpressionStatement","src":"183623:30:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"183700:3:0","nodeType":"YulIdentifier","src":"183700:3:0"},{"kind":"number","nativeSrc":"183705:4:0","nodeType":"YulLiteral","src":"183705:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"183696:3:0","nodeType":"YulIdentifier","src":"183696:3:0"},"nativeSrc":"183696:14:0","nodeType":"YulFunctionCall","src":"183696:14:0"},{"name":"owner","nativeSrc":"183712:5:0","nodeType":"YulIdentifier","src":"183712:5:0"}],"functionName":{"name":"mstore","nativeSrc":"183689:6:0","nodeType":"YulIdentifier","src":"183689:6:0"},"nativeSrc":"183689:29:0","nodeType":"YulFunctionCall","src":"183689:29:0"},"nativeSrc":"183689:29:0","nodeType":"YulExpressionStatement","src":"183689:29:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"183763:3:0","nodeType":"YulIdentifier","src":"183763:3:0"},{"kind":"number","nativeSrc":"183768:4:0","nodeType":"YulLiteral","src":"183768:4:0","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"183759:3:0","nodeType":"YulIdentifier","src":"183759:3:0"},"nativeSrc":"183759:14:0","nodeType":"YulFunctionCall","src":"183759:14:0"},{"name":"spender","nativeSrc":"183775:7:0","nodeType":"YulIdentifier","src":"183775:7:0"}],"functionName":{"name":"mstore","nativeSrc":"183752:6:0","nodeType":"YulIdentifier","src":"183752:6:0"},"nativeSrc":"183752:31:0","nodeType":"YulFunctionCall","src":"183752:31:0"},"nativeSrc":"183752:31:0","nodeType":"YulExpressionStatement","src":"183752:31:0"},{"nativeSrc":"183919:1030:0","nodeType":"YulBlock","src":"183919:1030:0","statements":[{"nativeSrc":"183960:62:0","nodeType":"YulVariableDeclaration","src":"183960:62:0","value":{"arguments":[{"kind":"number","nativeSrc":"183978:3:0","nodeType":"YulLiteral","src":"183978:3:0","type":"","value":"224"},{"arguments":[{"arguments":[{"name":"permit.offset","nativeSrc":"184000:13:0","nodeType":"YulIdentifier","src":"184000:13:0"},{"kind":"number","nativeSrc":"184015:4:0","nodeType":"YulLiteral","src":"184015:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"183996:3:0","nodeType":"YulIdentifier","src":"183996:3:0"},"nativeSrc":"183996:24:0","nodeType":"YulFunctionCall","src":"183996:24:0"}],"functionName":{"name":"calldataload","nativeSrc":"183983:12:0","nodeType":"YulIdentifier","src":"183983:12:0"},"nativeSrc":"183983:38:0","nodeType":"YulFunctionCall","src":"183983:38:0"}],"functionName":{"name":"shr","nativeSrc":"183974:3:0","nodeType":"YulIdentifier","src":"183974:3:0"},"nativeSrc":"183974:48:0","nodeType":"YulFunctionCall","src":"183974:48:0"},"variables":[{"name":"expiry","nativeSrc":"183964:6:0","nodeType":"YulTypedName","src":"183964:6:0","type":""}]},{"nativeSrc":"184077:48:0","nodeType":"YulVariableDeclaration","src":"184077:48:0","value":{"arguments":[{"arguments":[{"name":"permit.offset","nativeSrc":"184104:13:0","nodeType":"YulIdentifier","src":"184104:13:0"},{"kind":"number","nativeSrc":"184119:4:0","nodeType":"YulLiteral","src":"184119:4:0","type":"","value":"0x28"}],"functionName":{"name":"add","nativeSrc":"184100:3:0","nodeType":"YulIdentifier","src":"184100:3:0"},"nativeSrc":"184100:24:0","nodeType":"YulFunctionCall","src":"184100:24:0"}],"functionName":{"name":"calldataload","nativeSrc":"184087:12:0","nodeType":"YulIdentifier","src":"184087:12:0"},"nativeSrc":"184087:38:0","nodeType":"YulFunctionCall","src":"184087:38:0"},"variables":[{"name":"vs","nativeSrc":"184081:2:0","nodeType":"YulTypedName","src":"184081:2:0","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"184206:3:0","nodeType":"YulIdentifier","src":"184206:3:0"},{"kind":"number","nativeSrc":"184211:4:0","nodeType":"YulLiteral","src":"184211:4:0","type":"","value":"0x44"}],"functionName":{"name":"add","nativeSrc":"184202:3:0","nodeType":"YulIdentifier","src":"184202:3:0"},"nativeSrc":"184202:14:0","nodeType":"YulFunctionCall","src":"184202:14:0"},{"arguments":[{"kind":"number","nativeSrc":"184222:3:0","nodeType":"YulLiteral","src":"184222:3:0","type":"","value":"224"},{"arguments":[{"name":"permit.offset","nativeSrc":"184240:13:0","nodeType":"YulIdentifier","src":"184240:13:0"}],"functionName":{"name":"calldataload","nativeSrc":"184227:12:0","nodeType":"YulIdentifier","src":"184227:12:0"},"nativeSrc":"184227:27:0","nodeType":"YulFunctionCall","src":"184227:27:0"}],"functionName":{"name":"shr","nativeSrc":"184218:3:0","nodeType":"YulIdentifier","src":"184218:3:0"},"nativeSrc":"184218:37:0","nodeType":"YulFunctionCall","src":"184218:37:0"}],"functionName":{"name":"mstore","nativeSrc":"184195:6:0","nodeType":"YulIdentifier","src":"184195:6:0"},"nativeSrc":"184195:61:0","nodeType":"YulFunctionCall","src":"184195:61:0"},"nativeSrc":"184195:61:0","nodeType":"YulExpressionStatement","src":"184195:61:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"184337:3:0","nodeType":"YulIdentifier","src":"184337:3:0"},{"kind":"number","nativeSrc":"184342:4:0","nodeType":"YulLiteral","src":"184342:4:0","type":"","value":"0x64"}],"functionName":{"name":"add","nativeSrc":"184333:3:0","nodeType":"YulIdentifier","src":"184333:3:0"},"nativeSrc":"184333:14:0","nodeType":"YulFunctionCall","src":"184333:14:0"},{"arguments":[{"name":"expiry","nativeSrc":"184353:6:0","nodeType":"YulIdentifier","src":"184353:6:0"},{"kind":"number","nativeSrc":"184361:1:0","nodeType":"YulLiteral","src":"184361:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"184349:3:0","nodeType":"YulIdentifier","src":"184349:3:0"},"nativeSrc":"184349:14:0","nodeType":"YulFunctionCall","src":"184349:14:0"}],"functionName":{"name":"mstore","nativeSrc":"184326:6:0","nodeType":"YulIdentifier","src":"184326:6:0"},"nativeSrc":"184326:38:0","nodeType":"YulFunctionCall","src":"184326:38:0"},"nativeSrc":"184326:38:0","nodeType":"YulExpressionStatement","src":"184326:38:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"184449:3:0","nodeType":"YulIdentifier","src":"184449:3:0"},{"kind":"number","nativeSrc":"184454:4:0","nodeType":"YulLiteral","src":"184454:4:0","type":"","value":"0x84"}],"functionName":{"name":"add","nativeSrc":"184445:3:0","nodeType":"YulIdentifier","src":"184445:3:0"},"nativeSrc":"184445:14:0","nodeType":"YulFunctionCall","src":"184445:14:0"},{"kind":"bool","nativeSrc":"184461:4:0","nodeType":"YulLiteral","src":"184461:4:0","type":"","value":"true"}],"functionName":{"name":"mstore","nativeSrc":"184438:6:0","nodeType":"YulIdentifier","src":"184438:6:0"},"nativeSrc":"184438:28:0","nodeType":"YulFunctionCall","src":"184438:28:0"},"nativeSrc":"184438:28:0","nodeType":"YulExpressionStatement","src":"184438:28:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"184555:3:0","nodeType":"YulIdentifier","src":"184555:3:0"},{"kind":"number","nativeSrc":"184560:4:0","nodeType":"YulLiteral","src":"184560:4:0","type":"","value":"0xa4"}],"functionName":{"name":"add","nativeSrc":"184551:3:0","nodeType":"YulIdentifier","src":"184551:3:0"},"nativeSrc":"184551:14:0","nodeType":"YulFunctionCall","src":"184551:14:0"},{"arguments":[{"kind":"number","nativeSrc":"184571:2:0","nodeType":"YulLiteral","src":"184571:2:0","type":"","value":"27"},{"arguments":[{"kind":"number","nativeSrc":"184579:3:0","nodeType":"YulLiteral","src":"184579:3:0","type":"","value":"255"},{"name":"vs","nativeSrc":"184584:2:0","nodeType":"YulIdentifier","src":"184584:2:0"}],"functionName":{"name":"shr","nativeSrc":"184575:3:0","nodeType":"YulIdentifier","src":"184575:3:0"},"nativeSrc":"184575:12:0","nodeType":"YulFunctionCall","src":"184575:12:0"}],"functionName":{"name":"add","nativeSrc":"184567:3:0","nodeType":"YulIdentifier","src":"184567:3:0"},"nativeSrc":"184567:21:0","nodeType":"YulFunctionCall","src":"184567:21:0"}],"functionName":{"name":"mstore","nativeSrc":"184544:6:0","nodeType":"YulIdentifier","src":"184544:6:0"},"nativeSrc":"184544:45:0","nodeType":"YulFunctionCall","src":"184544:45:0"},"nativeSrc":"184544:45:0","nodeType":"YulExpressionStatement","src":"184544:45:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"184705:3:0","nodeType":"YulIdentifier","src":"184705:3:0"},{"kind":"number","nativeSrc":"184710:4:0","nodeType":"YulLiteral","src":"184710:4:0","type":"","value":"0xc4"}],"functionName":{"name":"add","nativeSrc":"184701:3:0","nodeType":"YulIdentifier","src":"184701:3:0"},"nativeSrc":"184701:14:0","nodeType":"YulFunctionCall","src":"184701:14:0"},{"arguments":[{"name":"permit.offset","nativeSrc":"184721:13:0","nodeType":"YulIdentifier","src":"184721:13:0"},{"kind":"number","nativeSrc":"184736:4:0","nodeType":"YulLiteral","src":"184736:4:0","type":"","value":"0x08"}],"functionName":{"name":"add","nativeSrc":"184717:3:0","nodeType":"YulIdentifier","src":"184717:3:0"},"nativeSrc":"184717:24:0","nodeType":"YulFunctionCall","src":"184717:24:0"},{"kind":"number","nativeSrc":"184743:4:0","nodeType":"YulLiteral","src":"184743:4:0","type":"","value":"0x20"}],"functionName":{"name":"calldatacopy","nativeSrc":"184688:12:0","nodeType":"YulIdentifier","src":"184688:12:0"},"nativeSrc":"184688:60:0","nodeType":"YulFunctionCall","src":"184688:60:0"},"nativeSrc":"184688:60:0","nodeType":"YulExpressionStatement","src":"184688:60:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"184830:3:0","nodeType":"YulIdentifier","src":"184830:3:0"},{"kind":"number","nativeSrc":"184835:4:0","nodeType":"YulLiteral","src":"184835:4:0","type":"","value":"0xe4"}],"functionName":{"name":"add","nativeSrc":"184826:3:0","nodeType":"YulIdentifier","src":"184826:3:0"},"nativeSrc":"184826:14:0","nodeType":"YulFunctionCall","src":"184826:14:0"},{"arguments":[{"kind":"number","nativeSrc":"184846:1:0","nodeType":"YulLiteral","src":"184846:1:0","type":"","value":"1"},{"arguments":[{"kind":"number","nativeSrc":"184853:1:0","nodeType":"YulLiteral","src":"184853:1:0","type":"","value":"1"},{"name":"vs","nativeSrc":"184856:2:0","nodeType":"YulIdentifier","src":"184856:2:0"}],"functionName":{"name":"shl","nativeSrc":"184849:3:0","nodeType":"YulIdentifier","src":"184849:3:0"},"nativeSrc":"184849:10:0","nodeType":"YulFunctionCall","src":"184849:10:0"}],"functionName":{"name":"shr","nativeSrc":"184842:3:0","nodeType":"YulIdentifier","src":"184842:3:0"},"nativeSrc":"184842:18:0","nodeType":"YulFunctionCall","src":"184842:18:0"}],"functionName":{"name":"mstore","nativeSrc":"184819:6:0","nodeType":"YulIdentifier","src":"184819:6:0"},"nativeSrc":"184819:42:0","nodeType":"YulFunctionCall","src":"184819:42:0"},"nativeSrc":"184819:42:0","nodeType":"YulExpressionStatement","src":"184819:42:0"}]},{"nativeSrc":"185116:50:0","nodeType":"YulAssignment","src":"185116:50:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"185132:3:0","nodeType":"YulIdentifier","src":"185132:3:0"},"nativeSrc":"185132:5:0","nodeType":"YulFunctionCall","src":"185132:5:0"},{"name":"token","nativeSrc":"185139:5:0","nodeType":"YulIdentifier","src":"185139:5:0"},{"kind":"number","nativeSrc":"185146:1:0","nodeType":"YulLiteral","src":"185146:1:0","type":"","value":"0"},{"name":"ptr","nativeSrc":"185149:3:0","nodeType":"YulIdentifier","src":"185149:3:0"},{"kind":"number","nativeSrc":"185154:5:0","nodeType":"YulLiteral","src":"185154:5:0","type":"","value":"0x104"},{"kind":"number","nativeSrc":"185161:1:0","nodeType":"YulLiteral","src":"185161:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"185164:1:0","nodeType":"YulLiteral","src":"185164:1:0","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"185127:4:0","nodeType":"YulIdentifier","src":"185127:4:0"},"nativeSrc":"185127:39:0","nodeType":"YulFunctionCall","src":"185127:39:0"},"variableNames":[{"name":"success","nativeSrc":"185116:7:0","nodeType":"YulIdentifier","src":"185116:7:0"}]}]},"nativeSrc":"183597:1583:0","nodeType":"YulCase","src":"183597:1583:0","value":{"kind":"number","nativeSrc":"183602:2:0","nodeType":"YulLiteral","src":"183602:2:0","type":"","value":"72"}},{"body":{"nativeSrc":"185230:359:0","nodeType":"YulBlock","src":"185230:359:0","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"185255:3:0","nodeType":"YulIdentifier","src":"185255:3:0"},{"name":"permitSelector","nativeSrc":"185260:14:0","nodeType":"YulIdentifier","src":"185260:14:0"}],"functionName":{"name":"mstore","nativeSrc":"185248:6:0","nodeType":"YulIdentifier","src":"185248:6:0"},"nativeSrc":"185248:27:0","nodeType":"YulFunctionCall","src":"185248:27:0"},"nativeSrc":"185248:27:0","nodeType":"YulExpressionStatement","src":"185248:27:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"185309:3:0","nodeType":"YulIdentifier","src":"185309:3:0"},{"kind":"number","nativeSrc":"185314:4:0","nodeType":"YulLiteral","src":"185314:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"185305:3:0","nodeType":"YulIdentifier","src":"185305:3:0"},"nativeSrc":"185305:14:0","nodeType":"YulFunctionCall","src":"185305:14:0"},{"name":"permit.offset","nativeSrc":"185321:13:0","nodeType":"YulIdentifier","src":"185321:13:0"},{"name":"permit.length","nativeSrc":"185336:13:0","nodeType":"YulIdentifier","src":"185336:13:0"}],"functionName":{"name":"calldatacopy","nativeSrc":"185292:12:0","nodeType":"YulIdentifier","src":"185292:12:0"},"nativeSrc":"185292:58:0","nodeType":"YulFunctionCall","src":"185292:58:0"},"nativeSrc":"185292:58:0","nodeType":"YulExpressionStatement","src":"185292:58:0"},{"nativeSrc":"185526:49:0","nodeType":"YulAssignment","src":"185526:49:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"185542:3:0","nodeType":"YulIdentifier","src":"185542:3:0"},"nativeSrc":"185542:5:0","nodeType":"YulFunctionCall","src":"185542:5:0"},{"name":"token","nativeSrc":"185549:5:0","nodeType":"YulIdentifier","src":"185549:5:0"},{"kind":"number","nativeSrc":"185556:1:0","nodeType":"YulLiteral","src":"185556:1:0","type":"","value":"0"},{"name":"ptr","nativeSrc":"185559:3:0","nodeType":"YulIdentifier","src":"185559:3:0"},{"kind":"number","nativeSrc":"185564:4:0","nodeType":"YulLiteral","src":"185564:4:0","type":"","value":"0xe4"},{"kind":"number","nativeSrc":"185570:1:0","nodeType":"YulLiteral","src":"185570:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"185573:1:0","nodeType":"YulLiteral","src":"185573:1:0","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"185537:4:0","nodeType":"YulIdentifier","src":"185537:4:0"},"nativeSrc":"185537:38:0","nodeType":"YulFunctionCall","src":"185537:38:0"},"variableNames":[{"name":"success","nativeSrc":"185526:7:0","nodeType":"YulIdentifier","src":"185526:7:0"}]}]},"nativeSrc":"185221:368:0","nodeType":"YulCase","src":"185221:368:0","value":{"kind":"number","nativeSrc":"185226:3:0","nodeType":"YulLiteral","src":"185226:3:0","type":"","value":"224"}},{"body":{"nativeSrc":"185641:378:0","nodeType":"YulBlock","src":"185641:378:0","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"185666:3:0","nodeType":"YulIdentifier","src":"185666:3:0"},{"name":"daiPermitSelector","nativeSrc":"185671:17:0","nodeType":"YulIdentifier","src":"185671:17:0"}],"functionName":{"name":"mstore","nativeSrc":"185659:6:0","nodeType":"YulIdentifier","src":"185659:6:0"},"nativeSrc":"185659:30:0","nodeType":"YulFunctionCall","src":"185659:30:0"},"nativeSrc":"185659:30:0","nodeType":"YulExpressionStatement","src":"185659:30:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"185723:3:0","nodeType":"YulIdentifier","src":"185723:3:0"},{"kind":"number","nativeSrc":"185728:4:0","nodeType":"YulLiteral","src":"185728:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"185719:3:0","nodeType":"YulIdentifier","src":"185719:3:0"},"nativeSrc":"185719:14:0","nodeType":"YulFunctionCall","src":"185719:14:0"},{"name":"permit.offset","nativeSrc":"185735:13:0","nodeType":"YulIdentifier","src":"185735:13:0"},{"name":"permit.length","nativeSrc":"185750:13:0","nodeType":"YulIdentifier","src":"185750:13:0"}],"functionName":{"name":"calldatacopy","nativeSrc":"185706:12:0","nodeType":"YulIdentifier","src":"185706:12:0"},"nativeSrc":"185706:58:0","nodeType":"YulFunctionCall","src":"185706:58:0"},"nativeSrc":"185706:58:0","nodeType":"YulExpressionStatement","src":"185706:58:0"},{"nativeSrc":"185955:50:0","nodeType":"YulAssignment","src":"185955:50:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"185971:3:0","nodeType":"YulIdentifier","src":"185971:3:0"},"nativeSrc":"185971:5:0","nodeType":"YulFunctionCall","src":"185971:5:0"},{"name":"token","nativeSrc":"185978:5:0","nodeType":"YulIdentifier","src":"185978:5:0"},{"kind":"number","nativeSrc":"185985:1:0","nodeType":"YulLiteral","src":"185985:1:0","type":"","value":"0"},{"name":"ptr","nativeSrc":"185988:3:0","nodeType":"YulIdentifier","src":"185988:3:0"},{"kind":"number","nativeSrc":"185993:5:0","nodeType":"YulLiteral","src":"185993:5:0","type":"","value":"0x104"},{"kind":"number","nativeSrc":"186000:1:0","nodeType":"YulLiteral","src":"186000:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"186003:1:0","nodeType":"YulLiteral","src":"186003:1:0","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"185966:4:0","nodeType":"YulIdentifier","src":"185966:4:0"},"nativeSrc":"185966:39:0","nodeType":"YulFunctionCall","src":"185966:39:0"},"variableNames":[{"name":"success","nativeSrc":"185955:7:0","nodeType":"YulIdentifier","src":"185955:7:0"}]}]},"nativeSrc":"185632:387:0","nodeType":"YulCase","src":"185632:387:0","value":{"kind":"number","nativeSrc":"185637:3:0","nodeType":"YulLiteral","src":"185637:3:0","type":"","value":"256"}},{"body":{"nativeSrc":"186072:1842:0","nodeType":"YulBlock","src":"186072:1842:0","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"186232:3:0","nodeType":"YulIdentifier","src":"186232:3:0"},{"name":"permit2Selector","nativeSrc":"186237:15:0","nodeType":"YulIdentifier","src":"186237:15:0"}],"functionName":{"name":"mstore","nativeSrc":"186225:6:0","nodeType":"YulIdentifier","src":"186225:6:0"},"nativeSrc":"186225:28:0","nodeType":"YulFunctionCall","src":"186225:28:0"},"nativeSrc":"186225:28:0","nodeType":"YulExpressionStatement","src":"186225:28:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"186300:3:0","nodeType":"YulIdentifier","src":"186300:3:0"},{"kind":"number","nativeSrc":"186305:4:0","nodeType":"YulLiteral","src":"186305:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"186296:3:0","nodeType":"YulIdentifier","src":"186296:3:0"},"nativeSrc":"186296:14:0","nodeType":"YulFunctionCall","src":"186296:14:0"},{"name":"owner","nativeSrc":"186312:5:0","nodeType":"YulIdentifier","src":"186312:5:0"}],"functionName":{"name":"mstore","nativeSrc":"186289:6:0","nodeType":"YulIdentifier","src":"186289:6:0"},"nativeSrc":"186289:29:0","nodeType":"YulFunctionCall","src":"186289:29:0"},"nativeSrc":"186289:29:0","nodeType":"YulExpressionStatement","src":"186289:29:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"186361:3:0","nodeType":"YulIdentifier","src":"186361:3:0"},{"kind":"number","nativeSrc":"186366:4:0","nodeType":"YulLiteral","src":"186366:4:0","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"186357:3:0","nodeType":"YulIdentifier","src":"186357:3:0"},"nativeSrc":"186357:14:0","nodeType":"YulFunctionCall","src":"186357:14:0"},{"name":"token","nativeSrc":"186373:5:0","nodeType":"YulIdentifier","src":"186373:5:0"}],"functionName":{"name":"mstore","nativeSrc":"186350:6:0","nodeType":"YulIdentifier","src":"186350:6:0"},"nativeSrc":"186350:29:0","nodeType":"YulFunctionCall","src":"186350:29:0"},"nativeSrc":"186350:29:0","nodeType":"YulExpressionStatement","src":"186350:29:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"186429:3:0","nodeType":"YulIdentifier","src":"186429:3:0"},{"kind":"number","nativeSrc":"186434:4:0","nodeType":"YulLiteral","src":"186434:4:0","type":"","value":"0x50"}],"functionName":{"name":"add","nativeSrc":"186425:3:0","nodeType":"YulIdentifier","src":"186425:3:0"},"nativeSrc":"186425:14:0","nodeType":"YulFunctionCall","src":"186425:14:0"},{"name":"permit.offset","nativeSrc":"186441:13:0","nodeType":"YulIdentifier","src":"186441:13:0"},{"kind":"number","nativeSrc":"186456:4:0","nodeType":"YulLiteral","src":"186456:4:0","type":"","value":"0x14"}],"functionName":{"name":"calldatacopy","nativeSrc":"186412:12:0","nodeType":"YulIdentifier","src":"186412:12:0"},"nativeSrc":"186412:49:0","nodeType":"YulFunctionCall","src":"186412:49:0"},"nativeSrc":"186412:49:0","nodeType":"YulExpressionStatement","src":"186412:49:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"186616:3:0","nodeType":"YulIdentifier","src":"186616:3:0"},{"kind":"number","nativeSrc":"186621:4:0","nodeType":"YulLiteral","src":"186621:4:0","type":"","value":"0x64"}],"functionName":{"name":"add","nativeSrc":"186612:3:0","nodeType":"YulIdentifier","src":"186612:3:0"},"nativeSrc":"186612:14:0","nodeType":"YulFunctionCall","src":"186612:14:0"},{"arguments":[{"kind":"number","nativeSrc":"186632:14:0","nodeType":"YulLiteral","src":"186632:14:0","type":"","value":"0xffffffffffff"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"186656:3:0","nodeType":"YulLiteral","src":"186656:3:0","type":"","value":"224"},{"arguments":[{"arguments":[{"name":"permit.offset","nativeSrc":"186678:13:0","nodeType":"YulIdentifier","src":"186678:13:0"},{"kind":"number","nativeSrc":"186693:4:0","nodeType":"YulLiteral","src":"186693:4:0","type":"","value":"0x14"}],"functionName":{"name":"add","nativeSrc":"186674:3:0","nodeType":"YulIdentifier","src":"186674:3:0"},"nativeSrc":"186674:24:0","nodeType":"YulFunctionCall","src":"186674:24:0"}],"functionName":{"name":"calldataload","nativeSrc":"186661:12:0","nodeType":"YulIdentifier","src":"186661:12:0"},"nativeSrc":"186661:38:0","nodeType":"YulFunctionCall","src":"186661:38:0"}],"functionName":{"name":"shr","nativeSrc":"186652:3:0","nodeType":"YulIdentifier","src":"186652:3:0"},"nativeSrc":"186652:48:0","nodeType":"YulFunctionCall","src":"186652:48:0"},{"kind":"number","nativeSrc":"186702:1:0","nodeType":"YulLiteral","src":"186702:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"186648:3:0","nodeType":"YulIdentifier","src":"186648:3:0"},"nativeSrc":"186648:56:0","nodeType":"YulFunctionCall","src":"186648:56:0"}],"functionName":{"name":"and","nativeSrc":"186628:3:0","nodeType":"YulIdentifier","src":"186628:3:0"},"nativeSrc":"186628:77:0","nodeType":"YulFunctionCall","src":"186628:77:0"}],"functionName":{"name":"mstore","nativeSrc":"186605:6:0","nodeType":"YulIdentifier","src":"186605:6:0"},"nativeSrc":"186605:101:0","nodeType":"YulFunctionCall","src":"186605:101:0"},"nativeSrc":"186605:101:0","nodeType":"YulExpressionStatement","src":"186605:101:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"186806:3:0","nodeType":"YulIdentifier","src":"186806:3:0"},{"kind":"number","nativeSrc":"186811:4:0","nodeType":"YulLiteral","src":"186811:4:0","type":"","value":"0x84"}],"functionName":{"name":"add","nativeSrc":"186802:3:0","nodeType":"YulIdentifier","src":"186802:3:0"},"nativeSrc":"186802:14:0","nodeType":"YulFunctionCall","src":"186802:14:0"},{"arguments":[{"kind":"number","nativeSrc":"186822:3:0","nodeType":"YulLiteral","src":"186822:3:0","type":"","value":"224"},{"arguments":[{"arguments":[{"name":"permit.offset","nativeSrc":"186844:13:0","nodeType":"YulIdentifier","src":"186844:13:0"},{"kind":"number","nativeSrc":"186859:4:0","nodeType":"YulLiteral","src":"186859:4:0","type":"","value":"0x18"}],"functionName":{"name":"add","nativeSrc":"186840:3:0","nodeType":"YulIdentifier","src":"186840:3:0"},"nativeSrc":"186840:24:0","nodeType":"YulFunctionCall","src":"186840:24:0"}],"functionName":{"name":"calldataload","nativeSrc":"186827:12:0","nodeType":"YulIdentifier","src":"186827:12:0"},"nativeSrc":"186827:38:0","nodeType":"YulFunctionCall","src":"186827:38:0"}],"functionName":{"name":"shr","nativeSrc":"186818:3:0","nodeType":"YulIdentifier","src":"186818:3:0"},"nativeSrc":"186818:48:0","nodeType":"YulFunctionCall","src":"186818:48:0"}],"functionName":{"name":"mstore","nativeSrc":"186795:6:0","nodeType":"YulIdentifier","src":"186795:6:0"},"nativeSrc":"186795:72:0","nodeType":"YulFunctionCall","src":"186795:72:0"},"nativeSrc":"186795:72:0","nodeType":"YulExpressionStatement","src":"186795:72:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"186942:3:0","nodeType":"YulIdentifier","src":"186942:3:0"},{"kind":"number","nativeSrc":"186947:4:0","nodeType":"YulLiteral","src":"186947:4:0","type":"","value":"0xa4"}],"functionName":{"name":"add","nativeSrc":"186938:3:0","nodeType":"YulIdentifier","src":"186938:3:0"},"nativeSrc":"186938:14:0","nodeType":"YulFunctionCall","src":"186938:14:0"},{"name":"spender","nativeSrc":"186954:7:0","nodeType":"YulIdentifier","src":"186954:7:0"}],"functionName":{"name":"mstore","nativeSrc":"186931:6:0","nodeType":"YulIdentifier","src":"186931:6:0"},"nativeSrc":"186931:31:0","nodeType":"YulFunctionCall","src":"186931:31:0"},"nativeSrc":"186931:31:0","nodeType":"YulExpressionStatement","src":"186931:31:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"187104:3:0","nodeType":"YulIdentifier","src":"187104:3:0"},{"kind":"number","nativeSrc":"187109:4:0","nodeType":"YulLiteral","src":"187109:4:0","type":"","value":"0xc4"}],"functionName":{"name":"add","nativeSrc":"187100:3:0","nodeType":"YulIdentifier","src":"187100:3:0"},"nativeSrc":"187100:14:0","nodeType":"YulFunctionCall","src":"187100:14:0"},{"arguments":[{"kind":"number","nativeSrc":"187120:14:0","nodeType":"YulLiteral","src":"187120:14:0","type":"","value":"0xffffffffffff"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"187144:3:0","nodeType":"YulLiteral","src":"187144:3:0","type":"","value":"224"},{"arguments":[{"arguments":[{"name":"permit.offset","nativeSrc":"187166:13:0","nodeType":"YulIdentifier","src":"187166:13:0"},{"kind":"number","nativeSrc":"187181:4:0","nodeType":"YulLiteral","src":"187181:4:0","type":"","value":"0x1c"}],"functionName":{"name":"add","nativeSrc":"187162:3:0","nodeType":"YulIdentifier","src":"187162:3:0"},"nativeSrc":"187162:24:0","nodeType":"YulFunctionCall","src":"187162:24:0"}],"functionName":{"name":"calldataload","nativeSrc":"187149:12:0","nodeType":"YulIdentifier","src":"187149:12:0"},"nativeSrc":"187149:38:0","nodeType":"YulFunctionCall","src":"187149:38:0"}],"functionName":{"name":"shr","nativeSrc":"187140:3:0","nodeType":"YulIdentifier","src":"187140:3:0"},"nativeSrc":"187140:48:0","nodeType":"YulFunctionCall","src":"187140:48:0"},{"kind":"number","nativeSrc":"187190:1:0","nodeType":"YulLiteral","src":"187190:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"187136:3:0","nodeType":"YulIdentifier","src":"187136:3:0"},"nativeSrc":"187136:56:0","nodeType":"YulFunctionCall","src":"187136:56:0"}],"functionName":{"name":"and","nativeSrc":"187116:3:0","nodeType":"YulIdentifier","src":"187116:3:0"},"nativeSrc":"187116:77:0","nodeType":"YulFunctionCall","src":"187116:77:0"}],"functionName":{"name":"mstore","nativeSrc":"187093:6:0","nodeType":"YulIdentifier","src":"187093:6:0"},"nativeSrc":"187093:101:0","nodeType":"YulFunctionCall","src":"187093:101:0"},"nativeSrc":"187093:101:0","nodeType":"YulExpressionStatement","src":"187093:101:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"187295:3:0","nodeType":"YulIdentifier","src":"187295:3:0"},{"kind":"number","nativeSrc":"187300:4:0","nodeType":"YulLiteral","src":"187300:4:0","type":"","value":"0xe4"}],"functionName":{"name":"add","nativeSrc":"187291:3:0","nodeType":"YulIdentifier","src":"187291:3:0"},"nativeSrc":"187291:14:0","nodeType":"YulFunctionCall","src":"187291:14:0"},{"kind":"number","nativeSrc":"187307:5:0","nodeType":"YulLiteral","src":"187307:5:0","type":"","value":"0x100"}],"functionName":{"name":"mstore","nativeSrc":"187284:6:0","nodeType":"YulIdentifier","src":"187284:6:0"},"nativeSrc":"187284:29:0","nodeType":"YulFunctionCall","src":"187284:29:0"},"nativeSrc":"187284:29:0","nodeType":"YulExpressionStatement","src":"187284:29:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"187395:3:0","nodeType":"YulIdentifier","src":"187395:3:0"},{"kind":"number","nativeSrc":"187400:5:0","nodeType":"YulLiteral","src":"187400:5:0","type":"","value":"0x104"}],"functionName":{"name":"add","nativeSrc":"187391:3:0","nodeType":"YulIdentifier","src":"187391:3:0"},"nativeSrc":"187391:15:0","nodeType":"YulFunctionCall","src":"187391:15:0"},{"kind":"number","nativeSrc":"187408:4:0","nodeType":"YulLiteral","src":"187408:4:0","type":"","value":"0x40"}],"functionName":{"name":"mstore","nativeSrc":"187384:6:0","nodeType":"YulIdentifier","src":"187384:6:0"},"nativeSrc":"187384:29:0","nodeType":"YulFunctionCall","src":"187384:29:0"},"nativeSrc":"187384:29:0","nodeType":"YulExpressionStatement","src":"187384:29:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"187500:3:0","nodeType":"YulIdentifier","src":"187500:3:0"},{"kind":"number","nativeSrc":"187505:5:0","nodeType":"YulLiteral","src":"187505:5:0","type":"","value":"0x124"}],"functionName":{"name":"add","nativeSrc":"187496:3:0","nodeType":"YulIdentifier","src":"187496:3:0"},"nativeSrc":"187496:15:0","nodeType":"YulFunctionCall","src":"187496:15:0"},{"arguments":[{"name":"permit.offset","nativeSrc":"187517:13:0","nodeType":"YulIdentifier","src":"187517:13:0"},{"kind":"number","nativeSrc":"187532:4:0","nodeType":"YulLiteral","src":"187532:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"187513:3:0","nodeType":"YulIdentifier","src":"187513:3:0"},"nativeSrc":"187513:24:0","nodeType":"YulFunctionCall","src":"187513:24:0"},{"kind":"number","nativeSrc":"187539:4:0","nodeType":"YulLiteral","src":"187539:4:0","type":"","value":"0x20"}],"functionName":{"name":"calldatacopy","nativeSrc":"187483:12:0","nodeType":"YulIdentifier","src":"187483:12:0"},"nativeSrc":"187483:61:0","nodeType":"YulFunctionCall","src":"187483:61:0"},"nativeSrc":"187483:61:0","nodeType":"YulExpressionStatement","src":"187483:61:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"187626:3:0","nodeType":"YulIdentifier","src":"187626:3:0"},{"kind":"number","nativeSrc":"187631:5:0","nodeType":"YulLiteral","src":"187631:5:0","type":"","value":"0x144"}],"functionName":{"name":"add","nativeSrc":"187622:3:0","nodeType":"YulIdentifier","src":"187622:3:0"},"nativeSrc":"187622:15:0","nodeType":"YulFunctionCall","src":"187622:15:0"},{"arguments":[{"name":"permit.offset","nativeSrc":"187643:13:0","nodeType":"YulIdentifier","src":"187643:13:0"},{"kind":"number","nativeSrc":"187658:4:0","nodeType":"YulLiteral","src":"187658:4:0","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"187639:3:0","nodeType":"YulIdentifier","src":"187639:3:0"},"nativeSrc":"187639:24:0","nodeType":"YulFunctionCall","src":"187639:24:0"},{"kind":"number","nativeSrc":"187665:4:0","nodeType":"YulLiteral","src":"187665:4:0","type":"","value":"0x20"}],"functionName":{"name":"calldatacopy","nativeSrc":"187609:12:0","nodeType":"YulIdentifier","src":"187609:12:0"},"nativeSrc":"187609:61:0","nodeType":"YulFunctionCall","src":"187609:61:0"},"nativeSrc":"187609:61:0","nodeType":"YulExpressionStatement","src":"187609:61:0"},{"nativeSrc":"187847:53:0","nodeType":"YulAssignment","src":"187847:53:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"187863:3:0","nodeType":"YulIdentifier","src":"187863:3:0"},"nativeSrc":"187863:5:0","nodeType":"YulFunctionCall","src":"187863:5:0"},{"name":"_PERMIT2","nativeSrc":"187870:8:0","nodeType":"YulIdentifier","src":"187870:8:0"},{"kind":"number","nativeSrc":"187880:1:0","nodeType":"YulLiteral","src":"187880:1:0","type":"","value":"0"},{"name":"ptr","nativeSrc":"187883:3:0","nodeType":"YulIdentifier","src":"187883:3:0"},{"kind":"number","nativeSrc":"187888:5:0","nodeType":"YulLiteral","src":"187888:5:0","type":"","value":"0x164"},{"kind":"number","nativeSrc":"187895:1:0","nodeType":"YulLiteral","src":"187895:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"187898:1:0","nodeType":"YulLiteral","src":"187898:1:0","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"187858:4:0","nodeType":"YulIdentifier","src":"187858:4:0"},"nativeSrc":"187858:42:0","nodeType":"YulFunctionCall","src":"187858:42:0"},"variableNames":[{"name":"success","nativeSrc":"187847:7:0","nodeType":"YulIdentifier","src":"187847:7:0"}]}]},"nativeSrc":"186064:1850:0","nodeType":"YulCase","src":"186064:1850:0","value":{"kind":"number","nativeSrc":"186069:2:0","nodeType":"YulLiteral","src":"186069:2:0","type":"","value":"96"}},{"body":{"nativeSrc":"187960:341:0","nodeType":"YulBlock","src":"187960:341:0","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"187985:3:0","nodeType":"YulIdentifier","src":"187985:3:0"},{"name":"permit2Selector","nativeSrc":"187990:15:0","nodeType":"YulIdentifier","src":"187990:15:0"}],"functionName":{"name":"mstore","nativeSrc":"187978:6:0","nodeType":"YulIdentifier","src":"187978:6:0"},"nativeSrc":"187978:28:0","nodeType":"YulFunctionCall","src":"187978:28:0"},"nativeSrc":"187978:28:0","nodeType":"YulExpressionStatement","src":"187978:28:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"188040:3:0","nodeType":"YulIdentifier","src":"188040:3:0"},{"kind":"number","nativeSrc":"188045:4:0","nodeType":"YulLiteral","src":"188045:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"188036:3:0","nodeType":"YulIdentifier","src":"188036:3:0"},"nativeSrc":"188036:14:0","nodeType":"YulFunctionCall","src":"188036:14:0"},{"name":"permit.offset","nativeSrc":"188052:13:0","nodeType":"YulIdentifier","src":"188052:13:0"},{"name":"permit.length","nativeSrc":"188067:13:0","nodeType":"YulIdentifier","src":"188067:13:0"}],"functionName":{"name":"calldatacopy","nativeSrc":"188023:12:0","nodeType":"YulIdentifier","src":"188023:12:0"},"nativeSrc":"188023:58:0","nodeType":"YulFunctionCall","src":"188023:58:0"},"nativeSrc":"188023:58:0","nodeType":"YulExpressionStatement","src":"188023:58:0"},{"nativeSrc":"188234:53:0","nodeType":"YulAssignment","src":"188234:53:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"188250:3:0","nodeType":"YulIdentifier","src":"188250:3:0"},"nativeSrc":"188250:5:0","nodeType":"YulFunctionCall","src":"188250:5:0"},{"name":"_PERMIT2","nativeSrc":"188257:8:0","nodeType":"YulIdentifier","src":"188257:8:0"},{"kind":"number","nativeSrc":"188267:1:0","nodeType":"YulLiteral","src":"188267:1:0","type":"","value":"0"},{"name":"ptr","nativeSrc":"188270:3:0","nodeType":"YulIdentifier","src":"188270:3:0"},{"kind":"number","nativeSrc":"188275:5:0","nodeType":"YulLiteral","src":"188275:5:0","type":"","value":"0x164"},{"kind":"number","nativeSrc":"188282:1:0","nodeType":"YulLiteral","src":"188282:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"188285:1:0","nodeType":"YulLiteral","src":"188285:1:0","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"188245:4:0","nodeType":"YulIdentifier","src":"188245:4:0"},"nativeSrc":"188245:42:0","nodeType":"YulFunctionCall","src":"188245:42:0"},"variableNames":[{"name":"success","nativeSrc":"188234:7:0","nodeType":"YulIdentifier","src":"188234:7:0"}]}]},"nativeSrc":"187951:350:0","nodeType":"YulCase","src":"187951:350:0","value":{"kind":"number","nativeSrc":"187956:3:0","nodeType":"YulLiteral","src":"187956:3:0","type":"","value":"352"}},{"body":{"nativeSrc":"188352:378:0","nodeType":"YulBlock","src":"188352:378:0","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"188377:3:0","nodeType":"YulIdentifier","src":"188377:3:0"},{"name":"erc7597PermitSelector","nativeSrc":"188382:21:0","nodeType":"YulIdentifier","src":"188382:21:0"}],"functionName":{"name":"mstore","nativeSrc":"188370:6:0","nodeType":"YulIdentifier","src":"188370:6:0"},"nativeSrc":"188370:34:0","nodeType":"YulFunctionCall","src":"188370:34:0"},"nativeSrc":"188370:34:0","nodeType":"YulExpressionStatement","src":"188370:34:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"188438:3:0","nodeType":"YulIdentifier","src":"188438:3:0"},{"kind":"number","nativeSrc":"188443:4:0","nodeType":"YulLiteral","src":"188443:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"188434:3:0","nodeType":"YulIdentifier","src":"188434:3:0"},"nativeSrc":"188434:14:0","nodeType":"YulFunctionCall","src":"188434:14:0"},{"name":"permit.offset","nativeSrc":"188450:13:0","nodeType":"YulIdentifier","src":"188450:13:0"},{"name":"permit.length","nativeSrc":"188465:13:0","nodeType":"YulIdentifier","src":"188465:13:0"}],"functionName":{"name":"calldatacopy","nativeSrc":"188421:12:0","nodeType":"YulIdentifier","src":"188421:12:0"},"nativeSrc":"188421:58:0","nodeType":"YulFunctionCall","src":"188421:58:0"},"nativeSrc":"188421:58:0","nodeType":"YulExpressionStatement","src":"188421:58:0"},{"nativeSrc":"188650:66:0","nodeType":"YulAssignment","src":"188650:66:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"188666:3:0","nodeType":"YulIdentifier","src":"188666:3:0"},"nativeSrc":"188666:5:0","nodeType":"YulFunctionCall","src":"188666:5:0"},{"name":"token","nativeSrc":"188673:5:0","nodeType":"YulIdentifier","src":"188673:5:0"},{"kind":"number","nativeSrc":"188680:1:0","nodeType":"YulLiteral","src":"188680:1:0","type":"","value":"0"},{"name":"ptr","nativeSrc":"188683:3:0","nodeType":"YulIdentifier","src":"188683:3:0"},{"arguments":[{"name":"permit.length","nativeSrc":"188692:13:0","nodeType":"YulIdentifier","src":"188692:13:0"},{"kind":"number","nativeSrc":"188707:1:0","nodeType":"YulLiteral","src":"188707:1:0","type":"","value":"4"}],"functionName":{"name":"add","nativeSrc":"188688:3:0","nodeType":"YulIdentifier","src":"188688:3:0"},"nativeSrc":"188688:21:0","nodeType":"YulFunctionCall","src":"188688:21:0"},{"kind":"number","nativeSrc":"188711:1:0","nodeType":"YulLiteral","src":"188711:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"188714:1:0","nodeType":"YulLiteral","src":"188714:1:0","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"188661:4:0","nodeType":"YulIdentifier","src":"188661:4:0"},"nativeSrc":"188661:55:0","nodeType":"YulFunctionCall","src":"188661:55:0"},"variableNames":[{"name":"success","nativeSrc":"188650:7:0","nodeType":"YulIdentifier","src":"188650:7:0"}]}]},"nativeSrc":"188344:386:0","nodeType":"YulCase","src":"188344:386:0","value":"default"}],"expression":{"name":"permit.length","nativeSrc":"182010:13:0","nodeType":"YulIdentifier","src":"182010:13:0"},"nativeSrc":"182003:6727:0","nodeType":"YulSwitch","src":"182003:6727:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":6589,"isOffset":false,"isSlot":false,"src":"187870:8:0","valueSize":1},{"declaration":6589,"isOffset":false,"isSlot":false,"src":"188257:8:0","valueSize":1},{"declaration":6973,"isOffset":false,"isSlot":false,"src":"183635:17:0","valueSize":1},{"declaration":6973,"isOffset":false,"isSlot":false,"src":"185671:17:0","valueSize":1},{"declaration":6985,"isOffset":false,"isSlot":false,"src":"188382:21:0","valueSize":1},{"declaration":6957,"isOffset":false,"isSlot":false,"src":"182188:5:0","valueSize":1},{"declaration":6957,"isOffset":false,"isSlot":false,"src":"183712:5:0","valueSize":1},{"declaration":6957,"isOffset":false,"isSlot":false,"src":"186312:5:0","valueSize":1},{"declaration":6961,"isOffset":false,"isSlot":false,"src":"182010:13:0","suffix":"length","valueSize":1},{"declaration":6961,"isOffset":false,"isSlot":false,"src":"185336:13:0","suffix":"length","valueSize":1},{"declaration":6961,"isOffset":false,"isSlot":false,"src":"185750:13:0","suffix":"length","valueSize":1},{"declaration":6961,"isOffset":false,"isSlot":false,"src":"188067:13:0","suffix":"length","valueSize":1},{"declaration":6961,"isOffset":false,"isSlot":false,"src":"188465:13:0","suffix":"length","valueSize":1},{"declaration":6961,"isOffset":false,"isSlot":false,"src":"188692:13:0","suffix":"length","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"182479:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"182583:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"182705:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"183101:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"184000:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"184104:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"184240:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"184721:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"185321:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"185735:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"186441:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"186678:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"186844:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"187166:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"187517:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"187643:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"188052:13:0","suffix":"offset","valueSize":1},{"declaration":6961,"isOffset":true,"isSlot":false,"src":"188450:13:0","suffix":"offset","valueSize":1},{"declaration":6979,"isOffset":false,"isSlot":false,"src":"186237:15:0","valueSize":1},{"declaration":6979,"isOffset":false,"isSlot":false,"src":"187990:15:0","valueSize":1},{"declaration":6967,"isOffset":false,"isSlot":false,"src":"182111:14:0","valueSize":1},{"declaration":6967,"isOffset":false,"isSlot":false,"src":"185260:14:0","valueSize":1},{"declaration":6959,"isOffset":false,"isSlot":false,"src":"182251:7:0","valueSize":1},{"declaration":6959,"isOffset":false,"isSlot":false,"src":"183775:7:0","valueSize":1},{"declaration":6959,"isOffset":false,"isSlot":false,"src":"186954:7:0","valueSize":1},{"declaration":6964,"isOffset":false,"isSlot":false,"src":"183483:7:0","valueSize":1},{"declaration":6964,"isOffset":false,"isSlot":false,"src":"185116:7:0","valueSize":1},{"declaration":6964,"isOffset":false,"isSlot":false,"src":"185526:7:0","valueSize":1},{"declaration":6964,"isOffset":false,"isSlot":false,"src":"185955:7:0","valueSize":1},{"declaration":6964,"isOffset":false,"isSlot":false,"src":"187847:7:0","valueSize":1},{"declaration":6964,"isOffset":false,"isSlot":false,"src":"188234:7:0","valueSize":1},{"declaration":6964,"isOffset":false,"isSlot":false,"src":"188650:7:0","valueSize":1},{"declaration":6955,"isOffset":false,"isSlot":false,"src":"183506:5:0","valueSize":1},{"declaration":6955,"isOffset":false,"isSlot":false,"src":"185139:5:0","valueSize":1},{"declaration":6955,"isOffset":false,"isSlot":false,"src":"185549:5:0","valueSize":1},{"declaration":6955,"isOffset":false,"isSlot":false,"src":"185978:5:0","valueSize":1},{"declaration":6955,"isOffset":false,"isSlot":false,"src":"186373:5:0","valueSize":1},{"declaration":6955,"isOffset":false,"isSlot":false,"src":"188673:5:0","valueSize":1}],"flags":["memory-safe"],"id":6990,"nodeType":"InlineAssembly","src":"181790:6950:0"}]},"documentation":{"id":6952,"nodeType":"StructuredDocumentation","src":"179796:1535:0","text":" @notice The function attempts to call the permit function on a given ERC20 token.\n @dev The function is designed to support a variety of permit functions, namely: IERC20Permit, IDaiLikePermit, IERC7597Permit and IPermit2.\n It accommodates both Compact and Full formats of these permit types.\n Please note, it is expected that the `expiration` parameter for the compact Permit2 and the `deadline` parameter\n for the compact Permit are to be incremented by one before invoking this function. This approach is motivated by\n gas efficiency considerations; as the unlimited expiration period is likely to be the most common scenario, and\n zeros are cheaper to pass in terms of gas cost. Thus, callers should increment the expiration or deadline by one\n before invocation for optimized performance.\n Note that the implementation does not perform dirty bits cleaning, so it is the responsibility of\n the caller to make sure that the higher 96 bits of the `owner` and `spender` parameters are clean.\n @param token The address of the ERC20 token on which to call the permit function.\n @param owner The owner of the tokens. This address should have signed the off-chain permit.\n @param spender The address which will be approved for transfer of tokens.\n @param permit The off-chain permit data, containing different fields depending on the type of permit function.\n @return success A boolean indicating whether the permit call was successful."},"id":6992,"implemented":true,"kind":"function","modifiers":[],"name":"tryPermit","nameLocation":"181345:9:0","nodeType":"FunctionDefinition","parameters":{"id":6962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6955,"mutability":"mutable","name":"token","nameLocation":"181362:5:0","nodeType":"VariableDeclaration","scope":6992,"src":"181355:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6954,"nodeType":"UserDefinedTypeName","pathNode":{"id":6953,"name":"IERC20","nameLocations":["181355:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"181355:6:0"},"referencedDeclaration":379,"src":"181355:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6957,"mutability":"mutable","name":"owner","nameLocation":"181377:5:0","nodeType":"VariableDeclaration","scope":6992,"src":"181369:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6956,"name":"address","nodeType":"ElementaryTypeName","src":"181369:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6959,"mutability":"mutable","name":"spender","nameLocation":"181392:7:0","nodeType":"VariableDeclaration","scope":6992,"src":"181384:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6958,"name":"address","nodeType":"ElementaryTypeName","src":"181384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6961,"mutability":"mutable","name":"permit","nameLocation":"181416:6:0","nodeType":"VariableDeclaration","scope":6992,"src":"181401:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6960,"name":"bytes","nodeType":"ElementaryTypeName","src":"181401:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"181354:69:0"},"returnParameters":{"id":6965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6964,"mutability":"mutable","name":"success","nameLocation":"181446:7:0","nodeType":"VariableDeclaration","scope":6992,"src":"181441:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6963,"name":"bool","nodeType":"ElementaryTypeName","src":"181441:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"181440:14:0"},"scope":7075,"src":"181336:7410:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7008,"nodeType":"Block","src":"189619:620:0","statements":[{"AST":{"nativeSrc":"189654:579:0","nodeType":"YulBlock","src":"189654:579:0","statements":[{"nativeSrc":"189711:23:0","nodeType":"YulVariableDeclaration","src":"189711:23:0","value":{"arguments":[{"kind":"number","nativeSrc":"189729:4:0","nodeType":"YulLiteral","src":"189729:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"189723:5:0","nodeType":"YulIdentifier","src":"189723:5:0"},"nativeSrc":"189723:11:0","nodeType":"YulFunctionCall","src":"189723:11:0"},"variables":[{"name":"data","nativeSrc":"189715:4:0","nodeType":"YulTypedName","src":"189715:4:0","type":""}]},{"expression":{"arguments":[{"name":"data","nativeSrc":"189755:4:0","nodeType":"YulIdentifier","src":"189755:4:0"},{"name":"selector","nativeSrc":"189761:8:0","nodeType":"YulIdentifier","src":"189761:8:0"}],"functionName":{"name":"mstore","nativeSrc":"189748:6:0","nodeType":"YulIdentifier","src":"189748:6:0"},"nativeSrc":"189748:22:0","nodeType":"YulFunctionCall","src":"189748:22:0"},"nativeSrc":"189748:22:0","nodeType":"YulExpressionStatement","src":"189748:22:0"},{"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"189794:4:0","nodeType":"YulIdentifier","src":"189794:4:0"},{"kind":"number","nativeSrc":"189800:4:0","nodeType":"YulLiteral","src":"189800:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"189790:3:0","nodeType":"YulIdentifier","src":"189790:3:0"},"nativeSrc":"189790:15:0","nodeType":"YulFunctionCall","src":"189790:15:0"},{"name":"to","nativeSrc":"189807:2:0","nodeType":"YulIdentifier","src":"189807:2:0"}],"functionName":{"name":"mstore","nativeSrc":"189783:6:0","nodeType":"YulIdentifier","src":"189783:6:0"},"nativeSrc":"189783:27:0","nodeType":"YulFunctionCall","src":"189783:27:0"},"nativeSrc":"189783:27:0","nodeType":"YulExpressionStatement","src":"189783:27:0"},{"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"189834:4:0","nodeType":"YulIdentifier","src":"189834:4:0"},{"kind":"number","nativeSrc":"189840:4:0","nodeType":"YulLiteral","src":"189840:4:0","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"189830:3:0","nodeType":"YulIdentifier","src":"189830:3:0"},"nativeSrc":"189830:15:0","nodeType":"YulFunctionCall","src":"189830:15:0"},{"name":"amount","nativeSrc":"189847:6:0","nodeType":"YulIdentifier","src":"189847:6:0"}],"functionName":{"name":"mstore","nativeSrc":"189823:6:0","nodeType":"YulIdentifier","src":"189823:6:0"},"nativeSrc":"189823:31:0","nodeType":"YulFunctionCall","src":"189823:31:0"},"nativeSrc":"189823:31:0","nodeType":"YulExpressionStatement","src":"189823:31:0"},{"nativeSrc":"189867:55:0","nodeType":"YulAssignment","src":"189867:55:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"189883:3:0","nodeType":"YulIdentifier","src":"189883:3:0"},"nativeSrc":"189883:5:0","nodeType":"YulFunctionCall","src":"189883:5:0"},{"name":"token","nativeSrc":"189890:5:0","nodeType":"YulIdentifier","src":"189890:5:0"},{"kind":"number","nativeSrc":"189897:1:0","nodeType":"YulLiteral","src":"189897:1:0","type":"","value":"0"},{"name":"data","nativeSrc":"189900:4:0","nodeType":"YulIdentifier","src":"189900:4:0"},{"kind":"number","nativeSrc":"189906:4:0","nodeType":"YulLiteral","src":"189906:4:0","type":"","value":"0x44"},{"kind":"number","nativeSrc":"189912:3:0","nodeType":"YulLiteral","src":"189912:3:0","type":"","value":"0x0"},{"kind":"number","nativeSrc":"189917:4:0","nodeType":"YulLiteral","src":"189917:4:0","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"189878:4:0","nodeType":"YulIdentifier","src":"189878:4:0"},"nativeSrc":"189878:44:0","nodeType":"YulFunctionCall","src":"189878:44:0"},"variableNames":[{"name":"success","nativeSrc":"189867:7:0","nodeType":"YulIdentifier","src":"189867:7:0"}]},{"body":{"nativeSrc":"189946:277:0","nodeType":"YulBlock","src":"189946:277:0","statements":[{"cases":[{"body":{"nativeSrc":"190011:76:0","nodeType":"YulBlock","src":"190011:76:0","statements":[{"nativeSrc":"190033:36:0","nodeType":"YulAssignment","src":"190033:36:0","value":{"arguments":[{"arguments":[{"name":"token","nativeSrc":"190059:5:0","nodeType":"YulIdentifier","src":"190059:5:0"}],"functionName":{"name":"extcodesize","nativeSrc":"190047:11:0","nodeType":"YulIdentifier","src":"190047:11:0"},"nativeSrc":"190047:18:0","nodeType":"YulFunctionCall","src":"190047:18:0"},{"kind":"number","nativeSrc":"190067:1:0","nodeType":"YulLiteral","src":"190067:1:0","type":"","value":"0"}],"functionName":{"name":"gt","nativeSrc":"190044:2:0","nodeType":"YulIdentifier","src":"190044:2:0"},"nativeSrc":"190044:25:0","nodeType":"YulFunctionCall","src":"190044:25:0"},"variableNames":[{"name":"success","nativeSrc":"190033:7:0","nodeType":"YulIdentifier","src":"190033:7:0"}]}]},"nativeSrc":"190004:83:0","nodeType":"YulCase","src":"190004:83:0","value":{"kind":"number","nativeSrc":"190009:1:0","nodeType":"YulLiteral","src":"190009:1:0","type":"","value":"0"}},{"body":{"nativeSrc":"190112:97:0","nodeType":"YulBlock","src":"190112:97:0","statements":[{"nativeSrc":"190134:57:0","nodeType":"YulAssignment","src":"190134:57:0","value":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"190152:14:0","nodeType":"YulIdentifier","src":"190152:14:0"},"nativeSrc":"190152:16:0","nodeType":"YulFunctionCall","src":"190152:16:0"},{"kind":"number","nativeSrc":"190170:2:0","nodeType":"YulLiteral","src":"190170:2:0","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"190149:2:0","nodeType":"YulIdentifier","src":"190149:2:0"},"nativeSrc":"190149:24:0","nodeType":"YulFunctionCall","src":"190149:24:0"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"190184:1:0","nodeType":"YulLiteral","src":"190184:1:0","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"190178:5:0","nodeType":"YulIdentifier","src":"190178:5:0"},"nativeSrc":"190178:8:0","nodeType":"YulFunctionCall","src":"190178:8:0"},{"kind":"number","nativeSrc":"190188:1:0","nodeType":"YulLiteral","src":"190188:1:0","type":"","value":"1"}],"functionName":{"name":"eq","nativeSrc":"190175:2:0","nodeType":"YulIdentifier","src":"190175:2:0"},"nativeSrc":"190175:15:0","nodeType":"YulFunctionCall","src":"190175:15:0"}],"functionName":{"name":"and","nativeSrc":"190145:3:0","nodeType":"YulIdentifier","src":"190145:3:0"},"nativeSrc":"190145:46:0","nodeType":"YulFunctionCall","src":"190145:46:0"},"variableNames":[{"name":"success","nativeSrc":"190134:7:0","nodeType":"YulIdentifier","src":"190134:7:0"}]}]},"nativeSrc":"190104:105:0","nodeType":"YulCase","src":"190104:105:0","value":"default"}],"expression":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"189971:14:0","nodeType":"YulIdentifier","src":"189971:14:0"},"nativeSrc":"189971:16:0","nodeType":"YulFunctionCall","src":"189971:16:0"},"nativeSrc":"189964:245:0","nodeType":"YulSwitch","src":"189964:245:0"}]},"condition":{"name":"success","nativeSrc":"189938:7:0","nodeType":"YulIdentifier","src":"189938:7:0"},"nativeSrc":"189935:288:0","nodeType":"YulIf","src":"189935:288:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":7002,"isOffset":false,"isSlot":false,"src":"189847:6:0","valueSize":1},{"declaration":6998,"isOffset":false,"isSlot":false,"src":"189761:8:0","valueSize":1},{"declaration":7005,"isOffset":false,"isSlot":false,"src":"189867:7:0","valueSize":1},{"declaration":7005,"isOffset":false,"isSlot":false,"src":"189938:7:0","valueSize":1},{"declaration":7005,"isOffset":false,"isSlot":false,"src":"190033:7:0","valueSize":1},{"declaration":7005,"isOffset":false,"isSlot":false,"src":"190134:7:0","valueSize":1},{"declaration":7000,"isOffset":false,"isSlot":false,"src":"189807:2:0","valueSize":1},{"declaration":6996,"isOffset":false,"isSlot":false,"src":"189890:5:0","valueSize":1},{"declaration":6996,"isOffset":false,"isSlot":false,"src":"190059:5:0","valueSize":1}],"flags":["memory-safe"],"id":7007,"nodeType":"InlineAssembly","src":"189629:604:0"}]},"documentation":{"id":6993,"nodeType":"StructuredDocumentation","src":"188752:715:0","text":" @dev Executes a low level call to a token contract, making it resistant to reversion and erroneous boolean returns.\n @param token The IERC20 token contract on which the call will be made.\n @param selector The function signature that is to be called on the token contract.\n @param to The address to which the token amount will be transferred.\n @param amount The token amount to be transferred.\n @return success A boolean indicating if the call was successful. Returns 'true' on success and 'false' on failure.\n In case of success but no returned data, validates that the contract code exists.\n In case of returned data, ensures that it's a boolean `true`."},"id":7009,"implemented":true,"kind":"function","modifiers":[],"name":"_makeCall","nameLocation":"189481:9:0","nodeType":"FunctionDefinition","parameters":{"id":7003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"mutability":"mutable","name":"token","nameLocation":"189507:5:0","nodeType":"VariableDeclaration","scope":7009,"src":"189500:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":6995,"nodeType":"UserDefinedTypeName","pathNode":{"id":6994,"name":"IERC20","nameLocations":["189500:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"189500:6:0"},"referencedDeclaration":379,"src":"189500:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6998,"mutability":"mutable","name":"selector","nameLocation":"189529:8:0","nodeType":"VariableDeclaration","scope":7009,"src":"189522:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6997,"name":"bytes4","nodeType":"ElementaryTypeName","src":"189522:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":7000,"mutability":"mutable","name":"to","nameLocation":"189555:2:0","nodeType":"VariableDeclaration","scope":7009,"src":"189547:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6999,"name":"address","nodeType":"ElementaryTypeName","src":"189547:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7002,"mutability":"mutable","name":"amount","nameLocation":"189575:6:0","nodeType":"VariableDeclaration","scope":7009,"src":"189567:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7001,"name":"uint256","nodeType":"ElementaryTypeName","src":"189567:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"189490:97:0"},"returnParameters":{"id":7006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7005,"mutability":"mutable","name":"success","nameLocation":"189610:7:0","nodeType":"VariableDeclaration","scope":7009,"src":"189605:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7004,"name":"bool","nodeType":"ElementaryTypeName","src":"189605:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"189604:14:0"},"scope":7075,"src":"189472:767:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7030,"nodeType":"Block","src":"190573:468:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7018,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"190587:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"190596:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"190587:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7029,"nodeType":"IfStatement","src":"190583:452:0","trueBody":{"id":7028,"nodeType":"Block","src":"190599:436:0","statements":[{"assignments":[7022],"declarations":[{"constant":false,"id":7022,"mutability":"mutable","name":"selector","nameLocation":"190620:8:0","nodeType":"VariableDeclaration","scope":7028,"src":"190613:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7021,"name":"bytes4","nodeType":"ElementaryTypeName","src":"190613:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":7026,"initialValue":{"expression":{"expression":{"id":7023,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"190631:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$3538_$","typeString":"type(contract IWETH)"}},"id":7024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"190637:7:0","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3531,"src":"190631:13:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$__$returns$__$","typeString":"function IWETH.deposit() payable"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"190645:8:0","memberName":"selector","nodeType":"MemberAccess","src":"190631:22:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"190613:40:0"},{"AST":{"nativeSrc":"190692:333:0","nodeType":"YulBlock","src":"190692:333:0","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"190760:1:0","nodeType":"YulLiteral","src":"190760:1:0","type":"","value":"0"},{"name":"selector","nativeSrc":"190763:8:0","nodeType":"YulIdentifier","src":"190763:8:0"}],"functionName":{"name":"mstore","nativeSrc":"190753:6:0","nodeType":"YulIdentifier","src":"190753:6:0"},"nativeSrc":"190753:19:0","nodeType":"YulFunctionCall","src":"190753:19:0"},"nativeSrc":"190753:19:0","nodeType":"YulExpressionStatement","src":"190753:19:0"},{"body":{"nativeSrc":"190838:173:0","nodeType":"YulBlock","src":"190838:173:0","statements":[{"nativeSrc":"190860:22:0","nodeType":"YulVariableDeclaration","src":"190860:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"190877:4:0","nodeType":"YulLiteral","src":"190877:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"190871:5:0","nodeType":"YulIdentifier","src":"190871:5:0"},"nativeSrc":"190871:11:0","nodeType":"YulFunctionCall","src":"190871:11:0"},"variables":[{"name":"ptr","nativeSrc":"190864:3:0","nodeType":"YulTypedName","src":"190864:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"190918:3:0","nodeType":"YulIdentifier","src":"190918:3:0"},{"kind":"number","nativeSrc":"190923:1:0","nodeType":"YulLiteral","src":"190923:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"190926:14:0","nodeType":"YulIdentifier","src":"190926:14:0"},"nativeSrc":"190926:16:0","nodeType":"YulFunctionCall","src":"190926:16:0"}],"functionName":{"name":"returndatacopy","nativeSrc":"190903:14:0","nodeType":"YulIdentifier","src":"190903:14:0"},"nativeSrc":"190903:40:0","nodeType":"YulFunctionCall","src":"190903:40:0"},"nativeSrc":"190903:40:0","nodeType":"YulExpressionStatement","src":"190903:40:0"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"190971:3:0","nodeType":"YulIdentifier","src":"190971:3:0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"190976:14:0","nodeType":"YulIdentifier","src":"190976:14:0"},"nativeSrc":"190976:16:0","nodeType":"YulFunctionCall","src":"190976:16:0"}],"functionName":{"name":"revert","nativeSrc":"190964:6:0","nodeType":"YulIdentifier","src":"190964:6:0"},"nativeSrc":"190964:29:0","nodeType":"YulFunctionCall","src":"190964:29:0"},"nativeSrc":"190964:29:0","nodeType":"YulExpressionStatement","src":"190964:29:0"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"190804:3:0","nodeType":"YulIdentifier","src":"190804:3:0"},"nativeSrc":"190804:5:0","nodeType":"YulFunctionCall","src":"190804:5:0"},{"name":"weth","nativeSrc":"190811:4:0","nodeType":"YulIdentifier","src":"190811:4:0"},{"name":"amount","nativeSrc":"190817:6:0","nodeType":"YulIdentifier","src":"190817:6:0"},{"kind":"number","nativeSrc":"190825:1:0","nodeType":"YulLiteral","src":"190825:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"190828:1:0","nodeType":"YulLiteral","src":"190828:1:0","type":"","value":"4"},{"kind":"number","nativeSrc":"190831:1:0","nodeType":"YulLiteral","src":"190831:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"190834:1:0","nodeType":"YulLiteral","src":"190834:1:0","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"190799:4:0","nodeType":"YulIdentifier","src":"190799:4:0"},"nativeSrc":"190799:37:0","nodeType":"YulFunctionCall","src":"190799:37:0"}],"functionName":{"name":"iszero","nativeSrc":"190792:6:0","nodeType":"YulIdentifier","src":"190792:6:0"},"nativeSrc":"190792:45:0","nodeType":"YulFunctionCall","src":"190792:45:0"},"nativeSrc":"190789:222:0","nodeType":"YulIf","src":"190789:222:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":7015,"isOffset":false,"isSlot":false,"src":"190817:6:0","valueSize":1},{"declaration":7022,"isOffset":false,"isSlot":false,"src":"190763:8:0","valueSize":1},{"declaration":7013,"isOffset":false,"isSlot":false,"src":"190811:4:0","valueSize":1}],"flags":["memory-safe"],"id":7027,"nodeType":"InlineAssembly","src":"190667:358:0"}]}}]},"documentation":{"id":7010,"nodeType":"StructuredDocumentation","src":"190245:265:0","text":" @notice Safely deposits a specified amount of Ether into the IWETH contract. Consumes less gas then regular `IWETH.deposit`.\n @param weth The IWETH token contract.\n @param amount The amount of Ether to deposit into the IWETH contract."},"id":7031,"implemented":true,"kind":"function","modifiers":[],"name":"safeDeposit","nameLocation":"190524:11:0","nodeType":"FunctionDefinition","parameters":{"id":7016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7013,"mutability":"mutable","name":"weth","nameLocation":"190542:4:0","nodeType":"VariableDeclaration","scope":7031,"src":"190536:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$3538","typeString":"contract IWETH"},"typeName":{"id":7012,"nodeType":"UserDefinedTypeName","pathNode":{"id":7011,"name":"IWETH","nameLocations":["190536:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":3538,"src":"190536:5:0"},"referencedDeclaration":3538,"src":"190536:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$3538","typeString":"contract IWETH"}},"visibility":"internal"},{"constant":false,"id":7015,"mutability":"mutable","name":"amount","nameLocation":"190556:6:0","nodeType":"VariableDeclaration","scope":7031,"src":"190548:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7014,"name":"uint256","nodeType":"ElementaryTypeName","src":"190548:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"190535:28:0"},"returnParameters":{"id":7017,"nodeType":"ParameterList","parameters":[],"src":"190573:0:0"},"scope":7075,"src":"190515:526:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7047,"nodeType":"Block","src":"191465:426:0","statements":[{"assignments":[7041],"declarations":[{"constant":false,"id":7041,"mutability":"mutable","name":"selector","nameLocation":"191482:8:0","nodeType":"VariableDeclaration","scope":7047,"src":"191475:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7040,"name":"bytes4","nodeType":"ElementaryTypeName","src":"191475:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":7045,"initialValue":{"expression":{"expression":{"id":7042,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"191493:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$3538_$","typeString":"type(contract IWETH)"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"191499:8:0","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":3537,"src":"191493:14:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_uint256_$returns$__$","typeString":"function IWETH.withdraw(uint256)"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"191508:8:0","memberName":"selector","nodeType":"MemberAccess","src":"191493:23:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"191475:41:0"},{"AST":{"nativeSrc":"191551:334:0","nodeType":"YulBlock","src":"191551:334:0","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"191616:1:0","nodeType":"YulLiteral","src":"191616:1:0","type":"","value":"0"},{"name":"selector","nativeSrc":"191619:8:0","nodeType":"YulIdentifier","src":"191619:8:0"}],"functionName":{"name":"mstore","nativeSrc":"191609:6:0","nodeType":"YulIdentifier","src":"191609:6:0"},"nativeSrc":"191609:19:0","nodeType":"YulFunctionCall","src":"191609:19:0"},"nativeSrc":"191609:19:0","nodeType":"YulExpressionStatement","src":"191609:19:0"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"191648:1:0","nodeType":"YulLiteral","src":"191648:1:0","type":"","value":"4"},{"name":"amount","nativeSrc":"191651:6:0","nodeType":"YulIdentifier","src":"191651:6:0"}],"functionName":{"name":"mstore","nativeSrc":"191641:6:0","nodeType":"YulIdentifier","src":"191641:6:0"},"nativeSrc":"191641:17:0","nodeType":"YulFunctionCall","src":"191641:17:0"},"nativeSrc":"191641:17:0","nodeType":"YulExpressionStatement","src":"191641:17:0"},{"body":{"nativeSrc":"191718:157:0","nodeType":"YulBlock","src":"191718:157:0","statements":[{"nativeSrc":"191736:22:0","nodeType":"YulVariableDeclaration","src":"191736:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"191753:4:0","nodeType":"YulLiteral","src":"191753:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"191747:5:0","nodeType":"YulIdentifier","src":"191747:5:0"},"nativeSrc":"191747:11:0","nodeType":"YulFunctionCall","src":"191747:11:0"},"variables":[{"name":"ptr","nativeSrc":"191740:3:0","nodeType":"YulTypedName","src":"191740:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"191790:3:0","nodeType":"YulIdentifier","src":"191790:3:0"},{"kind":"number","nativeSrc":"191795:1:0","nodeType":"YulLiteral","src":"191795:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"191798:14:0","nodeType":"YulIdentifier","src":"191798:14:0"},"nativeSrc":"191798:16:0","nodeType":"YulFunctionCall","src":"191798:16:0"}],"functionName":{"name":"returndatacopy","nativeSrc":"191775:14:0","nodeType":"YulIdentifier","src":"191775:14:0"},"nativeSrc":"191775:40:0","nodeType":"YulFunctionCall","src":"191775:40:0"},"nativeSrc":"191775:40:0","nodeType":"YulExpressionStatement","src":"191775:40:0"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"191839:3:0","nodeType":"YulIdentifier","src":"191839:3:0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"191844:14:0","nodeType":"YulIdentifier","src":"191844:14:0"},"nativeSrc":"191844:16:0","nodeType":"YulFunctionCall","src":"191844:16:0"}],"functionName":{"name":"revert","nativeSrc":"191832:6:0","nodeType":"YulIdentifier","src":"191832:6:0"},"nativeSrc":"191832:29:0","nodeType":"YulFunctionCall","src":"191832:29:0"},"nativeSrc":"191832:29:0","nodeType":"YulExpressionStatement","src":"191832:29:0"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"191686:3:0","nodeType":"YulIdentifier","src":"191686:3:0"},"nativeSrc":"191686:5:0","nodeType":"YulFunctionCall","src":"191686:5:0"},{"name":"weth","nativeSrc":"191693:4:0","nodeType":"YulIdentifier","src":"191693:4:0"},{"kind":"number","nativeSrc":"191699:1:0","nodeType":"YulLiteral","src":"191699:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"191702:1:0","nodeType":"YulLiteral","src":"191702:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"191705:4:0","nodeType":"YulLiteral","src":"191705:4:0","type":"","value":"0x24"},{"kind":"number","nativeSrc":"191711:1:0","nodeType":"YulLiteral","src":"191711:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"191714:1:0","nodeType":"YulLiteral","src":"191714:1:0","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"191681:4:0","nodeType":"YulIdentifier","src":"191681:4:0"},"nativeSrc":"191681:35:0","nodeType":"YulFunctionCall","src":"191681:35:0"}],"functionName":{"name":"iszero","nativeSrc":"191674:6:0","nodeType":"YulIdentifier","src":"191674:6:0"},"nativeSrc":"191674:43:0","nodeType":"YulFunctionCall","src":"191674:43:0"},"nativeSrc":"191671:204:0","nodeType":"YulIf","src":"191671:204:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":7037,"isOffset":false,"isSlot":false,"src":"191651:6:0","valueSize":1},{"declaration":7041,"isOffset":false,"isSlot":false,"src":"191619:8:0","valueSize":1},{"declaration":7035,"isOffset":false,"isSlot":false,"src":"191693:4:0","valueSize":1}],"flags":["memory-safe"],"id":7046,"nodeType":"InlineAssembly","src":"191526:359:0"}]},"documentation":{"id":7032,"nodeType":"StructuredDocumentation","src":"191047:354:0","text":" @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract. Consumes less gas then regular `IWETH.withdraw`.\n @dev Uses inline assembly to interact with the IWETH contract.\n @param weth The IWETH token contract.\n @param amount The amount of wrapped Ether to withdraw from the IWETH contract."},"id":7048,"implemented":true,"kind":"function","modifiers":[],"name":"safeWithdraw","nameLocation":"191415:12:0","nodeType":"FunctionDefinition","parameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7035,"mutability":"mutable","name":"weth","nameLocation":"191434:4:0","nodeType":"VariableDeclaration","scope":7048,"src":"191428:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$3538","typeString":"contract IWETH"},"typeName":{"id":7034,"nodeType":"UserDefinedTypeName","pathNode":{"id":7033,"name":"IWETH","nameLocations":["191428:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":3538,"src":"191428:5:0"},"referencedDeclaration":3538,"src":"191428:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$3538","typeString":"contract IWETH"}},"visibility":"internal"},{"constant":false,"id":7037,"mutability":"mutable","name":"amount","nameLocation":"191448:6:0","nodeType":"VariableDeclaration","scope":7048,"src":"191440:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7036,"name":"uint256","nodeType":"ElementaryTypeName","src":"191440:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"191427:28:0"},"returnParameters":{"id":7039,"nodeType":"ParameterList","parameters":[],"src":"191465:0:0"},"scope":7075,"src":"191406:485:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7073,"nodeType":"Block","src":"192346:436:0","statements":[{"expression":{"arguments":[{"id":7060,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"192369:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$3538","typeString":"contract IWETH"}},{"id":7061,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"192375:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$3538","typeString":"contract IWETH"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7059,"name":"safeWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"192356:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IWETH_$3538_$_t_uint256_$returns$__$","typeString":"function (contract IWETH,uint256)"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"192356:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7063,"nodeType":"ExpressionStatement","src":"192356:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7064,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"192396:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":7067,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"192410:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$7075","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$7075","typeString":"library SafeERC20"}],"id":7066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"192402:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7065,"name":"address","nodeType":"ElementaryTypeName","src":"192402:7:0","typeDescriptions":{}}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"192402:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"192396:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7072,"nodeType":"IfStatement","src":"192392:384:0","trueBody":{"id":7071,"nodeType":"Block","src":"192417:359:0","statements":[{"AST":{"nativeSrc":"192456:310:0","nodeType":"YulBlock","src":"192456:310:0","statements":[{"body":{"nativeSrc":"192579:173:0","nodeType":"YulBlock","src":"192579:173:0","statements":[{"nativeSrc":"192601:22:0","nodeType":"YulVariableDeclaration","src":"192601:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"192618:4:0","nodeType":"YulLiteral","src":"192618:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"192612:5:0","nodeType":"YulIdentifier","src":"192612:5:0"},"nativeSrc":"192612:11:0","nodeType":"YulFunctionCall","src":"192612:11:0"},"variables":[{"name":"ptr","nativeSrc":"192605:3:0","nodeType":"YulTypedName","src":"192605:3:0","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"192659:3:0","nodeType":"YulIdentifier","src":"192659:3:0"},{"kind":"number","nativeSrc":"192664:1:0","nodeType":"YulLiteral","src":"192664:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"192667:14:0","nodeType":"YulIdentifier","src":"192667:14:0"},"nativeSrc":"192667:16:0","nodeType":"YulFunctionCall","src":"192667:16:0"}],"functionName":{"name":"returndatacopy","nativeSrc":"192644:14:0","nodeType":"YulIdentifier","src":"192644:14:0"},"nativeSrc":"192644:40:0","nodeType":"YulFunctionCall","src":"192644:40:0"},"nativeSrc":"192644:40:0","nodeType":"YulExpressionStatement","src":"192644:40:0"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"192712:3:0","nodeType":"YulIdentifier","src":"192712:3:0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"192717:14:0","nodeType":"YulIdentifier","src":"192717:14:0"},"nativeSrc":"192717:16:0","nodeType":"YulFunctionCall","src":"192717:16:0"}],"functionName":{"name":"revert","nativeSrc":"192705:6:0","nodeType":"YulIdentifier","src":"192705:6:0"},"nativeSrc":"192705:29:0","nodeType":"YulFunctionCall","src":"192705:29:0"},"nativeSrc":"192705:29:0","nodeType":"YulExpressionStatement","src":"192705:29:0"}]},"condition":{"arguments":[{"arguments":[{"name":"_RAW_CALL_GAS_LIMIT","nativeSrc":"192533:19:0","nodeType":"YulIdentifier","src":"192533:19:0"},{"name":"to","nativeSrc":"192554:2:0","nodeType":"YulIdentifier","src":"192554:2:0"},{"name":"amount","nativeSrc":"192558:6:0","nodeType":"YulIdentifier","src":"192558:6:0"},{"kind":"number","nativeSrc":"192566:1:0","nodeType":"YulLiteral","src":"192566:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"192569:1:0","nodeType":"YulLiteral","src":"192569:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"192572:1:0","nodeType":"YulLiteral","src":"192572:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"192575:1:0","nodeType":"YulLiteral","src":"192575:1:0","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"192528:4:0","nodeType":"YulIdentifier","src":"192528:4:0"},"nativeSrc":"192528:49:0","nodeType":"YulFunctionCall","src":"192528:49:0"}],"functionName":{"name":"iszero","nativeSrc":"192521:6:0","nodeType":"YulIdentifier","src":"192521:6:0"},"nativeSrc":"192521:57:0","nodeType":"YulFunctionCall","src":"192521:57:0"},"nativeSrc":"192518:234:0","nodeType":"YulIf","src":"192518:234:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":6595,"isOffset":false,"isSlot":false,"src":"192533:19:0","valueSize":1},{"declaration":7054,"isOffset":false,"isSlot":false,"src":"192558:6:0","valueSize":1},{"declaration":7056,"isOffset":false,"isSlot":false,"src":"192554:2:0","valueSize":1}],"flags":["memory-safe"],"id":7070,"nodeType":"InlineAssembly","src":"192431:335:0"}]}}]},"documentation":{"id":7049,"nodeType":"StructuredDocumentation","src":"191897:371:0","text":" @notice Safely withdraws a specified amount of wrapped Ether from the IWETH contract to a specified recipient.\n Consumes less gas then regular `IWETH.withdraw`.\n @param weth The IWETH token contract.\n @param amount The amount of wrapped Ether to withdraw from the IWETH contract.\n @param to The recipient of the withdrawn Ether."},"id":7074,"implemented":true,"kind":"function","modifiers":[],"name":"safeWithdrawTo","nameLocation":"192282:14:0","nodeType":"FunctionDefinition","parameters":{"id":7057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"weth","nameLocation":"192303:4:0","nodeType":"VariableDeclaration","scope":7074,"src":"192297:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$3538","typeString":"contract IWETH"},"typeName":{"id":7051,"nodeType":"UserDefinedTypeName","pathNode":{"id":7050,"name":"IWETH","nameLocations":["192297:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":3538,"src":"192297:5:0"},"referencedDeclaration":3538,"src":"192297:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$3538","typeString":"contract IWETH"}},"visibility":"internal"},{"constant":false,"id":7054,"mutability":"mutable","name":"amount","nameLocation":"192317:6:0","nodeType":"VariableDeclaration","scope":7074,"src":"192309:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7053,"name":"uint256","nodeType":"ElementaryTypeName","src":"192309:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7056,"mutability":"mutable","name":"to","nameLocation":"192333:2:0","nodeType":"VariableDeclaration","scope":7074,"src":"192325:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7055,"name":"address","nodeType":"ElementaryTypeName","src":"192325:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"192296:40:0"},"returnParameters":{"id":7058,"nodeType":"ParameterList","parameters":[],"src":"192346:0:0"},"scope":7075,"src":"192273:509:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":10322,"src":"167189:25595:0","usedErrors":[6574,6576,6578,6580,6582,6584,6586],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":7077,"name":"IPreInteraction","nameLocations":["193042:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":6330,"src":"193042:15:0"},"id":7078,"nodeType":"InheritanceSpecifier","src":"193042:15:0"},{"baseName":{"id":7079,"name":"IPostInteraction","nameLocations":["193059:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":6308,"src":"193059:16:0"},"id":7080,"nodeType":"InheritanceSpecifier","src":"193059:16:0"},{"baseName":{"id":7081,"name":"IAmountGetter","nameLocations":["193077:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":6242,"src":"193077:13:0"},"id":7082,"nodeType":"InheritanceSpecifier","src":"193077:13:0"}],"canonicalName":"BaseExtension","contractDependencies":[],"contractKind":"contract","documentation":{"id":7076,"nodeType":"StructuredDocumentation","src":"192887:128:0","text":" @title Base Extension contract\n @notice Contract to define the basic functionality for the limit orders settlement."},"fullyImplemented":true,"id":7597,"linearizedBaseContracts":[7597,6242,6308,6330],"name":"BaseExtension","nameLocation":"193025:13:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"d25aa106","id":7084,"name":"OnlyLimitOrderProtocol","nameLocation":"193103:22:0","nodeType":"ErrorDefinition","parameters":{"id":7083,"nodeType":"ParameterList","parameters":[],"src":"193125:2:0"},"src":"193097:31:0"},{"constant":true,"id":7087,"mutability":"constant","name":"_BASE_POINTS","nameLocation":"193159:12:0","nodeType":"VariableDeclaration","scope":7597,"src":"193134:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7085,"name":"uint256","nodeType":"ElementaryTypeName","src":"193134:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31305f3030305f303030","id":7086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"193174:10:0","typeDescriptions":{"typeIdentifier":"t_rational_10000000_by_1","typeString":"int_const 10000000"},"value":"10_000_000"},"visibility":"private"},{"constant":true,"id":7090,"mutability":"constant","name":"_GAS_PRICE_BASE","nameLocation":"193223:15:0","nodeType":"VariableDeclaration","scope":7597,"src":"193198:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7088,"name":"uint256","nodeType":"ElementaryTypeName","src":"193198:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"315f3030305f303030","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"193241:9:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1_000_000"},"visibility":"private"},{"constant":false,"id":7092,"mutability":"immutable","name":"_LIMIT_ORDER_PROTOCOL","nameLocation":"193304:21:0","nodeType":"VariableDeclaration","scope":7597,"src":"193278:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7091,"name":"address","nodeType":"ElementaryTypeName","src":"193278:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":7104,"nodeType":"Block","src":"193447:100:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7095,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"193461:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"193465:6:0","memberName":"sender","nodeType":"MemberAccess","src":"193461:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7097,"name":"_LIMIT_ORDER_PROTOCOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"193475:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"193461:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7102,"nodeType":"IfStatement","src":"193457:72:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7099,"name":"OnlyLimitOrderProtocol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"193505:22:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"193505:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7101,"nodeType":"RevertStatement","src":"193498:31:0"}},{"id":7103,"nodeType":"PlaceholderStatement","src":"193539:1:0"}]},"documentation":{"id":7093,"nodeType":"StructuredDocumentation","src":"193332:78:0","text":"@dev Modifier to check if the caller is the limit order protocol contract."},"id":7105,"name":"onlyLimitOrderProtocol","nameLocation":"193424:22:0","nodeType":"ModifierDefinition","parameters":{"id":7094,"nodeType":"ParameterList","parameters":[],"src":"193447:0:0"},"src":"193415:132:0","virtual":false,"visibility":"internal"},{"body":{"id":7115,"nodeType":"Block","src":"193718:59:0","statements":[{"expression":{"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7111,"name":"_LIMIT_ORDER_PROTOCOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"193728:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7112,"name":"limitOrderProtocol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"193752:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"193728:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7114,"nodeType":"ExpressionStatement","src":"193728:42:0"}]},"documentation":{"id":7106,"nodeType":"StructuredDocumentation","src":"193553:120:0","text":" @notice Initializes the contract.\n @param limitOrderProtocol The limit order protocol contract."},"id":7116,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"limitOrderProtocol","nameLocation":"193698:18:0","nodeType":"VariableDeclaration","scope":7116,"src":"193690:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7107,"name":"address","nodeType":"ElementaryTypeName","src":"193690:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"193689:28:0"},"returnParameters":{"id":7110,"nodeType":"ParameterList","parameters":[],"src":"193718:0:0"},"scope":7597,"src":"193678:99:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6220],"body":{"id":7159,"nodeType":"Block","src":"194158:184:0","statements":[{"assignments":[7138],"declarations":[{"constant":false,"id":7138,"mutability":"mutable","name":"rateBump","nameLocation":"194176:8:0","nodeType":"VariableDeclaration","scope":7159,"src":"194168:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7137,"name":"uint256","nodeType":"ElementaryTypeName","src":"194168:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7142,"initialValue":{"arguments":[{"id":7140,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"194200:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":7139,"name":"_getRateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"194187:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$returns$_t_uint256_$","typeString":"function (bytes calldata) view returns (uint256)"}},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"194187:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"194168:42:0"},{"expression":{"arguments":[{"expression":{"id":7145,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"194239:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"194245:12:0","memberName":"makingAmount","nodeType":"MemberAccess","referencedDeclaration":5938,"src":"194239:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7147,"name":"takingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"194259:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7148,"name":"_BASE_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"194274:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"194259:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7150,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"194288:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"194294:12:0","memberName":"takingAmount","nodeType":"MemberAccess","referencedDeclaration":5940,"src":"194288:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7152,"name":"_BASE_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"194310:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7153,"name":"rateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"194325:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"194310:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"194309:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"194288:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7143,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"194227:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5818_$","typeString":"type(library Math)"}},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"194232:6:0","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"194227:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"194227:108:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7136,"id":7158,"nodeType":"Return","src":"194220:115:0"}]},"documentation":{"id":7117,"nodeType":"StructuredDocumentation","src":"193783:54:0","text":" See {IAmountGetter-getMakingAmount}"},"functionSelector":"1d9671c3","id":7160,"implemented":true,"kind":"function","modifiers":[],"name":"getMakingAmount","nameLocation":"193851:15:0","nodeType":"FunctionDefinition","parameters":{"id":7133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7120,"mutability":"mutable","name":"order","nameLocation":"193903:5:0","nodeType":"VariableDeclaration","scope":7160,"src":"193876:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":7119,"nodeType":"UserDefinedTypeName","pathNode":{"id":7118,"name":"IOrderMixin.Order","nameLocations":["193876:11:0","193888:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"193876:17:0"},"referencedDeclaration":5944,"src":"193876:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":7122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7160,"src":"193918:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7121,"name":"bytes","nodeType":"ElementaryTypeName","src":"193918:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7160,"src":"193958:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"193958:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7160,"src":"193991:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7125,"name":"address","nodeType":"ElementaryTypeName","src":"193991:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7128,"mutability":"mutable","name":"takingAmount","nameLocation":"194028:12:0","nodeType":"VariableDeclaration","scope":7160,"src":"194020:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7127,"name":"uint256","nodeType":"ElementaryTypeName","src":"194020:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7160,"src":"194050:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7129,"name":"uint256","nodeType":"ElementaryTypeName","src":"194050:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7132,"mutability":"mutable","name":"extraData","nameLocation":"194110:9:0","nodeType":"VariableDeclaration","scope":7160,"src":"194095:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7131,"name":"bytes","nodeType":"ElementaryTypeName","src":"194095:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"193866:259:0"},"returnParameters":{"id":7136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7160,"src":"194149:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7134,"name":"uint256","nodeType":"ElementaryTypeName","src":"194149:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"194148:9:0"},"scope":7597,"src":"193842:500:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6241],"body":{"id":7206,"nodeType":"Block","src":"194723:204:0","statements":[{"assignments":[7182],"declarations":[{"constant":false,"id":7182,"mutability":"mutable","name":"rateBump","nameLocation":"194741:8:0","nodeType":"VariableDeclaration","scope":7206,"src":"194733:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7181,"name":"uint256","nodeType":"ElementaryTypeName","src":"194733:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7186,"initialValue":{"arguments":[{"id":7184,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"194765:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":7183,"name":"_getRateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"194752:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$returns$_t_uint256_$","typeString":"function (bytes calldata) view returns (uint256)"}},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"194752:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"194733:42:0"},{"expression":{"arguments":[{"expression":{"id":7189,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"194804:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"194810:12:0","memberName":"takingAmount","nodeType":"MemberAccess","referencedDeclaration":5940,"src":"194804:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7191,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"194824:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7192,"name":"_BASE_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"194840:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7193,"name":"rateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"194855:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"194840:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"194839:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"194824:40:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7197,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"194866:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"194872:12:0","memberName":"makingAmount","nodeType":"MemberAccess","referencedDeclaration":5938,"src":"194866:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7199,"name":"_BASE_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"194887:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"194866:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":7201,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"194901:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5818_$","typeString":"type(library Math)"}},"id":7202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"194906:8:0","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":4278,"src":"194901:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4278_$","typeString":"type(enum Math.Rounding)"}},"id":7203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"194915:4:0","memberName":"Ceil","nodeType":"MemberAccess","referencedDeclaration":4275,"src":"194901:18:0","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$4278","typeString":"enum Math.Rounding"}],"expression":{"id":7187,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"194792:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5818_$","typeString":"type(library Math)"}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"194797:6:0","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4706,"src":"194792:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$4278_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"194792:128:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7180,"id":7205,"nodeType":"Return","src":"194785:135:0"}]},"documentation":{"id":7161,"nodeType":"StructuredDocumentation","src":"194348:54:0","text":" See {IAmountGetter-getTakingAmount}"},"functionSelector":"d7ff8a80","id":7207,"implemented":true,"kind":"function","modifiers":[],"name":"getTakingAmount","nameLocation":"194416:15:0","nodeType":"FunctionDefinition","parameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"order","nameLocation":"194468:5:0","nodeType":"VariableDeclaration","scope":7207,"src":"194441:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":7163,"nodeType":"UserDefinedTypeName","pathNode":{"id":7162,"name":"IOrderMixin.Order","nameLocations":["194441:11:0","194453:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"194441:17:0"},"referencedDeclaration":5944,"src":"194441:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":7166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7207,"src":"194483:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7165,"name":"bytes","nodeType":"ElementaryTypeName","src":"194483:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7207,"src":"194523:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"194523:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7207,"src":"194556:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7169,"name":"address","nodeType":"ElementaryTypeName","src":"194556:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7172,"mutability":"mutable","name":"makingAmount","nameLocation":"194593:12:0","nodeType":"VariableDeclaration","scope":7207,"src":"194585:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7171,"name":"uint256","nodeType":"ElementaryTypeName","src":"194585:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7207,"src":"194615:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7173,"name":"uint256","nodeType":"ElementaryTypeName","src":"194615:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7176,"mutability":"mutable","name":"extraData","nameLocation":"194675:9:0","nodeType":"VariableDeclaration","scope":7207,"src":"194660:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7175,"name":"bytes","nodeType":"ElementaryTypeName","src":"194660:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"194431:259:0"},"returnParameters":{"id":7180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7207,"src":"194714:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7178,"name":"uint256","nodeType":"ElementaryTypeName","src":"194714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"194713:9:0"},"scope":7597,"src":"194407:520:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6329],"body":{"id":7241,"nodeType":"Block","src":"195314:130:0","statements":[{"expression":{"arguments":[{"id":7231,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7211,"src":"195340:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},{"id":7232,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"195347:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":7233,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"195358:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7234,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"195369:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7235,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"195376:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7236,"name":"takingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"195390:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7237,"name":"remainingMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"195404:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7238,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"195427:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":7230,"name":"_preInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"195324:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Order_$5944_calldata_ptr_$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct IOrderMixin.Order calldata,bytes calldata,bytes32,address,uint256,uint256,uint256,bytes calldata)"}},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"195324:113:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7240,"nodeType":"ExpressionStatement","src":"195324:113:0"}]},"documentation":{"id":7208,"nodeType":"StructuredDocumentation","src":"194933:55:0","text":" See {IPreInteraction-preInteraction}"},"functionSelector":"0986bdd5","id":7242,"implemented":true,"kind":"function","modifiers":[{"id":7228,"kind":"modifierInvocation","modifierName":{"id":7227,"name":"onlyLimitOrderProtocol","nameLocations":["195291:22:0"],"nodeType":"IdentifierPath","referencedDeclaration":7105,"src":"195291:22:0"},"nodeType":"ModifierInvocation","src":"195291:22:0"}],"name":"preInteraction","nameLocation":"195002:14:0","nodeType":"FunctionDefinition","parameters":{"id":7226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7211,"mutability":"mutable","name":"order","nameLocation":"195053:5:0","nodeType":"VariableDeclaration","scope":7242,"src":"195026:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":7210,"nodeType":"UserDefinedTypeName","pathNode":{"id":7209,"name":"IOrderMixin.Order","nameLocations":["195026:11:0","195038:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"195026:17:0"},"referencedDeclaration":5944,"src":"195026:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":7213,"mutability":"mutable","name":"extension","nameLocation":"195083:9:0","nodeType":"VariableDeclaration","scope":7242,"src":"195068:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7212,"name":"bytes","nodeType":"ElementaryTypeName","src":"195068:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7215,"mutability":"mutable","name":"orderHash","nameLocation":"195110:9:0","nodeType":"VariableDeclaration","scope":7242,"src":"195102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"195102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7217,"mutability":"mutable","name":"taker","nameLocation":"195137:5:0","nodeType":"VariableDeclaration","scope":7242,"src":"195129:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7216,"name":"address","nodeType":"ElementaryTypeName","src":"195129:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7219,"mutability":"mutable","name":"makingAmount","nameLocation":"195160:12:0","nodeType":"VariableDeclaration","scope":7242,"src":"195152:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7218,"name":"uint256","nodeType":"ElementaryTypeName","src":"195152:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7221,"mutability":"mutable","name":"takingAmount","nameLocation":"195190:12:0","nodeType":"VariableDeclaration","scope":7242,"src":"195182:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7220,"name":"uint256","nodeType":"ElementaryTypeName","src":"195182:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7223,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"195220:21:0","nodeType":"VariableDeclaration","scope":7242,"src":"195212:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7222,"name":"uint256","nodeType":"ElementaryTypeName","src":"195212:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7225,"mutability":"mutable","name":"extraData","nameLocation":"195266:9:0","nodeType":"VariableDeclaration","scope":7242,"src":"195251:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7224,"name":"bytes","nodeType":"ElementaryTypeName","src":"195251:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"195016:265:0"},"returnParameters":{"id":7229,"nodeType":"ParameterList","parameters":[],"src":"195314:0:0"},"scope":7597,"src":"194993:451:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6307],"body":{"id":7276,"nodeType":"Block","src":"195834:131:0","statements":[{"expression":{"arguments":[{"id":7266,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"195861:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},{"id":7267,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"195868:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":7268,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"195879:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7269,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"195890:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7270,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"195897:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7271,"name":"takingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7256,"src":"195911:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7272,"name":"remainingMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"195925:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7273,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"195948:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":7265,"name":"_postInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"195844:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Order_$5944_calldata_ptr_$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct IOrderMixin.Order calldata,bytes calldata,bytes32,address,uint256,uint256,uint256,bytes calldata)"}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"195844:114:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7275,"nodeType":"ExpressionStatement","src":"195844:114:0"}]},"documentation":{"id":7243,"nodeType":"StructuredDocumentation","src":"195450:57:0","text":" See {IPostInteraction-postInteraction}"},"functionSelector":"462ebde2","id":7277,"implemented":true,"kind":"function","modifiers":[{"id":7263,"kind":"modifierInvocation","modifierName":{"id":7262,"name":"onlyLimitOrderProtocol","nameLocations":["195811:22:0"],"nodeType":"IdentifierPath","referencedDeclaration":7105,"src":"195811:22:0"},"nodeType":"ModifierInvocation","src":"195811:22:0"}],"name":"postInteraction","nameLocation":"195521:15:0","nodeType":"FunctionDefinition","parameters":{"id":7261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7246,"mutability":"mutable","name":"order","nameLocation":"195573:5:0","nodeType":"VariableDeclaration","scope":7277,"src":"195546:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":7245,"nodeType":"UserDefinedTypeName","pathNode":{"id":7244,"name":"IOrderMixin.Order","nameLocations":["195546:11:0","195558:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"195546:17:0"},"referencedDeclaration":5944,"src":"195546:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":7248,"mutability":"mutable","name":"extension","nameLocation":"195603:9:0","nodeType":"VariableDeclaration","scope":7277,"src":"195588:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7247,"name":"bytes","nodeType":"ElementaryTypeName","src":"195588:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7250,"mutability":"mutable","name":"orderHash","nameLocation":"195630:9:0","nodeType":"VariableDeclaration","scope":7277,"src":"195622:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"195622:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7252,"mutability":"mutable","name":"taker","nameLocation":"195657:5:0","nodeType":"VariableDeclaration","scope":7277,"src":"195649:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7251,"name":"address","nodeType":"ElementaryTypeName","src":"195649:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7254,"mutability":"mutable","name":"makingAmount","nameLocation":"195680:12:0","nodeType":"VariableDeclaration","scope":7277,"src":"195672:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7253,"name":"uint256","nodeType":"ElementaryTypeName","src":"195672:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7256,"mutability":"mutable","name":"takingAmount","nameLocation":"195710:12:0","nodeType":"VariableDeclaration","scope":7277,"src":"195702:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7255,"name":"uint256","nodeType":"ElementaryTypeName","src":"195702:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7258,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"195740:21:0","nodeType":"VariableDeclaration","scope":7277,"src":"195732:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7257,"name":"uint256","nodeType":"ElementaryTypeName","src":"195732:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7260,"mutability":"mutable","name":"extraData","nameLocation":"195786:9:0","nodeType":"VariableDeclaration","scope":7277,"src":"195771:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7259,"name":"bytes","nodeType":"ElementaryTypeName","src":"195771:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"195536:265:0"},"returnParameters":{"id":7264,"nodeType":"ParameterList","parameters":[],"src":"195834:0:0"},"scope":7597,"src":"195512:453:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7297,"nodeType":"Block","src":"196278:2:0","statements":[]},"id":7298,"implemented":true,"kind":"function","modifiers":[],"name":"_preInteraction","nameLocation":"195980:15:0","nodeType":"FunctionDefinition","parameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7280,"mutability":"mutable","name":"order","nameLocation":"196032:5:0","nodeType":"VariableDeclaration","scope":7298,"src":"196005:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":7279,"nodeType":"UserDefinedTypeName","pathNode":{"id":7278,"name":"IOrderMixin.Order","nameLocations":["196005:11:0","196017:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"196005:17:0"},"referencedDeclaration":5944,"src":"196005:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":7282,"mutability":"mutable","name":"extension","nameLocation":"196062:9:0","nodeType":"VariableDeclaration","scope":7298,"src":"196047:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7281,"name":"bytes","nodeType":"ElementaryTypeName","src":"196047:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7284,"mutability":"mutable","name":"orderHash","nameLocation":"196089:9:0","nodeType":"VariableDeclaration","scope":7298,"src":"196081:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"196081:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7286,"mutability":"mutable","name":"taker","nameLocation":"196116:5:0","nodeType":"VariableDeclaration","scope":7298,"src":"196108:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7285,"name":"address","nodeType":"ElementaryTypeName","src":"196108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7288,"mutability":"mutable","name":"makingAmount","nameLocation":"196139:12:0","nodeType":"VariableDeclaration","scope":7298,"src":"196131:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7287,"name":"uint256","nodeType":"ElementaryTypeName","src":"196131:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7290,"mutability":"mutable","name":"takingAmount","nameLocation":"196169:12:0","nodeType":"VariableDeclaration","scope":7298,"src":"196161:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7289,"name":"uint256","nodeType":"ElementaryTypeName","src":"196161:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7292,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"196199:21:0","nodeType":"VariableDeclaration","scope":7298,"src":"196191:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7291,"name":"uint256","nodeType":"ElementaryTypeName","src":"196191:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7294,"mutability":"mutable","name":"extraData","nameLocation":"196245:9:0","nodeType":"VariableDeclaration","scope":7298,"src":"196230:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7293,"name":"bytes","nodeType":"ElementaryTypeName","src":"196230:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"195995:265:0"},"returnParameters":{"id":7296,"nodeType":"ParameterList","parameters":[],"src":"196278:0:0"},"scope":7597,"src":"195971:309:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7350,"nodeType":"Block","src":"196594:303:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7318,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"196657:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"196667:6:0","memberName":"length","nodeType":"MemberAccess","src":"196657:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3230","id":7320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"196676:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"196657:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7349,"nodeType":"IfStatement","src":"196653:238:0","trueBody":{"id":7348,"nodeType":"Block","src":"196680:211:0","statements":[{"expression":{"arguments":[{"id":7332,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"196756:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},{"id":7333,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"196763:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":7334,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"196774:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7335,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"196785:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7336,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"196792:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7337,"name":"takingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"196806:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7338,"name":"remainingMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"196820:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":7339,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"196843:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7341,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"196858:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"196868:6:0","memberName":"length","nodeType":"MemberAccess","src":"196858:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"196877:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"196858:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"196843:36:0","startExpression":{"hexValue":"3230","id":7340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"196853:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"expression":{"arguments":[{"arguments":[{"arguments":[{"id":7327,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"196727:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":7326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"196719:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":7325,"name":"bytes20","nodeType":"ElementaryTypeName","src":"196719:7:0","typeDescriptions":{}}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"196719:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"196711:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7323,"name":"address","nodeType":"ElementaryTypeName","src":"196711:7:0","typeDescriptions":{}}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"196711:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7322,"name":"IPostInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"196694:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPostInteraction_$6308_$","typeString":"type(contract IPostInteraction)"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"196694:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPostInteraction_$6308","typeString":"contract IPostInteraction"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"196740:15:0","memberName":"postInteraction","nodeType":"MemberAccess","referencedDeclaration":6307,"src":"196694:61:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_Order_$5944_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct IOrderMixin.Order memory,bytes memory,bytes32,address,uint256,uint256,uint256,bytes memory) external"}},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"196694:186:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7347,"nodeType":"ExpressionStatement","src":"196694:186:0"}]}}]},"id":7351,"implemented":true,"kind":"function","modifiers":[],"name":"_postInteraction","nameLocation":"196295:16:0","nodeType":"FunctionDefinition","parameters":{"id":7316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7301,"mutability":"mutable","name":"order","nameLocation":"196348:5:0","nodeType":"VariableDeclaration","scope":7351,"src":"196321:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":7300,"nodeType":"UserDefinedTypeName","pathNode":{"id":7299,"name":"IOrderMixin.Order","nameLocations":["196321:11:0","196333:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"196321:17:0"},"referencedDeclaration":5944,"src":"196321:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":7303,"mutability":"mutable","name":"extension","nameLocation":"196378:9:0","nodeType":"VariableDeclaration","scope":7351,"src":"196363:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7302,"name":"bytes","nodeType":"ElementaryTypeName","src":"196363:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7305,"mutability":"mutable","name":"orderHash","nameLocation":"196405:9:0","nodeType":"VariableDeclaration","scope":7351,"src":"196397:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"196397:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7307,"mutability":"mutable","name":"taker","nameLocation":"196432:5:0","nodeType":"VariableDeclaration","scope":7351,"src":"196424:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7306,"name":"address","nodeType":"ElementaryTypeName","src":"196424:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7309,"mutability":"mutable","name":"makingAmount","nameLocation":"196455:12:0","nodeType":"VariableDeclaration","scope":7351,"src":"196447:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7308,"name":"uint256","nodeType":"ElementaryTypeName","src":"196447:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7311,"mutability":"mutable","name":"takingAmount","nameLocation":"196485:12:0","nodeType":"VariableDeclaration","scope":7351,"src":"196477:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7310,"name":"uint256","nodeType":"ElementaryTypeName","src":"196477:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7313,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"196515:21:0","nodeType":"VariableDeclaration","scope":7351,"src":"196507:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7312,"name":"uint256","nodeType":"ElementaryTypeName","src":"196507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7315,"mutability":"mutable","name":"extraData","nameLocation":"196561:9:0","nodeType":"VariableDeclaration","scope":7351,"src":"196546:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7314,"name":"bytes","nodeType":"ElementaryTypeName","src":"196546:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"196311:265:0"},"returnParameters":{"id":7317,"nodeType":"ParameterList","parameters":[],"src":"196594:0:0"},"scope":7597,"src":"196286:611:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7467,"nodeType":"Block","src":"197651:788:0","statements":[{"id":7466,"nodeType":"UncheckedBlock","src":"197661:772:0","statements":[{"assignments":[7360],"declarations":[{"constant":false,"id":7360,"mutability":"mutable","name":"gasBumpEstimate","nameLocation":"197693:15:0","nodeType":"VariableDeclaration","scope":7466,"src":"197685:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7359,"name":"uint256","nodeType":"ElementaryTypeName","src":"197685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7371,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":7365,"name":"auctionDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"197725:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"33","id":7367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"197742:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"197725:19:0","startExpression":{"hexValue":"30","id":7366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"197740:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":7364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"197718:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes3_$","typeString":"type(bytes3)"},"typeName":{"id":7363,"name":"bytes3","nodeType":"ElementaryTypeName","src":"197718:6:0","typeDescriptions":{}}},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"197718:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes3","typeString":"bytes3"}],"id":7362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"197711:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7361,"name":"uint24","nodeType":"ElementaryTypeName","src":"197711:6:0","typeDescriptions":{}}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"197711:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"VariableDeclarationStatement","src":"197685:61:0"},{"assignments":[7373],"declarations":[{"constant":false,"id":7373,"mutability":"mutable","name":"gasPriceEstimate","nameLocation":"197768:16:0","nodeType":"VariableDeclaration","scope":7466,"src":"197760:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7372,"name":"uint256","nodeType":"ElementaryTypeName","src":"197760:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7384,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":7378,"name":"auctionDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"197801:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"37","id":7380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"197818:1:0","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"197801:19:0","startExpression":{"hexValue":"33","id":7379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"197816:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":7377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"197794:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":7376,"name":"bytes4","nodeType":"ElementaryTypeName","src":"197794:6:0","typeDescriptions":{}}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"197794:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":7375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"197787:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7374,"name":"uint32","nodeType":"ElementaryTypeName","src":"197787:6:0","typeDescriptions":{}}},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"197787:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"197760:62:0"},{"assignments":[7386],"declarations":[{"constant":false,"id":7386,"mutability":"mutable","name":"gasBump","nameLocation":"197844:7:0","nodeType":"VariableDeclaration","scope":7466,"src":"197836:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7385,"name":"uint256","nodeType":"ElementaryTypeName","src":"197836:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7404,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7387,"name":"gasBumpEstimate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"197854:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"197873:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"197854:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7390,"name":"gasPriceEstimate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"197878:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"197898:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"197878:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"197854:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7395,"name":"gasBumpEstimate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"197906:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7396,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"197924:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"197930:7:0","memberName":"basefee","nodeType":"MemberAccess","src":"197924:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"197906:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7399,"name":"gasPriceEstimate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"197940:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"197906:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7401,"name":"_GAS_PRICE_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"197959:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"197906:68:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"197854:120:0","trueExpression":{"hexValue":"30","id":7394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"197902:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"197836:138:0"},{"assignments":[7406],"declarations":[{"constant":false,"id":7406,"mutability":"mutable","name":"auctionStartTime","nameLocation":"197996:16:0","nodeType":"VariableDeclaration","scope":7466,"src":"197988:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7405,"name":"uint256","nodeType":"ElementaryTypeName","src":"197988:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7417,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":7411,"name":"auctionDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"198029:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3131","id":7413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"198046:2:0","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"198029:20:0","startExpression":{"hexValue":"37","id":7412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"198044:1:0","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":7410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"198022:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":7409,"name":"bytes4","nodeType":"ElementaryTypeName","src":"198022:6:0","typeDescriptions":{}}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"198022:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":7408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"198015:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7407,"name":"uint32","nodeType":"ElementaryTypeName","src":"198015:6:0","typeDescriptions":{}}},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"198015:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"197988:63:0"},{"assignments":[7419],"declarations":[{"constant":false,"id":7419,"mutability":"mutable","name":"auctionFinishTime","nameLocation":"198073:17:0","nodeType":"VariableDeclaration","scope":7466,"src":"198065:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7418,"name":"uint256","nodeType":"ElementaryTypeName","src":"198065:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7432,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7420,"name":"auctionStartTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"198093:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"arguments":[{"baseExpression":{"id":7425,"name":"auctionDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"198126:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3134","id":7427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"198144:2:0","typeDescriptions":{"typeIdentifier":"t_rational_14_by_1","typeString":"int_const 14"},"value":"14"},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"198126:21:0","startExpression":{"hexValue":"3131","id":7426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"198141:2:0","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":7424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"198119:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes3_$","typeString":"type(bytes3)"},"typeName":{"id":7423,"name":"bytes3","nodeType":"ElementaryTypeName","src":"198119:6:0","typeDescriptions":{}}},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"198119:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes3","typeString":"bytes3"}],"id":7422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"198112:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7421,"name":"uint24","nodeType":"ElementaryTypeName","src":"198112:6:0","typeDescriptions":{}}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"198112:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"198093:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"198065:84:0"},{"assignments":[7434],"declarations":[{"constant":false,"id":7434,"mutability":"mutable","name":"initialRateBump","nameLocation":"198171:15:0","nodeType":"VariableDeclaration","scope":7466,"src":"198163:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7433,"name":"uint256","nodeType":"ElementaryTypeName","src":"198163:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7445,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":7439,"name":"auctionDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"198203:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3137","id":7441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"198221:2:0","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"17"},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"198203:21:0","startExpression":{"hexValue":"3134","id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"198218:2:0","typeDescriptions":{"typeIdentifier":"t_rational_14_by_1","typeString":"int_const 14"},"value":"14"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":7438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"198196:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes3_$","typeString":"type(bytes3)"},"typeName":{"id":7437,"name":"bytes3","nodeType":"ElementaryTypeName","src":"198196:6:0","typeDescriptions":{}}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"198196:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes3","typeString":"bytes3"}],"id":7436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"198189:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7435,"name":"uint24","nodeType":"ElementaryTypeName","src":"198189:6:0","typeDescriptions":{}}},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"198189:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"VariableDeclarationStatement","src":"198163:63:0"},{"assignments":[7447],"declarations":[{"constant":false,"id":7447,"mutability":"mutable","name":"auctionBump","nameLocation":"198248:11:0","nodeType":"VariableDeclaration","scope":7466,"src":"198240:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7446,"name":"uint256","nodeType":"ElementaryTypeName","src":"198240:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7456,"initialValue":{"arguments":[{"id":7449,"name":"auctionStartTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"198278:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7450,"name":"auctionFinishTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"198296:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7451,"name":"initialRateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"198315:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":7452,"name":"auctionDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"198332:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"198332:19:0","startExpression":{"hexValue":"3137","id":7453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"198347:2:0","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"17"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":7448,"name":"_getAuctionBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"198262:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,bytes calldata) view returns (uint256)"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"198262:90:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"198240:112:0"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7457,"name":"auctionBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"198373:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7458,"name":"gasBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"198387:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"198373:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"198421:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"198373:49:0","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7460,"name":"auctionBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"198397:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7461,"name":"gasBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"198411:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"198397:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7358,"id":7465,"nodeType":"Return","src":"198366:56:0"}]}]},"documentation":{"id":7352,"nodeType":"StructuredDocumentation","src":"196903:659:0","text":" @dev Parses auction rate bump data from the `auctionDetails` field.\n `gasBumpEstimate` and `gasPriceEstimate` are used to estimate the transaction costs\n which are then offset from the auction rate bump.\n @param auctionDetails AuctionDetails is a tightly packed struct of the following format:\n ```\n struct AuctionDetails {\n     bytes3 gasBumpEstimate;\n     bytes4 gasPriceEstimate;\n     bytes4 auctionStartTime;\n     bytes3 auctionDuration;\n     bytes3 initialRateBump;\n     (bytes3,bytes2)[N] pointsAndTimeDeltas;\n }\n ```\n @return rateBump The rate bump."},"id":7468,"implemented":true,"kind":"function","modifiers":[],"name":"_getRateBump","nameLocation":"197576:12:0","nodeType":"FunctionDefinition","parameters":{"id":7355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7354,"mutability":"mutable","name":"auctionDetails","nameLocation":"197604:14:0","nodeType":"VariableDeclaration","scope":7468,"src":"197589:29:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7353,"name":"bytes","nodeType":"ElementaryTypeName","src":"197589:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"197588:31:0"},"returnParameters":{"id":7358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7468,"src":"197642:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7356,"name":"uint256","nodeType":"ElementaryTypeName","src":"197642:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"197641:9:0"},"scope":7597,"src":"197567:872:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7595,"nodeType":"Block","src":"199356:1122:0","statements":[{"id":7594,"nodeType":"UncheckedBlock","src":"199366:1106:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7482,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"199394:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"199400:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"199394:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7484,"name":"auctionStartTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"199413:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"199394:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7489,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"199496:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"199502:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"199496:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7491,"name":"auctionFinishTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"199515:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"199496:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7496,"nodeType":"IfStatement","src":"199492:83:0","trueBody":{"id":7495,"nodeType":"Block","src":"199534:41:0","statements":[{"expression":{"hexValue":"30","id":7493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"199559:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7481,"id":7494,"nodeType":"Return","src":"199552:8:0"}]}},"id":7497,"nodeType":"IfStatement","src":"199390:185:0","trueBody":{"id":7488,"nodeType":"Block","src":"199431:55:0","statements":[{"expression":{"id":7486,"name":"initialRateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"199456:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7481,"id":7487,"nodeType":"Return","src":"199449:22:0"}]}},{"assignments":[7499],"declarations":[{"constant":false,"id":7499,"mutability":"mutable","name":"currentPointTime","nameLocation":"199597:16:0","nodeType":"VariableDeclaration","scope":7594,"src":"199589:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7498,"name":"uint256","nodeType":"ElementaryTypeName","src":"199589:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7501,"initialValue":{"id":7500,"name":"auctionStartTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"199616:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"199589:43:0"},{"assignments":[7503],"declarations":[{"constant":false,"id":7503,"mutability":"mutable","name":"currentRateBump","nameLocation":"199654:15:0","nodeType":"VariableDeclaration","scope":7594,"src":"199646:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7502,"name":"uint256","nodeType":"ElementaryTypeName","src":"199646:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7505,"initialValue":{"id":7504,"name":"initialRateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"199672:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"199646:41:0"},{"body":{"id":7579,"nodeType":"Block","src":"199741:604:0","statements":[{"assignments":[7511],"declarations":[{"constant":false,"id":7511,"mutability":"mutable","name":"nextRateBump","nameLocation":"199767:12:0","nodeType":"VariableDeclaration","scope":7579,"src":"199759:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7510,"name":"uint256","nodeType":"ElementaryTypeName","src":"199759:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7521,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":7516,"name":"pointsAndTimeDeltas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"199796:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"33","id":7517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"199817:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"199796:23:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":7515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"199789:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes3_$","typeString":"type(bytes3)"},"typeName":{"id":7514,"name":"bytes3","nodeType":"ElementaryTypeName","src":"199789:6:0","typeDescriptions":{}}},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"199789:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes3","typeString":"bytes3"}],"id":7513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"199782:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7512,"name":"uint24","nodeType":"ElementaryTypeName","src":"199782:6:0","typeDescriptions":{}}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"199782:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"VariableDeclarationStatement","src":"199759:62:0"},{"assignments":[7523],"declarations":[{"constant":false,"id":7523,"mutability":"mutable","name":"nextPointTime","nameLocation":"199847:13:0","nodeType":"VariableDeclaration","scope":7579,"src":"199839:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7522,"name":"uint256","nodeType":"ElementaryTypeName","src":"199839:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7536,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7524,"name":"currentPointTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"199863:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"arguments":[{"baseExpression":{"id":7529,"name":"pointsAndTimeDeltas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"199896:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"35","id":7531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"199918:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"199896:24:0","startExpression":{"hexValue":"33","id":7530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"199916:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":7528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"199889:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":7527,"name":"bytes2","nodeType":"ElementaryTypeName","src":"199889:6:0","typeDescriptions":{}}},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"199889:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes2","typeString":"bytes2"}],"id":7526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"199882:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7525,"name":"uint16","nodeType":"ElementaryTypeName","src":"199882:6:0","typeDescriptions":{}}},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"199882:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"199863:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"199839:83:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7537,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"199944:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"199950:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"199944:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7539,"name":"nextPointTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"199963:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"199944:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7564,"nodeType":"IfStatement","src":"199940:230:0","trueBody":{"id":7563,"nodeType":"Block","src":"199978:192:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7541,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"200009:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"200015:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"200009:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7543,"name":"currentPointTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"200027:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200009:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"200008:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7546,"name":"nextRateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"200047:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200008:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7548,"name":"nextPointTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"200063:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7549,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"200079:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"200085:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"200079:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200063:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7552,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"200062:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7553,"name":"currentRateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"200098:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200062:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200008:105:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"200007:107:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7557,"name":"nextPointTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"200118:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7558,"name":"currentPointTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"200134:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200118:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"200117:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200007:144:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7481,"id":7562,"nodeType":"Return","src":"200000:151:0"}]}},{"expression":{"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7565,"name":"currentRateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"200187:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7566,"name":"nextRateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"200205:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200187:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7568,"nodeType":"ExpressionStatement","src":"200187:30:0"},{"expression":{"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7569,"name":"currentPointTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"200235:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7570,"name":"nextPointTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"200254:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200235:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7572,"nodeType":"ExpressionStatement","src":"200235:32:0"},{"expression":{"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7573,"name":"pointsAndTimeDeltas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"200285:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7574,"name":"pointsAndTimeDeltas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"200307:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"200307:23:0","startExpression":{"hexValue":"35","id":7575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"200327:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"src":"200285:45:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7578,"nodeType":"ExpressionStatement","src":"200285:45:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7506,"name":"pointsAndTimeDeltas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"199709:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"199729:6:0","memberName":"length","nodeType":"MemberAccess","src":"199709:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"199738:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"199709:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7580,"nodeType":"WhileStatement","src":"199702:643:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7581,"name":"auctionFinishTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"200366:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7582,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"200386:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"200392:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"200386:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200366:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"200365:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7586,"name":"currentRateBump","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"200405:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200365:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7588,"name":"auctionFinishTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"200424:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7589,"name":"currentPointTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"200444:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200424:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"200423:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"200365:96:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7481,"id":7593,"nodeType":"Return","src":"200358:103:0"}]}]},"documentation":{"id":7469,"nodeType":"StructuredDocumentation","src":"198445:736:0","text":" @dev Calculates auction price bump. Auction is represented as a piecewise linear function with `N` points.\n Each point is represented as a pair of `(rateBump, timeDelta)`, where `rateBump` is the\n rate bump in basis points and `timeDelta` is the time delta in seconds.\n The rate bump is interpolated linearly between the points.\n The last point is assumed to be `(0, auctionDuration)`.\n @param auctionStartTime The time when the auction starts.\n @param auctionFinishTime The time when the auction finishes.\n @param initialRateBump The initial rate bump.\n @param pointsAndTimeDeltas The points and time deltas structure.\n @return The rate bump at the current time."},"id":7596,"implemented":true,"kind":"function","modifiers":[],"name":"_getAuctionBump","nameLocation":"199195:15:0","nodeType":"FunctionDefinition","parameters":{"id":7478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7471,"mutability":"mutable","name":"auctionStartTime","nameLocation":"199219:16:0","nodeType":"VariableDeclaration","scope":7596,"src":"199211:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7470,"name":"uint256","nodeType":"ElementaryTypeName","src":"199211:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7473,"mutability":"mutable","name":"auctionFinishTime","nameLocation":"199245:17:0","nodeType":"VariableDeclaration","scope":7596,"src":"199237:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7472,"name":"uint256","nodeType":"ElementaryTypeName","src":"199237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7475,"mutability":"mutable","name":"initialRateBump","nameLocation":"199272:15:0","nodeType":"VariableDeclaration","scope":7596,"src":"199264:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7474,"name":"uint256","nodeType":"ElementaryTypeName","src":"199264:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7477,"mutability":"mutable","name":"pointsAndTimeDeltas","nameLocation":"199304:19:0","nodeType":"VariableDeclaration","scope":7596,"src":"199289:34:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7476,"name":"bytes","nodeType":"ElementaryTypeName","src":"199289:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"199210:114:0"},"returnParameters":{"id":7481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7596,"src":"199347:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7479,"name":"uint256","nodeType":"ElementaryTypeName","src":"199347:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"199346:9:0"},"scope":7597,"src":"199186:1292:0","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":10322,"src":"193016:7464:0","usedErrors":[7084],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"UniERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":7598,"nodeType":"StructuredDocumentation","src":"200569:253:0","text":" @title UniERC20\n @dev Library to abstract the handling of ETH and ERC20 tokens, enabling unified interaction with both. It allows usage of ETH as ERC20.\n Utilizes SafeERC20 for ERC20 interactions and provides additional utility functions."},"fullyImplemented":true,"id":8035,"linearizedBaseContracts":[8035],"name":"UniERC20","nameLocation":"200831:8:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7602,"libraryName":{"id":7599,"name":"SafeERC20","nameLocations":["200852:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":7075,"src":"200852:9:0"},"nodeType":"UsingForDirective","src":"200846:27:0","typeName":{"id":7601,"nodeType":"UserDefinedTypeName","pathNode":{"id":7600,"name":"IERC20","nameLocations":["200866:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"200866:6:0"},"referencedDeclaration":379,"src":"200866:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}},{"errorSelector":"f4d678b8","id":7604,"name":"InsufficientBalance","nameLocation":"200885:19:0","nodeType":"ErrorDefinition","parameters":{"id":7603,"nodeType":"ParameterList","parameters":[],"src":"200904:2:0"},"src":"200879:28:0"},{"errorSelector":"4ca17a99","id":7606,"name":"ApproveCalledOnETH","nameLocation":"200918:18:0","nodeType":"ErrorDefinition","parameters":{"id":7605,"nodeType":"ParameterList","parameters":[],"src":"200936:2:0"},"src":"200912:27:0"},{"errorSelector":"e2f844a0","id":7608,"name":"NotEnoughValue","nameLocation":"200950:14:0","nodeType":"ErrorDefinition","parameters":{"id":7607,"nodeType":"ParameterList","parameters":[],"src":"200964:2:0"},"src":"200944:23:0"},{"errorSelector":"2a9c363d","id":7610,"name":"FromIsNotSender","nameLocation":"200978:15:0","nodeType":"ErrorDefinition","parameters":{"id":7609,"nodeType":"ParameterList","parameters":[],"src":"200993:2:0"},"src":"200972:24:0"},{"errorSelector":"57ca390a","id":7612,"name":"ToIsNotThis","nameLocation":"201007:11:0","nodeType":"ErrorDefinition","parameters":{"id":7611,"nodeType":"ParameterList","parameters":[],"src":"201018:2:0"},"src":"201001:20:0"},{"errorSelector":"b12d13eb","id":7614,"name":"ETHTransferFailed","nameLocation":"201032:17:0","nodeType":"ErrorDefinition","parameters":{"id":7613,"nodeType":"ParameterList","parameters":[],"src":"201049:2:0"},"src":"201026:26:0"},{"constant":true,"id":7617,"mutability":"constant","name":"_RAW_CALL_GAS_LIMIT","nameLocation":"201083:19:0","nodeType":"VariableDeclaration","scope":8035,"src":"201058:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7615,"name":"uint256","nodeType":"ElementaryTypeName","src":"201058:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35303030","id":7616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"201105:4:0","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"visibility":"private"},{"constant":true,"id":7623,"mutability":"constant","name":"_ETH_ADDRESS","nameLocation":"201139:12:0","nodeType":"VariableDeclaration","scope":8035,"src":"201115:89:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":7619,"nodeType":"UserDefinedTypeName","pathNode":{"id":7618,"name":"IERC20","nameLocations":["201115:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"201115:6:0"},"referencedDeclaration":379,"src":"201115:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"value":{"arguments":[{"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":7621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"201161:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7620,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"201154:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$379_$","typeString":"type(contract IERC20)"}},"id":7622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"201154:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"private"},{"constant":true,"id":7632,"mutability":"constant","name":"_ZERO_ADDRESS","nameLocation":"201234:13:0","nodeType":"VariableDeclaration","scope":8035,"src":"201210:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":7625,"nodeType":"UserDefinedTypeName","pathNode":{"id":7624,"name":"IERC20","nameLocations":["201210:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"201210:6:0"},"referencedDeclaration":379,"src":"201210:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"value":{"arguments":[{"arguments":[{"hexValue":"30","id":7629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"201265:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"201257:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7627,"name":"address","nodeType":"ElementaryTypeName","src":"201257:7:0","typeDescriptions":{}}},"id":7630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"201257:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7626,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"201250:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$379_$","typeString":"type(contract IERC20)"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"201250:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"private"},{"body":{"id":7650,"nodeType":"Block","src":"201506:73:0","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7641,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"201524:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7642,"name":"_ZERO_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"201533:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"src":"201524:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7644,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"201550:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7645,"name":"_ETH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"201559:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"src":"201550:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"201524:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"201523:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7640,"id":7649,"nodeType":"Return","src":"201516:56:0"}]},"documentation":{"id":7633,"nodeType":"StructuredDocumentation","src":"201275:168:0","text":" @dev Determines if the specified token is ETH.\n @param token The token to check.\n @return bool True if the token is ETH, false otherwise."},"id":7651,"implemented":true,"kind":"function","modifiers":[],"name":"isETH","nameLocation":"201457:5:0","nodeType":"FunctionDefinition","parameters":{"id":7637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7636,"mutability":"mutable","name":"token","nameLocation":"201470:5:0","nodeType":"VariableDeclaration","scope":7651,"src":"201463:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":7635,"nodeType":"UserDefinedTypeName","pathNode":{"id":7634,"name":"IERC20","nameLocations":["201463:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"201463:6:0"},"referencedDeclaration":379,"src":"201463:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"201462:14:0"},"returnParameters":{"id":7640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7651,"src":"201500:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7638,"name":"bool","nodeType":"ElementaryTypeName","src":"201500:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"201499:6:0"},"scope":8035,"src":"201448:131:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7676,"nodeType":"Block","src":"201939:143:0","statements":[{"condition":{"arguments":[{"id":7663,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7655,"src":"201959:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}],"id":7662,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"201953:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$379_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"201953:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7674,"nodeType":"Block","src":"202020:56:0","statements":[{"expression":{"arguments":[{"id":7671,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"202057:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7669,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7655,"src":"202041:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"202047:9:0","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":336,"src":"202041:15:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"202041:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7661,"id":7673,"nodeType":"Return","src":"202034:31:0"}]},"id":7675,"nodeType":"IfStatement","src":"201949:127:0","trueBody":{"id":7668,"nodeType":"Block","src":"201967:47:0","statements":[{"expression":{"expression":{"id":7665,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"201988:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"201996:7:0","memberName":"balance","nodeType":"MemberAccess","src":"201988:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7661,"id":7667,"nodeType":"Return","src":"201981:22:0"}]}}]},"documentation":{"id":7652,"nodeType":"StructuredDocumentation","src":"201585:264:0","text":" @dev Retrieves the balance of the specified token for an account.\n @param token The token to query the balance of.\n @param account The address of the account.\n @return uint256 The balance of the token for the specified account."},"id":7677,"implemented":true,"kind":"function","modifiers":[],"name":"uniBalanceOf","nameLocation":"201863:12:0","nodeType":"FunctionDefinition","parameters":{"id":7658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7655,"mutability":"mutable","name":"token","nameLocation":"201883:5:0","nodeType":"VariableDeclaration","scope":7677,"src":"201876:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":7654,"nodeType":"UserDefinedTypeName","pathNode":{"id":7653,"name":"IERC20","nameLocations":["201876:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"201876:6:0"},"referencedDeclaration":379,"src":"201876:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7657,"mutability":"mutable","name":"account","nameLocation":"201898:7:0","nodeType":"VariableDeclaration","scope":7677,"src":"201890:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7656,"name":"address","nodeType":"ElementaryTypeName","src":"201890:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"201875:31:0"},"returnParameters":{"id":7661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7677,"src":"201930:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7659,"name":"uint256","nodeType":"ElementaryTypeName","src":"201930:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"201929:9:0"},"scope":8035,"src":"201854:228:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7733,"nodeType":"Block","src":"202493:454:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"202507:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"202516:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"202507:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7732,"nodeType":"IfStatement","src":"202503:438:0","trueBody":{"id":7731,"nodeType":"Block","src":"202519:422:0","statements":[{"condition":{"arguments":[{"id":7692,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"202543:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}],"id":7691,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"202537:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$379_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"202537:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7729,"nodeType":"Block","src":"202868:63:0","statements":[{"expression":{"arguments":[{"id":7725,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"202905:2:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7726,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"202909:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7722,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"202886:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"202892:12:0","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"202886:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"202886:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7728,"nodeType":"ExpressionStatement","src":"202886:30:0"}]},"id":7730,"nodeType":"IfStatement","src":"202533:398:0","trueBody":{"id":7721,"nodeType":"Block","src":"202551:311:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7696,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"202581:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_UniERC20_$8035","typeString":"library UniERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniERC20_$8035","typeString":"library UniERC20"}],"id":7695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"202573:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7694,"name":"address","nodeType":"ElementaryTypeName","src":"202573:7:0","typeDescriptions":{}}},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"202573:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"202587:7:0","memberName":"balance","nodeType":"MemberAccess","src":"202573:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7699,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"202597:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"202573:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7704,"nodeType":"IfStatement","src":"202569:64:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7701,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"202612:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"202612:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7703,"nodeType":"RevertStatement","src":"202605:28:0"}},{"assignments":[7706,null],"declarations":[{"constant":false,"id":7706,"mutability":"mutable","name":"success","nameLocation":"202724:7:0","nodeType":"VariableDeclaration","scope":7721,"src":"202719:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7705,"name":"bool","nodeType":"ElementaryTypeName","src":"202719:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7714,"initialValue":{"arguments":[{"hexValue":"","id":7712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"202786:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7707,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"202737:2:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"202740:4:0","memberName":"call","nodeType":"MemberAccess","src":"202737:7:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":7709,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"202752:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7710,"name":"_RAW_CALL_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"202765:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"202737:48:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"202737:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"202718:71:0"},{"condition":{"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"202811:8:0","subExpression":{"id":7715,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"202812:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7720,"nodeType":"IfStatement","src":"202807:40:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7717,"name":"ETHTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"202828:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"202828:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7719,"nodeType":"RevertStatement","src":"202821:26:0"}}]}}]}}]},"documentation":{"id":7678,"nodeType":"StructuredDocumentation","src":"202088:290:0","text":" @dev Transfers a specified amount of the token to a given address.\n Note: Does nothing if the amount is zero.\n @param token The token to transfer.\n @param to The address to transfer the token to.\n @param amount The amount of the token to transfer."},"id":7734,"implemented":true,"kind":"function","modifiers":[],"name":"uniTransfer","nameLocation":"202392:11:0","nodeType":"FunctionDefinition","parameters":{"id":7686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7681,"mutability":"mutable","name":"token","nameLocation":"202420:5:0","nodeType":"VariableDeclaration","scope":7734,"src":"202413:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":7680,"nodeType":"UserDefinedTypeName","pathNode":{"id":7679,"name":"IERC20","nameLocations":["202413:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"202413:6:0"},"referencedDeclaration":379,"src":"202413:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7683,"mutability":"mutable","name":"to","nameLocation":"202451:2:0","nodeType":"VariableDeclaration","scope":7734,"src":"202435:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7682,"name":"address","nodeType":"ElementaryTypeName","src":"202435:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":7685,"mutability":"mutable","name":"amount","nameLocation":"202471:6:0","nodeType":"VariableDeclaration","scope":7734,"src":"202463:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7684,"name":"uint256","nodeType":"ElementaryTypeName","src":"202463:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"202403:80:0"},"returnParameters":{"id":7687,"nodeType":"ParameterList","parameters":[],"src":"202493:0:0"},"scope":8035,"src":"202383:564:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7818,"nodeType":"Block","src":"203452:777:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7747,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"203466:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"203475:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"203466:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7817,"nodeType":"IfStatement","src":"203462:761:0","trueBody":{"id":7816,"nodeType":"Block","src":"203478:745:0","statements":[{"condition":{"arguments":[{"id":7751,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"203502:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}],"id":7750,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"203496:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$379_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"203496:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7814,"nodeType":"Block","src":"204140:73:0","statements":[{"expression":{"arguments":[{"id":7809,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"204181:4:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7810,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7742,"src":"204187:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7811,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"204191:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7806,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"204158:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"204164:16:0","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":6678,"src":"204158:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"204158:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7813,"nodeType":"ExpressionStatement","src":"204158:40:0"}]},"id":7815,"nodeType":"IfStatement","src":"203492:721:0","trueBody":{"id":7805,"nodeType":"Block","src":"203510:624:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7753,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"203532:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"203536:5:0","memberName":"value","nodeType":"MemberAccess","src":"203532:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7755,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"203544:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"203532:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7760,"nodeType":"IfStatement","src":"203528:47:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7757,"name":"NotEnoughValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"203559:14:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"203559:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7759,"nodeType":"RevertStatement","src":"203552:23:0"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7761,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"203597:4:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7762,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"203605:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"203609:6:0","memberName":"sender","nodeType":"MemberAccess","src":"203605:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"203597:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7768,"nodeType":"IfStatement","src":"203593:48:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7765,"name":"FromIsNotSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"203624:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"203624:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7767,"nodeType":"RevertStatement","src":"203617:24:0"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7769,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7742,"src":"203663:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":7772,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"203677:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_UniERC20_$8035","typeString":"library UniERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniERC20_$8035","typeString":"library UniERC20"}],"id":7771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"203669:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7770,"name":"address","nodeType":"ElementaryTypeName","src":"203669:7:0","typeDescriptions":{}}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"203669:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"203663:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7778,"nodeType":"IfStatement","src":"203659:45:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7775,"name":"ToIsNotThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"203691:11:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"203691:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7777,"nodeType":"RevertStatement","src":"203684:20:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7779,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"203726:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"203730:5:0","memberName":"value","nodeType":"MemberAccess","src":"203726:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7781,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"203738:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"203726:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7804,"nodeType":"IfStatement","src":"203722:398:0","trueBody":{"id":7803,"nodeType":"Block","src":"203746:374:0","statements":[{"id":7802,"nodeType":"UncheckedBlock","src":"203817:285:0","statements":[{"assignments":[7784,null],"declarations":[{"constant":false,"id":7784,"mutability":"mutable","name":"success","nameLocation":"203934:7:0","nodeType":"VariableDeclaration","scope":7802,"src":"203929:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7783,"name":"bool","nodeType":"ElementaryTypeName","src":"203929:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7795,"initialValue":{"arguments":[{"hexValue":"","id":7793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"204010:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"203947:4:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"203952:4:0","memberName":"call","nodeType":"MemberAccess","src":"203947:9:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7787,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"203964:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"203968:5:0","memberName":"value","nodeType":"MemberAccess","src":"203964:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7789,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"203976:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"203964:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7791,"name":"_RAW_CALL_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"203989:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"203947:62:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"203947:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"203928:85:0"},{"condition":{"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"204043:8:0","subExpression":{"id":7796,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"204044:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7801,"nodeType":"IfStatement","src":"204039:40:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7798,"name":"ETHTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"204060:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"204060:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7800,"nodeType":"RevertStatement","src":"204053:26:0"}}]}]}}]}}]}}]},"documentation":{"id":7735,"nodeType":"StructuredDocumentation","src":"202953:358:0","text":" @dev Transfers a specified amount of the token from one address to another.\n Note: Does nothing if the amount is zero.\n @param token The token to transfer.\n @param from The address to transfer the token from.\n @param to The address to transfer the token to.\n @param amount The amount of the token to transfer."},"id":7819,"implemented":true,"kind":"function","modifiers":[],"name":"uniTransferFrom","nameLocation":"203325:15:0","nodeType":"FunctionDefinition","parameters":{"id":7745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7738,"mutability":"mutable","name":"token","nameLocation":"203357:5:0","nodeType":"VariableDeclaration","scope":7819,"src":"203350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":7737,"nodeType":"UserDefinedTypeName","pathNode":{"id":7736,"name":"IERC20","nameLocations":["203350:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"203350:6:0"},"referencedDeclaration":379,"src":"203350:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7740,"mutability":"mutable","name":"from","nameLocation":"203388:4:0","nodeType":"VariableDeclaration","scope":7819,"src":"203372:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7739,"name":"address","nodeType":"ElementaryTypeName","src":"203372:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":7742,"mutability":"mutable","name":"to","nameLocation":"203410:2:0","nodeType":"VariableDeclaration","scope":7819,"src":"203402:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7741,"name":"address","nodeType":"ElementaryTypeName","src":"203402:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7744,"mutability":"mutable","name":"amount","nameLocation":"203430:6:0","nodeType":"VariableDeclaration","scope":7819,"src":"203422:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7743,"name":"uint256","nodeType":"ElementaryTypeName","src":"203422:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203340:102:0"},"returnParameters":{"id":7746,"nodeType":"ParameterList","parameters":[],"src":"203452:0:0"},"scope":8035,"src":"203316:913:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7838,"nodeType":"Block","src":"204503:114:0","statements":[{"expression":{"arguments":[{"id":7829,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"204531:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"expression":{"expression":{"id":7830,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"204538:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$3474_$","typeString":"type(contract IERC20Metadata)"}},"id":7831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"204553:6:0","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":3467,"src":"204538:21:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_string_memory_ptr_$","typeString":"function IERC20Metadata.symbol() view returns (string memory)"}},"id":7832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"204560:8:0","memberName":"selector","nodeType":"MemberAccess","src":"204538:30:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"expression":{"expression":{"id":7833,"name":"IERC20MetadataUppercase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"204570:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20MetadataUppercase_$393_$","typeString":"type(contract IERC20MetadataUppercase)"}},"id":7834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"204594:6:0","memberName":"SYMBOL","nodeType":"MemberAccess","referencedDeclaration":392,"src":"204570:30:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_string_memory_ptr_$","typeString":"function IERC20MetadataUppercase.SYMBOL() view returns (string memory)"}},"id":7835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"204601:8:0","memberName":"selector","nodeType":"MemberAccess","src":"204570:39:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":7828,"name":"_uniDecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8034,"src":"204520:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$379_$_t_bytes4_$_t_bytes4_$returns$_t_string_memory_ptr_$","typeString":"function (contract IERC20,bytes4,bytes4) view returns (string memory)"}},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"204520:90:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7827,"id":7837,"nodeType":"Return","src":"204513:97:0"}]},"documentation":{"id":7820,"nodeType":"StructuredDocumentation","src":"204235:192:0","text":" @dev Retrieves the symbol from ERC20 metadata of the specified token.\n @param token The token to retrieve the symbol of.\n @return string The symbol of the token."},"id":7839,"implemented":true,"kind":"function","modifiers":[],"name":"uniSymbol","nameLocation":"204441:9:0","nodeType":"FunctionDefinition","parameters":{"id":7824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7823,"mutability":"mutable","name":"token","nameLocation":"204458:5:0","nodeType":"VariableDeclaration","scope":7839,"src":"204451:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":7822,"nodeType":"UserDefinedTypeName","pathNode":{"id":7821,"name":"IERC20","nameLocations":["204451:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"204451:6:0"},"referencedDeclaration":379,"src":"204451:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"204450:14:0"},"returnParameters":{"id":7827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7839,"src":"204488:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7825,"name":"string","nodeType":"ElementaryTypeName","src":"204488:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"204487:15:0"},"scope":8035,"src":"204432:185:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7858,"nodeType":"Block","src":"204883:110:0","statements":[{"expression":{"arguments":[{"id":7849,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"204911:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"expression":{"expression":{"id":7850,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"204918:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$3474_$","typeString":"type(contract IERC20Metadata)"}},"id":7851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"204933:4:0","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":3461,"src":"204918:19:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_string_memory_ptr_$","typeString":"function IERC20Metadata.name() view returns (string memory)"}},"id":7852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"204938:8:0","memberName":"selector","nodeType":"MemberAccess","src":"204918:28:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"expression":{"expression":{"id":7853,"name":"IERC20MetadataUppercase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"204948:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20MetadataUppercase_$393_$","typeString":"type(contract IERC20MetadataUppercase)"}},"id":7854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"204972:4:0","memberName":"NAME","nodeType":"MemberAccess","referencedDeclaration":386,"src":"204948:28:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_string_memory_ptr_$","typeString":"function IERC20MetadataUppercase.NAME() view returns (string memory)"}},"id":7855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"204977:8:0","memberName":"selector","nodeType":"MemberAccess","src":"204948:37:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":7848,"name":"_uniDecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8034,"src":"204900:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$379_$_t_bytes4_$_t_bytes4_$returns$_t_string_memory_ptr_$","typeString":"function (contract IERC20,bytes4,bytes4) view returns (string memory)"}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"204900:86:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7847,"id":7857,"nodeType":"Return","src":"204893:93:0"}]},"documentation":{"id":7840,"nodeType":"StructuredDocumentation","src":"204623:186:0","text":" @dev Retrieves the name from ERC20 metadata of the specified token.\n @param token The token to retrieve the name of.\n @return string The name of the token."},"id":7859,"implemented":true,"kind":"function","modifiers":[],"name":"uniName","nameLocation":"204823:7:0","nodeType":"FunctionDefinition","parameters":{"id":7844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7843,"mutability":"mutable","name":"token","nameLocation":"204838:5:0","nodeType":"VariableDeclaration","scope":7859,"src":"204831:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":7842,"nodeType":"UserDefinedTypeName","pathNode":{"id":7841,"name":"IERC20","nameLocations":["204831:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"204831:6:0"},"referencedDeclaration":379,"src":"204831:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"204830:14:0"},"returnParameters":{"id":7847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7859,"src":"204868:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7845,"name":"string","nodeType":"ElementaryTypeName","src":"204868:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"204867:15:0"},"scope":8035,"src":"204814:179:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7884,"nodeType":"Block","src":"205384:103:0","statements":[{"condition":{"arguments":[{"id":7871,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"205404:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}],"id":7870,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"205398:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$379_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"205398:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7876,"nodeType":"IfStatement","src":"205394:45:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7873,"name":"ApproveCalledOnETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"205419:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"205419:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7875,"nodeType":"RevertStatement","src":"205412:27:0"}},{"expression":{"arguments":[{"id":7880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7865,"src":"205469:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7881,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"205473:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7877,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"205450:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"205456:12:0","memberName":"forceApprove","nodeType":"MemberAccess","referencedDeclaration":6792,"src":"205450:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"205450:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7883,"nodeType":"ExpressionStatement","src":"205450:30:0"}]},"documentation":{"id":7860,"nodeType":"StructuredDocumentation","src":"204999:279:0","text":" @dev forceApprove the specified amount of the token to a given address.\n Reverts if the token is ETH.\n @param token The token to approve.\n @param to The address to approve the token to.\n @param amount The amount of the token to approve."},"id":7885,"implemented":true,"kind":"function","modifiers":[],"name":"uniApprove","nameLocation":"205292:10:0","nodeType":"FunctionDefinition","parameters":{"id":7868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7863,"mutability":"mutable","name":"token","nameLocation":"205319:5:0","nodeType":"VariableDeclaration","scope":7885,"src":"205312:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":7862,"nodeType":"UserDefinedTypeName","pathNode":{"id":7861,"name":"IERC20","nameLocations":["205312:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"205312:6:0"},"referencedDeclaration":379,"src":"205312:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7865,"mutability":"mutable","name":"to","nameLocation":"205342:2:0","nodeType":"VariableDeclaration","scope":7885,"src":"205334:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7864,"name":"address","nodeType":"ElementaryTypeName","src":"205334:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7867,"mutability":"mutable","name":"amount","nameLocation":"205362:6:0","nodeType":"VariableDeclaration","scope":7885,"src":"205354:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7866,"name":"uint256","nodeType":"ElementaryTypeName","src":"205354:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"205302:72:0"},"returnParameters":{"id":7869,"nodeType":"ParameterList","parameters":[],"src":"205384:0:0"},"scope":8035,"src":"205283:204:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8033,"nodeType":"Block","src":"206174:1710:0","statements":[{"condition":{"arguments":[{"id":7899,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"206194:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}],"id":7898,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"206188:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$379_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"206188:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7904,"nodeType":"IfStatement","src":"206184:55:0","trueBody":{"id":7903,"nodeType":"Block","src":"206202:37:0","statements":[{"expression":{"hexValue":"455448","id":7901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"206223:5:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4","typeString":"literal_string \"ETH\""},"value":"ETH"},"functionReturnParameters":7897,"id":7902,"nodeType":"Return","src":"206216:12:0"}]}},{"assignments":[7906,7908],"declarations":[{"constant":false,"id":7906,"mutability":"mutable","name":"success","nameLocation":"206255:7:0","nodeType":"VariableDeclaration","scope":8033,"src":"206250:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7905,"name":"bool","nodeType":"ElementaryTypeName","src":"206250:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7908,"mutability":"mutable","name":"data","nameLocation":"206277:4:0","nodeType":"VariableDeclaration","scope":8033,"src":"206264:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7907,"name":"bytes","nodeType":"ElementaryTypeName","src":"206264:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7921,"initialValue":{"arguments":[{"arguments":[{"id":7918,"name":"lowerCaseSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"206359:17:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7916,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"206336:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"206340:18:0","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"206336:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"206336:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":7911,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"206293:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}],"id":7910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"206285:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7909,"name":"address","nodeType":"ElementaryTypeName","src":"206285:7:0","typeDescriptions":{}}},"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"206285:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"206300:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"206285:25:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":7915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"3230303030","id":7914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"206316:5:0","typeDescriptions":{"typeIdentifier":"t_rational_20000_by_1","typeString":"int_const 20000"},"value":"20000"}],"src":"206285:37:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"206285:102:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"206249:138:0"},{"condition":{"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"206401:8:0","subExpression":{"id":7922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"206402:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7942,"nodeType":"IfStatement","src":"206397:137:0","trueBody":{"id":7941,"nodeType":"Block","src":"206411:123:0","statements":[{"expression":{"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7924,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"206426:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7925,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"206435:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":7926,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"206425:15:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":7936,"name":"upperCaseSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"206504:17:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7934,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"206481:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"206485:18:0","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"206481:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":7937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"206481:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":7929,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"206451:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}],"id":7928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"206443:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7927,"name":"address","nodeType":"ElementaryTypeName","src":"206443:7:0","typeDescriptions":{}}},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"206443:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"206458:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"206443:25:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"3230303030","id":7932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"206474:5:0","typeDescriptions":{"typeIdentifier":"t_rational_20000_by_1","typeString":"int_const 20000"},"value":"20000"}],"src":"206443:37:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"206443:80:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"206425:98:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7940,"nodeType":"ExpressionStatement","src":"206425:98:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7943,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"206548:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7944,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"206559:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"206564:6:0","memberName":"length","nodeType":"MemberAccess","src":"206559:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783430","id":7946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"206574:4:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"206559:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"206548:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7979,"nodeType":"IfStatement","src":"206544:811:0","trueBody":{"id":7978,"nodeType":"Block","src":"206580:775:0","statements":[{"assignments":[7950,7952],"declarations":[{"constant":false,"id":7950,"mutability":"mutable","name":"offset","nameLocation":"206603:6:0","nodeType":"VariableDeclaration","scope":7978,"src":"206595:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7949,"name":"uint256","nodeType":"ElementaryTypeName","src":"206595:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7952,"mutability":"mutable","name":"len","nameLocation":"206619:3:0","nodeType":"VariableDeclaration","scope":7978,"src":"206611:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7951,"name":"uint256","nodeType":"ElementaryTypeName","src":"206611:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7962,"initialValue":{"arguments":[{"id":7955,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"206637:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":7957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"206644:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7956,"name":"uint256","nodeType":"ElementaryTypeName","src":"206644:7:0","typeDescriptions":{}}},{"id":7959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"206653:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7958,"name":"uint256","nodeType":"ElementaryTypeName","src":"206653:7:0","typeDescriptions":{}}}],"id":7960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"206643:18:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(uint256))"}],"expression":{"id":7953,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"206626:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"206630:6:0","memberName":"decode","nodeType":"MemberAccess","src":"206626:10:0","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"206626:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"206594:68:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7963,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"207104:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783230","id":7964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"207114:4:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"207104:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7966,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"207122:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"207127:6:0","memberName":"length","nodeType":"MemberAccess","src":"207122:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30783430","id":7968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"207137:4:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7969,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7952,"src":"207144:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"207137:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"207122:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"207104:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7977,"nodeType":"IfStatement","src":"207100:245:0","trueBody":{"id":7976,"nodeType":"Block","src":"207149:196:0","statements":[{"AST":{"nativeSrc":"207192:108:0","nodeType":"YulBlock","src":"207192:108:0","statements":[{"nativeSrc":"207257:25:0","nodeType":"YulAssignment","src":"207257:25:0","value":{"arguments":[{"name":"data","nativeSrc":"207271:4:0","nodeType":"YulIdentifier","src":"207271:4:0"},{"kind":"number","nativeSrc":"207277:4:0","nodeType":"YulLiteral","src":"207277:4:0","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"207267:3:0","nodeType":"YulIdentifier","src":"207267:3:0"},"nativeSrc":"207267:15:0","nodeType":"YulFunctionCall","src":"207267:15:0"},"variableNames":[{"name":"result","nativeSrc":"207257:6:0","nodeType":"YulIdentifier","src":"207257:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7908,"isOffset":false,"isSlot":false,"src":"207271:4:0","valueSize":1},{"declaration":7896,"isOffset":false,"isSlot":false,"src":"207257:6:0","valueSize":1}],"flags":["memory-safe"],"id":7973,"nodeType":"InlineAssembly","src":"207167:133:0"},{"expression":{"id":7974,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"207324:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7897,"id":7975,"nodeType":"Return","src":"207317:13:0"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7980,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"207368:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7981,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"207379:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"207384:6:0","memberName":"length","nodeType":"MemberAccess","src":"207379:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":7983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"207394:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"207379:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"207368:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8024,"nodeType":"IfStatement","src":"207364:464:0","trueBody":{"id":8023,"nodeType":"Block","src":"207398:430:0","statements":[{"assignments":[7987],"declarations":[{"constant":false,"id":7987,"mutability":"mutable","name":"len","nameLocation":"207420:3:0","nodeType":"VariableDeclaration","scope":8023,"src":"207412:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7986,"name":"uint256","nodeType":"ElementaryTypeName","src":"207412:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7989,"initialValue":{"hexValue":"30","id":7988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"207426:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"207412:15:0"},{"body":{"id":8010,"nodeType":"Block","src":"207509:88:0","statements":[{"id":8009,"nodeType":"UncheckedBlock","src":"207527:56:0","statements":[{"expression":{"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"207559:5:0","subExpression":{"id":8006,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"207559:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8008,"nodeType":"ExpressionStatement","src":"207559:5:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7990,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"207448:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7991,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"207454:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"207459:6:0","memberName":"length","nodeType":"MemberAccess","src":"207454:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"207448:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7994,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"207469:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7996,"indexExpression":{"id":7995,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"207474:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"207469:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":7997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"207482:4:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"207469:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"207448:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8000,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"207490:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8002,"indexExpression":{"id":8001,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"207495:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"207490:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30783745","id":8003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"207503:4:0","typeDescriptions":{"typeIdentifier":"t_rational_126_by_1","typeString":"int_const 126"},"value":"0x7E"},"src":"207490:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"207448:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8011,"nodeType":"WhileStatement","src":"207441:156:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8012,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"207615:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"207621:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"207615:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8022,"nodeType":"IfStatement","src":"207611:207:0","trueBody":{"id":8021,"nodeType":"Block","src":"207624:194:0","statements":[{"AST":{"nativeSrc":"207667:100:0","nodeType":"YulBlock","src":"207667:100:0","statements":[{"expression":{"arguments":[{"name":"data","nativeSrc":"207739:4:0","nodeType":"YulIdentifier","src":"207739:4:0"},{"name":"len","nativeSrc":"207745:3:0","nodeType":"YulIdentifier","src":"207745:3:0"}],"functionName":{"name":"mstore","nativeSrc":"207732:6:0","nodeType":"YulIdentifier","src":"207732:6:0"},"nativeSrc":"207732:17:0","nodeType":"YulFunctionCall","src":"207732:17:0"},"nativeSrc":"207732:17:0","nodeType":"YulExpressionStatement","src":"207732:17:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":7908,"isOffset":false,"isSlot":false,"src":"207739:4:0","valueSize":1},{"declaration":7987,"isOffset":false,"isSlot":false,"src":"207745:3:0","valueSize":1}],"flags":["memory-safe"],"id":8015,"nodeType":"InlineAssembly","src":"207642:125:0"},{"expression":{"arguments":[{"id":8018,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"207798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"207791:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8016,"name":"string","nodeType":"ElementaryTypeName","src":"207791:6:0","typeDescriptions":{}}},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"207791:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7897,"id":8020,"nodeType":"Return","src":"207784:19:0"}]}}]}},{"expression":{"arguments":[{"arguments":[{"id":8029,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"207870:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}],"id":8028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"207862:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8027,"name":"address","nodeType":"ElementaryTypeName","src":"207862:7:0","typeDescriptions":{}}},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"207862:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8025,"name":"StringUtil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"207845:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringUtil_$2883_$","typeString":"type(library StringUtil)"}},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"207856:5:0","memberName":"toHex","nodeType":"MemberAccess","referencedDeclaration":2872,"src":"207845:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":8031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"207845:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7897,"id":8032,"nodeType":"Return","src":"207838:39:0"}]},"documentation":{"id":7886,"nodeType":"StructuredDocumentation","src":"205493:516:0","text":" @dev Internal function to decode token metadata (name or symbol).\n 20K gas is provided to account for possible implementations of name/symbol\n (token implementation might be behind proxy or store the value in storage)\n @param token The token to decode metadata for.\n @param lowerCaseSelector The selector for the lowercase metadata function.\n @param upperCaseSelector The selector for the uppercase metadata function.\n @return result The decoded metadata value."},"id":8034,"implemented":true,"kind":"function","modifiers":[],"name":"_uniDecode","nameLocation":"206023:10:0","nodeType":"FunctionDefinition","parameters":{"id":7894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7889,"mutability":"mutable","name":"token","nameLocation":"206050:5:0","nodeType":"VariableDeclaration","scope":8034,"src":"206043:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":7888,"nodeType":"UserDefinedTypeName","pathNode":{"id":7887,"name":"IERC20","nameLocations":["206043:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"206043:6:0"},"referencedDeclaration":379,"src":"206043:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7891,"mutability":"mutable","name":"lowerCaseSelector","nameLocation":"206072:17:0","nodeType":"VariableDeclaration","scope":8034,"src":"206065:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7890,"name":"bytes4","nodeType":"ElementaryTypeName","src":"206065:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":7893,"mutability":"mutable","name":"upperCaseSelector","nameLocation":"206106:17:0","nodeType":"VariableDeclaration","scope":8034,"src":"206099:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7892,"name":"bytes4","nodeType":"ElementaryTypeName","src":"206099:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"206033:96:0"},"returnParameters":{"id":7897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7896,"mutability":"mutable","name":"result","nameLocation":"206166:6:0","nodeType":"VariableDeclaration","scope":8034,"src":"206152:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7895,"name":"string","nodeType":"ElementaryTypeName","src":"206152:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"206151:22:0"},"scope":8035,"src":"206014:1870:0","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":10322,"src":"200823:7063:0","usedErrors":[7604,7606,7608,7610,7612,7614],"usedEvents":[]},{"abstract":true,"baseContracts":[{"baseName":{"id":8037,"name":"IBaseEscrow","nameLocations":["208236:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":4272,"src":"208236:11:0"},"id":8038,"nodeType":"InheritanceSpecifier","src":"208236:11:0"}],"canonicalName":"BaseEscrow","contractDependencies":[],"contractKind":"contract","documentation":{"id":8036,"nodeType":"StructuredDocumentation","src":"207948:255:0","text":" @title Base abstract Escrow contract for cross-chain atomic swap.\n @dev {IBaseEscrow-withdraw}, {IBaseEscrow-cancel} and _validateImmutables functions must be implemented in the derived contracts.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":8260,"linearizedBaseContracts":[8260,4272],"name":"BaseEscrow","nameLocation":"208222:10:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8042,"libraryName":{"id":8039,"name":"AddressLib","nameLocations":["208260:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":102,"src":"208260:10:0"},"nodeType":"UsingForDirective","src":"208254:29:0","typeName":{"id":8041,"nodeType":"UserDefinedTypeName","pathNode":{"id":8040,"name":"Address","nameLocations":["208275:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"208275:7:0"},"referencedDeclaration":3,"src":"208275:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}},{"global":false,"id":8046,"libraryName":{"id":8043,"name":"SafeERC20","nameLocations":["208294:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":7075,"src":"208294:9:0"},"nodeType":"UsingForDirective","src":"208288:27:0","typeName":{"id":8045,"nodeType":"UserDefinedTypeName","pathNode":{"id":8044,"name":"IERC20","nameLocations":["208308:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"208308:6:0"},"referencedDeclaration":379,"src":"208308:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}},{"global":false,"id":8050,"libraryName":{"id":8047,"name":"TimelocksLib","nameLocations":["208326:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"208326:12:0"},"nodeType":"UsingForDirective","src":"208320:33:0","typeName":{"id":8049,"nodeType":"UserDefinedTypeName","pathNode":{"id":8048,"name":"Timelocks","nameLocations":["208343:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"208343:9:0"},"referencedDeclaration":3086,"src":"208343:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}}},{"global":false,"id":8054,"libraryName":{"id":8051,"name":"ImmutablesLib","nameLocations":["208364:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":6199,"src":"208364:13:0"},"nodeType":"UsingForDirective","src":"208358:35:0","typeName":{"id":8053,"nodeType":"UserDefinedTypeName","pathNode":{"id":8052,"name":"Immutables","nameLocations":["208382:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"208382:10:0"},"referencedDeclaration":4207,"src":"208382:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}}},{"baseFunctions":[4238],"constant":false,"documentation":{"id":8055,"nodeType":"StructuredDocumentation","src":"208399:43:0","text":"@notice See {IBaseEscrow-RESCUE_DELAY}."},"functionSelector":"f56cd69c","id":8057,"mutability":"immutable","name":"RESCUE_DELAY","nameLocation":"208472:12:0","nodeType":"VariableDeclaration","scope":8260,"src":"208447:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8056,"name":"uint256","nodeType":"ElementaryTypeName","src":"208447:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[4244],"constant":false,"documentation":{"id":8058,"nodeType":"StructuredDocumentation","src":"208490:38:0","text":"@notice See {IBaseEscrow-FACTORY}."},"functionSelector":"2dd31000","id":8062,"mutability":"immutable","name":"FACTORY","nameLocation":"208558:7:0","nodeType":"VariableDeclaration","scope":8260,"src":"208533:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8059,"name":"address","nodeType":"ElementaryTypeName","src":"208533:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"expression":{"id":8060,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"208568:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"208572:6:0","memberName":"sender","nodeType":"MemberAccess","src":"208568:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":8071,"nodeType":"Block","src":"208617:43:0","statements":[{"expression":{"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8067,"name":"RESCUE_DELAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"208627:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8068,"name":"rescueDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"208642:11:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"208627:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8070,"nodeType":"ExpressionStatement","src":"208627:26:0"}]},"id":8072,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8064,"mutability":"mutable","name":"rescueDelay","nameLocation":"208604:11:0","nodeType":"VariableDeclaration","scope":8072,"src":"208597:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8063,"name":"uint32","nodeType":"ElementaryTypeName","src":"208597:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"208596:20:0"},"returnParameters":{"id":8066,"nodeType":"ParameterList","parameters":[],"src":"208617:0:0"},"scope":8260,"src":"208585:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8089,"nodeType":"Block","src":"208717:92:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8077,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"208731:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"208735:6:0","memberName":"sender","nodeType":"MemberAccess","src":"208731:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":8079,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"208745:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"208756:5:0","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"208745:16:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"208762:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"208745:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"208745:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"208731:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8087,"nodeType":"IfStatement","src":"208727:64:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8084,"name":"InvalidCaller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"208776:13:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"208776:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8086,"nodeType":"RevertStatement","src":"208769:22:0"}},{"id":8088,"nodeType":"PlaceholderStatement","src":"208801:1:0"}]},"id":8090,"name":"onlyTaker","nameLocation":"208675:9:0","nodeType":"ModifierDefinition","parameters":{"id":8076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8075,"mutability":"mutable","name":"immutables","nameLocation":"208705:10:0","nodeType":"VariableDeclaration","scope":8090,"src":"208685:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":8074,"nodeType":"UserDefinedTypeName","pathNode":{"id":8073,"name":"Immutables","nameLocations":["208685:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"208685:10:0"},"referencedDeclaration":4207,"src":"208685:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"208684:32:0"},"src":"208666:143:0","virtual":false,"visibility":"internal"},{"body":{"id":8100,"nodeType":"Block","src":"208884:59:0","statements":[{"expression":{"arguments":[{"id":8096,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8093,"src":"208914:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}],"id":8095,"name":"_validateImmutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"208894:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Immutables_$4207_calldata_ptr_$returns$__$","typeString":"function (struct IBaseEscrow.Immutables calldata) view"}},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"208894:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8098,"nodeType":"ExpressionStatement","src":"208894:31:0"},{"id":8099,"nodeType":"PlaceholderStatement","src":"208935:1:0"}]},"id":8101,"name":"onlyValidImmutables","nameLocation":"208824:19:0","nodeType":"ModifierDefinition","parameters":{"id":8094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8093,"mutability":"mutable","name":"immutables","nameLocation":"208864:10:0","nodeType":"VariableDeclaration","scope":8101,"src":"208844:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":8092,"nodeType":"UserDefinedTypeName","pathNode":{"id":8091,"name":"Immutables","nameLocations":["208844:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"208844:10:0"},"referencedDeclaration":4207,"src":"208844:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"208843:32:0"},"src":"208815:128:0","virtual":true,"visibility":"internal"},{"body":{"id":8119,"nodeType":"Block","src":"209022:101:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8109,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"209051:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8108,"name":"_keccakBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"209036:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"209036:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8111,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"209062:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"209073:8:0","memberName":"hashlock","nodeType":"MemberAccess","referencedDeclaration":4190,"src":"209062:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"209036:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8117,"nodeType":"IfStatement","src":"209032:73:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8114,"name":"InvalidSecret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"209090:13:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"209090:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8116,"nodeType":"RevertStatement","src":"209083:22:0"}},{"id":8118,"nodeType":"PlaceholderStatement","src":"209115:1:0"}]},"id":8120,"name":"onlyValidSecret","nameLocation":"208958:15:0","nodeType":"ModifierDefinition","parameters":{"id":8107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8103,"mutability":"mutable","name":"secret","nameLocation":"208982:6:0","nodeType":"VariableDeclaration","scope":8120,"src":"208974:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"208974:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8106,"mutability":"mutable","name":"immutables","nameLocation":"209010:10:0","nodeType":"VariableDeclaration","scope":8120,"src":"208990:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":8105,"nodeType":"UserDefinedTypeName","pathNode":{"id":8104,"name":"Immutables","nameLocations":["208990:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"208990:10:0"},"referencedDeclaration":4207,"src":"208990:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"208973:48:0"},"src":"208949:174:0","virtual":false,"visibility":"internal"},{"body":{"id":8133,"nodeType":"Block","src":"209163:77:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8124,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"209177:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"209183:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"209177:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8126,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"209195:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"209177:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8131,"nodeType":"IfStatement","src":"209173:49:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8128,"name":"InvalidTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"209209:11:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"209209:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8130,"nodeType":"RevertStatement","src":"209202:20:0"}},{"id":8132,"nodeType":"PlaceholderStatement","src":"209232:1:0"}]},"id":8134,"name":"onlyAfter","nameLocation":"209138:9:0","nodeType":"ModifierDefinition","parameters":{"id":8123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8122,"mutability":"mutable","name":"start","nameLocation":"209156:5:0","nodeType":"VariableDeclaration","scope":8134,"src":"209148:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8121,"name":"uint256","nodeType":"ElementaryTypeName","src":"209148:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"209147:15:0"},"src":"209129:111:0","virtual":false,"visibility":"internal"},{"body":{"id":8147,"nodeType":"Block","src":"209280:77:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8138,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"209294:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"209300:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"209294:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8140,"name":"stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8136,"src":"209313:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"209294:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8145,"nodeType":"IfStatement","src":"209290:49:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8142,"name":"InvalidTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"209326:11:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"209326:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8144,"nodeType":"RevertStatement","src":"209319:20:0"}},{"id":8146,"nodeType":"PlaceholderStatement","src":"209349:1:0"}]},"id":8148,"name":"onlyBefore","nameLocation":"209255:10:0","nodeType":"ModifierDefinition","parameters":{"id":8137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8136,"mutability":"mutable","name":"stop","nameLocation":"209274:4:0","nodeType":"VariableDeclaration","scope":8148,"src":"209266:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8135,"name":"uint256","nodeType":"ElementaryTypeName","src":"209266:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"209265:14:0"},"src":"209246:111:0","virtual":false,"visibility":"internal"},{"baseFunctions":[4271],"body":{"id":8184,"nodeType":"Block","src":"209666:98:0","statements":[{"expression":{"arguments":[{"id":8173,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"209689:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8174,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"209696:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"209700:6:0","memberName":"sender","nodeType":"MemberAccess","src":"209696:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8176,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"209708:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8172,"name":"_uniTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"209676:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"209676:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8178,"nodeType":"ExpressionStatement","src":"209676:39:0"},{"eventCall":{"arguments":[{"id":8180,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"209743:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8181,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"209750:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8179,"name":"FundsRescued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"209730:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"209730:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8183,"nodeType":"EmitStatement","src":"209725:32:0"}]},"documentation":{"id":8149,"nodeType":"StructuredDocumentation","src":"209363:57:0","text":" @notice See {IBaseEscrow-rescueFunds}."},"functionSelector":"4649088b","id":8185,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8159,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"209544:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":8160,"kind":"modifierInvocation","modifierName":{"id":8158,"name":"onlyTaker","nameLocations":["209534:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8090,"src":"209534:9:0"},"nodeType":"ModifierInvocation","src":"209534:21:0"},{"arguments":[{"id":8162,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"209584:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":8163,"kind":"modifierInvocation","modifierName":{"id":8161,"name":"onlyValidImmutables","nameLocations":["209564:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":8101,"src":"209564:19:0"},"nodeType":"ModifierInvocation","src":"209564:31:0"},{"arguments":[{"arguments":[{"id":8168,"name":"RESCUE_DELAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"209647:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":8165,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"209614:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"209625:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"209614:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"209635:11:0","memberName":"rescueStart","nodeType":"MemberAccess","referencedDeclaration":3156,"src":"209614:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_uint256_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,uint256) pure returns (uint256)"}},"id":8169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"209614:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8170,"kind":"modifierInvocation","modifierName":{"id":8164,"name":"onlyAfter","nameLocations":["209604:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8134,"src":"209604:9:0"},"nodeType":"ModifierInvocation","src":"209604:57:0"}],"name":"rescueFunds","nameLocation":"209434:11:0","nodeType":"FunctionDefinition","parameters":{"id":8157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8151,"mutability":"mutable","name":"token","nameLocation":"209454:5:0","nodeType":"VariableDeclaration","scope":8185,"src":"209446:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8150,"name":"address","nodeType":"ElementaryTypeName","src":"209446:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8153,"mutability":"mutable","name":"amount","nameLocation":"209469:6:0","nodeType":"VariableDeclaration","scope":8185,"src":"209461:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8152,"name":"uint256","nodeType":"ElementaryTypeName","src":"209461:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8156,"mutability":"mutable","name":"immutables","nameLocation":"209497:10:0","nodeType":"VariableDeclaration","scope":8185,"src":"209477:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":8155,"nodeType":"UserDefinedTypeName","pathNode":{"id":8154,"name":"Immutables","nameLocations":["209477:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"209477:10:0"},"referencedDeclaration":4207,"src":"209477:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"209445:63:0"},"returnParameters":{"id":8171,"nodeType":"ParameterList","parameters":[],"src":"209666:0:0"},"scope":8260,"src":"209425:339:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8217,"nodeType":"Block","src":"209923:159:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8195,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"209937:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"209954:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"209946:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8196,"name":"address","nodeType":"ElementaryTypeName","src":"209946:7:0","typeDescriptions":{}}},"id":8199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"209946:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"209937:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8215,"nodeType":"Block","src":"210013:63:0","statements":[{"expression":{"arguments":[{"id":8211,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"210054:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8212,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"210058:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8208,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"210034:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8207,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"210027:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$379_$","typeString":"type(contract IERC20)"}},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"210027:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":8210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"210041:12:0","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"210027:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"210027:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8214,"nodeType":"ExpressionStatement","src":"210027:38:0"}]},"id":8216,"nodeType":"IfStatement","src":"209933:143:0","trueBody":{"id":8206,"nodeType":"Block","src":"209958:49:0","statements":[{"expression":{"arguments":[{"id":8202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"209985:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8203,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"209989:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8201,"name":"_ethTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"209972:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"209972:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8205,"nodeType":"ExpressionStatement","src":"209972:24:0"}]}}]},"documentation":{"id":8186,"nodeType":"StructuredDocumentation","src":"209770:74:0","text":" @dev Transfers ERC20 or native tokens to the recipient."},"id":8218,"implemented":true,"kind":"function","modifiers":[],"name":"_uniTransfer","nameLocation":"209858:12:0","nodeType":"FunctionDefinition","parameters":{"id":8193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8188,"mutability":"mutable","name":"token","nameLocation":"209879:5:0","nodeType":"VariableDeclaration","scope":8218,"src":"209871:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8187,"name":"address","nodeType":"ElementaryTypeName","src":"209871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8190,"mutability":"mutable","name":"to","nameLocation":"209894:2:0","nodeType":"VariableDeclaration","scope":8218,"src":"209886:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8189,"name":"address","nodeType":"ElementaryTypeName","src":"209886:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8192,"mutability":"mutable","name":"amount","nameLocation":"209906:6:0","nodeType":"VariableDeclaration","scope":8218,"src":"209898:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8191,"name":"uint256","nodeType":"ElementaryTypeName","src":"209898:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"209870:43:0"},"returnParameters":{"id":8194,"nodeType":"ParameterList","parameters":[],"src":"209923:0:0"},"scope":8260,"src":"209849:233:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8241,"nodeType":"Block","src":"210217:121:0","statements":[{"assignments":[8227,null],"declarations":[{"constant":false,"id":8227,"mutability":"mutable","name":"success","nameLocation":"210233:7:0","nodeType":"VariableDeclaration","scope":8241,"src":"210228:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8226,"name":"bool","nodeType":"ElementaryTypeName","src":"210228:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8234,"initialValue":{"arguments":[{"hexValue":"","id":8232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"210270:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":8228,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"210245:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"210248:4:0","memberName":"call","nodeType":"MemberAccess","src":"210245:7:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":8230,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"210261:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"210245:24:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"210245:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"210227:46:0"},{"condition":{"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"210287:8:0","subExpression":{"id":8235,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"210288:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8240,"nodeType":"IfStatement","src":"210283:48:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8237,"name":"NativeTokenSendingFailure","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"210304:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"210304:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8239,"nodeType":"RevertStatement","src":"210297:34:0"}}]},"documentation":{"id":8219,"nodeType":"StructuredDocumentation","src":"210088:65:0","text":" @dev Transfers native tokens to the recipient."},"id":8242,"implemented":true,"kind":"function","modifiers":[],"name":"_ethTransfer","nameLocation":"210167:12:0","nodeType":"FunctionDefinition","parameters":{"id":8224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8221,"mutability":"mutable","name":"to","nameLocation":"210188:2:0","nodeType":"VariableDeclaration","scope":8242,"src":"210180:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8220,"name":"address","nodeType":"ElementaryTypeName","src":"210180:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8223,"mutability":"mutable","name":"amount","nameLocation":"210200:6:0","nodeType":"VariableDeclaration","scope":8242,"src":"210192:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8222,"name":"uint256","nodeType":"ElementaryTypeName","src":"210192:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"210179:28:0"},"returnParameters":{"id":8225,"nodeType":"ParameterList","parameters":[],"src":"210217:0:0"},"scope":8260,"src":"210158:180:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":8243,"nodeType":"StructuredDocumentation","src":"210344:108:0","text":" @dev Should verify that the computed escrow address matches the address of this contract."},"id":8249,"implemented":false,"kind":"function","modifiers":[],"name":"_validateImmutables","nameLocation":"210466:19:0","nodeType":"FunctionDefinition","parameters":{"id":8247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8246,"mutability":"mutable","name":"immutables","nameLocation":"210506:10:0","nodeType":"VariableDeclaration","scope":8249,"src":"210486:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":8245,"nodeType":"UserDefinedTypeName","pathNode":{"id":8244,"name":"Immutables","nameLocations":["210486:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"210486:10:0"},"referencedDeclaration":4207,"src":"210486:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"210485:32:0"},"returnParameters":{"id":8248,"nodeType":"ParameterList","parameters":[],"src":"210539:0:0"},"scope":8260,"src":"210457:83:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":8258,"nodeType":"Block","src":"210788:120:0","statements":[{"AST":{"nativeSrc":"210823:79:0","nodeType":"YulBlock","src":"210823:79:0","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"210844:1:0","nodeType":"YulLiteral","src":"210844:1:0","type":"","value":"0"},{"name":"secret","nativeSrc":"210847:6:0","nodeType":"YulIdentifier","src":"210847:6:0"}],"functionName":{"name":"mstore","nativeSrc":"210837:6:0","nodeType":"YulIdentifier","src":"210837:6:0"},"nativeSrc":"210837:17:0","nodeType":"YulFunctionCall","src":"210837:17:0"},"nativeSrc":"210837:17:0","nodeType":"YulExpressionStatement","src":"210837:17:0"},{"nativeSrc":"210867:25:0","nodeType":"YulAssignment","src":"210867:25:0","value":{"arguments":[{"kind":"number","nativeSrc":"210884:1:0","nodeType":"YulLiteral","src":"210884:1:0","type":"","value":"0"},{"kind":"number","nativeSrc":"210887:4:0","nodeType":"YulLiteral","src":"210887:4:0","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"210874:9:0","nodeType":"YulIdentifier","src":"210874:9:0"},"nativeSrc":"210874:18:0","nodeType":"YulFunctionCall","src":"210874:18:0"},"variableNames":[{"name":"ret","nativeSrc":"210867:3:0","nodeType":"YulIdentifier","src":"210867:3:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8255,"isOffset":false,"isSlot":false,"src":"210867:3:0","valueSize":1},{"declaration":8252,"isOffset":false,"isSlot":false,"src":"210847:6:0","valueSize":1}],"flags":["memory-safe"],"id":8257,"nodeType":"InlineAssembly","src":"210798:104:0"}]},"documentation":{"id":8250,"nodeType":"StructuredDocumentation","src":"210546:162:0","text":" @dev Computes the Keccak-256 hash of the secret.\n @param secret The secret that unlocks the escrow.\n @return ret The computed hash."},"id":8259,"implemented":true,"kind":"function","modifiers":[],"name":"_keccakBytes32","nameLocation":"210722:14:0","nodeType":"FunctionDefinition","parameters":{"id":8253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8252,"mutability":"mutable","name":"secret","nameLocation":"210745:6:0","nodeType":"VariableDeclaration","scope":8259,"src":"210737:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"210737:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"210736:16:0"},"returnParameters":{"id":8256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8255,"mutability":"mutable","name":"ret","nameLocation":"210783:3:0","nodeType":"VariableDeclaration","scope":8259,"src":"210775:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"210775:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"210774:13:0"},"scope":8260,"src":"210713:195:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":10322,"src":"208204:2706:0","usedErrors":[4224,4226,4228,4230,4232,6574],"usedEvents":[4210,4217,4222]},{"abstract":false,"baseContracts":[{"baseName":{"id":8262,"name":"IMerkleStorageInvalidator","nameLocations":["211259:25:0"],"nodeType":"IdentifierPath","referencedDeclaration":539,"src":"211259:25:0"},"id":8263,"nodeType":"InheritanceSpecifier","src":"211259:25:0"},{"baseName":{"id":8264,"name":"ITakerInteraction","nameLocations":["211286:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":6353,"src":"211286:17:0"},"id":8265,"nodeType":"InheritanceSpecifier","src":"211286:17:0"}],"canonicalName":"MerkleStorageInvalidator","contractDependencies":[],"contractKind":"contract","documentation":{"id":8261,"nodeType":"StructuredDocumentation","src":"211029:192:0","text":" @title Merkle Storage Invalidator contract\n @notice Contract to invalidate hashed secrets from an order that supports multiple fills.\n @custom:security-contact security@1inch.io"},"fullyImplemented":true,"id":8412,"linearizedBaseContracts":[8412,6353,539],"name":"MerkleStorageInvalidator","nameLocation":"211231:24:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8269,"libraryName":{"id":8266,"name":"MerkleProof","nameLocations":["211316:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":4041,"src":"211316:11:0"},"nodeType":"UsingForDirective","src":"211310:32:0","typeName":{"baseType":{"id":8267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"211332:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8268,"nodeType":"ArrayTypeName","src":"211332:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},{"global":false,"id":8272,"libraryName":{"id":8270,"name":"ExtensionLib_1","nameLocations":["211353:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":6571,"src":"211353:14:0"},"nodeType":"UsingForDirective","src":"211347:31:0","typeName":{"id":8271,"name":"bytes","nodeType":"ElementaryTypeName","src":"211372:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"constant":false,"id":8274,"mutability":"immutable","name":"_LIMIT_ORDER_PROTOCOL","nameLocation":"211410:21:0","nodeType":"VariableDeclaration","scope":8412,"src":"211384:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8273,"name":"address","nodeType":"ElementaryTypeName","src":"211384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"baseFunctions":[538],"constant":false,"documentation":{"id":8275,"nodeType":"StructuredDocumentation","src":"211438:58:0","text":"@notice See {IMerkleStorageInvalidator-lastValidated}."},"functionSelector":"acf4ce5c","id":8280,"mutability":"mutable","name":"lastValidated","nameLocation":"211547:13:0","nodeType":"VariableDeclaration","scope":8412,"src":"211501:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ValidationData_$516_storage_$","typeString":"mapping(bytes32 => struct IMerkleStorageInvalidator.ValidationData)"},"typeName":{"id":8279,"keyName":"key","keyNameLocation":"211517:3:0","keyType":{"id":8276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"211509:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"211501:38:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ValidationData_$516_storage_$","typeString":"mapping(bytes32 => struct IMerkleStorageInvalidator.ValidationData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8278,"nodeType":"UserDefinedTypeName","pathNode":{"id":8277,"name":"ValidationData","nameLocations":["211524:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":516,"src":"211524:14:0"},"referencedDeclaration":516,"src":"211524:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$516_storage_ptr","typeString":"struct IMerkleStorageInvalidator.ValidationData"}}},"visibility":"public"},{"body":{"id":8293,"nodeType":"Block","src":"211652:114:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8283,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"211666:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"211670:6:0","memberName":"sender","nodeType":"MemberAccess","src":"211666:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8285,"name":"_LIMIT_ORDER_PROTOCOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8274,"src":"211680:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"211666:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8291,"nodeType":"IfStatement","src":"211662:87:0","trueBody":{"id":8290,"nodeType":"Block","src":"211703:46:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8287,"name":"AccessDenied","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"211724:12:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"211724:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8289,"nodeType":"RevertStatement","src":"211717:21:0"}]}},{"id":8292,"nodeType":"PlaceholderStatement","src":"211758:1:0"}]},"documentation":{"id":8281,"nodeType":"StructuredDocumentation","src":"211567:61:0","text":"@notice Only limit order protocol can call this contract."},"id":8294,"name":"onlyLOP","nameLocation":"211642:7:0","nodeType":"ModifierDefinition","parameters":{"id":8282,"nodeType":"ParameterList","parameters":[],"src":"211649:2:0"},"src":"211633:133:0","virtual":false,"visibility":"internal"},{"body":{"id":8303,"nodeType":"Block","src":"211812:59:0","statements":[{"expression":{"id":8301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8299,"name":"_LIMIT_ORDER_PROTOCOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8274,"src":"211822:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8300,"name":"limitOrderProtocol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8296,"src":"211846:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"211822:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8302,"nodeType":"ExpressionStatement","src":"211822:42:0"}]},"id":8304,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8296,"mutability":"mutable","name":"limitOrderProtocol","nameLocation":"211792:18:0","nodeType":"VariableDeclaration","scope":8304,"src":"211784:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8295,"name":"address","nodeType":"ElementaryTypeName","src":"211784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"211783:28:0"},"returnParameters":{"id":8298,"nodeType":"ParameterList","parameters":[],"src":"211812:0:0"},"scope":8412,"src":"211772:99:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6352],"body":{"id":8410,"nodeType":"Block","src":"212431:879:0","statements":[{"assignments":[8328],"declarations":[{"constant":false,"id":8328,"mutability":"mutable","name":"postInteraction","nameLocation":"212456:15:0","nodeType":"VariableDeclaration","scope":8410,"src":"212441:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8327,"name":"bytes","nodeType":"ElementaryTypeName","src":"212441:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8332,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8329,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8310,"src":"212474:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":8330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"212484:28:0","memberName":"postInteractionTargetAndData","nodeType":"MemberAccess","referencedDeclaration":6492,"src":"212474:38:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata) pure returns (bytes calldata)"}},"id":8331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"212474:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"212441:73:0"},{"assignments":[8337],"declarations":[{"constant":false,"id":8337,"mutability":"mutable","name":"extraDataArgs","nameLocation":"212562:13:0","nodeType":"VariableDeclaration","scope":8410,"src":"212524:51:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_calldata_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs"},"typeName":{"id":8336,"nodeType":"UserDefinedTypeName","pathNode":{"id":8335,"name":"IEscrowFactory.ExtraDataArgs","nameLocations":["212524:14:0","212539:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":5842,"src":"212524:28:0"},"referencedDeclaration":5842,"src":"212524:28:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_storage_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs"}},"visibility":"internal"}],"id":8338,"nodeType":"VariableDeclarationStatement","src":"212524:51:0"},{"assignments":[8341],"declarations":[{"constant":false,"id":8341,"mutability":"mutable","name":"takerData","nameLocation":"212604:9:0","nodeType":"VariableDeclaration","scope":8410,"src":"212585:28:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_TakerData_$524_calldata_ptr","typeString":"struct IMerkleStorageInvalidator.TakerData"},"typeName":{"id":8340,"nodeType":"UserDefinedTypeName","pathNode":{"id":8339,"name":"TakerData","nameLocations":["212585:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":524,"src":"212585:9:0"},"referencedDeclaration":524,"src":"212585:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_TakerData_$524_storage_ptr","typeString":"struct IMerkleStorageInvalidator.TakerData"}},"visibility":"internal"}],"id":8342,"nodeType":"VariableDeclarationStatement","src":"212585:28:0"},{"AST":{"nativeSrc":"212648:162:0","nodeType":"YulBlock","src":"212648:162:0","statements":[{"nativeSrc":"212662:96:0","nodeType":"YulAssignment","src":"212662:96:0","value":{"arguments":[{"name":"postInteraction.offset","nativeSrc":"212683:22:0","nodeType":"YulIdentifier","src":"212683:22:0"},{"arguments":[{"name":"postInteraction.length","nativeSrc":"212711:22:0","nodeType":"YulIdentifier","src":"212711:22:0"},{"name":"SRC_IMMUTABLES_LENGTH","nativeSrc":"212735:21:0","nodeType":"YulIdentifier","src":"212735:21:0"}],"functionName":{"name":"sub","nativeSrc":"212707:3:0","nodeType":"YulIdentifier","src":"212707:3:0"},"nativeSrc":"212707:50:0","nodeType":"YulFunctionCall","src":"212707:50:0"}],"functionName":{"name":"add","nativeSrc":"212679:3:0","nodeType":"YulIdentifier","src":"212679:3:0"},"nativeSrc":"212679:79:0","nodeType":"YulFunctionCall","src":"212679:79:0"},"variableNames":[{"name":"extraDataArgs","nativeSrc":"212662:13:0","nodeType":"YulIdentifier","src":"212662:13:0"}]},{"nativeSrc":"212771:29:0","nodeType":"YulAssignment","src":"212771:29:0","value":{"name":"extraData.offset","nativeSrc":"212784:16:0","nodeType":"YulIdentifier","src":"212784:16:0"},"variableNames":[{"name":"takerData","nativeSrc":"212771:9:0","nodeType":"YulIdentifier","src":"212771:9:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":148,"isOffset":false,"isSlot":false,"src":"212735:21:0","valueSize":1},{"declaration":8322,"isOffset":true,"isSlot":false,"src":"212784:16:0","suffix":"offset","valueSize":1},{"declaration":8337,"isOffset":false,"isSlot":false,"src":"212662:13:0","valueSize":1},{"declaration":8328,"isOffset":false,"isSlot":false,"src":"212711:22:0","suffix":"length","valueSize":1},{"declaration":8328,"isOffset":true,"isSlot":false,"src":"212683:22:0","suffix":"offset","valueSize":1},{"declaration":8341,"isOffset":false,"isSlot":false,"src":"212771:9:0","valueSize":1}],"flags":["memory-safe"],"id":8343,"nodeType":"InlineAssembly","src":"212623:187:0"},{"assignments":[8345],"declarations":[{"constant":false,"id":8345,"mutability":"mutable","name":"rootShortened","nameLocation":"212827:13:0","nodeType":"VariableDeclaration","scope":8410,"src":"212819:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":8344,"name":"uint240","nodeType":"ElementaryTypeName","src":"212819:7:0","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"id":8354,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":8350,"name":"extraDataArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"212859:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_calldata_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs calldata"}},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"212873:12:0","memberName":"hashlockInfo","nodeType":"MemberAccess","referencedDeclaration":5831,"src":"212859:26:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"212851:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8348,"name":"uint256","nodeType":"ElementaryTypeName","src":"212851:7:0","typeDescriptions":{}}},"id":8352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"212851:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"212843:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":8346,"name":"uint240","nodeType":"ElementaryTypeName","src":"212843:7:0","typeDescriptions":{}}},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"212843:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"nodeType":"VariableDeclarationStatement","src":"212819:68:0"},{"assignments":[8356],"declarations":[{"constant":false,"id":8356,"mutability":"mutable","name":"key","nameLocation":"212905:3:0","nodeType":"VariableDeclaration","scope":8410,"src":"212897:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"212897:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8364,"initialValue":{"arguments":[{"arguments":[{"id":8360,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"212938:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8361,"name":"rootShortened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"212949:13:0","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint240","typeString":"uint240"}],"expression":{"id":8358,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"212921:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"212925:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"212921:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"212921:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8357,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"212911:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"212911:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"212897:67:0"},{"assignments":[8366],"declarations":[{"constant":false,"id":8366,"mutability":"mutable","name":"rootCalculated","nameLocation":"212982:14:0","nodeType":"VariableDeclaration","scope":8410,"src":"212974:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"212974:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8383,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":8375,"name":"takerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"213083:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_TakerData_$524_calldata_ptr","typeString":"struct IMerkleStorageInvalidator.TakerData calldata"}},"id":8376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"213093:3:0","memberName":"idx","nodeType":"MemberAccess","referencedDeclaration":521,"src":"213083:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"213076:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8373,"name":"uint64","nodeType":"ElementaryTypeName","src":"213076:6:0","typeDescriptions":{}}},"id":8377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"213076:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":8378,"name":"takerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"213099:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_TakerData_$524_calldata_ptr","typeString":"struct IMerkleStorageInvalidator.TakerData calldata"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"213109:10:0","memberName":"secretHash","nodeType":"MemberAccess","referencedDeclaration":523,"src":"213099:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8371,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"213059:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"213063:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"213059:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"213059:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8370,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"213049:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"213049:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":8367,"name":"takerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"212999:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_TakerData_$524_calldata_ptr","typeString":"struct IMerkleStorageInvalidator.TakerData calldata"}},"id":8368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"213009:5:0","memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":519,"src":"212999:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"213015:20:0","memberName":"processProofCalldata","nodeType":"MemberAccess","referencedDeclaration":3666,"src":"212999:36:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_array$_t_bytes32_$dyn_calldata_ptr_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":8382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"212999:132:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"212974:157:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint240","typeString":"uint240"},"id":8392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":8388,"name":"rootCalculated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"213161:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"213153:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8386,"name":"uint256","nodeType":"ElementaryTypeName","src":"213153:7:0","typeDescriptions":{}}},"id":8389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"213153:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"213145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":8384,"name":"uint240","nodeType":"ElementaryTypeName","src":"213145:7:0","typeDescriptions":{}}},"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"213145:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8391,"name":"rootShortened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"213181:13:0","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"213145:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8396,"nodeType":"IfStatement","src":"213141:76:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8393,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"213203:12:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"213203:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8395,"nodeType":"RevertStatement","src":"213196:21:0"}},{"expression":{"id":8408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8397,"name":"lastValidated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8280,"src":"213227:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ValidationData_$516_storage_$","typeString":"mapping(bytes32 => struct IMerkleStorageInvalidator.ValidationData storage ref)"}},"id":8399,"indexExpression":{"id":8398,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"213241:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"213227:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$516_storage","typeString":"struct IMerkleStorageInvalidator.ValidationData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8401,"name":"takerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"213263:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_TakerData_$524_calldata_ptr","typeString":"struct IMerkleStorageInvalidator.TakerData calldata"}},"id":8402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"213273:3:0","memberName":"idx","nodeType":"MemberAccess","referencedDeclaration":521,"src":"213263:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"213279:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"213263:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8405,"name":"takerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"213282:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_TakerData_$524_calldata_ptr","typeString":"struct IMerkleStorageInvalidator.TakerData calldata"}},"id":8406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"213292:10:0","memberName":"secretHash","nodeType":"MemberAccess","referencedDeclaration":523,"src":"213282:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8400,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"213248:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$516_storage_ptr_$","typeString":"type(struct IMerkleStorageInvalidator.ValidationData storage pointer)"}},"id":8407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"213248:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$516_memory_ptr","typeString":"struct IMerkleStorageInvalidator.ValidationData memory"}},"src":"213227:76:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$516_storage","typeString":"struct IMerkleStorageInvalidator.ValidationData storage ref"}},"id":8409,"nodeType":"ExpressionStatement","src":"213227:76:0"}]},"documentation":{"id":8305,"nodeType":"StructuredDocumentation","src":"211877:211:0","text":" @notice See {ITakerInteraction-takerInteraction}.\n @dev Verifies the proof and stores the last validated index and hashed secret.\n Only Limit Order Protocol can call this function."},"functionSelector":"adf38ba1","id":8411,"implemented":true,"kind":"function","modifiers":[{"id":8325,"kind":"modifierInvocation","modifierName":{"id":8324,"name":"onlyLOP","nameLocations":["212423:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":8294,"src":"212423:7:0"},"nodeType":"ModifierInvocation","src":"212423:7:0"}],"name":"takerInteraction","nameLocation":"212102:16:0","nodeType":"FunctionDefinition","parameters":{"id":8323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8411,"src":"212128:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":8307,"nodeType":"UserDefinedTypeName","pathNode":{"id":8306,"name":"IOrderMixin.Order","nameLocations":["212128:11:0","212140:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"212128:17:0"},"referencedDeclaration":5944,"src":"212128:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":8310,"mutability":"mutable","name":"extension","nameLocation":"212191:9:0","nodeType":"VariableDeclaration","scope":8411,"src":"212176:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8309,"name":"bytes","nodeType":"ElementaryTypeName","src":"212176:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8312,"mutability":"mutable","name":"orderHash","nameLocation":"212218:9:0","nodeType":"VariableDeclaration","scope":8411,"src":"212210:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"212210:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8411,"src":"212237:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8313,"name":"address","nodeType":"ElementaryTypeName","src":"212237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8411,"src":"212266:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8315,"name":"uint256","nodeType":"ElementaryTypeName","src":"212266:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8411,"src":"212302:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8317,"name":"uint256","nodeType":"ElementaryTypeName","src":"212302:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8411,"src":"212338:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8319,"name":"uint256","nodeType":"ElementaryTypeName","src":"212338:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8322,"mutability":"mutable","name":"extraData","nameLocation":"212398:9:0","nodeType":"VariableDeclaration","scope":8411,"src":"212383:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8321,"name":"bytes","nodeType":"ElementaryTypeName","src":"212383:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"212118:295:0"},"returnParameters":{"id":8326,"nodeType":"ParameterList","parameters":[],"src":"212431:0:0"},"scope":8412,"src":"212093:1217:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"211222:2090:0","usedErrors":[526,528],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":8414,"name":"IFeeBank","nameLocations":["213688:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":510,"src":"213688:8:0"},"id":8415,"nodeType":"InheritanceSpecifier","src":"213688:8:0"},{"baseName":{"id":8416,"name":"Ownable","nameLocations":["213698:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":4185,"src":"213698:7:0"},"id":8417,"nodeType":"InheritanceSpecifier","src":"213698:7:0"}],"canonicalName":"FeeBank","contractDependencies":[],"contractKind":"contract","documentation":{"id":8413,"nodeType":"StructuredDocumentation","src":"213398:269:0","text":" @title FeeBank\n @notice FeeBank contract introduces a credit system for paying fees.\n A user can deposit tokens to the FeeBank contract, obtain credits and then use them to pay fees.\n @dev FeeBank is coupled with FeeBankCharger to actually charge fees."},"fullyImplemented":true,"id":8765,"linearizedBaseContracts":[8765,4185,130,510],"name":"FeeBank","nameLocation":"213677:7:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8421,"libraryName":{"id":8418,"name":"SafeERC20","nameLocations":["213718:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":7075,"src":"213718:9:0"},"nodeType":"UsingForDirective","src":"213712:27:0","typeName":{"id":8420,"nodeType":"UserDefinedTypeName","pathNode":{"id":8419,"name":"IERC20","nameLocations":["213732:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"213732:6:0"},"referencedDeclaration":379,"src":"213732:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}},{"global":false,"id":8425,"libraryName":{"id":8422,"name":"UniERC20","nameLocations":["213750:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":8035,"src":"213750:8:0"},"nodeType":"UsingForDirective","src":"213744:26:0","typeName":{"id":8424,"nodeType":"UserDefinedTypeName","pathNode":{"id":8423,"name":"IERC20","nameLocations":["213763:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"213763:6:0"},"referencedDeclaration":379,"src":"213763:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}},{"errorSelector":"d92e233d","id":8427,"name":"ZeroAddress","nameLocation":"213782:11:0","nodeType":"ErrorDefinition","parameters":{"id":8426,"nodeType":"ParameterList","parameters":[],"src":"213793:2:0"},"src":"213776:20:0"},{"constant":false,"id":8430,"mutability":"immutable","name":"_FEE_TOKEN","nameLocation":"213827:10:0","nodeType":"VariableDeclaration","scope":8765,"src":"213802:35:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":8429,"nodeType":"UserDefinedTypeName","pathNode":{"id":8428,"name":"IERC20","nameLocations":["213802:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"213802:6:0"},"referencedDeclaration":379,"src":"213802:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"private"},{"constant":false,"id":8433,"mutability":"immutable","name":"_CHARGER","nameLocation":"213877:8:0","nodeType":"VariableDeclaration","scope":8765,"src":"213843:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBankCharger_$3510","typeString":"contract IFeeBankCharger"},"typeName":{"id":8432,"nodeType":"UserDefinedTypeName","pathNode":{"id":8431,"name":"IFeeBankCharger","nameLocations":["213843:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":3510,"src":"213843:15:0"},"referencedDeclaration":3510,"src":"213843:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBankCharger_$3510","typeString":"contract IFeeBankCharger"}},"visibility":"private"},{"constant":false,"id":8437,"mutability":"mutable","name":"_accountDeposits","nameLocation":"213952:16:0","nodeType":"VariableDeclaration","scope":8765,"src":"213892:76:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8436,"keyName":"account","keyNameLocation":"213908:7:0","keyType":{"id":8434,"name":"address","nodeType":"ElementaryTypeName","src":"213900:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"213892:51:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"availableCredit","valueNameLocation":"213927:15:0","valueType":{"id":8435,"name":"uint256","nodeType":"ElementaryTypeName","src":"213919:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":8472,"nodeType":"Block","src":"214059:133:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8453,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8443,"src":"214081:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}],"id":8452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"214073:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8451,"name":"address","nodeType":"ElementaryTypeName","src":"214073:7:0","typeDescriptions":{}}},"id":8454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"214073:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"214102:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"214094:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8455,"name":"address","nodeType":"ElementaryTypeName","src":"214094:7:0","typeDescriptions":{}}},"id":8458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"214094:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"214073:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8463,"nodeType":"IfStatement","src":"214069:57:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8460,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8427,"src":"214113:11:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"214113:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8462,"nodeType":"RevertStatement","src":"214106:20:0"}},{"expression":{"id":8466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8464,"name":"_CHARGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8433,"src":"214136:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBankCharger_$3510","typeString":"contract IFeeBankCharger"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8465,"name":"charger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8440,"src":"214147:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBankCharger_$3510","typeString":"contract IFeeBankCharger"}},"src":"214136:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBankCharger_$3510","typeString":"contract IFeeBankCharger"}},"id":8467,"nodeType":"ExpressionStatement","src":"214136:18:0"},{"expression":{"id":8470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8468,"name":"_FEE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"214164:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8469,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8443,"src":"214177:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"src":"214164:21:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":8471,"nodeType":"ExpressionStatement","src":"214164:21:0"}]},"id":8473,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8448,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8445,"src":"214052:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8449,"kind":"baseConstructorSpecifier","modifierName":{"id":8447,"name":"Ownable","nameLocations":["214044:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":4185,"src":"214044:7:0"},"nodeType":"ModifierInvocation","src":"214044:14:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8440,"mutability":"mutable","name":"charger","nameLocation":"214003:7:0","nodeType":"VariableDeclaration","scope":8473,"src":"213987:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBankCharger_$3510","typeString":"contract IFeeBankCharger"},"typeName":{"id":8439,"nodeType":"UserDefinedTypeName","pathNode":{"id":8438,"name":"IFeeBankCharger","nameLocations":["213987:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":3510,"src":"213987:15:0"},"referencedDeclaration":3510,"src":"213987:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBankCharger_$3510","typeString":"contract IFeeBankCharger"}},"visibility":"internal"},{"constant":false,"id":8443,"mutability":"mutable","name":"feeToken","nameLocation":"214019:8:0","nodeType":"VariableDeclaration","scope":8473,"src":"214012:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":8442,"nodeType":"UserDefinedTypeName","pathNode":{"id":8441,"name":"IERC20","nameLocations":["214012:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"214012:6:0"},"referencedDeclaration":379,"src":"214012:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8445,"mutability":"mutable","name":"owner","nameLocation":"214037:5:0","nodeType":"VariableDeclaration","scope":8473,"src":"214029:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8444,"name":"address","nodeType":"ElementaryTypeName","src":"214029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"213986:57:0"},"returnParameters":{"id":8450,"nodeType":"ParameterList","parameters":[],"src":"214059:0:0"},"scope":8765,"src":"213975:217:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[451],"body":{"id":8486,"nodeType":"Block","src":"214335:57:0","statements":[{"expression":{"arguments":[{"id":8483,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"214377:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8481,"name":"_CHARGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8433,"src":"214352:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBankCharger_$3510","typeString":"contract IFeeBankCharger"}},"id":8482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"214361:15:0","memberName":"availableCredit","nodeType":"MemberAccess","referencedDeclaration":3489,"src":"214352:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"214352:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8480,"id":8485,"nodeType":"Return","src":"214345:40:0"}]},"documentation":{"id":8474,"nodeType":"StructuredDocumentation","src":"214198:58:0","text":" @notice See {IFeeBank-availableCredit}."},"functionSelector":"5886216f","id":8487,"implemented":true,"kind":"function","modifiers":[],"name":"availableCredit","nameLocation":"214270:15:0","nodeType":"FunctionDefinition","parameters":{"id":8477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8476,"mutability":"mutable","name":"account","nameLocation":"214294:7:0","nodeType":"VariableDeclaration","scope":8487,"src":"214286:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8475,"name":"address","nodeType":"ElementaryTypeName","src":"214286:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"214285:17:0"},"returnParameters":{"id":8480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8487,"src":"214326:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8478,"name":"uint256","nodeType":"ElementaryTypeName","src":"214326:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"214325:9:0"},"scope":8765,"src":"214261:131:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[459],"body":{"id":8501,"nodeType":"Block","src":"214513:55:0","statements":[{"expression":{"arguments":[{"expression":{"id":8496,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"214542:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"214546:6:0","memberName":"sender","nodeType":"MemberAccess","src":"214542:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8498,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"214554:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8495,"name":"_depositFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"214530:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":8499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"214530:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8494,"id":8500,"nodeType":"Return","src":"214523:38:0"}]},"documentation":{"id":8488,"nodeType":"StructuredDocumentation","src":"214398:50:0","text":" @notice See {IFeeBank-deposit}."},"functionSelector":"b6b55f25","id":8502,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"214462:7:0","nodeType":"FunctionDefinition","parameters":{"id":8491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8490,"mutability":"mutable","name":"amount","nameLocation":"214478:6:0","nodeType":"VariableDeclaration","scope":8502,"src":"214470:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8489,"name":"uint256","nodeType":"ElementaryTypeName","src":"214470:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"214469:16:0"},"returnParameters":{"id":8494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8502,"src":"214504:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8492,"name":"uint256","nodeType":"ElementaryTypeName","src":"214504:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"214503:9:0"},"scope":8765,"src":"214453:115:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[469],"body":{"id":8517,"nodeType":"Block","src":"214712:52:0","statements":[{"expression":{"arguments":[{"id":8513,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"214741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8514,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"214750:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8512,"name":"_depositFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"214729:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":8515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"214729:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8511,"id":8516,"nodeType":"Return","src":"214722:35:0"}]},"documentation":{"id":8503,"nodeType":"StructuredDocumentation","src":"214574:53:0","text":" @notice See {IFeeBank-depositFor}."},"functionSelector":"2f4f21e2","id":8518,"implemented":true,"kind":"function","modifiers":[],"name":"depositFor","nameLocation":"214641:10:0","nodeType":"FunctionDefinition","parameters":{"id":8508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8505,"mutability":"mutable","name":"account","nameLocation":"214660:7:0","nodeType":"VariableDeclaration","scope":8518,"src":"214652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8504,"name":"address","nodeType":"ElementaryTypeName","src":"214652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8507,"mutability":"mutable","name":"amount","nameLocation":"214677:6:0","nodeType":"VariableDeclaration","scope":8518,"src":"214669:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8506,"name":"uint256","nodeType":"ElementaryTypeName","src":"214669:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"214651:33:0"},"returnParameters":{"id":8511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8518,"src":"214703:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8509,"name":"uint256","nodeType":"ElementaryTypeName","src":"214703:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"214702:9:0"},"scope":8765,"src":"214632:132:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[479],"body":{"id":8535,"nodeType":"Block","src":"214928:72:0","statements":[{"expression":{"arguments":[{"expression":{"id":8529,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"214966:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"214970:6:0","memberName":"sender","nodeType":"MemberAccess","src":"214966:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8531,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8521,"src":"214978:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8532,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8523,"src":"214986:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":8528,"name":"depositForWithPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8560,"src":"214945:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes calldata) returns (uint256)"}},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"214945:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8527,"id":8534,"nodeType":"Return","src":"214938:55:0"}]},"documentation":{"id":8519,"nodeType":"StructuredDocumentation","src":"214770:60:0","text":" @notice See {IFeeBank-depositWithPermit}."},"functionSelector":"bfe91734","id":8536,"implemented":true,"kind":"function","modifiers":[],"name":"depositWithPermit","nameLocation":"214844:17:0","nodeType":"FunctionDefinition","parameters":{"id":8524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8521,"mutability":"mutable","name":"amount","nameLocation":"214870:6:0","nodeType":"VariableDeclaration","scope":8536,"src":"214862:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8520,"name":"uint256","nodeType":"ElementaryTypeName","src":"214862:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8523,"mutability":"mutable","name":"permit","nameLocation":"214893:6:0","nodeType":"VariableDeclaration","scope":8536,"src":"214878:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8522,"name":"bytes","nodeType":"ElementaryTypeName","src":"214878:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"214861:39:0"},"returnParameters":{"id":8527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8536,"src":"214919:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8525,"name":"uint256","nodeType":"ElementaryTypeName","src":"214919:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"214918:9:0"},"scope":8765,"src":"214835:165:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[491],"body":{"id":8559,"nodeType":"Block","src":"215215:91:0","statements":[{"expression":{"arguments":[{"id":8551,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"215247:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":8548,"name":"_FEE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"215225:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":8550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"215236:10:0","memberName":"safePermit","nodeType":"MemberAccess","referencedDeclaration":6901,"src":"215225:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_bytes_calldata_ptr_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,bytes calldata)"}},"id":8552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"215225:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8553,"nodeType":"ExpressionStatement","src":"215225:29:0"},{"expression":{"arguments":[{"id":8555,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8539,"src":"215283:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8556,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8541,"src":"215292:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8554,"name":"_depositFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"215271:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":8557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"215271:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8547,"id":8558,"nodeType":"Return","src":"215264:35:0"}]},"documentation":{"id":8537,"nodeType":"StructuredDocumentation","src":"215006:63:0","text":" @notice See {IFeeBank-depositForWithPermit}."},"functionSelector":"32d323a5","id":8560,"implemented":true,"kind":"function","modifiers":[],"name":"depositForWithPermit","nameLocation":"215083:20:0","nodeType":"FunctionDefinition","parameters":{"id":8544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8539,"mutability":"mutable","name":"account","nameLocation":"215121:7:0","nodeType":"VariableDeclaration","scope":8560,"src":"215113:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8538,"name":"address","nodeType":"ElementaryTypeName","src":"215113:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8541,"mutability":"mutable","name":"amount","nameLocation":"215146:6:0","nodeType":"VariableDeclaration","scope":8560,"src":"215138:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8540,"name":"uint256","nodeType":"ElementaryTypeName","src":"215138:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8543,"mutability":"mutable","name":"permit","nameLocation":"215177:6:0","nodeType":"VariableDeclaration","scope":8560,"src":"215162:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8542,"name":"bytes","nodeType":"ElementaryTypeName","src":"215162:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"215103:86:0"},"returnParameters":{"id":8547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8560,"src":"215206:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8545,"name":"uint256","nodeType":"ElementaryTypeName","src":"215206:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"215205:9:0"},"scope":8765,"src":"215074:232:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[499],"body":{"id":8574,"nodeType":"Block","src":"215429:55:0","statements":[{"expression":{"arguments":[{"expression":{"id":8569,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"215458:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"215462:6:0","memberName":"sender","nodeType":"MemberAccess","src":"215458:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8571,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8563,"src":"215470:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8568,"name":"_withdrawTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8741,"src":"215446:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":8572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"215446:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8567,"id":8573,"nodeType":"Return","src":"215439:38:0"}]},"documentation":{"id":8561,"nodeType":"StructuredDocumentation","src":"215312:51:0","text":" @notice See {IFeeBank-withdraw}."},"functionSelector":"2e1a7d4d","id":8575,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"215377:8:0","nodeType":"FunctionDefinition","parameters":{"id":8564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8563,"mutability":"mutable","name":"amount","nameLocation":"215394:6:0","nodeType":"VariableDeclaration","scope":8575,"src":"215386:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8562,"name":"uint256","nodeType":"ElementaryTypeName","src":"215386:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"215385:16:0"},"returnParameters":{"id":8567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8575,"src":"215420:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8565,"name":"uint256","nodeType":"ElementaryTypeName","src":"215420:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"215419:9:0"},"scope":8765,"src":"215368:116:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[509],"body":{"id":8590,"nodeType":"Block","src":"215628:52:0","statements":[{"expression":{"arguments":[{"id":8586,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8578,"src":"215657:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8587,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8580,"src":"215666:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8585,"name":"_withdrawTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8741,"src":"215645:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"215645:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8584,"id":8589,"nodeType":"Return","src":"215638:35:0"}]},"documentation":{"id":8576,"nodeType":"StructuredDocumentation","src":"215490:53:0","text":" @notice See {IFeeBank-withdrawTo}."},"functionSelector":"205c2878","id":8591,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"215557:10:0","nodeType":"FunctionDefinition","parameters":{"id":8581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8578,"mutability":"mutable","name":"account","nameLocation":"215576:7:0","nodeType":"VariableDeclaration","scope":8591,"src":"215568:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8577,"name":"address","nodeType":"ElementaryTypeName","src":"215568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8580,"mutability":"mutable","name":"amount","nameLocation":"215593:6:0","nodeType":"VariableDeclaration","scope":8591,"src":"215585:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8579,"name":"uint256","nodeType":"ElementaryTypeName","src":"215585:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"215567:33:0"},"returnParameters":{"id":8584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8591,"src":"215619:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8582,"name":"uint256","nodeType":"ElementaryTypeName","src":"215619:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"215618:9:0"},"scope":8765,"src":"215548:132:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8659,"nodeType":"Block","src":"216014:608:0","statements":[{"assignments":[8603],"declarations":[{"constant":false,"id":8603,"mutability":"mutable","name":"accountsLength","nameLocation":"216032:14:0","nodeType":"VariableDeclaration","scope":8659,"src":"216024:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8602,"name":"uint256","nodeType":"ElementaryTypeName","src":"216024:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8606,"initialValue":{"expression":{"id":8604,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"216049:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"216058:6:0","memberName":"length","nodeType":"MemberAccess","src":"216049:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"216024:40:0"},{"id":8650,"nodeType":"UncheckedBlock","src":"216074:479:0","statements":[{"body":{"id":8648,"nodeType":"Block","src":"216143:400:0","statements":[{"assignments":[8618],"declarations":[{"constant":false,"id":8618,"mutability":"mutable","name":"account","nameLocation":"216169:7:0","nodeType":"VariableDeclaration","scope":8648,"src":"216161:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8617,"name":"address","nodeType":"ElementaryTypeName","src":"216161:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8622,"initialValue":{"baseExpression":{"id":8619,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"216179:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8621,"indexExpression":{"id":8620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8608,"src":"216188:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"216179:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"216161:29:0"},{"assignments":[8624],"declarations":[{"constant":false,"id":8624,"mutability":"mutable","name":"accountDeposit","nameLocation":"216216:14:0","nodeType":"VariableDeclaration","scope":8648,"src":"216208:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8623,"name":"uint256","nodeType":"ElementaryTypeName","src":"216208:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8628,"initialValue":{"baseExpression":{"id":8625,"name":"_accountDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8437,"src":"216233:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8627,"indexExpression":{"id":8626,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8618,"src":"216250:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"216233:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"216208:50:0"},{"assignments":[8630],"declarations":[{"constant":false,"id":8630,"mutability":"mutable","name":"availableCredit_","nameLocation":"216284:16:0","nodeType":"VariableDeclaration","scope":8648,"src":"216276:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8629,"name":"uint256","nodeType":"ElementaryTypeName","src":"216276:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8635,"initialValue":{"arguments":[{"id":8633,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8618,"src":"216328:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8631,"name":"_CHARGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8433,"src":"216303:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBankCharger_$3510","typeString":"contract IFeeBankCharger"}},"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"216312:15:0","memberName":"availableCredit","nodeType":"MemberAccess","referencedDeclaration":3489,"src":"216303:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"216303:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"216276:60:0"},{"expression":{"id":8640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8636,"name":"_accountDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8437,"src":"216354:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8638,"indexExpression":{"id":8637,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8618,"src":"216371:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"216354:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8639,"name":"availableCredit_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"216382:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"216354:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8641,"nodeType":"ExpressionStatement","src":"216354:44:0"},{"expression":{"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8642,"name":"totalAccountFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8600,"src":"216416:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8643,"name":"accountDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8624,"src":"216436:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8644,"name":"availableCredit_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"216453:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"216436:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"216416:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8647,"nodeType":"ExpressionStatement","src":"216416:53:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8608,"src":"216118:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8612,"name":"accountsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"216122:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"216118:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8649,"initializationExpression":{"assignments":[8608],"declarations":[{"constant":false,"id":8608,"mutability":"mutable","name":"i","nameLocation":"216111:1:0","nodeType":"VariableDeclaration","scope":8649,"src":"216103:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8607,"name":"uint256","nodeType":"ElementaryTypeName","src":"216103:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8610,"initialValue":{"hexValue":"30","id":8609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"216115:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"216103:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"216138:3:0","subExpression":{"id":8614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8608,"src":"216140:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8616,"nodeType":"ExpressionStatement","src":"216138:3:0"},"nodeType":"ForStatement","src":"216098:445:0"}]},{"expression":{"arguments":[{"expression":{"id":8654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"216586:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"216590:6:0","memberName":"sender","nodeType":"MemberAccess","src":"216586:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8656,"name":"totalAccountFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8600,"src":"216598:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8651,"name":"_FEE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"216562:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":8653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"216573:12:0","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"216562:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"216562:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8658,"nodeType":"ExpressionStatement","src":"216562:53:0"}]},"documentation":{"id":8592,"nodeType":"StructuredDocumentation","src":"215686:220:0","text":" @notice Admin method returns commissions spent by users.\n @param accounts Accounts whose commissions are being withdrawn.\n @return totalAccountFees The total amount of accounts commissions."},"functionSelector":"97a2cb64","id":8660,"implemented":true,"kind":"function","modifiers":[{"id":8598,"kind":"modifierInvocation","modifierName":{"id":8597,"name":"onlyOwner","nameLocations":["215969:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":4096,"src":"215969:9:0"},"nodeType":"ModifierInvocation","src":"215969:9:0"}],"name":"gatherFees","nameLocation":"215920:10:0","nodeType":"FunctionDefinition","parameters":{"id":8596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8595,"mutability":"mutable","name":"accounts","nameLocation":"215950:8:0","nodeType":"VariableDeclaration","scope":8660,"src":"215931:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8593,"name":"address","nodeType":"ElementaryTypeName","src":"215931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8594,"nodeType":"ArrayTypeName","src":"215931:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"215930:29:0"},"returnParameters":{"id":8601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8600,"mutability":"mutable","name":"totalAccountFees","nameLocation":"215996:16:0","nodeType":"VariableDeclaration","scope":8660,"src":"215988:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8599,"name":"uint256","nodeType":"ElementaryTypeName","src":"215988:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"215987:26:0"},"scope":8765,"src":"215911:711:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8706,"nodeType":"Block","src":"216730:357:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8669,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8662,"src":"216744:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"216763:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"216755:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8670,"name":"address","nodeType":"ElementaryTypeName","src":"216755:7:0","typeDescriptions":{}}},"id":8673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"216755:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"216744:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8678,"nodeType":"IfStatement","src":"216740:47:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8675,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8427,"src":"216774:11:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"216774:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8677,"nodeType":"RevertStatement","src":"216767:20:0"}},{"expression":{"arguments":[{"expression":{"id":8682,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"216825:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"216829:6:0","memberName":"sender","nodeType":"MemberAccess","src":"216825:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8686,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"216845:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_FeeBank_$8765","typeString":"contract FeeBank"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FeeBank_$8765","typeString":"contract FeeBank"}],"id":8685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"216837:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8684,"name":"address","nodeType":"ElementaryTypeName","src":"216837:7:0","typeDescriptions":{}}},"id":8687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"216837:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"216852:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8679,"name":"_FEE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"216797:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":8681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"216808:16:0","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":6678,"src":"216797:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":8689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"216797:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8690,"nodeType":"ExpressionStatement","src":"216797:62:0"},{"id":8697,"nodeType":"UncheckedBlock","src":"216869:130:0","statements":[{"expression":{"id":8695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8691,"name":"_accountDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8437,"src":"216893:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8693,"indexExpression":{"id":8692,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8662,"src":"216910:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"216893:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8694,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"216922:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"216893:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8696,"nodeType":"ExpressionStatement","src":"216893:35:0"}]},{"expression":{"id":8704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8698,"name":"totalAvailableCredit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8667,"src":"217008:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8701,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8662,"src":"217064:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8702,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"217073:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8699,"name":"_CHARGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8433,"src":"217031:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBankCharger_$3510","typeString":"contract IFeeBankCharger"}},"id":8700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"217040:23:0","memberName":"increaseAvailableCredit","nodeType":"MemberAccess","referencedDeclaration":3499,"src":"217031:32:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) external returns (uint256)"}},"id":8703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"217031:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"217008:72:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8705,"nodeType":"ExpressionStatement","src":"217008:72:0"}]},"id":8707,"implemented":true,"kind":"function","modifiers":[],"name":"_depositFor","nameLocation":"216637:11:0","nodeType":"FunctionDefinition","parameters":{"id":8665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8662,"mutability":"mutable","name":"account","nameLocation":"216657:7:0","nodeType":"VariableDeclaration","scope":8707,"src":"216649:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8661,"name":"address","nodeType":"ElementaryTypeName","src":"216649:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8664,"mutability":"mutable","name":"amount","nameLocation":"216674:6:0","nodeType":"VariableDeclaration","scope":8707,"src":"216666:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8663,"name":"uint256","nodeType":"ElementaryTypeName","src":"216666:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"216648:33:0"},"returnParameters":{"id":8668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8667,"mutability":"mutable","name":"totalAvailableCredit","nameLocation":"216708:20:0","nodeType":"VariableDeclaration","scope":8707,"src":"216700:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8666,"name":"uint256","nodeType":"ElementaryTypeName","src":"216700:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"216699:30:0"},"scope":8765,"src":"216628:459:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8740,"nodeType":"Block","src":"217195:284:0","statements":[{"expression":{"id":8723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8716,"name":"totalAvailableCredit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"217205:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":8719,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"217261:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"217265:6:0","memberName":"sender","nodeType":"MemberAccess","src":"217261:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8721,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8711,"src":"217273:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8717,"name":"_CHARGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8433,"src":"217228:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBankCharger_$3510","typeString":"contract IFeeBankCharger"}},"id":8718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"217237:23:0","memberName":"decreaseAvailableCredit","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"217228:32:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) external returns (uint256)"}},"id":8722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"217228:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"217205:75:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8724,"nodeType":"ExpressionStatement","src":"217205:75:0"},{"id":8732,"nodeType":"UncheckedBlock","src":"217290:133:0","statements":[{"expression":{"id":8730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8725,"name":"_accountDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8437,"src":"217314:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8728,"indexExpression":{"expression":{"id":8726,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"217331:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"217335:6:0","memberName":"sender","nodeType":"MemberAccess","src":"217331:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"217314:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8729,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8711,"src":"217346:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"217314:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8731,"nodeType":"ExpressionStatement","src":"217314:38:0"}]},{"expression":{"arguments":[{"id":8736,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8709,"src":"217456:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8737,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8711,"src":"217465:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8733,"name":"_FEE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"217432:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":8735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"217443:12:0","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"217432:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"217432:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8739,"nodeType":"ExpressionStatement","src":"217432:40:0"}]},"id":8741,"implemented":true,"kind":"function","modifiers":[],"name":"_withdrawTo","nameLocation":"217102:11:0","nodeType":"FunctionDefinition","parameters":{"id":8712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8709,"mutability":"mutable","name":"account","nameLocation":"217122:7:0","nodeType":"VariableDeclaration","scope":8741,"src":"217114:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8708,"name":"address","nodeType":"ElementaryTypeName","src":"217114:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8711,"mutability":"mutable","name":"amount","nameLocation":"217139:6:0","nodeType":"VariableDeclaration","scope":8741,"src":"217131:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8710,"name":"uint256","nodeType":"ElementaryTypeName","src":"217131:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"217113:33:0"},"returnParameters":{"id":8715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8714,"mutability":"mutable","name":"totalAvailableCredit","nameLocation":"217173:20:0","nodeType":"VariableDeclaration","scope":8741,"src":"217165:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8713,"name":"uint256","nodeType":"ElementaryTypeName","src":"217165:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"217164:30:0"},"scope":8765,"src":"217093:386:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8763,"nodeType":"Block","src":"217735:63:0","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":8757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"217771:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"217775:6:0","memberName":"sender","nodeType":"MemberAccess","src":"217771:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"217763:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8755,"name":"address","nodeType":"ElementaryTypeName","src":"217763:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":8759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"217763:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":8760,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8747,"src":"217784:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8752,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8745,"src":"217745:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":8754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"217751:11:0","memberName":"uniTransfer","nodeType":"MemberAccess","referencedDeclaration":7734,"src":"217745:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address payable,uint256)"}},"id":8761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"217745:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8762,"nodeType":"ExpressionStatement","src":"217745:46:0"}]},"documentation":{"id":8742,"nodeType":"StructuredDocumentation","src":"217485:175:0","text":" @notice Retrieves funds accidently sent directly to the contract address\n @param token ERC20 token to retrieve\n @param amount amount to retrieve"},"functionSelector":"78e3214f","id":8764,"implemented":true,"kind":"function","modifiers":[{"id":8750,"kind":"modifierInvocation","modifierName":{"id":8749,"name":"onlyOwner","nameLocations":["217725:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":4096,"src":"217725:9:0"},"nodeType":"ModifierInvocation","src":"217725:9:0"}],"name":"rescueFunds","nameLocation":"217674:11:0","nodeType":"FunctionDefinition","parameters":{"id":8748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8745,"mutability":"mutable","name":"token","nameLocation":"217693:5:0","nodeType":"VariableDeclaration","scope":8764,"src":"217686:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":8744,"nodeType":"UserDefinedTypeName","pathNode":{"id":8743,"name":"IERC20","nameLocations":["217686:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"217686:6:0"},"referencedDeclaration":379,"src":"217686:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8747,"mutability":"mutable","name":"amount","nameLocation":"217708:6:0","nodeType":"VariableDeclaration","scope":8764,"src":"217700:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8746,"name":"uint256","nodeType":"ElementaryTypeName","src":"217700:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"217685:30:0"},"returnParameters":{"id":8751,"nodeType":"ParameterList","parameters":[],"src":"217735:0:0"},"scope":8765,"src":"217665:133:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10322,"src":"213668:4132:0","usedErrors":[4051,4056,6574,6576,7604,7614,8427],"usedEvents":[4062]},{"abstract":true,"baseContracts":[{"baseName":{"id":8767,"name":"BaseEscrow","nameLocations":["218116:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":8260,"src":"218116:10:0"},"id":8768,"nodeType":"InheritanceSpecifier","src":"218116:10:0"},{"baseName":{"id":8769,"name":"IEscrow","nameLocations":["218128:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":5828,"src":"218128:7:0"},"id":8770,"nodeType":"InheritanceSpecifier","src":"218128:7:0"}],"canonicalName":"Escrow","contractDependencies":[],"contractKind":"contract","documentation":{"id":8766,"nodeType":"StructuredDocumentation","src":"217858:229:0","text":" @title Abstract Escrow contract for cross-chain atomic swap.\n @dev {IBaseEscrow-withdraw} and {IBaseEscrow-cancel} functions must be implemented in the derived contracts.\n @custom:security-contact security@1inch.io"},"fullyImplemented":false,"id":8816,"linearizedBaseContracts":[8816,5828,8260,4272],"name":"Escrow","nameLocation":"218106:6:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8774,"libraryName":{"id":8771,"name":"ImmutablesLib","nameLocations":["218148:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":6199,"src":"218148:13:0"},"nodeType":"UsingForDirective","src":"218142:35:0","typeName":{"id":8773,"nodeType":"UserDefinedTypeName","pathNode":{"id":8772,"name":"Immutables","nameLocations":["218166:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"218166:10:0"},"referencedDeclaration":4207,"src":"218166:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}}},{"baseFunctions":[5827],"constant":false,"documentation":{"id":8775,"nodeType":"StructuredDocumentation","src":"218183:46:0","text":"@notice See {IEscrow-PROXY_BYTECODE_HASH}."},"functionSelector":"34862b6a","id":8784,"mutability":"immutable","name":"PROXY_BYTECODE_HASH","nameLocation":"218259:19:0","nodeType":"VariableDeclaration","scope":8816,"src":"218234:99:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"218234:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"arguments":[{"id":8781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"218327:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Escrow_$8816","typeString":"contract Escrow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Escrow_$8816","typeString":"contract Escrow"}],"id":8780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"218319:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8779,"name":"address","nodeType":"ElementaryTypeName","src":"218319:7:0","typeDescriptions":{}}},"id":8782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"218319:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8777,"name":"ProxyHashLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"218281:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ProxyHashLib_$1060_$","typeString":"type(library ProxyHashLib)"}},"id":8778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"218294:24:0","memberName":"computeProxyBytecodeHash","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"218281:37:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":8783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"218281:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"baseFunctions":[8249],"body":{"id":8814,"nodeType":"Block","src":"218540:190:0","statements":[{"assignments":[8793],"declarations":[{"constant":false,"id":8793,"mutability":"mutable","name":"salt","nameLocation":"218558:4:0","nodeType":"VariableDeclaration","scope":8814,"src":"218550:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"218550:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8797,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8794,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8788,"src":"218565:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":8795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"218576:4:0","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":6187,"src":"218565:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Immutables_$4207_calldata_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_Immutables_$4207_calldata_ptr_$","typeString":"function (struct IBaseEscrow.Immutables calldata) pure returns (bytes32)"}},"id":8796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"218565:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"218550:32:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8800,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8793,"src":"218619:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8801,"name":"PROXY_BYTECODE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8784,"src":"218625:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8802,"name":"FACTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"218646:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8798,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"218596:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$3452_$","typeString":"type(library Create2)"}},"id":8799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"218604:14:0","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"218596:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":8803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"218596:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":8806,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"218666:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Escrow_$8816","typeString":"contract Escrow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Escrow_$8816","typeString":"contract Escrow"}],"id":8805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"218658:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8804,"name":"address","nodeType":"ElementaryTypeName","src":"218658:7:0","typeDescriptions":{}}},"id":8807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"218658:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"218596:75:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8813,"nodeType":"IfStatement","src":"218592:132:0","trueBody":{"id":8812,"nodeType":"Block","src":"218673:51:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8809,"name":"InvalidImmutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"218694:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"218694:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8811,"nodeType":"RevertStatement","src":"218687:26:0"}]}}]},"documentation":{"id":8785,"nodeType":"StructuredDocumentation","src":"218340:103:0","text":" @dev Verifies that the computed escrow address matches the address of this contract."},"id":8815,"implemented":true,"kind":"function","modifiers":[],"name":"_validateImmutables","nameLocation":"218457:19:0","nodeType":"FunctionDefinition","overrides":{"id":8790,"nodeType":"OverrideSpecifier","overrides":[],"src":"218531:8:0"},"parameters":{"id":8789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8788,"mutability":"mutable","name":"immutables","nameLocation":"218497:10:0","nodeType":"VariableDeclaration","scope":8815,"src":"218477:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":8787,"nodeType":"UserDefinedTypeName","pathNode":{"id":8786,"name":"Immutables","nameLocations":["218477:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"218477:10:0"},"referencedDeclaration":4207,"src":"218477:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"218476:32:0"},"returnParameters":{"id":8791,"nodeType":"ParameterList","parameters":[],"src":"218540:0:0"},"scope":8816,"src":"218448:282:0","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":10322,"src":"218088:644:0","usedErrors":[4224,4226,4228,4230,4232,6574],"usedEvents":[4210,4217,4222]},{"abstract":false,"baseContracts":[{"baseName":{"id":8818,"name":"IFeeBankCharger","nameLocations":["218988:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":3510,"src":"218988:15:0"},"id":8819,"nodeType":"InheritanceSpecifier","src":"218988:15:0"}],"canonicalName":"FeeBankCharger","contractDependencies":[8765],"contractKind":"contract","documentation":{"id":8817,"nodeType":"StructuredDocumentation","src":"218825:135:0","text":" @title FeeBankCharger\n @notice FeeBankCharger contract implements logic to increase or decrease users' credits in FeeBank."},"fullyImplemented":true,"id":8965,"linearizedBaseContracts":[8965,3510],"name":"FeeBankCharger","nameLocation":"218970:14:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"a4544199","id":8821,"name":"OnlyFeeBankAccess","nameLocation":"219016:17:0","nodeType":"ErrorDefinition","parameters":{"id":8820,"nodeType":"ParameterList","parameters":[],"src":"219033:2:0"},"src":"219010:26:0"},{"errorSelector":"a7fd3792","id":8823,"name":"NotEnoughCredit","nameLocation":"219047:15:0","nodeType":"ErrorDefinition","parameters":{"id":8822,"nodeType":"ParameterList","parameters":[],"src":"219062:2:0"},"src":"219041:24:0"},{"baseFunctions":[3481],"constant":false,"documentation":{"id":8824,"nodeType":"StructuredDocumentation","src":"219071:57:0","text":" @notice See {IFeeBankCharger-feeBank}."},"functionSelector":"2ce26aeb","id":8827,"mutability":"immutable","name":"FEE_BANK","nameLocation":"219159:8:0","nodeType":"VariableDeclaration","scope":8965,"src":"219133:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBank_$510","typeString":"contract IFeeBank"},"typeName":{"id":8826,"nodeType":"UserDefinedTypeName","pathNode":{"id":8825,"name":"IFeeBank","nameLocations":["219133:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":510,"src":"219133:8:0"},"referencedDeclaration":510,"src":"219133:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBank_$510","typeString":"contract IFeeBank"}},"visibility":"public"},{"constant":false,"id":8831,"mutability":"mutable","name":"_creditAllowance","nameLocation":"219209:16:0","nodeType":"VariableDeclaration","scope":8965,"src":"219173:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8830,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8828,"name":"address","nodeType":"ElementaryTypeName","src":"219181:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"219173:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8829,"name":"uint256","nodeType":"ElementaryTypeName","src":"219192:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":8846,"nodeType":"Block","src":"219339:91:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8834,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"219353:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"219357:6:0","memberName":"sender","nodeType":"MemberAccess","src":"219353:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":8838,"name":"FEE_BANK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"219375:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBank_$510","typeString":"contract IFeeBank"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IFeeBank_$510","typeString":"contract IFeeBank"}],"id":8837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"219367:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8836,"name":"address","nodeType":"ElementaryTypeName","src":"219367:7:0","typeDescriptions":{}}},"id":8839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"219367:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"219353:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8844,"nodeType":"IfStatement","src":"219349:63:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8841,"name":"OnlyFeeBankAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"219393:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"219393:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8843,"nodeType":"RevertStatement","src":"219386:26:0"}},{"id":8845,"nodeType":"PlaceholderStatement","src":"219422:1:0"}]},"documentation":{"id":8832,"nodeType":"StructuredDocumentation","src":"219232:79:0","text":" @dev Modifier to check if the sender is a FEE_BANK contract."},"id":8847,"name":"onlyFeeBank","nameLocation":"219325:11:0","nodeType":"ModifierDefinition","parameters":{"id":8833,"nodeType":"ParameterList","parameters":[],"src":"219336:2:0"},"src":"219316:114:0","virtual":false,"visibility":"internal"},{"body":{"id":8865,"nodeType":"Block","src":"219480:62:0","statements":[{"expression":{"id":8863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8855,"name":"FEE_BANK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"219490:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBank_$510","typeString":"contract IFeeBank"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8859,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"219513:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_FeeBankCharger_$8965","typeString":"contract FeeBankCharger"}},{"id":8860,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8850,"src":"219519:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"id":8861,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"219529:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FeeBankCharger_$8965","typeString":"contract FeeBankCharger"},{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"219501:11:0","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_contract$_IFeeBankCharger_$3510_$_t_contract$_IERC20_$379_$_t_address_$returns$_t_contract$_FeeBank_$8765_$","typeString":"function (contract IFeeBankCharger,contract IERC20,address) returns (contract FeeBank)"},"typeName":{"id":8857,"nodeType":"UserDefinedTypeName","pathNode":{"id":8856,"name":"FeeBank","nameLocations":["219505:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":8765,"src":"219505:7:0"},"referencedDeclaration":8765,"src":"219505:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_FeeBank_$8765","typeString":"contract FeeBank"}}},"id":8862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"219501:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_FeeBank_$8765","typeString":"contract FeeBank"}},"src":"219490:45:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFeeBank_$510","typeString":"contract IFeeBank"}},"id":8864,"nodeType":"ExpressionStatement","src":"219490:45:0"}]},"id":8866,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8850,"mutability":"mutable","name":"feeToken","nameLocation":"219455:8:0","nodeType":"VariableDeclaration","scope":8866,"src":"219448:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":8849,"nodeType":"UserDefinedTypeName","pathNode":{"id":8848,"name":"IERC20","nameLocations":["219448:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"219448:6:0"},"referencedDeclaration":379,"src":"219448:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8852,"mutability":"mutable","name":"owner","nameLocation":"219473:5:0","nodeType":"VariableDeclaration","scope":8866,"src":"219465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8851,"name":"address","nodeType":"ElementaryTypeName","src":"219465:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"219447:32:0"},"returnParameters":{"id":8854,"nodeType":"ParameterList","parameters":[],"src":"219480:0:0"},"scope":8965,"src":"219436:106:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3489],"body":{"id":8878,"nodeType":"Block","src":"219692:49:0","statements":[{"expression":{"baseExpression":{"id":8874,"name":"_creditAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"219709:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8876,"indexExpression":{"id":8875,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"219726:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"219709:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8873,"id":8877,"nodeType":"Return","src":"219702:32:0"}]},"documentation":{"id":8867,"nodeType":"StructuredDocumentation","src":"219548:65:0","text":" @notice See {IFeeBankCharger-availableCredit}."},"functionSelector":"5886216f","id":8879,"implemented":true,"kind":"function","modifiers":[],"name":"availableCredit","nameLocation":"219627:15:0","nodeType":"FunctionDefinition","parameters":{"id":8870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8869,"mutability":"mutable","name":"account","nameLocation":"219651:7:0","nodeType":"VariableDeclaration","scope":8879,"src":"219643:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8868,"name":"address","nodeType":"ElementaryTypeName","src":"219643:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"219642:17:0"},"returnParameters":{"id":8873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8879,"src":"219683:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8871,"name":"uint256","nodeType":"ElementaryTypeName","src":"219683:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"219682:9:0"},"scope":8965,"src":"219618:123:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3499],"body":{"id":8908,"nodeType":"Block","src":"219940:220:0","statements":[{"expression":{"id":8895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8891,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8889,"src":"219950:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8892,"name":"_creditAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"219962:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8894,"indexExpression":{"id":8893,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8882,"src":"219979:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"219962:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"219950:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8896,"nodeType":"ExpressionStatement","src":"219950:37:0"},{"id":8901,"nodeType":"UncheckedBlock","src":"219997:110:0","statements":[{"expression":{"id":8899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8897,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8889,"src":"220021:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8898,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"220034:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"220021:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8900,"nodeType":"ExpressionStatement","src":"220021:19:0"}]},{"expression":{"id":8906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8902,"name":"_creditAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"220116:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8904,"indexExpression":{"id":8903,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8882,"src":"220133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"220116:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8905,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8889,"src":"220144:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"220116:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8907,"nodeType":"ExpressionStatement","src":"220116:37:0"}]},"documentation":{"id":8880,"nodeType":"StructuredDocumentation","src":"219747:73:0","text":" @notice See {IFeeBankCharger-increaseAvailableCredit}."},"functionSelector":"3ee5ef1f","id":8909,"implemented":true,"kind":"function","modifiers":[{"id":8887,"kind":"modifierInvocation","modifierName":{"id":8886,"name":"onlyFeeBank","nameLocations":["219900:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":8847,"src":"219900:11:0"},"nodeType":"ModifierInvocation","src":"219900:11:0"}],"name":"increaseAvailableCredit","nameLocation":"219834:23:0","nodeType":"FunctionDefinition","parameters":{"id":8885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8882,"mutability":"mutable","name":"account","nameLocation":"219866:7:0","nodeType":"VariableDeclaration","scope":8909,"src":"219858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8881,"name":"address","nodeType":"ElementaryTypeName","src":"219858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8884,"mutability":"mutable","name":"amount","nameLocation":"219883:6:0","nodeType":"VariableDeclaration","scope":8909,"src":"219875:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8883,"name":"uint256","nodeType":"ElementaryTypeName","src":"219875:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"219857:33:0"},"returnParameters":{"id":8890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8889,"mutability":"mutable","name":"allowance","nameLocation":"219929:9:0","nodeType":"VariableDeclaration","scope":8909,"src":"219921:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8888,"name":"uint256","nodeType":"ElementaryTypeName","src":"219921:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"219920:19:0"},"scope":8965,"src":"219825:335:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3509],"body":{"id":8927,"nodeType":"Block","src":"220359:107:0","statements":[{"expression":{"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8921,"name":"_creditAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"220376:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8923,"indexExpression":{"id":8922,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"220393:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"220376:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8924,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"220405:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"220376:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8920,"id":8926,"nodeType":"Return","src":"220369:42:0"}]},"documentation":{"id":8910,"nodeType":"StructuredDocumentation","src":"220166:73:0","text":" @notice See {IFeeBankCharger-decreaseAvailableCredit}."},"functionSelector":"85eda2de","id":8928,"implemented":true,"kind":"function","modifiers":[{"id":8917,"kind":"modifierInvocation","modifierName":{"id":8916,"name":"onlyFeeBank","nameLocations":["220319:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":8847,"src":"220319:11:0"},"nodeType":"ModifierInvocation","src":"220319:11:0"}],"name":"decreaseAvailableCredit","nameLocation":"220253:23:0","nodeType":"FunctionDefinition","parameters":{"id":8915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8912,"mutability":"mutable","name":"account","nameLocation":"220285:7:0","nodeType":"VariableDeclaration","scope":8928,"src":"220277:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8911,"name":"address","nodeType":"ElementaryTypeName","src":"220277:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8914,"mutability":"mutable","name":"amount","nameLocation":"220302:6:0","nodeType":"VariableDeclaration","scope":8928,"src":"220294:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8913,"name":"uint256","nodeType":"ElementaryTypeName","src":"220294:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"220276:33:0"},"returnParameters":{"id":8920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8919,"mutability":"mutable","name":"allowance","nameLocation":"220348:9:0","nodeType":"VariableDeclaration","scope":8928,"src":"220340:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8918,"name":"uint256","nodeType":"ElementaryTypeName","src":"220340:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"220339:19:0"},"scope":8965,"src":"220244:222:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8963,"nodeType":"Block","src":"220923:278:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8936,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"220937:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"220943:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"220937:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8962,"nodeType":"IfStatement","src":"220933:262:0","trueBody":{"id":8961,"nodeType":"Block","src":"220946:249:0","statements":[{"assignments":[8940],"declarations":[{"constant":false,"id":8940,"mutability":"mutable","name":"currentAllowance","nameLocation":"220968:16:0","nodeType":"VariableDeclaration","scope":8961,"src":"220960:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8939,"name":"uint256","nodeType":"ElementaryTypeName","src":"220960:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8944,"initialValue":{"baseExpression":{"id":8941,"name":"_creditAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"220987:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8943,"indexExpression":{"id":8942,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"221004:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"220987:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"220960:52:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8945,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8940,"src":"221030:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8946,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"221049:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"221030:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8951,"nodeType":"IfStatement","src":"221026:52:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8948,"name":"NotEnoughCredit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8823,"src":"221061:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"221061:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8950,"nodeType":"RevertStatement","src":"221054:24:0"}},{"id":8960,"nodeType":"UncheckedBlock","src":"221092:93:0","statements":[{"expression":{"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8952,"name":"_creditAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"221120:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8954,"indexExpression":{"id":8953,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"221137:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"221120:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8955,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8940,"src":"221148:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8956,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"221167:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"221148:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"221120:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8959,"nodeType":"ExpressionStatement","src":"221120:50:0"}]}]}}]},"documentation":{"id":8929,"nodeType":"StructuredDocumentation","src":"220472:379:0","text":" @notice Internal function that charges a specified fee from a given account's credit allowance.\n @dev Reverts with 'NotEnoughCredit' if the account's credit allowance is insufficient to cover the fee.\n @param account The address of the account from which the fee is being charged.\n @param fee The amount of fee to be charged from the account."},"id":8964,"implemented":true,"kind":"function","modifiers":[],"name":"_chargeFee","nameLocation":"220865:10:0","nodeType":"FunctionDefinition","parameters":{"id":8934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8931,"mutability":"mutable","name":"account","nameLocation":"220884:7:0","nodeType":"VariableDeclaration","scope":8964,"src":"220876:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8930,"name":"address","nodeType":"ElementaryTypeName","src":"220876:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8933,"mutability":"mutable","name":"fee","nameLocation":"220901:3:0","nodeType":"VariableDeclaration","scope":8964,"src":"220893:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8932,"name":"uint256","nodeType":"ElementaryTypeName","src":"220893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"220875:30:0"},"returnParameters":{"id":8935,"nodeType":"ParameterList","parameters":[],"src":"220923:0:0"},"scope":8965,"src":"220856:345:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":10322,"src":"218961:2242:0","usedErrors":[8821,8823],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":8967,"name":"Escrow","nameLocations":["221758:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":8816,"src":"221758:6:0"},"id":8968,"nodeType":"InheritanceSpecifier","src":"221758:6:0"},{"baseName":{"id":8969,"name":"IEscrowDst","nameLocations":["221766:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":6255,"src":"221766:10:0"},"id":8970,"nodeType":"InheritanceSpecifier","src":"221766:10:0"}],"canonicalName":"EscrowDst","contractDependencies":[],"contractKind":"contract","documentation":{"id":8966,"nodeType":"StructuredDocumentation","src":"221264:471:0","text":" @title Destination Escrow contract for cross-chain atomic swap.\n @notice Contract to initially lock funds and then unlock them with verification of the secret presented.\n @dev Funds are locked in at the time of contract deployment. For this taker calls the `EscrowFactory.createDstEscrow` function.\n To perform any action, the caller must provide the same Immutables values used to deploy the clone contract.\n @custom:security-contact security@1inch.io"},"fullyImplemented":true,"id":9176,"linearizedBaseContracts":[9176,6255,8816,5828,8260,4272],"name":"EscrowDst","nameLocation":"221745:9:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8974,"libraryName":{"id":8971,"name":"SafeERC20","nameLocations":["221789:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":7075,"src":"221789:9:0"},"nodeType":"UsingForDirective","src":"221783:27:0","typeName":{"id":8973,"nodeType":"UserDefinedTypeName","pathNode":{"id":8972,"name":"IERC20","nameLocations":["221803:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"221803:6:0"},"referencedDeclaration":379,"src":"221803:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}},{"global":false,"id":8978,"libraryName":{"id":8975,"name":"AddressLib","nameLocations":["221821:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":102,"src":"221821:10:0"},"nodeType":"UsingForDirective","src":"221815:29:0","typeName":{"id":8977,"nodeType":"UserDefinedTypeName","pathNode":{"id":8976,"name":"Address","nameLocations":["221836:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"221836:7:0"},"referencedDeclaration":3,"src":"221836:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}},{"global":false,"id":8982,"libraryName":{"id":8979,"name":"TimelocksLib","nameLocations":["221855:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"221855:12:0"},"nodeType":"UsingForDirective","src":"221849:33:0","typeName":{"id":8981,"nodeType":"UserDefinedTypeName","pathNode":{"id":8980,"name":"Timelocks","nameLocations":["221872:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"221872:9:0"},"referencedDeclaration":3086,"src":"221872:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}}},{"body":{"id":8990,"nodeType":"Block","src":"221944:2:0","statements":[]},"id":8991,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8987,"name":"rescueDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8984,"src":"221931:11:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":8988,"kind":"baseConstructorSpecifier","modifierName":{"id":8986,"name":"BaseEscrow","nameLocations":["221920:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":8260,"src":"221920:10:0"},"nodeType":"ModifierInvocation","src":"221920:23:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8984,"mutability":"mutable","name":"rescueDelay","nameLocation":"221907:11:0","nodeType":"VariableDeclaration","scope":8991,"src":"221900:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8983,"name":"uint32","nodeType":"ElementaryTypeName","src":"221900:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"221899:20:0"},"returnParameters":{"id":8989,"nodeType":"ParameterList","parameters":[],"src":"221944:0:0"},"scope":9176,"src":"221888:58:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4253],"body":{"id":9026,"nodeType":"Block","src":"222500:46:0","statements":[{"expression":{"arguments":[{"id":9022,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"222520:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9023,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"222528:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}],"id":9021,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"222510:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_struct$_Immutables_$4207_calldata_ptr_$returns$__$","typeString":"function (bytes32,struct IBaseEscrow.Immutables calldata)"}},"id":9024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"222510:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9025,"nodeType":"ExpressionStatement","src":"222510:29:0"}]},"documentation":{"id":8992,"nodeType":"StructuredDocumentation","src":"221952:267:0","text":" @notice See {IBaseEscrow-withdraw}.\n @dev The function works on the time intervals highlighted with capital letters:\n ---- contract deployed --/-- finality --/-- PRIVATE WITHDRAWAL --/-- PUBLIC WITHDRAWAL --/-- private cancellation ----"},"functionSelector":"23305703","id":9027,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9000,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"222325:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":9001,"kind":"modifierInvocation","modifierName":{"id":8999,"name":"onlyTaker","nameLocations":["222315:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8090,"src":"222315:9:0"},"nodeType":"ModifierInvocation","src":"222315:21:0"},{"arguments":[{"arguments":[{"expression":{"expression":{"id":9006,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"222380:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"222393:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"222380:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"222399:13:0","memberName":"DstWithdrawal","nodeType":"MemberAccess","referencedDeclaration":3092,"src":"222380:32:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9003,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"222355:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"222366:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"222355:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"222376:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"222355:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"222355:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9010,"kind":"modifierInvocation","modifierName":{"id":9002,"name":"onlyAfter","nameLocations":["222345:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8134,"src":"222345:9:0"},"nodeType":"ModifierInvocation","src":"222345:69:0"},{"arguments":[{"arguments":[{"expression":{"expression":{"id":9015,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"222459:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"222472:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"222459:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"222478:15:0","memberName":"DstCancellation","nodeType":"MemberAccess","referencedDeclaration":3094,"src":"222459:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9012,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"222434:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"222445:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"222434:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"222455:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"222434:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"222434:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9019,"kind":"modifierInvocation","modifierName":{"id":9011,"name":"onlyBefore","nameLocations":["222423:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":8148,"src":"222423:10:0"},"nodeType":"ModifierInvocation","src":"222423:72:0"}],"name":"withdraw","nameLocation":"222233:8:0","nodeType":"FunctionDefinition","parameters":{"id":8998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8994,"mutability":"mutable","name":"secret","nameLocation":"222250:6:0","nodeType":"VariableDeclaration","scope":9027,"src":"222242:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"222242:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8997,"mutability":"mutable","name":"immutables","nameLocation":"222278:10:0","nodeType":"VariableDeclaration","scope":9027,"src":"222258:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":8996,"nodeType":"UserDefinedTypeName","pathNode":{"id":8995,"name":"Immutables","nameLocations":["222258:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"222258:10:0"},"referencedDeclaration":4207,"src":"222258:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"222241:48:0"},"returnParameters":{"id":9020,"nodeType":"ParameterList","parameters":[],"src":"222500:0:0"},"scope":9176,"src":"222224:322:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6254],"body":{"id":9059,"nodeType":"Block","src":"223088:46:0","statements":[{"expression":{"arguments":[{"id":9055,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9030,"src":"223108:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9056,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9033,"src":"223116:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}],"id":9054,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"223098:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_struct$_Immutables_$4207_calldata_ptr_$returns$__$","typeString":"function (bytes32,struct IBaseEscrow.Immutables calldata)"}},"id":9057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"223098:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9058,"nodeType":"ExpressionStatement","src":"223098:29:0"}]},"documentation":{"id":9028,"nodeType":"StructuredDocumentation","src":"222552:273:0","text":" @notice See {IBaseEscrow-publicWithdraw}.\n @dev The function works on the time intervals highlighted with capital letters:\n ---- contract deployed --/-- finality --/-- private withdrawal --/-- PUBLIC WITHDRAWAL --/-- private cancellation ----"},"functionSelector":"0af97558","id":9060,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"expression":{"expression":{"id":9039,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"222962:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"222975:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"222962:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"222981:19:0","memberName":"DstPublicWithdrawal","nodeType":"MemberAccess","referencedDeclaration":3093,"src":"222962:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9036,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9033,"src":"222937:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"222948:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"222937:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"222958:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"222937:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"222937:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9043,"kind":"modifierInvocation","modifierName":{"id":9035,"name":"onlyAfter","nameLocations":["222927:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8134,"src":"222927:9:0"},"nodeType":"ModifierInvocation","src":"222927:75:0"},{"arguments":[{"arguments":[{"expression":{"expression":{"id":9048,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"223047:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223060:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"223047:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"223066:15:0","memberName":"DstCancellation","nodeType":"MemberAccess","referencedDeclaration":3094,"src":"223047:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9045,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9033,"src":"223022:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223033:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"223022:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223043:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"223022:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"223022:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9052,"kind":"modifierInvocation","modifierName":{"id":9044,"name":"onlyBefore","nameLocations":["223011:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":8148,"src":"223011:10:0"},"nodeType":"ModifierInvocation","src":"223011:72:0"}],"name":"publicWithdraw","nameLocation":"222839:14:0","nodeType":"FunctionDefinition","parameters":{"id":9034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9030,"mutability":"mutable","name":"secret","nameLocation":"222862:6:0","nodeType":"VariableDeclaration","scope":9060,"src":"222854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"222854:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9033,"mutability":"mutable","name":"immutables","nameLocation":"222890:10:0","nodeType":"VariableDeclaration","scope":9060,"src":"222870:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":9032,"nodeType":"UserDefinedTypeName","pathNode":{"id":9031,"name":"Immutables","nameLocations":["222870:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"222870:10:0"},"referencedDeclaration":4207,"src":"222870:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"222853:48:0"},"returnParameters":{"id":9053,"nodeType":"ParameterList","parameters":[],"src":"223088:0:0"},"scope":9176,"src":"222830:304:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4260],"body":{"id":9105,"nodeType":"Block","src":"223628:188:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9083,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"223651:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223662:5:0","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":4199,"src":"223651:16:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":9085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223668:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"223651:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":9086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"223651:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9087,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"223675:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223686:5:0","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"223675:16:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":9089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223692:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"223675:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":9090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"223675:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9091,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"223699:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223710:6:0","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":4201,"src":"223699:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9082,"name":"_uniTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"223638:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"223638:79:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9094,"nodeType":"ExpressionStatement","src":"223638:79:0"},{"expression":{"arguments":[{"expression":{"id":9096,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"223740:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223744:6:0","memberName":"sender","nodeType":"MemberAccess","src":"223740:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9098,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"223752:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223763:13:0","memberName":"safetyDeposit","nodeType":"MemberAccess","referencedDeclaration":4203,"src":"223752:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9095,"name":"_ethTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"223727:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"223727:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9101,"nodeType":"ExpressionStatement","src":"223727:50:0"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9102,"name":"EscrowCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"223792:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"223792:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9104,"nodeType":"EmitStatement","src":"223787:22:0"}]},"documentation":{"id":9061,"nodeType":"StructuredDocumentation","src":"223140:264:0","text":" @notice See {IBaseEscrow-cancel}.\n @dev The function works on the time interval highlighted with capital letters:\n ---- contract deployed --/-- finality --/-- private withdrawal --/-- public withdrawal --/-- PRIVATE CANCELLATION ----"},"functionSelector":"90d3252f","id":9106,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9067,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"223492:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":9068,"kind":"modifierInvocation","modifierName":{"id":9066,"name":"onlyTaker","nameLocations":["223482:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8090,"src":"223482:9:0"},"nodeType":"ModifierInvocation","src":"223482:21:0"},{"arguments":[{"id":9070,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"223532:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":9071,"kind":"modifierInvocation","modifierName":{"id":9069,"name":"onlyValidImmutables","nameLocations":["223512:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":8101,"src":"223512:19:0"},"nodeType":"ModifierInvocation","src":"223512:31:0"},{"arguments":[{"arguments":[{"expression":{"expression":{"id":9076,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"223587:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223600:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"223587:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"223606:15:0","memberName":"DstCancellation","nodeType":"MemberAccess","referencedDeclaration":3094,"src":"223587:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9073,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"223562:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223573:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"223562:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"223583:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"223562:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"223562:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9080,"kind":"modifierInvocation","modifierName":{"id":9072,"name":"onlyAfter","nameLocations":["223552:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8134,"src":"223552:9:0"},"nodeType":"ModifierInvocation","src":"223552:71:0"}],"name":"cancel","nameLocation":"223418:6:0","nodeType":"FunctionDefinition","parameters":{"id":9065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9064,"mutability":"mutable","name":"immutables","nameLocation":"223445:10:0","nodeType":"VariableDeclaration","scope":9106,"src":"223425:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":9063,"nodeType":"UserDefinedTypeName","pathNode":{"id":9062,"name":"Immutables","nameLocations":["223425:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"223425:10:0"},"referencedDeclaration":4207,"src":"223425:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"223424:32:0"},"returnParameters":{"id":9081,"nodeType":"ParameterList","parameters":[],"src":"223628:0:0"},"scope":9176,"src":"223409:407:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9174,"nodeType":"Block","src":"224184:667:0","statements":[{"assignments":[9123],"declarations":[{"constant":false,"id":9123,"mutability":"mutable","name":"token","nameLocation":"224202:5:0","nodeType":"VariableDeclaration","scope":9174,"src":"224194:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9122,"name":"address","nodeType":"ElementaryTypeName","src":"224194:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9128,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9124,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"224210:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"224221:5:0","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":4199,"src":"224210:16:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":9126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"224227:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"224210:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":9127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"224210:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"224194:38:0"},{"assignments":[9130],"declarations":[{"constant":false,"id":9130,"mutability":"mutable","name":"to","nameLocation":"224250:2:0","nodeType":"VariableDeclaration","scope":9174,"src":"224242:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9129,"name":"address","nodeType":"ElementaryTypeName","src":"224242:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9135,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9131,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"224255:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"224266:5:0","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":4193,"src":"224255:16:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":9133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"224272:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"224255:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":9134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"224255:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"224242:35:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9136,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9123,"src":"224291:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"224308:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"224300:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9137,"name":"address","nodeType":"ElementaryTypeName","src":"224300:7:0","typeDescriptions":{}}},"id":9140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"224300:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"224291:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9161,"nodeType":"Block","src":"224678:74:0","statements":[{"expression":{"arguments":[{"id":9156,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9130,"src":"224719:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9157,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"224723:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"224734:6:0","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":4201,"src":"224723:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":9153,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9123,"src":"224699:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9152,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"224692:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$379_$","typeString":"type(contract IERC20)"}},"id":9154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"224692:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":9155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"224706:12:0","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"224692:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address,uint256)"}},"id":9159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"224692:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9160,"nodeType":"ExpressionStatement","src":"224692:49:0"}]},"id":9162,"nodeType":"IfStatement","src":"224287:465:0","trueBody":{"id":9151,"nodeType":"Block","src":"224312:360:0","statements":[{"documentation":" @dev The result of the call is not checked intentionally. This is done to ensure that\n even in case of malicious receiver the withdrawal flow can not be blocked and takers\n will be able to get their safety deposit back.*","expression":{"arguments":[{"hexValue":"","id":9148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"224658:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":9142,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9130,"src":"224622:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"224625:4:0","memberName":"call","nodeType":"MemberAccess","src":"224622:7:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":9145,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"224638:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"224649:6:0","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":4201,"src":"224638:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"224622:35:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"224622:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"id":9150,"nodeType":"ExpressionStatement","src":"224622:39:0"}]}},{"expression":{"arguments":[{"expression":{"id":9164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"224774:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"224778:6:0","memberName":"sender","nodeType":"MemberAccess","src":"224774:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9166,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"224786:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"224797:13:0","memberName":"safetyDeposit","nodeType":"MemberAccess","referencedDeclaration":4203,"src":"224786:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9163,"name":"_ethTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"224761:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"224761:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9169,"nodeType":"ExpressionStatement","src":"224761:50:0"},{"eventCall":{"arguments":[{"id":9171,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9109,"src":"224837:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9170,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"224826:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":9172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"224826:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9173,"nodeType":"EmitStatement","src":"224821:23:0"}]},"documentation":{"id":9107,"nodeType":"StructuredDocumentation","src":"223822:185:0","text":" @dev Transfers ERC20 (or native) tokens to the maker and native tokens to the caller.\n @param immutables The immutable values used to deploy the clone contract."},"id":9175,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9115,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"224124:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":9116,"kind":"modifierInvocation","modifierName":{"id":9114,"name":"onlyValidImmutables","nameLocations":["224104:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":8101,"src":"224104:19:0"},"nodeType":"ModifierInvocation","src":"224104:31:0"},{"arguments":[{"id":9118,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9109,"src":"224160:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9119,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"224168:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":9120,"kind":"modifierInvocation","modifierName":{"id":9117,"name":"onlyValidSecret","nameLocations":["224144:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":8120,"src":"224144:15:0"},"nodeType":"ModifierInvocation","src":"224144:35:0"}],"name":"_withdraw","nameLocation":"224021:9:0","nodeType":"FunctionDefinition","parameters":{"id":9113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9109,"mutability":"mutable","name":"secret","nameLocation":"224039:6:0","nodeType":"VariableDeclaration","scope":9175,"src":"224031:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"224031:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9112,"mutability":"mutable","name":"immutables","nameLocation":"224067:10:0","nodeType":"VariableDeclaration","scope":9175,"src":"224047:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":9111,"nodeType":"UserDefinedTypeName","pathNode":{"id":9110,"name":"Immutables","nameLocations":["224047:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"224047:10:0"},"referencedDeclaration":4207,"src":"224047:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"224030:48:0"},"returnParameters":{"id":9121,"nodeType":"ParameterList","parameters":[],"src":"224184:0:0"},"scope":9176,"src":"224012:839:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":10322,"src":"221736:3117:0","usedErrors":[4224,4226,4228,4230,4232,6574],"usedEvents":[4210,4217,4222]},{"abstract":false,"baseContracts":[{"baseName":{"id":9178,"name":"Escrow","nameLocations":["225421:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":8816,"src":"225421:6:0"},"id":9179,"nodeType":"InheritanceSpecifier","src":"225421:6:0"},{"baseName":{"id":9180,"name":"IEscrowSrc","nameLocations":["225429:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":6286,"src":"225429:10:0"},"id":9181,"nodeType":"InheritanceSpecifier","src":"225429:10:0"}],"canonicalName":"EscrowSrc","contractDependencies":[],"contractKind":"contract","documentation":{"id":9177,"nodeType":"StructuredDocumentation","src":"224914:484:0","text":" @title Source Escrow contract for cross-chain atomic swap.\n @notice Contract to initially lock funds and then unlock them with verification of the secret presented.\n @dev Funds are locked in at the time of contract deployment. For this Limit Order Protocol\n calls the `EscrowFactory.postInteraction` function.\n To perform any action, the caller must provide the same Immutables values used to deploy the clone contract.\n @custom:security-contact security@1inch.io"},"fullyImplemented":true,"id":9444,"linearizedBaseContracts":[9444,6286,8816,5828,8260,4272],"name":"EscrowSrc","nameLocation":"225408:9:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9185,"libraryName":{"id":9182,"name":"AddressLib","nameLocations":["225452:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":102,"src":"225452:10:0"},"nodeType":"UsingForDirective","src":"225446:29:0","typeName":{"id":9184,"nodeType":"UserDefinedTypeName","pathNode":{"id":9183,"name":"Address","nameLocations":["225467:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"225467:7:0"},"referencedDeclaration":3,"src":"225467:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}},{"global":false,"id":9189,"libraryName":{"id":9186,"name":"ImmutablesLib","nameLocations":["225486:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":6199,"src":"225486:13:0"},"nodeType":"UsingForDirective","src":"225480:35:0","typeName":{"id":9188,"nodeType":"UserDefinedTypeName","pathNode":{"id":9187,"name":"Immutables","nameLocations":["225504:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"225504:10:0"},"referencedDeclaration":4207,"src":"225504:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}}},{"global":false,"id":9193,"libraryName":{"id":9190,"name":"SafeERC20","nameLocations":["225526:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":7075,"src":"225526:9:0"},"nodeType":"UsingForDirective","src":"225520:27:0","typeName":{"id":9192,"nodeType":"UserDefinedTypeName","pathNode":{"id":9191,"name":"IERC20","nameLocations":["225540:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"225540:6:0"},"referencedDeclaration":379,"src":"225540:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}},{"global":false,"id":9197,"libraryName":{"id":9194,"name":"TimelocksLib","nameLocations":["225558:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"225558:12:0"},"nodeType":"UsingForDirective","src":"225552:33:0","typeName":{"id":9196,"nodeType":"UserDefinedTypeName","pathNode":{"id":9195,"name":"Timelocks","nameLocations":["225575:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"225575:9:0"},"referencedDeclaration":3086,"src":"225575:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}}},{"body":{"id":9205,"nodeType":"Block","src":"225647:2:0","statements":[]},"id":9206,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9202,"name":"rescueDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"225634:11:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":9203,"kind":"baseConstructorSpecifier","modifierName":{"id":9201,"name":"BaseEscrow","nameLocations":["225623:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":8260,"src":"225623:10:0"},"nodeType":"ModifierInvocation","src":"225623:23:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9199,"mutability":"mutable","name":"rescueDelay","nameLocation":"225610:11:0","nodeType":"VariableDeclaration","scope":9206,"src":"225603:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9198,"name":"uint32","nodeType":"ElementaryTypeName","src":"225603:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"225602:20:0"},"returnParameters":{"id":9204,"nodeType":"ParameterList","parameters":[],"src":"225647:0:0"},"scope":9444,"src":"225591:58:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4253],"body":{"id":9243,"nodeType":"Block","src":"226241:60:0","statements":[{"expression":{"arguments":[{"id":9237,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9209,"src":"226263:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9238,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"226271:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226275:6:0","memberName":"sender","nodeType":"MemberAccess","src":"226271:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9240,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"226283:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}],"id":9236,"name":"_withdrawTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9407,"src":"226251:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_struct$_Immutables_$4207_calldata_ptr_$returns$__$","typeString":"function (bytes32,address,struct IBaseEscrow.Immutables calldata)"}},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"226251:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9242,"nodeType":"ExpressionStatement","src":"226251:43:0"}]},"documentation":{"id":9207,"nodeType":"StructuredDocumentation","src":"225655:305:0","text":" @notice See {IBaseEscrow-withdraw}.\n @dev The function works on the time interval highlighted with capital letters:\n ---- contract deployed --/-- finality --/-- PRIVATE WITHDRAWAL --/-- PUBLIC WITHDRAWAL --/--\n --/-- private cancellation --/-- public cancellation ----"},"functionSelector":"23305703","id":9244,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9215,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"226066:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":9216,"kind":"modifierInvocation","modifierName":{"id":9214,"name":"onlyTaker","nameLocations":["226056:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8090,"src":"226056:9:0"},"nodeType":"ModifierInvocation","src":"226056:21:0"},{"arguments":[{"arguments":[{"expression":{"expression":{"id":9221,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"226121:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226134:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"226121:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"226140:13:0","memberName":"SrcWithdrawal","nodeType":"MemberAccess","referencedDeclaration":3088,"src":"226121:32:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9218,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"226096:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226107:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"226096:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226117:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"226096:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"226096:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9225,"kind":"modifierInvocation","modifierName":{"id":9217,"name":"onlyAfter","nameLocations":["226086:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8134,"src":"226086:9:0"},"nodeType":"ModifierInvocation","src":"226086:69:0"},{"arguments":[{"arguments":[{"expression":{"expression":{"id":9230,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"226200:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226213:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"226200:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"226219:15:0","memberName":"SrcCancellation","nodeType":"MemberAccess","referencedDeclaration":3090,"src":"226200:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9227,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"226175:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226186:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"226175:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226196:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"226175:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"226175:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9234,"kind":"modifierInvocation","modifierName":{"id":9226,"name":"onlyBefore","nameLocations":["226164:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":8148,"src":"226164:10:0"},"nodeType":"ModifierInvocation","src":"226164:72:0"}],"name":"withdraw","nameLocation":"225974:8:0","nodeType":"FunctionDefinition","parameters":{"id":9213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9209,"mutability":"mutable","name":"secret","nameLocation":"225991:6:0","nodeType":"VariableDeclaration","scope":9244,"src":"225983:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"225983:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9212,"mutability":"mutable","name":"immutables","nameLocation":"226019:10:0","nodeType":"VariableDeclaration","scope":9244,"src":"225999:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":9211,"nodeType":"UserDefinedTypeName","pathNode":{"id":9210,"name":"Immutables","nameLocations":["225999:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"225999:10:0"},"referencedDeclaration":4207,"src":"225999:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"225982:48:0"},"returnParameters":{"id":9235,"nodeType":"ParameterList","parameters":[],"src":"226241:0:0"},"scope":9444,"src":"225965:336:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6269],"body":{"id":9282,"nodeType":"Block","src":"226912:56:0","statements":[{"expression":{"arguments":[{"id":9277,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9247,"src":"226934:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9278,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"226942:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9279,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"226950:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}],"id":9276,"name":"_withdrawTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9407,"src":"226922:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_struct$_Immutables_$4207_calldata_ptr_$returns$__$","typeString":"function (bytes32,address,struct IBaseEscrow.Immutables calldata)"}},"id":9280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"226922:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9281,"nodeType":"ExpressionStatement","src":"226922:39:0"}]},"documentation":{"id":9245,"nodeType":"StructuredDocumentation","src":"226307:306:0","text":" @notice See {IEscrowSrc-withdrawTo}.\n @dev The function works on the time interval highlighted with capital letters:\n ---- contract deployed --/-- finality --/-- PRIVATE WITHDRAWAL --/-- PUBLIC WITHDRAWAL --/--\n --/-- private cancellation --/-- public cancellation ----"},"functionSelector":"6c10c0c8","id":9283,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9255,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"226737:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":9256,"kind":"modifierInvocation","modifierName":{"id":9254,"name":"onlyTaker","nameLocations":["226727:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8090,"src":"226727:9:0"},"nodeType":"ModifierInvocation","src":"226727:21:0"},{"arguments":[{"arguments":[{"expression":{"expression":{"id":9261,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"226792:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226805:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"226792:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"226811:13:0","memberName":"SrcWithdrawal","nodeType":"MemberAccess","referencedDeclaration":3088,"src":"226792:32:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9258,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"226767:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226778:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"226767:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226788:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"226767:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"226767:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9265,"kind":"modifierInvocation","modifierName":{"id":9257,"name":"onlyAfter","nameLocations":["226757:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8134,"src":"226757:9:0"},"nodeType":"ModifierInvocation","src":"226757:69:0"},{"arguments":[{"arguments":[{"expression":{"expression":{"id":9270,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"226871:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226884:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"226871:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"226890:15:0","memberName":"SrcCancellation","nodeType":"MemberAccess","referencedDeclaration":3090,"src":"226871:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9267,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"226846:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226857:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"226846:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"226867:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"226846:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"226846:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9274,"kind":"modifierInvocation","modifierName":{"id":9266,"name":"onlyBefore","nameLocations":["226835:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":8148,"src":"226835:10:0"},"nodeType":"ModifierInvocation","src":"226835:72:0"}],"name":"withdrawTo","nameLocation":"226627:10:0","nodeType":"FunctionDefinition","parameters":{"id":9253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9247,"mutability":"mutable","name":"secret","nameLocation":"226646:6:0","nodeType":"VariableDeclaration","scope":9283,"src":"226638:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"226638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9249,"mutability":"mutable","name":"target","nameLocation":"226662:6:0","nodeType":"VariableDeclaration","scope":9283,"src":"226654:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9248,"name":"address","nodeType":"ElementaryTypeName","src":"226654:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9252,"mutability":"mutable","name":"immutables","nameLocation":"226690:10:0","nodeType":"VariableDeclaration","scope":9283,"src":"226670:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":9251,"nodeType":"UserDefinedTypeName","pathNode":{"id":9250,"name":"Immutables","nameLocations":["226670:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"226670:10:0"},"referencedDeclaration":4207,"src":"226670:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"226637:64:0"},"returnParameters":{"id":9275,"nodeType":"ParameterList","parameters":[],"src":"226912:0:0"},"scope":9444,"src":"226618:350:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6278],"body":{"id":9319,"nodeType":"Block","src":"227547:72:0","statements":[{"expression":{"arguments":[{"id":9311,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"227569:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9312,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"227577:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"227588:5:0","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"227577:16:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":9314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"227594:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"227577:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":9315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"227577:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9316,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"227601:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}],"id":9310,"name":"_withdrawTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9407,"src":"227557:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_struct$_Immutables_$4207_calldata_ptr_$returns$__$","typeString":"function (bytes32,address,struct IBaseEscrow.Immutables calldata)"}},"id":9317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"227557:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9318,"nodeType":"ExpressionStatement","src":"227557:55:0"}]},"documentation":{"id":9284,"nodeType":"StructuredDocumentation","src":"226974:310:0","text":" @notice See {IEscrowSrc-publicWithdraw}.\n @dev The function works on the time interval highlighted with capital letters:\n ---- contract deployed --/-- finality --/-- private withdrawal --/-- PUBLIC WITHDRAWAL --/--\n --/-- private cancellation --/-- public cancellation ----"},"functionSelector":"0af97558","id":9320,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"expression":{"expression":{"id":9295,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"227421:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"227434:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"227421:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"227440:19:0","memberName":"SrcPublicWithdrawal","nodeType":"MemberAccess","referencedDeclaration":3089,"src":"227421:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9292,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"227396:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"227407:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"227396:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"227417:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"227396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"227396:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9299,"kind":"modifierInvocation","modifierName":{"id":9291,"name":"onlyAfter","nameLocations":["227386:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8134,"src":"227386:9:0"},"nodeType":"ModifierInvocation","src":"227386:75:0"},{"arguments":[{"arguments":[{"expression":{"expression":{"id":9304,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"227506:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"227519:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"227506:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"227525:15:0","memberName":"SrcCancellation","nodeType":"MemberAccess","referencedDeclaration":3090,"src":"227506:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9301,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"227481:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"227492:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"227481:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"227502:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"227481:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"227481:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9308,"kind":"modifierInvocation","modifierName":{"id":9300,"name":"onlyBefore","nameLocations":["227470:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":8148,"src":"227470:10:0"},"nodeType":"ModifierInvocation","src":"227470:72:0"}],"name":"publicWithdraw","nameLocation":"227298:14:0","nodeType":"FunctionDefinition","parameters":{"id":9290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9286,"mutability":"mutable","name":"secret","nameLocation":"227321:6:0","nodeType":"VariableDeclaration","scope":9320,"src":"227313:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"227313:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9289,"mutability":"mutable","name":"immutables","nameLocation":"227349:10:0","nodeType":"VariableDeclaration","scope":9320,"src":"227329:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":9288,"nodeType":"UserDefinedTypeName","pathNode":{"id":9287,"name":"Immutables","nameLocations":["227329:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"227329:10:0"},"referencedDeclaration":4207,"src":"227329:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"227312:48:0"},"returnParameters":{"id":9309,"nodeType":"ParameterList","parameters":[],"src":"227547:0:0"},"scope":9444,"src":"227289:330:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4260],"body":{"id":9343,"nodeType":"Block","src":"228113:36:0","statements":[{"expression":{"arguments":[{"id":9340,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9324,"src":"228131:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}],"id":9339,"name":"_cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9443,"src":"228123:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Immutables_$4207_calldata_ptr_$returns$__$","typeString":"function (struct IBaseEscrow.Immutables calldata)"}},"id":9341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"228123:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9342,"nodeType":"ExpressionStatement","src":"228123:19:0"}]},"documentation":{"id":9321,"nodeType":"StructuredDocumentation","src":"227625:304:0","text":" @notice See {IBaseEscrow-cancel}.\n @dev The function works on the time intervals highlighted with capital letters:\n ---- contract deployed --/-- finality --/-- private withdrawal --/-- public withdrawal --/--\n --/-- PRIVATE CANCELLATION --/-- PUBLIC CANCELLATION ----"},"functionSelector":"90d3252f","id":9344,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9327,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9324,"src":"228017:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":9328,"kind":"modifierInvocation","modifierName":{"id":9326,"name":"onlyTaker","nameLocations":["228007:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8090,"src":"228007:9:0"},"nodeType":"ModifierInvocation","src":"228007:21:0"},{"arguments":[{"arguments":[{"expression":{"expression":{"id":9333,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"228072:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"228085:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"228072:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"228091:15:0","memberName":"SrcCancellation","nodeType":"MemberAccess","referencedDeclaration":3090,"src":"228072:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9330,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9324,"src":"228047:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"228058:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"228047:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"228068:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"228047:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"228047:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9337,"kind":"modifierInvocation","modifierName":{"id":9329,"name":"onlyAfter","nameLocations":["228037:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8134,"src":"228037:9:0"},"nodeType":"ModifierInvocation","src":"228037:71:0"}],"name":"cancel","nameLocation":"227943:6:0","nodeType":"FunctionDefinition","parameters":{"id":9325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9324,"mutability":"mutable","name":"immutables","nameLocation":"227970:10:0","nodeType":"VariableDeclaration","scope":9344,"src":"227950:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":9323,"nodeType":"UserDefinedTypeName","pathNode":{"id":9322,"name":"Immutables","nameLocations":["227950:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"227950:10:0"},"referencedDeclaration":4207,"src":"227950:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"227949:32:0"},"returnParameters":{"id":9338,"nodeType":"ParameterList","parameters":[],"src":"228113:0:0"},"scope":9444,"src":"227934:215:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6285],"body":{"id":9364,"nodeType":"Block","src":"228630:36:0","statements":[{"expression":{"arguments":[{"id":9361,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9348,"src":"228648:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}],"id":9360,"name":"_cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9443,"src":"228640:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Immutables_$4207_calldata_ptr_$returns$__$","typeString":"function (struct IBaseEscrow.Immutables calldata)"}},"id":9362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"228640:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9363,"nodeType":"ExpressionStatement","src":"228640:19:0"}]},"documentation":{"id":9345,"nodeType":"StructuredDocumentation","src":"228155:309:0","text":" @notice See {IEscrowSrc-publicCancel}.\n @dev The function works on the time intervals highlighted with capital letters:\n ---- contract deployed --/-- finality --/-- private withdrawal --/-- public withdrawal --/--\n --/-- private cancellation --/-- PUBLIC CANCELLATION ----"},"functionSelector":"daff233e","id":9365,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"expression":{"expression":{"id":9354,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"228583:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":9355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"228596:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"228583:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":9356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"228602:21:0","memberName":"SrcPublicCancellation","nodeType":"MemberAccess","referencedDeclaration":3091,"src":"228583:40:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":9351,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9348,"src":"228558:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"228569:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"228558:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"228579:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"228558:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":9357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"228558:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9358,"kind":"modifierInvocation","modifierName":{"id":9350,"name":"onlyAfter","nameLocations":["228548:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":8134,"src":"228548:9:0"},"nodeType":"ModifierInvocation","src":"228548:77:0"}],"name":"publicCancel","nameLocation":"228478:12:0","nodeType":"FunctionDefinition","parameters":{"id":9349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9348,"mutability":"mutable","name":"immutables","nameLocation":"228511:10:0","nodeType":"VariableDeclaration","scope":9365,"src":"228491:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":9347,"nodeType":"UserDefinedTypeName","pathNode":{"id":9346,"name":"Immutables","nameLocations":["228491:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"228491:10:0"},"referencedDeclaration":4207,"src":"228491:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"228490:32:0"},"returnParameters":{"id":9359,"nodeType":"ParameterList","parameters":[],"src":"228630:0:0"},"scope":9444,"src":"228469:197:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9406,"nodeType":"Block","src":"229160:180:0","statements":[{"expression":{"arguments":[{"id":9390,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9370,"src":"229214:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9391,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"229222:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229233:6:0","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":4201,"src":"229222:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9384,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"229177:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229188:5:0","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":4199,"src":"229177:16:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":9386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229194:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"229177:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":9387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"229177:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9383,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"229170:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$379_$","typeString":"type(contract IERC20)"}},"id":9388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"229170:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":9389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229201:12:0","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"229170:43:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address,uint256)"}},"id":9393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"229170:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9394,"nodeType":"ExpressionStatement","src":"229170:70:0"},{"expression":{"arguments":[{"expression":{"id":9396,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"229263:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229267:6:0","memberName":"sender","nodeType":"MemberAccess","src":"229263:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9398,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"229275:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229286:13:0","memberName":"safetyDeposit","nodeType":"MemberAccess","referencedDeclaration":4203,"src":"229275:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9395,"name":"_ethTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"229250:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"229250:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9401,"nodeType":"ExpressionStatement","src":"229250:50:0"},{"eventCall":{"arguments":[{"id":9403,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9368,"src":"229326:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9402,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"229315:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":9404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"229315:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9405,"nodeType":"EmitStatement","src":"229310:23:0"}]},"documentation":{"id":9366,"nodeType":"StructuredDocumentation","src":"228672:293:0","text":" @dev Transfers ERC20 tokens to the target and native tokens to the caller.\n @param secret The secret that unlocks the escrow.\n @param target The address to transfer ERC20 tokens to.\n @param immutables The immutable values used to deploy the clone contract."},"id":9407,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9376,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"229100:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":9377,"kind":"modifierInvocation","modifierName":{"id":9375,"name":"onlyValidImmutables","nameLocations":["229080:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":8101,"src":"229080:19:0"},"nodeType":"ModifierInvocation","src":"229080:31:0"},{"arguments":[{"id":9379,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9368,"src":"229136:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9380,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"229144:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":9381,"kind":"modifierInvocation","modifierName":{"id":9378,"name":"onlyValidSecret","nameLocations":["229120:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":8120,"src":"229120:15:0"},"nodeType":"ModifierInvocation","src":"229120:35:0"}],"name":"_withdrawTo","nameLocation":"228979:11:0","nodeType":"FunctionDefinition","parameters":{"id":9374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9368,"mutability":"mutable","name":"secret","nameLocation":"228999:6:0","nodeType":"VariableDeclaration","scope":9407,"src":"228991:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"228991:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9370,"mutability":"mutable","name":"target","nameLocation":"229015:6:0","nodeType":"VariableDeclaration","scope":9407,"src":"229007:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9369,"name":"address","nodeType":"ElementaryTypeName","src":"229007:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9373,"mutability":"mutable","name":"immutables","nameLocation":"229043:10:0","nodeType":"VariableDeclaration","scope":9407,"src":"229023:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":9372,"nodeType":"UserDefinedTypeName","pathNode":{"id":9371,"name":"Immutables","nameLocations":["229023:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"229023:10:0"},"referencedDeclaration":4207,"src":"229023:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"228990:64:0"},"returnParameters":{"id":9382,"nodeType":"ParameterList","parameters":[],"src":"229160:0:0"},"scope":9444,"src":"228970:370:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9442,"nodeType":"Block","src":"229614:195:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9424,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9411,"src":"229668:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229679:5:0","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":4193,"src":"229668:16:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":9426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229685:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"229668:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":9427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"229668:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9428,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9411,"src":"229692:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229703:6:0","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":4201,"src":"229692:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9418,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9411,"src":"229631:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229642:5:0","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":4199,"src":"229631:16:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":9420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229648:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"229631:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":9421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"229631:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9417,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"229624:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$379_$","typeString":"type(contract IERC20)"}},"id":9422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"229624:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":9423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229655:12:0","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":6745,"src":"229624:43:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address,uint256)"}},"id":9430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"229624:86:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9431,"nodeType":"ExpressionStatement","src":"229624:86:0"},{"expression":{"arguments":[{"expression":{"id":9433,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"229733:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229737:6:0","memberName":"sender","nodeType":"MemberAccess","src":"229733:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9435,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9411,"src":"229745:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":9436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"229756:13:0","memberName":"safetyDeposit","nodeType":"MemberAccess","referencedDeclaration":4203,"src":"229745:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9432,"name":"_ethTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"229720:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"229720:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9438,"nodeType":"ExpressionStatement","src":"229720:50:0"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9439,"name":"EscrowCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"229785:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"229785:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9441,"nodeType":"EmitStatement","src":"229780:22:0"}]},"documentation":{"id":9408,"nodeType":"StructuredDocumentation","src":"229346:173:0","text":" @dev Transfers ERC20 tokens to the maker and native tokens to the caller.\n @param immutables The immutable values used to deploy the clone contract."},"id":9443,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9414,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9411,"src":"229602:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}}],"id":9415,"kind":"modifierInvocation","modifierName":{"id":9413,"name":"onlyValidImmutables","nameLocations":["229582:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":8101,"src":"229582:19:0"},"nodeType":"ModifierInvocation","src":"229582:31:0"}],"name":"_cancel","nameLocation":"229533:7:0","nodeType":"FunctionDefinition","parameters":{"id":9412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9411,"mutability":"mutable","name":"immutables","nameLocation":"229561:10:0","nodeType":"VariableDeclaration","scope":9443,"src":"229541:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":9410,"nodeType":"UserDefinedTypeName","pathNode":{"id":9409,"name":"Immutables","nameLocations":["229541:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"229541:10:0"},"referencedDeclaration":4207,"src":"229541:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"229540:32:0"},"returnParameters":{"id":9416,"nodeType":"ParameterList","parameters":[],"src":"229614:0:0"},"scope":9444,"src":"229524:285:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":10322,"src":"225399:4412:0","usedErrors":[4224,4226,4228,4230,4232,6574],"usedEvents":[4210,4217,4222]},{"abstract":true,"baseContracts":[{"baseName":{"id":9446,"name":"BaseExtension","nameLocations":["230461:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":7597,"src":"230461:13:0"},"id":9447,"nodeType":"InheritanceSpecifier","src":"230461:13:0"},{"baseName":{"id":9448,"name":"FeeBankCharger","nameLocations":["230476:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":8965,"src":"230476:14:0"},"id":9449,"nodeType":"InheritanceSpecifier","src":"230476:14:0"}],"canonicalName":"ResolverValidationExtension","contractDependencies":[8765],"contractKind":"contract","documentation":{"id":9445,"nodeType":"StructuredDocumentation","src":"229928:483:0","text":" @title Resolver Validation Extension\n @notice This abstract contract combines functionalities to enhance security and compliance in the order execution process.\n Ensures that only transactions from whitelisted resolvers or resolvers who own specific accessToken are processed within the post-interaction phase of order execution.\n Additionally, it allows charging a fee to resolvers in the `postInteraction` method, providing a mechanism for resolver fee management."},"fullyImplemented":true,"id":9734,"linearizedBaseContracts":[9734,8965,3510,7597,6242,6308,6330],"name":"ResolverValidationExtension","nameLocation":"230430:27:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9452,"libraryName":{"id":9450,"name":"ExtensionLib_0","nameLocations":["230503:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":243,"src":"230503:14:0"},"nodeType":"UsingForDirective","src":"230497:31:0","typeName":{"id":9451,"name":"bytes","nodeType":"ElementaryTypeName","src":"230522:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"errorSelector":"f25114a6","id":9454,"name":"ResolverCanNotFillOrder","nameLocation":"230540:23:0","nodeType":"ErrorDefinition","parameters":{"id":9453,"nodeType":"ParameterList","parameters":[],"src":"230563:2:0"},"src":"230534:32:0"},{"constant":true,"id":9457,"mutability":"constant","name":"_ORDER_FEE_BASE_POINTS","nameLocation":"230597:22:0","nodeType":"VariableDeclaration","scope":9734,"src":"230572:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9455,"name":"uint256","nodeType":"ElementaryTypeName","src":"230572:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653135","id":9456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"230622:4:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"},"value":"1e15"},"visibility":"private"},{"constant":false,"documentation":{"id":9458,"nodeType":"StructuredDocumentation","src":"230632:124:0","text":"@notice Contract address whose tokens allow filling limit orders with a fee for resolvers that are outside the whitelist"},"id":9461,"mutability":"immutable","name":"_ACCESS_TOKEN","nameLocation":"230786:13:0","nodeType":"VariableDeclaration","scope":9734,"src":"230761:38:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":9460,"nodeType":"UserDefinedTypeName","pathNode":{"id":9459,"name":"IERC20","nameLocations":["230761:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"230761:6:0"},"referencedDeclaration":379,"src":"230761:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"private"},{"body":{"id":9480,"nodeType":"Block","src":"230902:44:0","statements":[{"expression":{"id":9478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9476,"name":"_ACCESS_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"230912:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9477,"name":"accessToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"230928:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"src":"230912:27:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":9479,"nodeType":"ExpressionStatement","src":"230912:27:0"}]},"id":9481,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9472,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9464,"src":"230885:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"id":9473,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9469,"src":"230895:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9474,"kind":"baseConstructorSpecifier","modifierName":{"id":9471,"name":"FeeBankCharger","nameLocations":["230870:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":8965,"src":"230870:14:0"},"nodeType":"ModifierInvocation","src":"230870:31:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9464,"mutability":"mutable","name":"feeToken","nameLocation":"230825:8:0","nodeType":"VariableDeclaration","scope":9481,"src":"230818:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":9463,"nodeType":"UserDefinedTypeName","pathNode":{"id":9462,"name":"IERC20","nameLocations":["230818:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"230818:6:0"},"referencedDeclaration":379,"src":"230818:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9467,"mutability":"mutable","name":"accessToken","nameLocation":"230842:11:0","nodeType":"VariableDeclaration","scope":9481,"src":"230835:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":9466,"nodeType":"UserDefinedTypeName","pathNode":{"id":9465,"name":"IERC20","nameLocations":["230835:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"230835:6:0"},"referencedDeclaration":379,"src":"230835:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9469,"mutability":"mutable","name":"owner","nameLocation":"230863:5:0","nodeType":"VariableDeclaration","scope":9481,"src":"230855:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9468,"name":"address","nodeType":"ElementaryTypeName","src":"230855:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"230817:52:0"},"returnParameters":{"id":9475,"nodeType":"ParameterList","parameters":[],"src":"230902:0:0"},"scope":9734,"src":"230806:140:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9569,"nodeType":"Block","src":"231875:652:0","statements":[{"id":9568,"nodeType":"UncheckedBlock","src":"231885:636:0","statements":[{"assignments":[9496],"declarations":[{"constant":false,"id":9496,"mutability":"mutable","name":"maskedResolverAddress","nameLocation":"231916:21:0","nodeType":"VariableDeclaration","scope":9568,"src":"231909:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":9495,"name":"uint80","nodeType":"ElementaryTypeName","src":"231909:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"id":9504,"initialValue":{"arguments":[{"arguments":[{"id":9501,"name":"resolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9490,"src":"231955:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"231947:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9499,"name":"uint160","nodeType":"ElementaryTypeName","src":"231947:7:0","typeDescriptions":{}}},"id":9502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"231947:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"231940:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":9497,"name":"uint80","nodeType":"ElementaryTypeName","src":"231940:6:0","typeDescriptions":{}}},"id":9503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"231940:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"nodeType":"VariableDeclarationStatement","src":"231909:56:0"},{"body":{"id":9564,"nodeType":"Block","src":"232023:462:0","statements":[{"assignments":[9516],"declarations":[{"constant":false,"id":9516,"mutability":"mutable","name":"whitelistedAddress","nameLocation":"232048:18:0","nodeType":"VariableDeclaration","scope":9564,"src":"232041:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":9515,"name":"uint80","nodeType":"ElementaryTypeName","src":"232041:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"id":9526,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":9521,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9486,"src":"232084:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3130","id":9522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"232095:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"id":9523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"232084:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":9520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"232076:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":9519,"name":"bytes10","nodeType":"ElementaryTypeName","src":"232076:7:0","typeDescriptions":{}}},"id":9524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"232076:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"}],"id":9518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"232069:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":9517,"name":"uint80","nodeType":"ElementaryTypeName","src":"232069:6:0","typeDescriptions":{}}},"id":9525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"232069:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"nodeType":"VariableDeclarationStatement","src":"232041:59:0"},{"expression":{"id":9538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9527,"name":"allowedTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9484,"src":"232118:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":9532,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9486,"src":"232147:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3132","id":9534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"232160:2:0","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"id":9535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"232147:16:0","startExpression":{"hexValue":"3130","id":9533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"232157:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":9531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"232140:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":9530,"name":"bytes2","nodeType":"ElementaryTypeName","src":"232140:6:0","typeDescriptions":{}}},"id":9536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"232140:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes2","typeString":"bytes2"}],"id":9529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"232133:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":9528,"name":"uint16","nodeType":"ElementaryTypeName","src":"232133:6:0","typeDescriptions":{}}},"id":9537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"232133:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"232118:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9539,"nodeType":"ExpressionStatement","src":"232118:47:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint80","typeString":"uint80"},"id":9542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9540,"name":"maskedResolverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9496,"src":"232210:21:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9541,"name":"whitelistedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9516,"src":"232235:18:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"232210:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9549,"name":"allowedTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9484,"src":"232343:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9550,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"232357:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"232363:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"232357:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"232343:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9556,"nodeType":"IfStatement","src":"232339:88:0","trueBody":{"id":9555,"nodeType":"Block","src":"232374:53:0","statements":[{"expression":{"hexValue":"66616c7365","id":9553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"232403:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9494,"id":9554,"nodeType":"Return","src":"232396:12:0"}]}},"id":9557,"nodeType":"IfStatement","src":"232206:221:0","trueBody":{"id":9548,"nodeType":"Block","src":"232255:78:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9543,"name":"allowedTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9484,"src":"232284:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9544,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"232299:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"232305:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"232299:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"232284:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9494,"id":9547,"nodeType":"Return","src":"232277:37:0"}]}},{"expression":{"id":9562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9558,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9486,"src":"232444:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9559,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9486,"src":"232456:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"232456:14:0","startExpression":{"hexValue":"3132","id":9560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"232466:2:0","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"src":"232444:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9563,"nodeType":"ExpressionStatement","src":"232444:26:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9509,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9506,"src":"231999:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9510,"name":"whitelistSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9488,"src":"232003:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"231999:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9565,"initializationExpression":{"assignments":[9506],"declarations":[{"constant":false,"id":9506,"mutability":"mutable","name":"i","nameLocation":"231992:1:0","nodeType":"VariableDeclaration","scope":9565,"src":"231984:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9505,"name":"uint256","nodeType":"ElementaryTypeName","src":"231984:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9508,"initialValue":{"hexValue":"30","id":9507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"231996:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"231984:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"232018:3:0","subExpression":{"id":9512,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9506,"src":"232018:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9514,"nodeType":"ExpressionStatement","src":"232018:3:0"},"nodeType":"ForStatement","src":"231979:506:0"},{"expression":{"hexValue":"66616c7365","id":9566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"232505:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9494,"id":9567,"nodeType":"Return","src":"232498:12:0"}]}]},"documentation":{"id":9482,"nodeType":"StructuredDocumentation","src":"230952:769:0","text":" @dev Validates whether the resolver is whitelisted.\n @param allowedTime The time after which interaction with the order is allowed.\n @param whitelist Whitelist is tightly packed struct of the following format:\n ```\n (bytes10,bytes2)[N] resolversAddressesAndTimeDeltas;\n ```\n Resolvers in the list are sorted in ascending order by the time when they are allowed to interact with the order.\n Time deltas represent the time in seconds between the adjacent resolvers.\n Only 10 lowest bytes of the resolver address are used for comparison.\n @param whitelistSize The amount of resolvers in the whitelist.\n @param resolver The resolver to check.\n @return Whether the resolver is whitelisted."},"id":9570,"implemented":true,"kind":"function","modifiers":[],"name":"_isWhitelisted","nameLocation":"231735:14:0","nodeType":"FunctionDefinition","parameters":{"id":9491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9484,"mutability":"mutable","name":"allowedTime","nameLocation":"231758:11:0","nodeType":"VariableDeclaration","scope":9570,"src":"231750:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9483,"name":"uint256","nodeType":"ElementaryTypeName","src":"231750:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9486,"mutability":"mutable","name":"whitelist","nameLocation":"231786:9:0","nodeType":"VariableDeclaration","scope":9570,"src":"231771:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9485,"name":"bytes","nodeType":"ElementaryTypeName","src":"231771:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9488,"mutability":"mutable","name":"whitelistSize","nameLocation":"231805:13:0","nodeType":"VariableDeclaration","scope":9570,"src":"231797:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9487,"name":"uint256","nodeType":"ElementaryTypeName","src":"231797:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9490,"mutability":"mutable","name":"resolver","nameLocation":"231828:8:0","nodeType":"VariableDeclaration","scope":9570,"src":"231820:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9489,"name":"address","nodeType":"ElementaryTypeName","src":"231820:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"231749:88:0"},"returnParameters":{"id":9494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9570,"src":"231869:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9492,"name":"bool","nodeType":"ElementaryTypeName","src":"231869:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"231868:6:0"},"scope":9734,"src":"231726:801:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9590,"nodeType":"Block","src":"232978:93:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9582,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9573,"src":"232995:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9583,"name":"_ORDER_FEE_BASE_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9457,"src":"233001:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"232995:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9585,"name":"actualMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9577,"src":"233026:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"232995:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":9587,"name":"orderMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9575,"src":"233047:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"232995:69:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9581,"id":9589,"nodeType":"Return","src":"232988:76:0"}]},"documentation":{"id":9571,"nodeType":"StructuredDocumentation","src":"232533:278:0","text":" @dev Calculates the resolver fee.\n @param fee Scaled resolver fee.\n @param orderMakingAmount Making amount from the order.\n @param actualMakingAmount Making amount that was actually filled.\n @return resolverFee Calculated resolver fee."},"id":9591,"implemented":true,"kind":"function","modifiers":[],"name":"_getResolverFee","nameLocation":"232825:15:0","nodeType":"FunctionDefinition","parameters":{"id":9578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9573,"mutability":"mutable","name":"fee","nameLocation":"232858:3:0","nodeType":"VariableDeclaration","scope":9591,"src":"232850:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9572,"name":"uint256","nodeType":"ElementaryTypeName","src":"232850:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9575,"mutability":"mutable","name":"orderMakingAmount","nameLocation":"232879:17:0","nodeType":"VariableDeclaration","scope":9591,"src":"232871:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9574,"name":"uint256","nodeType":"ElementaryTypeName","src":"232871:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9577,"mutability":"mutable","name":"actualMakingAmount","nameLocation":"232914:18:0","nodeType":"VariableDeclaration","scope":9591,"src":"232906:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9576,"name":"uint256","nodeType":"ElementaryTypeName","src":"232906:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"232840:98:0"},"returnParameters":{"id":9581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9591,"src":"232969:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9579,"name":"uint256","nodeType":"ElementaryTypeName","src":"232969:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"232968:9:0"},"scope":9734,"src":"232816:255:0","stateMutability":"pure","virtual":true,"visibility":"internal"},{"baseFunctions":[7351],"body":{"id":9732,"nodeType":"Block","src":"234254:1087:0","statements":[{"assignments":[9614],"declarations":[{"constant":false,"id":9614,"mutability":"mutable","name":"feeEnabled","nameLocation":"234269:10:0","nodeType":"VariableDeclaration","scope":9732,"src":"234264:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9613,"name":"bool","nodeType":"ElementaryTypeName","src":"234264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9618,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9615,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9609,"src":"234282:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"234292:18:0","memberName":"resolverFeeEnabled","nodeType":"MemberAccess","referencedDeclaration":181,"src":"234282:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bool_$attached_to$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata) pure returns (bool)"}},"id":9617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"234282:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"234264:48:0"},{"assignments":[9620],"declarations":[{"constant":false,"id":9620,"mutability":"mutable","name":"resolversCount","nameLocation":"234330:14:0","nodeType":"VariableDeclaration","scope":9732,"src":"234322:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9619,"name":"uint256","nodeType":"ElementaryTypeName","src":"234322:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9624,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9621,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9609,"src":"234347:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"234357:14:0","memberName":"resolversCount","nodeType":"MemberAccess","referencedDeclaration":242,"src":"234347:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint256_$attached_to$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata) pure returns (uint256)"}},"id":9623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"234347:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"234322:51:0"},{"id":9731,"nodeType":"UncheckedBlock","src":"234383:952:0","statements":[{"assignments":[9626],"declarations":[{"constant":false,"id":9626,"mutability":"mutable","name":"resolverFee","nameLocation":"234415:11:0","nodeType":"VariableDeclaration","scope":9731,"src":"234407:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9625,"name":"uint256","nodeType":"ElementaryTypeName","src":"234407:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9627,"nodeType":"VariableDeclarationStatement","src":"234407:19:0"},{"condition":{"id":9628,"name":"feeEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9614,"src":"234444:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9656,"nodeType":"IfStatement","src":"234440:195:0","trueBody":{"id":9655,"nodeType":"Block","src":"234456:179:0","statements":[{"expression":{"id":9647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9629,"name":"resolverFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9626,"src":"234474:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"baseExpression":{"id":9637,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9609,"src":"234526:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"34","id":9638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234537:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"id":9639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"234526:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":9636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"234519:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":9635,"name":"bytes4","nodeType":"ElementaryTypeName","src":"234519:6:0","typeDescriptions":{}}},"id":9640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"234519:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"234512:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9633,"name":"uint32","nodeType":"ElementaryTypeName","src":"234512:6:0","typeDescriptions":{}}},"id":9641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"234512:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":9632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"234504:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9631,"name":"uint256","nodeType":"ElementaryTypeName","src":"234504:7:0","typeDescriptions":{}}},"id":9642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"234504:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9643,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9595,"src":"234544:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":9644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"234550:12:0","memberName":"makingAmount","nodeType":"MemberAccess","referencedDeclaration":5938,"src":"234544:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9645,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9603,"src":"234564:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9630,"name":"_getResolverFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9591,"src":"234488:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":9646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"234488:89:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"234474:103:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9648,"nodeType":"ExpressionStatement","src":"234474:103:0"},{"expression":{"id":9653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9649,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9609,"src":"234595:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9650,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9609,"src":"234607:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"234607:13:0","startExpression":{"hexValue":"34","id":9651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234617:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"src":"234595:25:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9654,"nodeType":"ExpressionStatement","src":"234595:25:0"}]}},{"assignments":[9658],"declarations":[{"constant":false,"id":9658,"mutability":"mutable","name":"allowedTime","nameLocation":"234657:11:0","nodeType":"VariableDeclaration","scope":9731,"src":"234649:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9657,"name":"uint256","nodeType":"ElementaryTypeName","src":"234649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9669,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":9663,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9609,"src":"234685:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"34","id":9665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234697:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"id":9666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"234685:14:0","startExpression":{"hexValue":"30","id":9664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234695:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":9662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"234678:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":9661,"name":"bytes4","nodeType":"ElementaryTypeName","src":"234678:6:0","typeDescriptions":{}}},"id":9667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"234678:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"234671:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9659,"name":"uint32","nodeType":"ElementaryTypeName","src":"234671:6:0","typeDescriptions":{}}},"id":9668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"234671:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"234649:52:0"},{"expression":{"id":9674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9670,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9609,"src":"234715:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9671,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9609,"src":"234727:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"234727:13:0","startExpression":{"hexValue":"34","id":9672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234737:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"src":"234715:25:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9675,"nodeType":"ExpressionStatement","src":"234715:25:0"},{"assignments":[9677],"declarations":[{"constant":false,"id":9677,"mutability":"mutable","name":"whitelistSize","nameLocation":"234762:13:0","nodeType":"VariableDeclaration","scope":9731,"src":"234754:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9676,"name":"uint256","nodeType":"ElementaryTypeName","src":"234754:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9681,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9678,"name":"resolversCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9620,"src":"234778:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3132","id":9679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234795:2:0","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"234778:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"234754:43:0"},{"condition":{"id":9690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"234815:78:0","subExpression":{"arguments":[{"id":9683,"name":"allowedTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9658,"src":"234831:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":9684,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9609,"src":"234844:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":9685,"name":"whitelistSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9677,"src":"234855:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"234844:25:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"id":9687,"name":"resolversCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9620,"src":"234871:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9688,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"234887:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9682,"name":"_isWhitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9570,"src":"234816:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes_calldata_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,bytes calldata,uint256,address) view returns (bool)"}},"id":9689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"234816:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9715,"nodeType":"IfStatement","src":"234811:364:0","trueBody":{"id":9714,"nodeType":"Block","src":"234895:280:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9691,"name":"allowedTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9658,"src":"234954:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9692,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"234968:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"234974:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"234968:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"234954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9697,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"235011:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9695,"name":"_ACCESS_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"234987:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":9696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"235001:9:0","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":336,"src":"234987:23:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"234987:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"235021:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"234987:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"234954:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9705,"nodeType":"IfStatement","src":"234950:106:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9702,"name":"ResolverCanNotFillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9454,"src":"235031:23:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"235031:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9704,"nodeType":"RevertStatement","src":"235024:32:0"}},{"condition":{"id":9706,"name":"feeEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9614,"src":"235078:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9713,"nodeType":"IfStatement","src":"235074:87:0","trueBody":{"id":9712,"nodeType":"Block","src":"235090:71:0","statements":[{"expression":{"arguments":[{"id":9708,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"235123:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9709,"name":"resolverFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9626,"src":"235130:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9707,"name":"_chargeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8964,"src":"235112:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"235112:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9711,"nodeType":"ExpressionStatement","src":"235112:30:0"}]}}]}},{"expression":{"arguments":[{"id":9719,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9595,"src":"235211:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},{"id":9720,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9597,"src":"235218:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":9721,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9599,"src":"235229:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9722,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"235240:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9723,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9603,"src":"235247:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9724,"name":"takingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9605,"src":"235261:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9725,"name":"remainingMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9607,"src":"235275:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":9726,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9609,"src":"235298:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"235298:25:0","startExpression":{"id":9727,"name":"whitelistSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9677,"src":"235308:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"expression":{"id":9716,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"235188:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ResolverValidationExtension_$9734_$","typeString":"type(contract super ResolverValidationExtension)"}},"id":9718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"235194:16:0","memberName":"_postInteraction","nodeType":"MemberAccess","referencedDeclaration":7351,"src":"235188:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Order_$5944_calldata_ptr_$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct IOrderMixin.Order calldata,bytes calldata,bytes32,address,uint256,uint256,uint256,bytes calldata)"}},"id":9729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"235188:136:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9730,"nodeType":"ExpressionStatement","src":"235188:136:0"}]}]},"documentation":{"id":9592,"nodeType":"StructuredDocumentation","src":"233077:855:0","text":" @param extraData Structured data of length n bytes, segmented as follows:\n [0:4] - Resolver fee information.\n [4:8] - The time after which interaction with the order is allowed.\n [8:k] - Data as defined by the `whitelist` parameter for the `_isWhitelisted` method,\n         where k depends on the amount of resolvers in the whitelist, as indicated by the bitmap in the last byte.\n [k:n] - ExtraData for other extensions, not utilized by this validation extension.\n [n] - Bitmap indicating various usage flags and values.\n       The bitmask xxxx xxx1 signifies resolver fee usage.\n       The bitmask VVVV Vxxx represents the number of resolvers in the whitelist, where the V bits denote the count of resolvers.\n       The remaining bits in this bitmap are not used by this extension."},"id":9733,"implemented":true,"kind":"function","modifiers":[],"name":"_postInteraction","nameLocation":"233946:16:0","nodeType":"FunctionDefinition","overrides":{"id":9611,"nodeType":"OverrideSpecifier","overrides":[],"src":"234245:8:0"},"parameters":{"id":9610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9595,"mutability":"mutable","name":"order","nameLocation":"233999:5:0","nodeType":"VariableDeclaration","scope":9733,"src":"233972:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":9594,"nodeType":"UserDefinedTypeName","pathNode":{"id":9593,"name":"IOrderMixin.Order","nameLocations":["233972:11:0","233984:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"233972:17:0"},"referencedDeclaration":5944,"src":"233972:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":9597,"mutability":"mutable","name":"extension","nameLocation":"234029:9:0","nodeType":"VariableDeclaration","scope":9733,"src":"234014:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9596,"name":"bytes","nodeType":"ElementaryTypeName","src":"234014:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9599,"mutability":"mutable","name":"orderHash","nameLocation":"234056:9:0","nodeType":"VariableDeclaration","scope":9733,"src":"234048:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"234048:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9601,"mutability":"mutable","name":"taker","nameLocation":"234083:5:0","nodeType":"VariableDeclaration","scope":9733,"src":"234075:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9600,"name":"address","nodeType":"ElementaryTypeName","src":"234075:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9603,"mutability":"mutable","name":"makingAmount","nameLocation":"234106:12:0","nodeType":"VariableDeclaration","scope":9733,"src":"234098:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9602,"name":"uint256","nodeType":"ElementaryTypeName","src":"234098:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9605,"mutability":"mutable","name":"takingAmount","nameLocation":"234136:12:0","nodeType":"VariableDeclaration","scope":9733,"src":"234128:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9604,"name":"uint256","nodeType":"ElementaryTypeName","src":"234128:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9607,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"234166:21:0","nodeType":"VariableDeclaration","scope":9733,"src":"234158:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9606,"name":"uint256","nodeType":"ElementaryTypeName","src":"234158:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9609,"mutability":"mutable","name":"extraData","nameLocation":"234212:9:0","nodeType":"VariableDeclaration","scope":9733,"src":"234197:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9608,"name":"bytes","nodeType":"ElementaryTypeName","src":"234197:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"233962:265:0"},"returnParameters":{"id":9612,"nodeType":"ParameterList","parameters":[],"src":"234254:0:0"},"scope":9734,"src":"233937:1404:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":10322,"src":"230412:4931:0","usedErrors":[7084,8821,8823,9454],"usedEvents":[]},{"abstract":true,"baseContracts":[{"baseName":{"id":9736,"name":"IEscrowFactory","nameLocations":["235713:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":5922,"src":"235713:14:0"},"id":9737,"nodeType":"InheritanceSpecifier","src":"235713:14:0"},{"baseName":{"id":9738,"name":"ResolverValidationExtension","nameLocations":["235729:27:0"],"nodeType":"IdentifierPath","referencedDeclaration":9734,"src":"235729:27:0"},"id":9739,"nodeType":"InheritanceSpecifier","src":"235729:27:0"},{"baseName":{"id":9740,"name":"MerkleStorageInvalidator","nameLocations":["235758:24:0"],"nodeType":"IdentifierPath","referencedDeclaration":8412,"src":"235758:24:0"},"id":9741,"nodeType":"InheritanceSpecifier","src":"235758:24:0"}],"canonicalName":"BaseEscrowFactory","contractDependencies":[8765],"contractKind":"contract","documentation":{"id":9735,"nodeType":"StructuredDocumentation","src":"235412:261:0","text":" @title Abstract contract for escrow factory\n @notice Contract to create escrow contracts for cross-chain atomic swap.\n @dev Immutable variables must be set in the constructor of the derived contracts.\n @custom:security-contact security@1inch.io"},"fullyImplemented":true,"id":10252,"linearizedBaseContracts":[10252,8412,6353,539,9734,8965,3510,7597,6242,6308,6330,5922],"name":"BaseEscrowFactory","nameLocation":"235692:17:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9745,"libraryName":{"id":9742,"name":"AddressLib","nameLocations":["235795:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":102,"src":"235795:10:0"},"nodeType":"UsingForDirective","src":"235789:29:0","typeName":{"id":9744,"nodeType":"UserDefinedTypeName","pathNode":{"id":9743,"name":"Address","nameLocations":["235810:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3,"src":"235810:7:0"},"referencedDeclaration":3,"src":"235810:7:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}},{"global":false,"id":9748,"libraryName":{"id":9746,"name":"Clones","nameLocations":["235829:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3357,"src":"235829:6:0"},"nodeType":"UsingForDirective","src":"235823:25:0","typeName":{"id":9747,"name":"address","nodeType":"ElementaryTypeName","src":"235840:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":9752,"libraryName":{"id":9749,"name":"ImmutablesLib","nameLocations":["235859:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":6199,"src":"235859:13:0"},"nodeType":"UsingForDirective","src":"235853:47:0","typeName":{"id":9751,"nodeType":"UserDefinedTypeName","pathNode":{"id":9750,"name":"IBaseEscrow.Immutables","nameLocations":["235877:11:0","235889:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"235877:22:0"},"referencedDeclaration":4207,"src":"235877:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}}},{"global":false,"id":9756,"libraryName":{"id":9753,"name":"SafeERC20","nameLocations":["235911:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":7075,"src":"235911:9:0"},"nodeType":"UsingForDirective","src":"235905:27:0","typeName":{"id":9755,"nodeType":"UserDefinedTypeName","pathNode":{"id":9754,"name":"IERC20","nameLocations":["235925:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"235925:6:0"},"referencedDeclaration":379,"src":"235925:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}}},{"global":false,"id":9760,"libraryName":{"id":9757,"name":"TimelocksLib","nameLocations":["235943:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"235943:12:0"},"nodeType":"UsingForDirective","src":"235937:33:0","typeName":{"id":9759,"nodeType":"UserDefinedTypeName","pathNode":{"id":9758,"name":"Timelocks","nameLocations":["235960:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"235960:9:0"},"referencedDeclaration":3086,"src":"235960:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}}},{"baseFunctions":[5888],"constant":false,"documentation":{"id":9761,"nodeType":"StructuredDocumentation","src":"235976:59:0","text":"@notice See {IEscrowFactory-ESCROW_SRC_IMPLEMENTATION}."},"functionSelector":"7040f173","id":9763,"mutability":"immutable","name":"ESCROW_SRC_IMPLEMENTATION","nameLocation":"236065:25:0","nodeType":"VariableDeclaration","scope":10252,"src":"236040:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9762,"name":"address","nodeType":"ElementaryTypeName","src":"236040:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[5894],"constant":false,"documentation":{"id":9764,"nodeType":"StructuredDocumentation","src":"236096:59:0","text":"@notice See {IEscrowFactory-ESCROW_DST_IMPLEMENTATION}."},"functionSelector":"ba551177","id":9766,"mutability":"immutable","name":"ESCROW_DST_IMPLEMENTATION","nameLocation":"236185:25:0","nodeType":"VariableDeclaration","scope":10252,"src":"236160:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9765,"name":"address","nodeType":"ElementaryTypeName","src":"236160:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":9768,"mutability":"immutable","name":"_PROXY_SRC_BYTECODE_HASH","nameLocation":"236243:24:0","nodeType":"VariableDeclaration","scope":10252,"src":"236216:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"236216:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9770,"mutability":"immutable","name":"_PROXY_DST_BYTECODE_HASH","nameLocation":"236300:24:0","nodeType":"VariableDeclaration","scope":10252,"src":"236273:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"236273:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"baseFunctions":[9733],"body":{"id":10004,"nodeType":"Block","src":"237256:2330:0","statements":[{"assignments":[9794],"declarations":[{"constant":false,"id":9794,"mutability":"mutable","name":"superArgsLength","nameLocation":"237274:15:0","nodeType":"VariableDeclaration","scope":10004,"src":"237266:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9793,"name":"uint256","nodeType":"ElementaryTypeName","src":"237266:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9799,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9795,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9788,"src":"237292:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"237302:6:0","memberName":"length","nodeType":"MemberAccess","src":"237292:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9797,"name":"SRC_IMMUTABLES_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"237311:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"237292:40:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"237266:66:0"},{"expression":{"arguments":[{"id":9803,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9774,"src":"237378:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},{"id":9804,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9776,"src":"237385:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":9805,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9778,"src":"237396:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9806,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9780,"src":"237407:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9807,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9782,"src":"237414:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9808,"name":"takingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9784,"src":"237428:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9809,"name":"remainingMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9786,"src":"237442:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":9810,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9788,"src":"237465:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":9811,"name":"superArgsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9794,"src":"237476:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"237465:27:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"expression":{"id":9800,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"237342:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BaseEscrowFactory_$10252_$","typeString":"type(contract super BaseEscrowFactory)"}},"id":9802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"237348:16:0","memberName":"_postInteraction","nodeType":"MemberAccess","referencedDeclaration":9733,"src":"237342:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Order_$5944_calldata_ptr_$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct IOrderMixin.Order calldata,bytes calldata,bytes32,address,uint256,uint256,uint256,bytes calldata)"}},"id":9813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"237342:160:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9814,"nodeType":"ExpressionStatement","src":"237342:160:0"},{"assignments":[9817],"declarations":[{"constant":false,"id":9817,"mutability":"mutable","name":"extraDataArgs","nameLocation":"237536:13:0","nodeType":"VariableDeclaration","scope":10004,"src":"237513:36:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_calldata_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs"},"typeName":{"id":9816,"nodeType":"UserDefinedTypeName","pathNode":{"id":9815,"name":"ExtraDataArgs","nameLocations":["237513:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":5842,"src":"237513:13:0"},"referencedDeclaration":5842,"src":"237513:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_storage_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs"}},"visibility":"internal"}],"id":9818,"nodeType":"VariableDeclarationStatement","src":"237513:36:0"},{"AST":{"nativeSrc":"237584:79:0","nodeType":"YulBlock","src":"237584:79:0","statements":[{"nativeSrc":"237598:55:0","nodeType":"YulAssignment","src":"237598:55:0","value":{"arguments":[{"name":"extraData.offset","nativeSrc":"237619:16:0","nodeType":"YulIdentifier","src":"237619:16:0"},{"name":"superArgsLength","nativeSrc":"237637:15:0","nodeType":"YulIdentifier","src":"237637:15:0"}],"functionName":{"name":"add","nativeSrc":"237615:3:0","nodeType":"YulIdentifier","src":"237615:3:0"},"nativeSrc":"237615:38:0","nodeType":"YulFunctionCall","src":"237615:38:0"},"variableNames":[{"name":"extraDataArgs","nativeSrc":"237598:13:0","nodeType":"YulIdentifier","src":"237598:13:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9788,"isOffset":true,"isSlot":false,"src":"237619:16:0","suffix":"offset","valueSize":1},{"declaration":9817,"isOffset":false,"isSlot":false,"src":"237598:13:0","valueSize":1},{"declaration":9794,"isOffset":false,"isSlot":false,"src":"237637:15:0","valueSize":1}],"flags":["memory-safe"],"id":9819,"nodeType":"InlineAssembly","src":"237559:104:0"},{"assignments":[9821],"declarations":[{"constant":false,"id":9821,"mutability":"mutable","name":"hashlock","nameLocation":"237681:8:0","nodeType":"VariableDeclaration","scope":10004,"src":"237673:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"237673:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9822,"nodeType":"VariableDeclarationStatement","src":"237673:16:0"},{"condition":{"arguments":[{"expression":{"id":9825,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9774,"src":"237738:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":9826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"237744:11:0","memberName":"makerTraits","nodeType":"MemberAccess","referencedDeclaration":5943,"src":"237738:17:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_MakerTraits_$606","typeString":"MakerTraits"}],"expression":{"id":9823,"name":"MakerTraitsLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"237704:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MakerTraitsLib_$971_$","typeString":"type(library MakerTraitsLib)"}},"id":9824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"237719:18:0","memberName":"allowMultipleFills","nodeType":"MemberAccess","referencedDeclaration":892,"src":"237704:33:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_MakerTraits_$606_$returns$_t_bool_$","typeString":"function (MakerTraits) pure returns (bool)"}},"id":9827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"237704:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9895,"nodeType":"Block","src":"238320:62:0","statements":[{"expression":{"id":9893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9890,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9821,"src":"238334:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9891,"name":"extraDataArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"238345:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_calldata_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs calldata"}},"id":9892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238359:12:0","memberName":"hashlockInfo","nodeType":"MemberAccess","referencedDeclaration":5831,"src":"238345:26:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"238334:37:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9894,"nodeType":"ExpressionStatement","src":"238334:37:0"}]},"id":9896,"nodeType":"IfStatement","src":"237700:682:0","trueBody":{"id":9889,"nodeType":"Block","src":"237758:556:0","statements":[{"assignments":[9829],"declarations":[{"constant":false,"id":9829,"mutability":"mutable","name":"partsAmount","nameLocation":"237780:11:0","nodeType":"VariableDeclaration","scope":9889,"src":"237772:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9828,"name":"uint256","nodeType":"ElementaryTypeName","src":"237772:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9837,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":9832,"name":"extraDataArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"237802:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_calldata_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs calldata"}},"id":9833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"237816:12:0","memberName":"hashlockInfo","nodeType":"MemberAccess","referencedDeclaration":5831,"src":"237802:26:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"237794:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9830,"name":"uint256","nodeType":"ElementaryTypeName","src":"237794:7:0","typeDescriptions":{}}},"id":9834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"237794:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323430","id":9835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"237833:3:0","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},"src":"237794:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"237772:64:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9838,"name":"partsAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9829,"src":"237854:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":9839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"237868:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"237854:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9844,"nodeType":"IfStatement","src":"237850:50:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9841,"name":"InvalidSecretsAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"237878:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"237878:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9843,"nodeType":"RevertStatement","src":"237871:29:0"}},{"assignments":[9846],"declarations":[{"constant":false,"id":9846,"mutability":"mutable","name":"key","nameLocation":"237922:3:0","nodeType":"VariableDeclaration","scope":9889,"src":"237914:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"237914:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9861,"initialValue":{"arguments":[{"arguments":[{"id":9850,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9778,"src":"237955:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":9855,"name":"extraDataArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"237982:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_calldata_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs calldata"}},"id":9856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"237996:12:0","memberName":"hashlockInfo","nodeType":"MemberAccess","referencedDeclaration":5831,"src":"237982:26:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"237974:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9853,"name":"uint256","nodeType":"ElementaryTypeName","src":"237974:7:0","typeDescriptions":{}}},"id":9857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"237974:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"237966:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":9851,"name":"uint240","nodeType":"ElementaryTypeName","src":"237966:7:0","typeDescriptions":{}}},"id":9858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"237966:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint240","typeString":"uint240"}],"expression":{"id":9848,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"237938:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"237942:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"237938:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"237938:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9847,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"237928:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"237928:84:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"237914:98:0"},{"assignments":[9864],"declarations":[{"constant":false,"id":9864,"mutability":"mutable","name":"validated","nameLocation":"238048:9:0","nodeType":"VariableDeclaration","scope":9889,"src":"238026:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$516_memory_ptr","typeString":"struct IMerkleStorageInvalidator.ValidationData"},"typeName":{"id":9863,"nodeType":"UserDefinedTypeName","pathNode":{"id":9862,"name":"ValidationData","nameLocations":["238026:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":516,"src":"238026:14:0"},"referencedDeclaration":516,"src":"238026:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$516_storage_ptr","typeString":"struct IMerkleStorageInvalidator.ValidationData"}},"visibility":"internal"}],"id":9868,"initialValue":{"baseExpression":{"id":9865,"name":"lastValidated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8280,"src":"238060:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ValidationData_$516_storage_$","typeString":"mapping(bytes32 => struct IMerkleStorageInvalidator.ValidationData storage ref)"}},"id":9867,"indexExpression":{"id":9866,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9846,"src":"238074:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"238060:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$516_storage","typeString":"struct IMerkleStorageInvalidator.ValidationData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"238026:52:0"},{"expression":{"id":9872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9869,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9821,"src":"238092:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9870,"name":"validated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9864,"src":"238103:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$516_memory_ptr","typeString":"struct IMerkleStorageInvalidator.ValidationData memory"}},"id":9871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"238113:4:0","memberName":"leaf","nodeType":"MemberAccess","referencedDeclaration":515,"src":"238103:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"238092:25:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9873,"nodeType":"ExpressionStatement","src":"238092:25:0"},{"condition":{"id":9883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"238135:107:0","subExpression":{"arguments":[{"id":9875,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9782,"src":"238156:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9876,"name":"remainingMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9786,"src":"238170:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9877,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9774,"src":"238193:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":9878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238199:12:0","memberName":"makingAmount","nodeType":"MemberAccess","referencedDeclaration":5938,"src":"238193:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9879,"name":"partsAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9829,"src":"238213:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9880,"name":"validated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9864,"src":"238226:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$516_memory_ptr","typeString":"struct IMerkleStorageInvalidator.ValidationData memory"}},"id":9881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"238236:5:0","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":513,"src":"238226:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9874,"name":"_isValidPartialFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10251,"src":"238136:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256,uint256,uint256,uint256) pure returns (bool)"}},"id":9882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"238136:106:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9888,"nodeType":"IfStatement","src":"238131:173:0","trueBody":{"id":9887,"nodeType":"Block","src":"238244:60:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9884,"name":"InvalidPartialFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"238269:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"238269:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9886,"nodeType":"RevertStatement","src":"238262:27:0"}]}}]}},{"assignments":[9901],"declarations":[{"constant":false,"id":9901,"mutability":"mutable","name":"immutables","nameLocation":"238422:10:0","nodeType":"VariableDeclaration","scope":10004,"src":"238392:40:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":9900,"nodeType":"UserDefinedTypeName","pathNode":{"id":9899,"name":"IBaseEscrow.Immutables","nameLocations":["238392:11:0","238404:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"238392:22:0"},"referencedDeclaration":4207,"src":"238392:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"id":9929,"initialValue":{"arguments":[{"id":9904,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9778,"src":"238483:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9905,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9821,"src":"238516:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9906,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9774,"src":"238545:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":9907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238551:5:0","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5927,"src":"238545:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},{"arguments":[{"arguments":[{"id":9912,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9780,"src":"238598:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"238590:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9910,"name":"uint160","nodeType":"ElementaryTypeName","src":"238590:7:0","typeDescriptions":{}}},"id":9913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"238590:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"id":9908,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"238577:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Address_$3_$","typeString":"type(Address)"}},"id":9909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"238585:4:0","memberName":"wrap","nodeType":"MemberAccess","src":"238577:12:0","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_Address_$3_$","typeString":"function (uint256) pure returns (Address)"}},"id":9914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"238577:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},{"expression":{"id":9915,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9774,"src":"238626:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":9916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238632:10:0","memberName":"makerAsset","nodeType":"MemberAccess","referencedDeclaration":5933,"src":"238626:16:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},{"id":9917,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9782,"src":"238664:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9918,"name":"extraDataArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"238705:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_calldata_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs calldata"}},"id":9919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238719:8:0","memberName":"deposits","nodeType":"MemberAccess","referencedDeclaration":5838,"src":"238705:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":9920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"238731:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"238705:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":9925,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"238797:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238803:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"238797:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":9922,"name":"extraDataArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"238759:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_calldata_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs calldata"}},"id":9923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238773:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":5841,"src":"238759:23:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":9924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238783:13:0","memberName":"setDeployedAt","nodeType":"MemberAccess","referencedDeclaration":3133,"src":"238759:37:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_uint256_$returns$_t_userDefinedValueType$_Timelocks_$3086_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,uint256) pure returns (Timelocks)"}},"id":9927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"238759:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}],"expression":{"id":9902,"name":"IBaseEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"238435:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaseEscrow_$4272_$","typeString":"type(contract IBaseEscrow)"}},"id":9903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238447:10:0","memberName":"Immutables","nodeType":"MemberAccess","referencedDeclaration":4207,"src":"238435:22:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Immutables_$4207_storage_ptr_$","typeString":"type(struct IBaseEscrow.Immutables storage pointer)"}},"id":9928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["238472:9:0","238506:8:0","238538:5:0","238570:5:0","238619:5:0","238656:6:0","238690:13:0","238748:9:0"],"names":["orderHash","hashlock","maker","taker","token","amount","safetyDeposit","timelocks"],"nodeType":"FunctionCall","src":"238435:389:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}},"nodeType":"VariableDeclarationStatement","src":"238392:432:0"},{"assignments":[9932],"declarations":[{"constant":false,"id":9932,"mutability":"mutable","name":"immutablesComplement","nameLocation":"238866:20:0","nodeType":"VariableDeclaration","scope":10004,"src":"238835:51:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DstImmutablesComplement_$5855_memory_ptr","typeString":"struct IEscrowFactory.DstImmutablesComplement"},"typeName":{"id":9931,"nodeType":"UserDefinedTypeName","pathNode":{"id":9930,"name":"DstImmutablesComplement","nameLocations":["238835:23:0"],"nodeType":"IdentifierPath","referencedDeclaration":5855,"src":"238835:23:0"},"referencedDeclaration":5855,"src":"238835:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_DstImmutablesComplement_$5855_storage_ptr","typeString":"struct IEscrowFactory.DstImmutablesComplement"}},"visibility":"internal"}],"id":9962,"initialValue":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9934,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9774,"src":"238934:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":9935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238940:8:0","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":5930,"src":"238934:14:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":9936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238949:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"238934:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":9937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"238934:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"238966:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"238958:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9938,"name":"address","nodeType":"ElementaryTypeName","src":"238958:7:0","typeDescriptions":{}}},"id":9941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"238958:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"238934:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":9945,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9774,"src":"238985:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":9946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238991:8:0","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":5930,"src":"238985:14:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":9947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"238934:65:0","trueExpression":{"expression":{"id":9943,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9774,"src":"238971:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":9944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"238977:5:0","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5927,"src":"238971:11:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},{"id":9948,"name":"takingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9784,"src":"239021:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9949,"name":"extraDataArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"239054:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_calldata_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs calldata"}},"id":9950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239068:8:0","memberName":"dstToken","nodeType":"MemberAccess","referencedDeclaration":5836,"src":"239054:22:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9951,"name":"extraDataArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"239105:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_calldata_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs calldata"}},"id":9952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239119:8:0","memberName":"deposits","nodeType":"MemberAccess","referencedDeclaration":5838,"src":"239105:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"expression":{"arguments":[{"id":9955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"239135:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":9954,"name":"uint128","nodeType":"ElementaryTypeName","src":"239135:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":9953,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"239130:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"239130:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":9957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"239144:3:0","memberName":"max","nodeType":"MemberAccess","src":"239130:17:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"239105:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9959,"name":"extraDataArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"239170:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraDataArgs_$5842_calldata_ptr","typeString":"struct IEscrowFactory.ExtraDataArgs calldata"}},"id":9960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239184:10:0","memberName":"dstChainId","nodeType":"MemberAccess","referencedDeclaration":5833,"src":"239170:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9933,"name":"DstImmutablesComplement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"238889:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DstImmutablesComplement_$5855_storage_ptr_$","typeString":"type(struct IEscrowFactory.DstImmutablesComplement storage pointer)"}},"id":9961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["238927:5:0","239013:6:0","239047:5:0","239090:13:0","239161:7:0"],"names":["maker","amount","token","safetyDeposit","chainId"],"nodeType":"FunctionCall","src":"238889:316:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DstImmutablesComplement_$5855_memory_ptr","typeString":"struct IEscrowFactory.DstImmutablesComplement memory"}},"nodeType":"VariableDeclarationStatement","src":"238835:370:0"},{"eventCall":{"arguments":[{"id":9964,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9901,"src":"239238:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}},{"id":9965,"name":"immutablesComplement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9932,"src":"239250:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DstImmutablesComplement_$5855_memory_ptr","typeString":"struct IEscrowFactory.DstImmutablesComplement memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"},{"typeIdentifier":"t_struct$_DstImmutablesComplement_$5855_memory_ptr","typeString":"struct IEscrowFactory.DstImmutablesComplement memory"}],"id":9963,"name":"SrcEscrowCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"239221:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_Immutables_$4207_memory_ptr_$_t_struct$_DstImmutablesComplement_$5855_memory_ptr_$returns$__$","typeString":"function (struct IBaseEscrow.Immutables memory,struct IEscrowFactory.DstImmutablesComplement memory)"}},"id":9966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"239221:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9967,"nodeType":"EmitStatement","src":"239216:55:0"},{"assignments":[9969],"declarations":[{"constant":false,"id":9969,"mutability":"mutable","name":"salt","nameLocation":"239290:4:0","nodeType":"VariableDeclaration","scope":10004,"src":"239282:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"239282:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9973,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9970,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9901,"src":"239297:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}},"id":9971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"239308:7:0","memberName":"hashMem","nodeType":"MemberAccess","referencedDeclaration":6198,"src":"239297:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Immutables_$4207_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_Immutables_$4207_memory_ptr_$","typeString":"function (struct IBaseEscrow.Immutables memory) pure returns (bytes32)"}},"id":9972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"239297:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"239282:35:0"},{"assignments":[9975],"declarations":[{"constant":false,"id":9975,"mutability":"mutable","name":"escrow","nameLocation":"239335:6:0","nodeType":"VariableDeclaration","scope":10004,"src":"239327:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9974,"name":"address","nodeType":"ElementaryTypeName","src":"239327:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9981,"initialValue":{"arguments":[{"id":9977,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9969,"src":"239358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":9978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"239364:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9979,"name":"ESCROW_SRC_IMPLEMENTATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9763,"src":"239367:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9976,"name":"_deployEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10178,"src":"239344:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,uint256,address) returns (address)"}},"id":9980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"239344:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"239327:66:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9982,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"239407:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239414:7:0","memberName":"balance","nodeType":"MemberAccess","src":"239407:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9984,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9901,"src":"239424:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}},"id":9985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"239435:13:0","memberName":"safetyDeposit","nodeType":"MemberAccess","referencedDeclaration":4203,"src":"239424:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"239407:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9994,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"239497:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":9988,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9774,"src":"239459:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order calldata"}},"id":9989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239465:10:0","memberName":"makerAsset","nodeType":"MemberAccess","referencedDeclaration":5933,"src":"239459:16:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":9990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239476:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"239459:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":9991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"239459:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9987,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"239452:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$379_$","typeString":"type(contract IERC20)"}},"id":9992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"239452:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":9993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239483:13:0","memberName":"safeBalanceOf","nodeType":"MemberAccess","referencedDeclaration":6614,"src":"239452:44:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$379_$_t_address_$returns$_t_uint256_$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address) view returns (uint256)"}},"id":9995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"239452:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9996,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9782,"src":"239507:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"239452:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"239407:112:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10003,"nodeType":"IfStatement","src":"239403:177:0","trueBody":{"id":10002,"nodeType":"Block","src":"239521:59:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9999,"name":"InsufficientEscrowBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"239542:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"239542:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10001,"nodeType":"RevertStatement","src":"239535:34:0"}]}}]},"documentation":{"id":9771,"nodeType":"StructuredDocumentation","src":"236331:582:0","text":" @notice Creates a new escrow contract for maker on the source chain.\n @dev The caller must be whitelisted and pre-send the safety deposit in a native token\n to a pre-computed deterministic address of the created escrow.\n The external postInteraction function call will be made from the Limit Order Protocol\n after all funds have been transferred. See {IPostInteraction-postInteraction}.\n `extraData` consists of:\n   - ExtraDataArgs struct\n   - whitelist\n   - 0 / 4 bytes for the fee\n   - 1 byte for the bitmap"},"id":10005,"implemented":true,"kind":"function","modifiers":[],"name":"_postInteraction","nameLocation":"236927:16:0","nodeType":"FunctionDefinition","overrides":{"id":9791,"nodeType":"OverrideSpecifier","overrides":[{"id":9790,"name":"ResolverValidationExtension","nameLocations":["237227:27:0"],"nodeType":"IdentifierPath","referencedDeclaration":9734,"src":"237227:27:0"}],"src":"237218:37:0"},"parameters":{"id":9789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9774,"mutability":"mutable","name":"order","nameLocation":"236980:5:0","nodeType":"VariableDeclaration","scope":10005,"src":"236953:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_calldata_ptr","typeString":"struct IOrderMixin.Order"},"typeName":{"id":9773,"nodeType":"UserDefinedTypeName","pathNode":{"id":9772,"name":"IOrderMixin.Order","nameLocations":["236953:11:0","236965:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":5944,"src":"236953:17:0"},"referencedDeclaration":5944,"src":"236953:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5944_storage_ptr","typeString":"struct IOrderMixin.Order"}},"visibility":"internal"},{"constant":false,"id":9776,"mutability":"mutable","name":"extension","nameLocation":"237010:9:0","nodeType":"VariableDeclaration","scope":10005,"src":"236995:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9775,"name":"bytes","nodeType":"ElementaryTypeName","src":"236995:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9778,"mutability":"mutable","name":"orderHash","nameLocation":"237037:9:0","nodeType":"VariableDeclaration","scope":10005,"src":"237029:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"237029:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9780,"mutability":"mutable","name":"taker","nameLocation":"237064:5:0","nodeType":"VariableDeclaration","scope":10005,"src":"237056:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9779,"name":"address","nodeType":"ElementaryTypeName","src":"237056:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9782,"mutability":"mutable","name":"makingAmount","nameLocation":"237087:12:0","nodeType":"VariableDeclaration","scope":10005,"src":"237079:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9781,"name":"uint256","nodeType":"ElementaryTypeName","src":"237079:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9784,"mutability":"mutable","name":"takingAmount","nameLocation":"237117:12:0","nodeType":"VariableDeclaration","scope":10005,"src":"237109:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9783,"name":"uint256","nodeType":"ElementaryTypeName","src":"237109:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9786,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"237147:21:0","nodeType":"VariableDeclaration","scope":10005,"src":"237139:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9785,"name":"uint256","nodeType":"ElementaryTypeName","src":"237139:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9788,"mutability":"mutable","name":"extraData","nameLocation":"237193:9:0","nodeType":"VariableDeclaration","scope":10005,"src":"237178:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9787,"name":"bytes","nodeType":"ElementaryTypeName","src":"237178:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"236943:265:0"},"returnParameters":{"id":9792,"nodeType":"ParameterList","parameters":[],"src":"237256:0:0"},"scope":10252,"src":"236918:2668:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5903],"body":{"id":10120,"nodeType":"Block","src":"239784:1028:0","statements":[{"assignments":[10015],"declarations":[{"constant":false,"id":10015,"mutability":"mutable","name":"token","nameLocation":"239802:5:0","nodeType":"VariableDeclaration","scope":10120,"src":"239794:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10014,"name":"address","nodeType":"ElementaryTypeName","src":"239794:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10020,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":10016,"name":"dstImmutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"239810:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":10017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239824:5:0","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":4199,"src":"239810:19:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}},"id":10018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239830:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":35,"src":"239810:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Address_$3_$returns$_t_address_$attached_to$_t_userDefinedValueType$_Address_$3_$","typeString":"function (Address) pure returns (address)"}},"id":10019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"239810:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"239794:41:0"},{"assignments":[10022],"declarations":[{"constant":false,"id":10022,"mutability":"mutable","name":"nativeAmount","nameLocation":"239853:12:0","nodeType":"VariableDeclaration","scope":10120,"src":"239845:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10021,"name":"uint256","nodeType":"ElementaryTypeName","src":"239845:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10025,"initialValue":{"expression":{"id":10023,"name":"dstImmutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"239868:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":10024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239882:13:0","memberName":"safetyDeposit","nodeType":"MemberAccess","referencedDeclaration":4203,"src":"239868:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"239845:50:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10026,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10015,"src":"239909:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"239926:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"239918:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10027,"name":"address","nodeType":"ElementaryTypeName","src":"239918:7:0","typeDescriptions":{}}},"id":10030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"239918:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"239909:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10038,"nodeType":"IfStatement","src":"239905:86:0","trueBody":{"id":10037,"nodeType":"Block","src":"239930:61:0","statements":[{"expression":{"id":10035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10032,"name":"nativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"239944:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":10033,"name":"dstImmutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"239960:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":10034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"239974:6:0","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":4201,"src":"239960:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"239944:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10036,"nodeType":"ExpressionStatement","src":"239944:36:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10039,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"240004:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"240008:5:0","memberName":"value","nodeType":"MemberAccess","src":"240004:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10041,"name":"nativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"240017:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"240004:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10046,"nodeType":"IfStatement","src":"240000:65:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10043,"name":"InsufficientEscrowBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"240038:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"240038:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10045,"nodeType":"RevertStatement","src":"240031:34:0"}},{"assignments":[10051],"declarations":[{"constant":false,"id":10051,"mutability":"mutable","name":"immutables","nameLocation":"240106:10:0","nodeType":"VariableDeclaration","scope":10120,"src":"240076:40:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":10050,"nodeType":"UserDefinedTypeName","pathNode":{"id":10049,"name":"IBaseEscrow.Immutables","nameLocations":["240076:11:0","240088:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"240076:22:0"},"referencedDeclaration":4207,"src":"240076:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"id":10053,"initialValue":{"id":10052,"name":"dstImmutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"240119:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"nodeType":"VariableDeclarationStatement","src":"240076:56:0"},{"expression":{"id":10063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10054,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"240142:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}},"id":10056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"240153:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"240142:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":10060,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"240200:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"240206:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"240200:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":10057,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"240165:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}},"id":10058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"240176:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"240165:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":10059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"240186:13:0","memberName":"setDeployedAt","nodeType":"MemberAccess","referencedDeclaration":3133,"src":"240165:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_uint256_$returns$_t_userDefinedValueType$_Timelocks_$3086_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,uint256) pure returns (Timelocks)"}},"id":10062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"240165:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"src":"240142:74:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":10064,"nodeType":"ExpressionStatement","src":"240142:74:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"expression":{"id":10068,"name":"TimelocksLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"240370:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TimelocksLib_$3198_$","typeString":"type(library TimelocksLib)"}},"id":10069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"240383:5:0","memberName":"Stage","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"240370:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$3095_$","typeString":"type(enum TimelocksLib.Stage)"}},"id":10070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"240389:15:0","memberName":"DstCancellation","nodeType":"MemberAccess","referencedDeclaration":3094,"src":"240370:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$3095","typeString":"enum TimelocksLib.Stage"}],"expression":{"expression":{"id":10065,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"240345:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}},"id":10066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"240356:9:0","memberName":"timelocks","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"240345:20:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timelocks_$3086","typeString":"Timelocks"}},"id":10067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"240366:3:0","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"240345:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Timelocks_$3086_$_t_enum$_Stage_$3095_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Timelocks_$3086_$","typeString":"function (Timelocks,enum TimelocksLib.Stage) pure returns (uint256)"}},"id":10071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"240345:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10072,"name":"srcCancellationTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10011,"src":"240408:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"240345:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10077,"nodeType":"IfStatement","src":"240341:121:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10074,"name":"InvalidCreationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"240441:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"240441:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10076,"nodeType":"RevertStatement","src":"240434:28:0"}},{"assignments":[10079],"declarations":[{"constant":false,"id":10079,"mutability":"mutable","name":"salt","nameLocation":"240481:4:0","nodeType":"VariableDeclaration","scope":10120,"src":"240473:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"240473:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10083,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10080,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"240488:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}},"id":10081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"240499:7:0","memberName":"hashMem","nodeType":"MemberAccess","referencedDeclaration":6198,"src":"240488:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Immutables_$4207_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_Immutables_$4207_memory_ptr_$","typeString":"function (struct IBaseEscrow.Immutables memory) pure returns (bytes32)"}},"id":10082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"240488:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"240473:35:0"},{"assignments":[10085],"declarations":[{"constant":false,"id":10085,"mutability":"mutable","name":"escrow","nameLocation":"240526:6:0","nodeType":"VariableDeclaration","scope":10120,"src":"240518:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10084,"name":"address","nodeType":"ElementaryTypeName","src":"240518:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10092,"initialValue":{"arguments":[{"id":10087,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"240549:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10088,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"240555:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"240559:5:0","memberName":"value","nodeType":"MemberAccess","src":"240555:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10090,"name":"ESCROW_DST_IMPLEMENTATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"240566:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10086,"name":"_deployEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10178,"src":"240535:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,uint256,address) returns (address)"}},"id":10091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"240535:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"240518:74:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10093,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10015,"src":"240606:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"240623:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"240615:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10094,"name":"address","nodeType":"ElementaryTypeName","src":"240615:7:0","typeDescriptions":{}}},"id":10097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"240615:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"240606:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10111,"nodeType":"IfStatement","src":"240602:119:0","trueBody":{"id":10110,"nodeType":"Block","src":"240627:94:0","statements":[{"expression":{"arguments":[{"expression":{"id":10103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"240672:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"240676:6:0","memberName":"sender","nodeType":"MemberAccess","src":"240672:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10105,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10085,"src":"240684:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10106,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"240692:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_memory_ptr","typeString":"struct IBaseEscrow.Immutables memory"}},"id":10107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"240703:6:0","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":4201,"src":"240692:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10100,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10015,"src":"240648:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10099,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"240641:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$379_$","typeString":"type(contract IERC20)"}},"id":10101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"240641:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"id":10102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"240655:16:0","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":6678,"src":"240641:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$379_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$379_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":10108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"240641:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10109,"nodeType":"ExpressionStatement","src":"240641:69:0"}]}},{"eventCall":{"arguments":[{"id":10113,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10085,"src":"240753:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10114,"name":"dstImmutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"240761:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":10115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"240775:8:0","memberName":"hashlock","nodeType":"MemberAccess","referencedDeclaration":4190,"src":"240761:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10116,"name":"dstImmutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"240785:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":10117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"240799:5:0","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"240785:19:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_userDefinedValueType$_Address_$3","typeString":"Address"}],"id":10112,"name":"DstEscrowCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"240736:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_userDefinedValueType$_Address_$3_$returns$__$","typeString":"function (address,bytes32,Address)"}},"id":10118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"240736:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10119,"nodeType":"EmitStatement","src":"240731:74:0"}]},"documentation":{"id":10006,"nodeType":"StructuredDocumentation","src":"239592:64:0","text":" @notice See {IEscrowFactory-createDstEscrow}."},"functionSelector":"dea024e4","id":10121,"implemented":true,"kind":"function","modifiers":[],"name":"createDstEscrow","nameLocation":"239670:15:0","nodeType":"FunctionDefinition","parameters":{"id":10012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10009,"mutability":"mutable","name":"dstImmutables","nameLocation":"239718:13:0","nodeType":"VariableDeclaration","scope":10121,"src":"239686:45:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":10008,"nodeType":"UserDefinedTypeName","pathNode":{"id":10007,"name":"IBaseEscrow.Immutables","nameLocations":["239686:11:0","239698:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"239686:22:0"},"referencedDeclaration":4207,"src":"239686:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"},{"constant":false,"id":10011,"mutability":"mutable","name":"srcCancellationTimestamp","nameLocation":"239741:24:0","nodeType":"VariableDeclaration","scope":10121,"src":"239733:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10010,"name":"uint256","nodeType":"ElementaryTypeName","src":"239733:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"239685:81:0"},"returnParameters":{"id":10013,"nodeType":"ParameterList","parameters":[],"src":"239784:0:0"},"scope":10252,"src":"239661:1151:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[5912],"body":{"id":10138,"nodeType":"Block","src":"241002:91:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10132,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10125,"src":"241042:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":10133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"241053:4:0","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":6187,"src":"241042:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Immutables_$4207_calldata_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_Immutables_$4207_calldata_ptr_$","typeString":"function (struct IBaseEscrow.Immutables calldata) pure returns (bytes32)"}},"id":10134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"241042:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10135,"name":"_PROXY_SRC_BYTECODE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"241061:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":10130,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"241019:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$3452_$","typeString":"type(library Create2)"}},"id":10131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"241027:14:0","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":3437,"src":"241019:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,bytes32) view returns (address)"}},"id":10136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"241019:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10129,"id":10137,"nodeType":"Return","src":"241012:74:0"}]},"documentation":{"id":10122,"nodeType":"StructuredDocumentation","src":"240818:67:0","text":" @notice See {IEscrowFactory-addressOfEscrowSrc}."},"functionSelector":"fb6bd47e","id":10139,"implemented":true,"kind":"function","modifiers":[],"name":"addressOfEscrowSrc","nameLocation":"240899:18:0","nodeType":"FunctionDefinition","parameters":{"id":10126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10125,"mutability":"mutable","name":"immutables","nameLocation":"240950:10:0","nodeType":"VariableDeclaration","scope":10139,"src":"240918:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":10124,"nodeType":"UserDefinedTypeName","pathNode":{"id":10123,"name":"IBaseEscrow.Immutables","nameLocations":["240918:11:0","240930:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"240918:22:0"},"referencedDeclaration":4207,"src":"240918:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"240917:44:0"},"returnParameters":{"id":10129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10139,"src":"240993:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10127,"name":"address","nodeType":"ElementaryTypeName","src":"240993:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"240992:9:0"},"scope":10252,"src":"240890:203:0","stateMutability":"view","virtual":true,"visibility":"external"},{"baseFunctions":[5921],"body":{"id":10156,"nodeType":"Block","src":"241283:91:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10150,"name":"immutables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10143,"src":"241323:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables calldata"}},"id":10151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"241334:4:0","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":6187,"src":"241323:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Immutables_$4207_calldata_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_Immutables_$4207_calldata_ptr_$","typeString":"function (struct IBaseEscrow.Immutables calldata) pure returns (bytes32)"}},"id":10152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"241323:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10153,"name":"_PROXY_DST_BYTECODE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"241342:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":10148,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"241300:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$3452_$","typeString":"type(library Create2)"}},"id":10149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"241308:14:0","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":3437,"src":"241300:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,bytes32) view returns (address)"}},"id":10154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"241300:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10147,"id":10155,"nodeType":"Return","src":"241293:74:0"}]},"documentation":{"id":10140,"nodeType":"StructuredDocumentation","src":"241099:67:0","text":" @notice See {IEscrowFactory-addressOfEscrowDst}."},"functionSelector":"be58e91c","id":10157,"implemented":true,"kind":"function","modifiers":[],"name":"addressOfEscrowDst","nameLocation":"241180:18:0","nodeType":"FunctionDefinition","parameters":{"id":10144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10143,"mutability":"mutable","name":"immutables","nameLocation":"241231:10:0","nodeType":"VariableDeclaration","scope":10157,"src":"241199:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_calldata_ptr","typeString":"struct IBaseEscrow.Immutables"},"typeName":{"id":10142,"nodeType":"UserDefinedTypeName","pathNode":{"id":10141,"name":"IBaseEscrow.Immutables","nameLocations":["241199:11:0","241211:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"241199:22:0"},"referencedDeclaration":4207,"src":"241199:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Immutables_$4207_storage_ptr","typeString":"struct IBaseEscrow.Immutables"}},"visibility":"internal"}],"src":"241198:44:0"},"returnParameters":{"id":10147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10157,"src":"241274:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10145,"name":"address","nodeType":"ElementaryTypeName","src":"241274:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"241273:9:0"},"scope":10252,"src":"241171:203:0","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":10177,"nodeType":"Block","src":"241823:72:0","statements":[{"expression":{"id":10175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10169,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10167,"src":"241833:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10172,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10160,"src":"241876:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10162,"src":"241882:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10170,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10164,"src":"241842:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"241857:18:0","memberName":"cloneDeterministic","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"241842:33:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$attached_to$_t_address_$","typeString":"function (address,bytes32,uint256) returns (address)"}},"id":10174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"241842:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"241833:55:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10176,"nodeType":"ExpressionStatement","src":"241833:55:0"}]},"documentation":{"id":10158,"nodeType":"StructuredDocumentation","src":"241380:320:0","text":" @notice Deploys a new escrow contract.\n @param salt The salt for the deterministic address computation.\n @param value The value to be sent to the escrow contract.\n @param implementation Address of the implementation.\n @return escrow The address of the deployed escrow contract."},"id":10178,"implemented":true,"kind":"function","modifiers":[],"name":"_deployEscrow","nameLocation":"241714:13:0","nodeType":"FunctionDefinition","parameters":{"id":10165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10160,"mutability":"mutable","name":"salt","nameLocation":"241736:4:0","nodeType":"VariableDeclaration","scope":10178,"src":"241728:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"241728:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":10162,"mutability":"mutable","name":"value","nameLocation":"241750:5:0","nodeType":"VariableDeclaration","scope":10178,"src":"241742:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10161,"name":"uint256","nodeType":"ElementaryTypeName","src":"241742:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10164,"mutability":"mutable","name":"implementation","nameLocation":"241765:14:0","nodeType":"VariableDeclaration","scope":10178,"src":"241757:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10163,"name":"address","nodeType":"ElementaryTypeName","src":"241757:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"241727:53:0"},"returnParameters":{"id":10168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10167,"mutability":"mutable","name":"escrow","nameLocation":"241815:6:0","nodeType":"VariableDeclaration","scope":10178,"src":"241807:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10166,"name":"address","nodeType":"ElementaryTypeName","src":"241807:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"241806:16:0"},"scope":10252,"src":"241705:190:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10250,"nodeType":"Block","src":"242130:726:0","statements":[{"assignments":[10194],"declarations":[{"constant":false,"id":10194,"mutability":"mutable","name":"calculatedIndex","nameLocation":"242148:15:0","nodeType":"VariableDeclaration","scope":10250,"src":"242140:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10193,"name":"uint256","nodeType":"ElementaryTypeName","src":"242140:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10207,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10195,"name":"orderMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10184,"src":"242167:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10196,"name":"remainingMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10182,"src":"242187:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242167:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10198,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10180,"src":"242211:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242167:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242226:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"242167:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"242166:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10203,"name":"partsAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10186,"src":"242231:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242166:76:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10205,"name":"orderMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10184,"src":"242245:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242166:96:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"242140:122:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10208,"name":"remainingMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10182,"src":"242277:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10209,"name":"makingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10180,"src":"242302:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242277:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10219,"name":"orderMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10184,"src":"242460:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10220,"name":"remainingMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10182,"src":"242481:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242460:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10242,"nodeType":"IfStatement","src":"242456:339:0","trueBody":{"id":10241,"nodeType":"Block","src":"242504:291:0","statements":[{"assignments":[10223],"declarations":[{"constant":false,"id":10223,"mutability":"mutable","name":"prevCalculatedIndex","nameLocation":"242611:19:0","nodeType":"VariableDeclaration","scope":10241,"src":"242603:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10222,"name":"uint256","nodeType":"ElementaryTypeName","src":"242603:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10234,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10224,"name":"orderMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10184,"src":"242634:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10225,"name":"remainingMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10182,"src":"242654:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242634:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242678:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"242634:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"242633:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10230,"name":"partsAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10186,"src":"242683:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242633:61:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10232,"name":"orderMakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10184,"src":"242697:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242633:81:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"242603:111:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10235,"name":"calculatedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10194,"src":"242732:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10236,"name":"prevCalculatedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10223,"src":"242751:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242732:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10240,"nodeType":"IfStatement","src":"242728:56:0","trueBody":{"expression":{"hexValue":"66616c7365","id":10238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"242779:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10192,"id":10239,"nodeType":"Return","src":"242772:12:0"}}]}},"id":10243,"nodeType":"IfStatement","src":"242273:522:0","trueBody":{"id":10218,"nodeType":"Block","src":"242316:134:0","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10211,"name":"calculatedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10194,"src":"242401:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":10212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242419:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"242401:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10214,"name":"validatedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10188,"src":"242424:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242401:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":10216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"242400:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10192,"id":10217,"nodeType":"Return","src":"242393:46:0"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10244,"name":"calculatedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10194,"src":"242812:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":10245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242830:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"242812:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10247,"name":"validatedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10188,"src":"242835:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"242812:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10192,"id":10249,"nodeType":"Return","src":"242805:44:0"}]},"id":10251,"implemented":true,"kind":"function","modifiers":[],"name":"_isValidPartialFill","nameLocation":"241910:19:0","nodeType":"FunctionDefinition","parameters":{"id":10189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10180,"mutability":"mutable","name":"makingAmount","nameLocation":"241947:12:0","nodeType":"VariableDeclaration","scope":10251,"src":"241939:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10179,"name":"uint256","nodeType":"ElementaryTypeName","src":"241939:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10182,"mutability":"mutable","name":"remainingMakingAmount","nameLocation":"241977:21:0","nodeType":"VariableDeclaration","scope":10251,"src":"241969:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10181,"name":"uint256","nodeType":"ElementaryTypeName","src":"241969:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10184,"mutability":"mutable","name":"orderMakingAmount","nameLocation":"242016:17:0","nodeType":"VariableDeclaration","scope":10251,"src":"242008:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10183,"name":"uint256","nodeType":"ElementaryTypeName","src":"242008:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10186,"mutability":"mutable","name":"partsAmount","nameLocation":"242051:11:0","nodeType":"VariableDeclaration","scope":10251,"src":"242043:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10185,"name":"uint256","nodeType":"ElementaryTypeName","src":"242043:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10188,"mutability":"mutable","name":"validatedIndex","nameLocation":"242080:14:0","nodeType":"VariableDeclaration","scope":10251,"src":"242072:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10187,"name":"uint256","nodeType":"ElementaryTypeName","src":"242072:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"241929:171:0"},"returnParameters":{"id":10192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10251,"src":"242124:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10190,"name":"bool","nodeType":"ElementaryTypeName","src":"242124:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"242123:6:0"},"scope":10252,"src":"241901:955:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10322,"src":"235674:7184:0","usedErrors":[138,144,526,528,5857,5859,5861,5863,6576,7084,8821,8823,9454],"usedEvents":[5872,5882]},{"abstract":false,"baseContracts":[{"baseName":{"id":10254,"name":"BaseEscrowFactory","nameLocations":["243113:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":10252,"src":"243113:17:0"},"id":10255,"nodeType":"InheritanceSpecifier","src":"243113:17:0"}],"canonicalName":"EscrowFactory","contractDependencies":[8765,9176,9444],"contractKind":"contract","documentation":{"id":10253,"nodeType":"StructuredDocumentation","src":"242923:163:0","text":" @title Escrow Factory contract\n @notice Contract to create escrow contracts for cross-chain atomic swap.\n @custom:security-contact security@1inch.io"},"fullyImplemented":true,"id":10321,"linearizedBaseContracts":[10321,10252,8412,6353,539,9734,8965,3510,7597,6242,6308,6330,5922],"name":"EscrowFactory","nameLocation":"243096:13:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":10319,"nodeType":"Block","src":"243478:361:0","statements":[{"expression":{"id":10292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10283,"name":"ESCROW_SRC_IMPLEMENTATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9763,"src":"243488:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":10289,"name":"rescueDelaySrc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10267,"src":"243538:14:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":10288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"243524:13:0","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_uint32_$returns$_t_contract$_EscrowSrc_$9444_$","typeString":"function (uint32) returns (contract EscrowSrc)"},"typeName":{"id":10287,"nodeType":"UserDefinedTypeName","pathNode":{"id":10286,"name":"EscrowSrc","nameLocations":["243528:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":9444,"src":"243528:9:0"},"referencedDeclaration":9444,"src":"243528:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowSrc_$9444","typeString":"contract EscrowSrc"}}},"id":10290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"243524:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_EscrowSrc_$9444","typeString":"contract EscrowSrc"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EscrowSrc_$9444","typeString":"contract EscrowSrc"}],"id":10285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"243516:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10284,"name":"address","nodeType":"ElementaryTypeName","src":"243516:7:0","typeDescriptions":{}}},"id":10291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"243516:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"243488:66:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10293,"nodeType":"ExpressionStatement","src":"243488:66:0"},{"expression":{"id":10303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10294,"name":"ESCROW_DST_IMPLEMENTATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"243564:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":10300,"name":"rescueDelayDst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10269,"src":"243614:14:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":10299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"243600:13:0","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_uint32_$returns$_t_contract$_EscrowDst_$9176_$","typeString":"function (uint32) returns (contract EscrowDst)"},"typeName":{"id":10298,"nodeType":"UserDefinedTypeName","pathNode":{"id":10297,"name":"EscrowDst","nameLocations":["243604:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":9176,"src":"243604:9:0"},"referencedDeclaration":9176,"src":"243604:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowDst_$9176","typeString":"contract EscrowDst"}}},"id":10301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"243600:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_EscrowDst_$9176","typeString":"contract EscrowDst"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EscrowDst_$9176","typeString":"contract EscrowDst"}],"id":10296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"243592:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10295,"name":"address","nodeType":"ElementaryTypeName","src":"243592:7:0","typeDescriptions":{}}},"id":10302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"243592:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"243564:66:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10304,"nodeType":"ExpressionStatement","src":"243564:66:0"},{"expression":{"id":10310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10305,"name":"_PROXY_SRC_BYTECODE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"243640:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10308,"name":"ESCROW_SRC_IMPLEMENTATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9763,"src":"243705:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10306,"name":"ProxyHashLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"243667:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ProxyHashLib_$1060_$","typeString":"type(library ProxyHashLib)"}},"id":10307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"243680:24:0","memberName":"computeProxyBytecodeHash","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"243667:37:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":10309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"243667:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"243640:91:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10311,"nodeType":"ExpressionStatement","src":"243640:91:0"},{"expression":{"id":10317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10312,"name":"_PROXY_DST_BYTECODE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"243741:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10315,"name":"ESCROW_DST_IMPLEMENTATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"243806:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10313,"name":"ProxyHashLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"243768:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ProxyHashLib_$1060_$","typeString":"type(library ProxyHashLib)"}},"id":10314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"243781:24:0","memberName":"computeProxyBytecodeHash","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"243768:37:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":10316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"243768:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"243741:91:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10318,"nodeType":"ExpressionStatement","src":"243741:91:0"}]},"id":10320,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10272,"name":"limitOrderProtocol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10257,"src":"243347:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10273,"kind":"baseConstructorSpecifier","modifierName":{"id":10271,"name":"BaseExtension","nameLocations":["243333:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":7597,"src":"243333:13:0"},"nodeType":"ModifierInvocation","src":"243333:33:0"},{"arguments":[{"id":10275,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10260,"src":"243399:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"id":10276,"name":"accessToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10263,"src":"243409:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},{"id":10277,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10265,"src":"243422:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10278,"kind":"baseConstructorSpecifier","modifierName":{"id":10274,"name":"ResolverValidationExtension","nameLocations":["243371:27:0"],"nodeType":"IdentifierPath","referencedDeclaration":9734,"src":"243371:27:0"},"nodeType":"ModifierInvocation","src":"243371:57:0"},{"arguments":[{"id":10280,"name":"limitOrderProtocol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10257,"src":"243458:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10281,"kind":"baseConstructorSpecifier","modifierName":{"id":10279,"name":"MerkleStorageInvalidator","nameLocations":["243433:24:0"],"nodeType":"IdentifierPath","referencedDeclaration":8412,"src":"243433:24:0"},"nodeType":"ModifierInvocation","src":"243433:44:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10257,"mutability":"mutable","name":"limitOrderProtocol","nameLocation":"243166:18:0","nodeType":"VariableDeclaration","scope":10320,"src":"243158:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10256,"name":"address","nodeType":"ElementaryTypeName","src":"243158:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10260,"mutability":"mutable","name":"feeToken","nameLocation":"243201:8:0","nodeType":"VariableDeclaration","scope":10320,"src":"243194:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":10259,"nodeType":"UserDefinedTypeName","pathNode":{"id":10258,"name":"IERC20","nameLocations":["243194:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"243194:6:0"},"referencedDeclaration":379,"src":"243194:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10263,"mutability":"mutable","name":"accessToken","nameLocation":"243226:11:0","nodeType":"VariableDeclaration","scope":10320,"src":"243219:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"},"typeName":{"id":10262,"nodeType":"UserDefinedTypeName","pathNode":{"id":10261,"name":"IERC20","nameLocations":["243219:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"243219:6:0"},"referencedDeclaration":379,"src":"243219:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$379","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10265,"mutability":"mutable","name":"owner","nameLocation":"243255:5:0","nodeType":"VariableDeclaration","scope":10320,"src":"243247:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10264,"name":"address","nodeType":"ElementaryTypeName","src":"243247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10267,"mutability":"mutable","name":"rescueDelaySrc","nameLocation":"243277:14:0","nodeType":"VariableDeclaration","scope":10320,"src":"243270:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10266,"name":"uint32","nodeType":"ElementaryTypeName","src":"243270:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10269,"mutability":"mutable","name":"rescueDelayDst","nameLocation":"243308:14:0","nodeType":"VariableDeclaration","scope":10320,"src":"243301:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10268,"name":"uint32","nodeType":"ElementaryTypeName","src":"243301:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"243148:180:0"},"returnParameters":{"id":10282,"nodeType":"ParameterList","parameters":[],"src":"243478:0:0"},"scope":10321,"src":"243137:702:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":10322,"src":"243087:754:0","usedErrors":[138,144,526,528,5857,5859,5861,5863,6576,7084,8821,8823,9454],"usedEvents":[5872,5882]}],"src":"32:243811:0"},"id":0}},"contracts":{"contracts/escrow/EscrowFactory.sol":{"AddressLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122077d3daba2bed5e943d180de00fd286e08665033379cfc330f9b9e9b5a0b3f5dd64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xD3DABA2BED5E943D180DE00FD286E08665033379CFC330F9 0xB9 0xE9 0xB5 LOG0 0xB3 CREATE2 0xDD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"333:1771:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122077d3daba2bed5e943d180de00fd286e08665033379cfc330f9b9e9b5a0b3f5dd64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xD3DABA2BED5E943D180DE00FD286E08665033379CFC330F9 0xB9 0xE9 0xB5 LOG0 0xB3 CREATE2 0xDD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"333:1771:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"AddressLibLibrary for working with addresses encoded as uint256 values, which can include flags in the highest bits.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"AddressLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"BaseEscrow":{"abi":[{"inputs":[],"name":"InvalidCaller","type":"error"},{"inputs":[],"name":"InvalidImmutables","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidTime","type":"error"},{"inputs":[],"name":"NativeTokenSendingFailure","type":"error"},{"inputs":[],"name":"SafeTransferFailed","type":"error"},{"anonymous":false,"inputs":[],"name":"EscrowCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRescued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"rescueFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"FACTORY()":"2dd31000","RESCUE_DELAY()":"f56cd69c","cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"90d3252f","rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"4649088b","withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"23305703"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"details\":\"{IBaseEscrow-withdraw}, {IBaseEscrow-cancel} and _validateImmutables functions must be implemented in the derived contracts.\",\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The escrow can only be cancelled during the cancellation period. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\"}},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\"}}},\"title\":\"Base abstract Escrow contract for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"FACTORY()\":{\"notice\":\"See {IBaseEscrow-FACTORY}.\"},\"RESCUE_DELAY()\":{\"notice\":\"See {IBaseEscrow-RESCUE_DELAY}.\"},\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Cancels the escrow and returns tokens to a predetermined recipient.\"},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IBaseEscrow-rescueFunds}.\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to a predetermined recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"BaseEscrow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"BaseEscrowFactory":{"abi":[{"inputs":[],"name":"AccessDenied","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InsufficientEscrowBalance","type":"error"},{"inputs":[],"name":"InvalidCreationTime","type":"error"},{"inputs":[],"name":"InvalidPartialFill","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[],"name":"InvalidSecretsAmount","type":"error"},{"inputs":[],"name":"NotEnoughCredit","type":"error"},{"inputs":[],"name":"OnlyFeeBankAccess","type":"error"},{"inputs":[],"name":"OnlyLimitOrderProtocol","type":"error"},{"inputs":[],"name":"ResolverCanNotFillOrder","type":"error"},{"inputs":[],"name":"SafeTransferFromFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"escrow","type":"address"},{"indexed":false,"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"indexed":false,"internalType":"Address","name":"taker","type":"uint256"}],"name":"DstEscrowCreated","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"indexed":false,"internalType":"struct IBaseEscrow.Immutables","name":"srcImmutables","type":"tuple"},{"components":[{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}],"indexed":false,"internalType":"struct IEscrowFactory.DstImmutablesComplement","name":"dstImmutablesComplement","type":"tuple"}],"name":"SrcEscrowCreated","type":"event"},{"inputs":[],"name":"ESCROW_DST_IMPLEMENTATION","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ESCROW_SRC_IMPLEMENTATION","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_BANK","outputs":[{"internalType":"contract IFeeBank","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"addressOfEscrowDst","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"addressOfEscrowSrc","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"availableCredit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"dstImmutables","type":"tuple"},{"internalType":"uint256","name":"srcCancellationTimestamp","type":"uint256"}],"name":"createDstEscrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAvailableCredit","outputs":[{"internalType":"uint256","name":"allowance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"getMakingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"getTakingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"increaseAvailableCredit","outputs":[{"internalType":"uint256","name":"allowance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"lastValidated","outputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32","name":"leaf","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"postInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"preInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"takerInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ESCROW_DST_IMPLEMENTATION()":"ba551177","ESCROW_SRC_IMPLEMENTATION()":"7040f173","FEE_BANK()":"2ce26aeb","addressOfEscrowDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"be58e91c","addressOfEscrowSrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"fb6bd47e","availableCredit(address)":"5886216f","createDstEscrow((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)":"dea024e4","decreaseAvailableCredit(address,uint256)":"85eda2de","getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)":"1d9671c3","getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)":"d7ff8a80","increaseAvailableCredit(address,uint256)":"3ee5ef1f","lastValidated(bytes32)":"acf4ce5c","postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"462ebde2","preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"0986bdd5","takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"adf38ba1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientEscrowBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCreationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPartialFill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecretsAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughCredit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyFeeBankAccess\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyLimitOrderProtocol\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ResolverCanNotFillOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFromFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"}],\"name\":\"DstEscrowCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"srcImmutables\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IEscrowFactory.DstImmutablesComplement\",\"name\":\"dstImmutablesComplement\",\"type\":\"tuple\"}],\"name\":\"SrcEscrowCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ESCROW_DST_IMPLEMENTATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ESCROW_SRC_IMPLEMENTATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_BANK\",\"outputs\":[{\"internalType\":\"contract IFeeBank\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"addressOfEscrowDst\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"addressOfEscrowSrc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"dstImmutables\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"srcCancellationTimestamp\",\"type\":\"uint256\"}],\"name\":\"createDstEscrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAvailableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"getMakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"getTakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAvailableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"lastValidated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"postInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"preInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"takerInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"details\":\"Immutable variables must be set in the constructor of the derived contracts.\",\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"events\":{\"DstEscrowCreated(address,bytes32,uint256)\":{\"params\":{\"escrow\":\"The address of the created escrow.\",\"hashlock\":\"The hash of the secret.\",\"taker\":\"The address of the taker.\"}},\"SrcEscrowCreated((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"dstImmutablesComplement\":\"Additional immutables related to the escrow contract on the destination chain.\",\"srcImmutables\":\"The immutables of the escrow contract that are used in deployment on the source chain.\"}}},\"kind\":\"dev\",\"methods\":{\"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"details\":\"Verifies the proof and stores the last validated index and hashed secret. Only Limit Order Protocol can call this function.\"}},\"title\":\"Abstract contract for escrow factory\",\"version\":1},\"userdoc\":{\"events\":{\"DstEscrowCreated(address,bytes32,uint256)\":{\"notice\":\"Emitted on EscrowDst deployment.\"},\"SrcEscrowCreated((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Emitted on EscrowSrc deployment to recreate EscrowSrc and EscrowDst immutables off-chain.\"}},\"kind\":\"user\",\"methods\":{\"ESCROW_DST_IMPLEMENTATION()\":{\"notice\":\"See {IEscrowFactory-ESCROW_DST_IMPLEMENTATION}.\"},\"ESCROW_SRC_IMPLEMENTATION()\":{\"notice\":\"See {IEscrowFactory-ESCROW_SRC_IMPLEMENTATION}.\"},\"FEE_BANK()\":{\"notice\":\"See {IFeeBankCharger-feeBank}.\"},\"addressOfEscrowDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IEscrowFactory-addressOfEscrowDst}.\"},\"addressOfEscrowSrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IEscrowFactory-addressOfEscrowSrc}.\"},\"availableCredit(address)\":{\"notice\":\"See {IFeeBankCharger-availableCredit}.\"},\"createDstEscrow((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)\":{\"notice\":\"See {IEscrowFactory-createDstEscrow}.\"},\"decreaseAvailableCredit(address,uint256)\":{\"notice\":\"See {IFeeBankCharger-decreaseAvailableCredit}.\"},\"getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"notice\":\"See {IAmountGetter-getMakingAmount}\"},\"getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"notice\":\"See {IAmountGetter-getTakingAmount}\"},\"increaseAvailableCredit(address,uint256)\":{\"notice\":\"See {IFeeBankCharger-increaseAvailableCredit}.\"},\"lastValidated(bytes32)\":{\"notice\":\"See {IMerkleStorageInvalidator-lastValidated}.\"},\"postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"See {IPostInteraction-postInteraction}\"},\"preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"See {IPreInteraction-preInteraction}\"},\"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"See {ITakerInteraction-takerInteraction}.\"}},\"notice\":\"Contract to create escrow contracts for cross-chain atomic swap.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"BaseEscrowFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"BaseExtension":{"abi":[{"inputs":[{"internalType":"address","name":"limitOrderProtocol","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"OnlyLimitOrderProtocol","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"getMakingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"getTakingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"postInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"preInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a03461007157601f610af038819003918201601f19168301916001600160401b038311848410176100765780849260209460405283398101031261007157516001600160a01b038116810361007157608052604051610a63908161008d82396080518181816101b501526105760152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081630986bdd514610545575080631d9671c314610481578063462ebde2146101835763d7ff8a801461004d57600080fd5b346101805761006c61005e366106ac565b95509350509593505061079e565b629896809260c0830135918401908185116101535760a09161008d91610752565b920135838102938185041490151715610126576100ab838383610867565b9383156100f9575009151581018091116100ca57602090604051908152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526012600452fd5b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024867f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b80fd5b503461018057610192366105ff565b73ffffffffffffffffffffffffffffffffffffffff9a99939a98979598969192967f000000000000000000000000000000000000000000000000000000000000000016330361045757601481116101e7578980f35b8235967fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008089169860148410610441575b5050817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810111610414578a9b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff839c9b9c01601411610410578860601c3b15610410578a966040519c8d9b8c9a8b997f462ebde2000000000000000000000000000000000000000000000000000000008b52803560048c0152602081013560248c0152604081013560448c0152606081013560648c0152608081013560848c015260a081013560a48c015260c081013560c48c015260e0013560e48b01526101048a016101e090526101e48a01906103109261092b565b9561012489015273ffffffffffffffffffffffffffffffffffffffff166101448801526101648701526101848601526101a48501528382037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc016101c48501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeb0191601401916103a09261092b565b039260601c5af18015610405576103c0575b808080808080808089988980f35b67ffffffffffffffff81116103d857604052386103b2565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b6040513d84823e3d90fd5b8a80fd5b60248b7f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b601484900360031b82901b161697503880610218565b60046040517fd25aa106000000000000000000000000000000000000000000000000000000008152fd5b5034610180576104a490610494366106ac565b955093505095949693505061079e565b906298968091828402938085048414901517156105185782018092116104eb5760206104e3858560a06104db8760c0850135610752565b920135610867565b604051908152f35b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526011600452fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b9050346105c857610555366105ff565b5050505050505050505073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036105a0575080f35b807fd25aa1060000000000000000000000000000000000000000000000000000000060049252fd5b5080fd5b9181601f840112156105fa5782359167ffffffffffffffff83116105fa57602083818601950101116105fa57565b600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc81016101e081126105fa57610100136105fa5760049167ffffffffffffffff610104358181116105fa5783610657916004016105cc565b9390939261012435926101443573ffffffffffffffffffffffffffffffffffffffff811681036105fa5792610164359261018435926101a435926101c4359182116105fa576106a8916004016105cc565b9091565b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82016101c081126105fa57610100136105fa5760049167ffffffffffffffff90610104358281116105fa5781610706916004016105cc565b9390939261012435926101443573ffffffffffffffffffffffffffffffffffffffff811681036105fa5792610164359261018435926101a4359182116105fa576106a8916004016105cc565b818102929181159184041417156100ca57565b811561076f570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90806003116105fa57813560e81c816007116105fa57600383013560e01c908015801561085f575b156108485750506000915b81600b116105fa57600781013560e01c82600e116105fa57826011116105fa577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef6108359301916011810191600b600e83013560e81c92013560e81c81019061096a565b81811115610841570390565b5050600090565b620f424091610858914802610765565b04916107d1565b5081156107c6565b91818302917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8185099383808610950394808603951461091b57848311156108fb579082910981600003821680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b826109145760125b634e487b716000526020526024601cfd5b6011610903565b5050906109289250610765565b90565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b9091939281421115600014610980575050505090565b8293949192421015610a2357849291925b6109a75750610928935082039142900302610765565b906003908582116105fa57823560e81c906005928784116105fa5784013560f01c81019485421115610a04575050907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb9193920194019384610991565b9250936109289650809550849193500393429003029142030201610765565b505050505060009056fea264697066735822122030071915f8a71fbe492ebe69302600d0df3cfcbb765d6f7dc15cdb1f65fced3064736f6c63430008170033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH2 0x71 JUMPI PUSH1 0x1F PUSH2 0xAF0 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x76 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x71 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x71 JUMPI PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0xA63 SWAP1 DUP2 PUSH2 0x8D DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1B5 ADD MSTORE PUSH2 0x576 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x986BDD5 EQ PUSH2 0x545 JUMPI POP DUP1 PUSH4 0x1D9671C3 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x462EBDE2 EQ PUSH2 0x183 JUMPI PUSH4 0xD7FF8A80 EQ PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x6C PUSH2 0x5E CALLDATASIZE PUSH2 0x6AC JUMP JUMPDEST SWAP6 POP SWAP4 POP POP SWAP6 SWAP4 POP POP PUSH2 0x79E JUMP JUMPDEST PUSH3 0x989680 SWAP3 PUSH1 0xC0 DUP4 ADD CALLDATALOAD SWAP2 DUP5 ADD SWAP1 DUP2 DUP6 GT PUSH2 0x153 JUMPI PUSH1 0xA0 SWAP2 PUSH2 0x8D SWAP2 PUSH2 0x752 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x126 JUMPI PUSH2 0xAB DUP4 DUP4 DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP4 DUP4 ISZERO PUSH2 0xF9 JUMPI POP MULMOD ISZERO ISZERO DUP2 ADD DUP1 SWAP2 GT PUSH2 0xCA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x192 CALLDATASIZE PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 SWAP10 SWAP4 SWAP11 SWAP9 SWAP8 SWAP6 SWAP9 SWAP7 SWAP2 SWAP3 SWAP7 PUSH32 0x0 AND CALLER SUB PUSH2 0x457 JUMPI PUSH1 0x14 DUP2 GT PUSH2 0x1E7 JUMPI DUP10 DUP1 RETURN JUMPDEST DUP3 CALLDATALOAD SWAP7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP1 DUP10 AND SWAP9 PUSH1 0x14 DUP5 LT PUSH2 0x441 JUMPI JUMPDEST POP POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD GT PUSH2 0x414 JUMPI DUP11 SWAP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP13 SWAP12 SWAP13 ADD PUSH1 0x14 GT PUSH2 0x410 JUMPI DUP9 PUSH1 0x60 SHR EXTCODESIZE ISZERO PUSH2 0x410 JUMPI DUP11 SWAP7 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP12 DUP13 SWAP11 DUP12 SWAP10 PUSH32 0x462EBDE200000000000000000000000000000000000000000000000000000000 DUP12 MSTORE DUP1 CALLDATALOAD PUSH1 0x4 DUP13 ADD MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x24 DUP13 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x44 DUP13 ADD MSTORE PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH1 0x64 DUP13 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x84 DUP13 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA4 DUP13 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC4 DUP13 ADD MSTORE PUSH1 0xE0 ADD CALLDATALOAD PUSH1 0xE4 DUP12 ADD MSTORE PUSH2 0x104 DUP11 ADD PUSH2 0x1E0 SWAP1 MSTORE PUSH2 0x1E4 DUP11 ADD SWAP1 PUSH2 0x310 SWAP3 PUSH2 0x92B JUMP JUMPDEST SWAP6 PUSH2 0x124 DUP10 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x144 DUP9 ADD MSTORE PUSH2 0x164 DUP8 ADD MSTORE PUSH2 0x184 DUP7 ADD MSTORE PUSH2 0x1A4 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC ADD PUSH2 0x1C4 DUP6 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEB ADD SWAP2 PUSH1 0x14 ADD SWAP2 PUSH2 0x3A0 SWAP3 PUSH2 0x92B JUMP JUMPDEST SUB SWAP3 PUSH1 0x60 SHR GAS CALL DUP1 ISZERO PUSH2 0x405 JUMPI PUSH2 0x3C0 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP10 SWAP9 DUP10 DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3D8 JUMPI PUSH1 0x40 MSTORE CODESIZE PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP12 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x14 DUP5 SWAP1 SUB PUSH1 0x3 SHL DUP3 SWAP1 SHL AND AND SWAP8 POP CODESIZE DUP1 PUSH2 0x218 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD25AA10600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x4A4 SWAP1 PUSH2 0x494 CALLDATASIZE PUSH2 0x6AC JUMP JUMPDEST SWAP6 POP SWAP4 POP POP SWAP6 SWAP5 SWAP7 SWAP4 POP POP PUSH2 0x79E JUMP JUMPDEST SWAP1 PUSH3 0x989680 SWAP2 DUP3 DUP5 MUL SWAP4 DUP1 DUP6 DIV DUP5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x518 JUMPI DUP3 ADD DUP1 SWAP3 GT PUSH2 0x4EB JUMPI PUSH1 0x20 PUSH2 0x4E3 DUP6 DUP6 PUSH1 0xA0 PUSH2 0x4DB DUP8 PUSH1 0xC0 DUP6 ADD CALLDATALOAD PUSH2 0x752 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5C8 JUMPI PUSH2 0x555 CALLDATASIZE PUSH2 0x5FF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER SUB PUSH2 0x5A0 JUMPI POP DUP1 RETURN JUMPDEST DUP1 PUSH32 0xD25AA10600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 SWAP3 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x5FA JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x5FA JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x5FA JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP2 ADD PUSH2 0x1E0 DUP2 SLT PUSH2 0x5FA JUMPI PUSH2 0x100 SGT PUSH2 0x5FA JUMPI PUSH1 0x4 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x104 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5FA JUMPI DUP4 PUSH2 0x657 SWAP2 PUSH1 0x4 ADD PUSH2 0x5CC JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 PUSH2 0x124 CALLDATALOAD SWAP3 PUSH2 0x144 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x5FA JUMPI SWAP3 PUSH2 0x164 CALLDATALOAD SWAP3 PUSH2 0x184 CALLDATALOAD SWAP3 PUSH2 0x1A4 CALLDATALOAD SWAP3 PUSH2 0x1C4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x5FA JUMPI PUSH2 0x6A8 SWAP2 PUSH1 0x4 ADD PUSH2 0x5CC JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP3 ADD PUSH2 0x1C0 DUP2 SLT PUSH2 0x5FA JUMPI PUSH2 0x100 SGT PUSH2 0x5FA JUMPI PUSH1 0x4 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH2 0x104 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x5FA JUMPI DUP2 PUSH2 0x706 SWAP2 PUSH1 0x4 ADD PUSH2 0x5CC JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 PUSH2 0x124 CALLDATALOAD SWAP3 PUSH2 0x144 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x5FA JUMPI SWAP3 PUSH2 0x164 CALLDATALOAD SWAP3 PUSH2 0x184 CALLDATALOAD SWAP3 PUSH2 0x1A4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x5FA JUMPI PUSH2 0x6A8 SWAP2 PUSH1 0x4 ADD PUSH2 0x5CC JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xCA JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x76F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x3 GT PUSH2 0x5FA JUMPI DUP2 CALLDATALOAD PUSH1 0xE8 SHR DUP2 PUSH1 0x7 GT PUSH2 0x5FA JUMPI PUSH1 0x3 DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI JUMPDEST ISZERO PUSH2 0x848 JUMPI POP POP PUSH1 0x0 SWAP2 JUMPDEST DUP2 PUSH1 0xB GT PUSH2 0x5FA JUMPI PUSH1 0x7 DUP2 ADD CALLDATALOAD PUSH1 0xE0 SHR DUP3 PUSH1 0xE GT PUSH2 0x5FA JUMPI DUP3 PUSH1 0x11 GT PUSH2 0x5FA JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF PUSH2 0x835 SWAP4 ADD SWAP2 PUSH1 0x11 DUP2 ADD SWAP2 PUSH1 0xB PUSH1 0xE DUP4 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP3 ADD CALLDATALOAD PUSH1 0xE8 SHR DUP2 ADD SWAP1 PUSH2 0x96A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x841 JUMPI SUB SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xF4240 SWAP2 PUSH2 0x858 SWAP2 BASEFEE MUL PUSH2 0x765 JUMP JUMPDEST DIV SWAP2 PUSH2 0x7D1 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x7C6 JUMP JUMPDEST SWAP2 DUP2 DUP4 MUL SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP6 MULMOD SWAP4 DUP4 DUP1 DUP7 LT SWAP6 SUB SWAP5 DUP1 DUP7 SUB SWAP6 EQ PUSH2 0x91B JUMPI DUP5 DUP4 GT ISZERO PUSH2 0x8FB JUMPI SWAP1 DUP3 SWAP2 MULMOD DUP2 PUSH1 0x0 SUB DUP3 AND DUP1 SWAP3 DIV PUSH1 0x2 DUP1 DUP3 PUSH1 0x3 MUL XOR DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 SWAP3 MUL SWAP1 SUB MUL SWAP4 PUSH1 0x1 DUP4 DUP1 PUSH1 0x0 SUB DIV ADD SWAP1 DUP5 DUP4 GT SWAP1 SUB MUL SWAP3 SUB DIV OR MUL SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x914 JUMPI PUSH1 0x12 JUMPDEST PUSH4 0x4E487B71 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x24 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x11 PUSH2 0x903 JUMP JUMPDEST POP POP SWAP1 PUSH2 0x928 SWAP3 POP PUSH2 0x765 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 DUP2 TIMESTAMP GT ISZERO PUSH1 0x0 EQ PUSH2 0x980 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 SWAP4 SWAP5 SWAP2 SWAP3 TIMESTAMP LT ISZERO PUSH2 0xA23 JUMPI DUP5 SWAP3 SWAP2 SWAP3 JUMPDEST PUSH2 0x9A7 JUMPI POP PUSH2 0x928 SWAP4 POP DUP3 SUB SWAP2 TIMESTAMP SWAP1 SUB MUL PUSH2 0x765 JUMP JUMPDEST SWAP1 PUSH1 0x3 SWAP1 DUP6 DUP3 GT PUSH2 0x5FA JUMPI DUP3 CALLDATALOAD PUSH1 0xE8 SHR SWAP1 PUSH1 0x5 SWAP3 DUP8 DUP5 GT PUSH2 0x5FA JUMPI DUP5 ADD CALLDATALOAD PUSH1 0xF0 SHR DUP2 ADD SWAP5 DUP6 TIMESTAMP GT ISZERO PUSH2 0xA04 JUMPI POP POP SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP2 SWAP4 SWAP3 ADD SWAP5 ADD SWAP4 DUP5 PUSH2 0x991 JUMP JUMPDEST SWAP3 POP SWAP4 PUSH2 0x928 SWAP7 POP DUP1 SWAP6 POP DUP5 SWAP2 SWAP4 POP SUB SWAP4 TIMESTAMP SWAP1 SUB MUL SWAP2 TIMESTAMP SUB MUL ADD PUSH2 0x765 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SMOD NOT ISZERO 0xF8 0xA7 0x1F 0xBE 0x49 0x2E 0xBE PUSH10 0x302600D0DF3CFCBB765D PUSH16 0x7DC15CDB1F65FCED3064736F6C634300 ADDMOD OR STOP CALLER ","sourceMap":"193016:7464:0:-:0;;;;;;;;;;;;;-1:-1:-1;;193016:7464:0;;;;-1:-1:-1;;;;;193016:7464:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;193016:7464:0;;;;;;193728:42;;193016:7464;;;;;;;;193728:42;193016:7464;;;;;;;;;;;;-1:-1:-1;193016:7464:0;;;;;;-1:-1:-1;193016:7464:0;;;;;-1:-1:-1;193016:7464:0"},"deployedBytecode":{"functionDebugData":{"abi_decode_bytes_calldata":{"entryPoint":1484,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_struct_Order_calldatat_bytes_calldatat_bytes32t_addresst_uint256t_uint256t_bytes_calldata":{"entryPoint":1708,"id":null,"parameterSlots":1,"returnSlots":9},"abi_decode_struct_Order_calldatat_bytes_calldatat_bytes32t_addresst_uint256t_uint256t_uint256t_bytes_calldata":{"entryPoint":1535,"id":null,"parameterSlots":1,"returnSlots":10},"abi_encode_bytes_calldata":{"entryPoint":2347,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_uint256":{"entryPoint":1874,"id":null,"parameterSlots":2,"returnSlots":1},"fun_getAuctionBump":{"entryPoint":2410,"id":7596,"parameterSlots":5,"returnSlots":1},"fun_getRateBump":{"entryPoint":1950,"id":7468,"parameterSlots":2,"returnSlots":1},"fun_mulDiv":{"entryPoint":2151,"id":4669,"parameterSlots":3,"returnSlots":1},"wrapping_div_uint256":{"entryPoint":1893,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"7092":[{"length":32,"start":437},{"length":32,"start":1398}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c9081630986bdd514610545575080631d9671c314610481578063462ebde2146101835763d7ff8a801461004d57600080fd5b346101805761006c61005e366106ac565b95509350509593505061079e565b629896809260c0830135918401908185116101535760a09161008d91610752565b920135838102938185041490151715610126576100ab838383610867565b9383156100f9575009151581018091116100ca57602090604051908152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526012600452fd5b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024867f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b80fd5b503461018057610192366105ff565b73ffffffffffffffffffffffffffffffffffffffff9a99939a98979598969192967f000000000000000000000000000000000000000000000000000000000000000016330361045757601481116101e7578980f35b8235967fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008089169860148410610441575b5050817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810111610414578a9b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff839c9b9c01601411610410578860601c3b15610410578a966040519c8d9b8c9a8b997f462ebde2000000000000000000000000000000000000000000000000000000008b52803560048c0152602081013560248c0152604081013560448c0152606081013560648c0152608081013560848c015260a081013560a48c015260c081013560c48c015260e0013560e48b01526101048a016101e090526101e48a01906103109261092b565b9561012489015273ffffffffffffffffffffffffffffffffffffffff166101448801526101648701526101848601526101a48501528382037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc016101c48501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeb0191601401916103a09261092b565b039260601c5af18015610405576103c0575b808080808080808089988980f35b67ffffffffffffffff81116103d857604052386103b2565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b6040513d84823e3d90fd5b8a80fd5b60248b7f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b601484900360031b82901b161697503880610218565b60046040517fd25aa106000000000000000000000000000000000000000000000000000000008152fd5b5034610180576104a490610494366106ac565b955093505095949693505061079e565b906298968091828402938085048414901517156105185782018092116104eb5760206104e3858560a06104db8760c0850135610752565b920135610867565b604051908152f35b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526011600452fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b9050346105c857610555366105ff565b5050505050505050505073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036105a0575080f35b807fd25aa1060000000000000000000000000000000000000000000000000000000060049252fd5b5080fd5b9181601f840112156105fa5782359167ffffffffffffffff83116105fa57602083818601950101116105fa57565b600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc81016101e081126105fa57610100136105fa5760049167ffffffffffffffff610104358181116105fa5783610657916004016105cc565b9390939261012435926101443573ffffffffffffffffffffffffffffffffffffffff811681036105fa5792610164359261018435926101a435926101c4359182116105fa576106a8916004016105cc565b9091565b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82016101c081126105fa57610100136105fa5760049167ffffffffffffffff90610104358281116105fa5781610706916004016105cc565b9390939261012435926101443573ffffffffffffffffffffffffffffffffffffffff811681036105fa5792610164359261018435926101a4359182116105fa576106a8916004016105cc565b818102929181159184041417156100ca57565b811561076f570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90806003116105fa57813560e81c816007116105fa57600383013560e01c908015801561085f575b156108485750506000915b81600b116105fa57600781013560e01c82600e116105fa57826011116105fa577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef6108359301916011810191600b600e83013560e81c92013560e81c81019061096a565b81811115610841570390565b5050600090565b620f424091610858914802610765565b04916107d1565b5081156107c6565b91818302917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8185099383808610950394808603951461091b57848311156108fb579082910981600003821680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b826109145760125b634e487b716000526020526024601cfd5b6011610903565b5050906109289250610765565b90565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b9091939281421115600014610980575050505090565b8293949192421015610a2357849291925b6109a75750610928935082039142900302610765565b906003908582116105fa57823560e81c906005928784116105fa5784013560f01c81019485421115610a04575050907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb9193920194019384610991565b9250936109289650809550849193500393429003029142030201610765565b505050505060009056fea264697066735822122030071915f8a71fbe492ebe69302600d0df3cfcbb765d6f7dc15cdb1f65fced3064736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x986BDD5 EQ PUSH2 0x545 JUMPI POP DUP1 PUSH4 0x1D9671C3 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x462EBDE2 EQ PUSH2 0x183 JUMPI PUSH4 0xD7FF8A80 EQ PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x6C PUSH2 0x5E CALLDATASIZE PUSH2 0x6AC JUMP JUMPDEST SWAP6 POP SWAP4 POP POP SWAP6 SWAP4 POP POP PUSH2 0x79E JUMP JUMPDEST PUSH3 0x989680 SWAP3 PUSH1 0xC0 DUP4 ADD CALLDATALOAD SWAP2 DUP5 ADD SWAP1 DUP2 DUP6 GT PUSH2 0x153 JUMPI PUSH1 0xA0 SWAP2 PUSH2 0x8D SWAP2 PUSH2 0x752 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x126 JUMPI PUSH2 0xAB DUP4 DUP4 DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP4 DUP4 ISZERO PUSH2 0xF9 JUMPI POP MULMOD ISZERO ISZERO DUP2 ADD DUP1 SWAP2 GT PUSH2 0xCA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x192 CALLDATASIZE PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 SWAP10 SWAP4 SWAP11 SWAP9 SWAP8 SWAP6 SWAP9 SWAP7 SWAP2 SWAP3 SWAP7 PUSH32 0x0 AND CALLER SUB PUSH2 0x457 JUMPI PUSH1 0x14 DUP2 GT PUSH2 0x1E7 JUMPI DUP10 DUP1 RETURN JUMPDEST DUP3 CALLDATALOAD SWAP7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP1 DUP10 AND SWAP9 PUSH1 0x14 DUP5 LT PUSH2 0x441 JUMPI JUMPDEST POP POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD GT PUSH2 0x414 JUMPI DUP11 SWAP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP13 SWAP12 SWAP13 ADD PUSH1 0x14 GT PUSH2 0x410 JUMPI DUP9 PUSH1 0x60 SHR EXTCODESIZE ISZERO PUSH2 0x410 JUMPI DUP11 SWAP7 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP12 DUP13 SWAP11 DUP12 SWAP10 PUSH32 0x462EBDE200000000000000000000000000000000000000000000000000000000 DUP12 MSTORE DUP1 CALLDATALOAD PUSH1 0x4 DUP13 ADD MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x24 DUP13 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x44 DUP13 ADD MSTORE PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH1 0x64 DUP13 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x84 DUP13 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA4 DUP13 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC4 DUP13 ADD MSTORE PUSH1 0xE0 ADD CALLDATALOAD PUSH1 0xE4 DUP12 ADD MSTORE PUSH2 0x104 DUP11 ADD PUSH2 0x1E0 SWAP1 MSTORE PUSH2 0x1E4 DUP11 ADD SWAP1 PUSH2 0x310 SWAP3 PUSH2 0x92B JUMP JUMPDEST SWAP6 PUSH2 0x124 DUP10 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x144 DUP9 ADD MSTORE PUSH2 0x164 DUP8 ADD MSTORE PUSH2 0x184 DUP7 ADD MSTORE PUSH2 0x1A4 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC ADD PUSH2 0x1C4 DUP6 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEB ADD SWAP2 PUSH1 0x14 ADD SWAP2 PUSH2 0x3A0 SWAP3 PUSH2 0x92B JUMP JUMPDEST SUB SWAP3 PUSH1 0x60 SHR GAS CALL DUP1 ISZERO PUSH2 0x405 JUMPI PUSH2 0x3C0 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP10 SWAP9 DUP10 DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3D8 JUMPI PUSH1 0x40 MSTORE CODESIZE PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST PUSH1 0x24 DUP12 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x14 DUP5 SWAP1 SUB PUSH1 0x3 SHL DUP3 SWAP1 SHL AND AND SWAP8 POP CODESIZE DUP1 PUSH2 0x218 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD25AA10600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x4A4 SWAP1 PUSH2 0x494 CALLDATASIZE PUSH2 0x6AC JUMP JUMPDEST SWAP6 POP SWAP4 POP POP SWAP6 SWAP5 SWAP7 SWAP4 POP POP PUSH2 0x79E JUMP JUMPDEST SWAP1 PUSH3 0x989680 SWAP2 DUP3 DUP5 MUL SWAP4 DUP1 DUP6 DIV DUP5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x518 JUMPI DUP3 ADD DUP1 SWAP3 GT PUSH2 0x4EB JUMPI PUSH1 0x20 PUSH2 0x4E3 DUP6 DUP6 PUSH1 0xA0 PUSH2 0x4DB DUP8 PUSH1 0xC0 DUP6 ADD CALLDATALOAD PUSH2 0x752 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x5C8 JUMPI PUSH2 0x555 CALLDATASIZE PUSH2 0x5FF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER SUB PUSH2 0x5A0 JUMPI POP DUP1 RETURN JUMPDEST DUP1 PUSH32 0xD25AA10600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 SWAP3 MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x5FA JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x5FA JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x5FA JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP2 ADD PUSH2 0x1E0 DUP2 SLT PUSH2 0x5FA JUMPI PUSH2 0x100 SGT PUSH2 0x5FA JUMPI PUSH1 0x4 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x104 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5FA JUMPI DUP4 PUSH2 0x657 SWAP2 PUSH1 0x4 ADD PUSH2 0x5CC JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 PUSH2 0x124 CALLDATALOAD SWAP3 PUSH2 0x144 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x5FA JUMPI SWAP3 PUSH2 0x164 CALLDATALOAD SWAP3 PUSH2 0x184 CALLDATALOAD SWAP3 PUSH2 0x1A4 CALLDATALOAD SWAP3 PUSH2 0x1C4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x5FA JUMPI PUSH2 0x6A8 SWAP2 PUSH1 0x4 ADD PUSH2 0x5CC JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP3 ADD PUSH2 0x1C0 DUP2 SLT PUSH2 0x5FA JUMPI PUSH2 0x100 SGT PUSH2 0x5FA JUMPI PUSH1 0x4 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH2 0x104 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x5FA JUMPI DUP2 PUSH2 0x706 SWAP2 PUSH1 0x4 ADD PUSH2 0x5CC JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 PUSH2 0x124 CALLDATALOAD SWAP3 PUSH2 0x144 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x5FA JUMPI SWAP3 PUSH2 0x164 CALLDATALOAD SWAP3 PUSH2 0x184 CALLDATALOAD SWAP3 PUSH2 0x1A4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x5FA JUMPI PUSH2 0x6A8 SWAP2 PUSH1 0x4 ADD PUSH2 0x5CC JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xCA JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x76F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x3 GT PUSH2 0x5FA JUMPI DUP2 CALLDATALOAD PUSH1 0xE8 SHR DUP2 PUSH1 0x7 GT PUSH2 0x5FA JUMPI PUSH1 0x3 DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI JUMPDEST ISZERO PUSH2 0x848 JUMPI POP POP PUSH1 0x0 SWAP2 JUMPDEST DUP2 PUSH1 0xB GT PUSH2 0x5FA JUMPI PUSH1 0x7 DUP2 ADD CALLDATALOAD PUSH1 0xE0 SHR DUP3 PUSH1 0xE GT PUSH2 0x5FA JUMPI DUP3 PUSH1 0x11 GT PUSH2 0x5FA JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF PUSH2 0x835 SWAP4 ADD SWAP2 PUSH1 0x11 DUP2 ADD SWAP2 PUSH1 0xB PUSH1 0xE DUP4 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP3 ADD CALLDATALOAD PUSH1 0xE8 SHR DUP2 ADD SWAP1 PUSH2 0x96A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x841 JUMPI SUB SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xF4240 SWAP2 PUSH2 0x858 SWAP2 BASEFEE MUL PUSH2 0x765 JUMP JUMPDEST DIV SWAP2 PUSH2 0x7D1 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x7C6 JUMP JUMPDEST SWAP2 DUP2 DUP4 MUL SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP6 MULMOD SWAP4 DUP4 DUP1 DUP7 LT SWAP6 SUB SWAP5 DUP1 DUP7 SUB SWAP6 EQ PUSH2 0x91B JUMPI DUP5 DUP4 GT ISZERO PUSH2 0x8FB JUMPI SWAP1 DUP3 SWAP2 MULMOD DUP2 PUSH1 0x0 SUB DUP3 AND DUP1 SWAP3 DIV PUSH1 0x2 DUP1 DUP3 PUSH1 0x3 MUL XOR DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 SWAP3 MUL SWAP1 SUB MUL SWAP4 PUSH1 0x1 DUP4 DUP1 PUSH1 0x0 SUB DIV ADD SWAP1 DUP5 DUP4 GT SWAP1 SUB MUL SWAP3 SUB DIV OR MUL SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x914 JUMPI PUSH1 0x12 JUMPDEST PUSH4 0x4E487B71 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x24 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x11 PUSH2 0x903 JUMP JUMPDEST POP POP SWAP1 PUSH2 0x928 SWAP3 POP PUSH2 0x765 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 DUP2 TIMESTAMP GT ISZERO PUSH1 0x0 EQ PUSH2 0x980 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 SWAP4 SWAP5 SWAP2 SWAP3 TIMESTAMP LT ISZERO PUSH2 0xA23 JUMPI DUP5 SWAP3 SWAP2 SWAP3 JUMPDEST PUSH2 0x9A7 JUMPI POP PUSH2 0x928 SWAP4 POP DUP3 SUB SWAP2 TIMESTAMP SWAP1 SUB MUL PUSH2 0x765 JUMP JUMPDEST SWAP1 PUSH1 0x3 SWAP1 DUP6 DUP3 GT PUSH2 0x5FA JUMPI DUP3 CALLDATALOAD PUSH1 0xE8 SHR SWAP1 PUSH1 0x5 SWAP3 DUP8 DUP5 GT PUSH2 0x5FA JUMPI DUP5 ADD CALLDATALOAD PUSH1 0xF0 SHR DUP2 ADD SWAP5 DUP6 TIMESTAMP GT ISZERO PUSH2 0xA04 JUMPI POP POP SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP2 SWAP4 SWAP3 ADD SWAP5 ADD SWAP4 DUP5 PUSH2 0x991 JUMP JUMPDEST SWAP3 POP SWAP4 PUSH2 0x928 SWAP7 POP DUP1 SWAP6 POP DUP5 SWAP2 SWAP4 POP SUB SWAP4 TIMESTAMP SWAP1 SUB MUL SWAP2 TIMESTAMP SUB MUL ADD PUSH2 0x765 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SMOD NOT ISZERO 0xF8 0xA7 0x1F 0xBE 0x49 0x2E 0xBE PUSH10 0x302600D0DF3CFCBB765D PUSH16 0x7DC15CDB1F65FCED3064736F6C634300 ADDMOD OR STOP CALLER ","sourceMap":"193016:7464:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194752:23;193016:7464;;;:::i;:::-;194752:23;;;;;;;;;;:::i;:::-;193174:10;;194804:18;;;193016:7464;;193174:10;;;;;;;;194866:18;194824:40;;;;:::i;:::-;194866:18;;193016:7464;193174:10;;;;;;;;;;;;;;122370:25;;;;;:::i;:::-;122444;;;;;;;:29;;193174:10;;;;;;;193016:7464;;;;;;;;193174:10;;193016:7464;193174:10;;193016:7464;193174:10;;193016:7464;193174:10;122444:25;193016:7464;;;;;;;;;193174:10;;;;;;;193016:7464;193174:10;;;;;;;;;193016:7464;193174:10;;193016:7464;;;;;;;;;;;:::i;:::-;;193475:21;;;;;;;;;;;;;193016:7464;193461:10;:35;193457:72;;196676:2;196657:21;;196653:238;;193016:7464;;;196653:238;193016:7464;;;;;;;;196676:2;193016:7464;;;;196653:238;193016:7464;;;;;;;;;;;;;;;;;196676:2;193016:7464;;;;;;196694:186;;;;193016:7464;;;;196694:186;;;;;;;193016:7464;196694:186;;193016:7464;;;196694:186;;193016:7464;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196676:2;193016:7464;;;;;:::i;:::-;196694:186;193016:7464;;;196694:186;;;;;;;;196653:238;;;;;;;;;;;193016:7464;;;196694:186;193016:7464;;;;;;;196694:186;;;193016:7464;;;;;;;;;;196694:186;193016:7464;;;;;;;;;196694:186;193016:7464;;;;193174:10;;;;;;193016:7464;193174:10;;193016:7464;196676:2;193016:7464;;;;;;;;;;;-1:-1:-1;193016:7464:0;;;;193457:72;193016:7464;;;193505:24;;;;193016:7464;;;;;194187:23;193016:7464;;;;:::i;:::-;194187:23;;;;;;;;;;;;:::i;:::-;193174:10;;;;;;;;;;;;;;;;;;;;;;;;;193016:7464;194227:108;194288:18;;194239;194288:46;:18;;;;193016:7464;194288:46;:::i;:::-;194239:18;;193016:7464;194227:108;:::i;:::-;193016:7464;;;;;;193174:10;;;;;;;193016:7464;193174:10;;;;;;;;;193016:7464;193174:10;;193016:7464;;;;;;;;;:::i;:::-;193475:21;;;;;;;;;;193016:7464;193475:21;193016:7464;193461:10;:35;193457:72;;193016:7464;;;193457:72;193505:24;;193016:7464;193505:24;;;193016:7464;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;193016:7464:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;193016:7464:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;193174:10::-;;;;;;;;;;;;;;;;:::o;193016:7464::-;;;;;;;:::o;:::-;;;;;;;;;;197567:872;;193016:7464;197742:1;193016:7464;;;;;;;;197818:1;193016:7464;;;197742:1;193016:7464;;;;;197854:20;;;:45;;;;197567:872;197854:120;;;;;197740:1;197854:120;;193016:7464;198046:2;193016:7464;;;197818:1;193016:7464;;;;;;198144:2;193016:7464;;;;198221:2;193016:7464;;;;198262:90;193016:7464;;;198221:2;193016:7464;;;198046:2;198144;193016:7464;;;;;;;;;;193241:9;;198262:90;;:::i;:::-;198373:21;;;;;;193241:9;197567:872;:::o;198373:49::-;;;197740:1;197567:872;:::o;197854:120::-;193241:9;197924:13;197906:50;197924:13;;193016:7464;197906:50;:::i;:::-;193016:7464;197854:120;;;:45;197878:21;;;197854:45;;117891:4223;;193016:7464;;;118483:131;;;;;;;;;;;;;;;;118695:10;;118691:368;;119169:20;;;;119165:136;;119587:300;;;;193241:9;-1:-1:-1;193241:9:0;120106:31;;120151:375;;;120986:1;193016:7464;;120967:1;193016:7464;120966:21;193016:7464;;;193241:9;;193016:7464;;;;193241:9;;193016:7464;;;;193241:9;;193016:7464;;;;193241:9;;193016:7464;;;;193241:9;;193016:7464;;;;193241:9;;193016:7464;120151:375;;;;-1:-1:-1;120151:375:0;;;119587:300;;;;;;193016:7464;119587:300;;120151:375;120592:21;193016:7464;117891:4223;:::o;119165:136::-;119221:16;;;34351:4;119221:64;35188:119;-1:-1:-1;35188:119:0;;;;;;119221:64;34256:4;119221:64;;118691:368;119025:19;;;;;;;:::i;:::-;119018:26;:::o;193016:7464::-;;;;;;;;;;;;;;;-1:-1:-1;193016:7464:0;;;;;;;;;;;:::o;199186:1292::-;;;;;199394:15;;:35;;199390:185;199394:35;;;199449:22;;;;;:::o;199390:185::-;199394:15;;;;;;199496:36;;199492:83;;199390:185;;199646:41;199702:643;199709:26;;;193241:9;200365:96;193241:9;;;;199394:15;;193241:9;;193016:7464;200365:96;:::i;199702:643::-;199817:1;;193016:7464;;;;;;;;;;199918:1;;193016:7464;;;;;;;;;;;193241:9;;199394:15;;;199944:32;;199940:230;;200187:30;;;193016:7464;200187:30;200235:32;193016:7464;;;;199702:643;;;;199940:230;193241:9;;;200007:144;193241:9;;;;;;;;;;199394:15;;193241:9;;193016:7464;199394:15;;193241:9;193016:7464;193241:9;200007:144;:::i;199492:83::-;199552:8;;;;;199559:1;199552:8;:::o"},"methodIdentifiers":{"getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)":"1d9671c3","getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)":"d7ff8a80","postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"462ebde2","preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"0986bdd5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitOrderProtocol\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlyLimitOrderProtocol\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"getMakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"getTakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"postInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"preInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"limitOrderProtocol\":\"The limit order protocol contract.\"}}},\"title\":\"Base Extension contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the contract.\"},\"getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"notice\":\"See {IAmountGetter-getMakingAmount}\"},\"getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"notice\":\"See {IAmountGetter-getTakingAmount}\"},\"postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"See {IPostInteraction-postInteraction}\"},\"preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"See {IPreInteraction-preInteraction}\"}},\"notice\":\"Contract to define the basic functionality for the limit orders settlement.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"BaseExtension\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"Clones":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122015e72e69b3ed3fd196ab75f2f152fe57dc3d084a73db26fedc164c4af1bdbb3064736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xE7 0x2E PUSH10 0xB3ED3FD196AB75F2F152 INVALID JUMPI 0xDC RETURNDATASIZE ADDMOD 0x4A PUSH20 0xDB26FEDC164C4AF1BDBB3064736F6C6343000817 STOP CALLER ","sourceMap":"86496:4639:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122015e72e69b3ed3fd196ab75f2f152fe57dc3d084a73db26fedc164c4af1bdbb3064736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xE7 0x2E PUSH10 0xB3ED3FD196AB75F2F152 INVALID JUMPI 0xDC RETURNDATASIZE ADDMOD 0x4A PUSH20 0xDB26FEDC164C4AF1BDBB3064736F6C6343000817 STOP CALLER ","sourceMap":"86496:4639:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"Clones\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"Create2":{"abi":[{"inputs":[],"name":"Create2EmptyBytecode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220325d73675e708aab836131d543edf716d9f857c2e857bcb89f7fbd50fcd3756464736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x5D PUSH20 0x675E708AAB836131D543EDF716D9F857C2E857BC 0xB8 SWAP16 PUSH32 0xBD50FCD3756464736F6C63430008170033000000000000000000000000000000 ","sourceMap":"91664:3685:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220325d73675e708aab836131d543edf716d9f857c2e857bcb89f7fbd50fcd3756464736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x5D PUSH20 0x675E708AAB836131D543EDF716D9F857C2E857BC 0xB8 SWAP16 PUSH32 0xBD50FCD3756464736F6C63430008170033000000000000000000000000000000 ","sourceMap":"91664:3685:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220065594ede63e5736c1e8dfcaada53d6823d004819faa0118a01918b1e269bd7a64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD SSTORE SWAP5 0xED 0xE6 RETURNDATACOPY JUMPI CALLDATASIZE 0xC1 0xE8 0xDF 0xCA 0xAD 0xA5 RETURNDATASIZE PUSH9 0x23D004819FAA0118A0 NOT XOR 0xB1 0xE2 PUSH10 0xBD7A64736F6C63430008 OR STOP CALLER ","sourceMap":"3446:382:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220065594ede63e5736c1e8dfcaada53d6823d004819faa0118a01918b1e269bd7a64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD SSTORE SWAP5 0xED 0xE6 RETURNDATACOPY JUMPI CALLDATASIZE 0xC1 0xE8 0xDF 0xCA 0xAD 0xA5 RETURNDATASIZE PUSH9 0x23D004819FAA0118A0 NOT XOR 0xB1 0xE2 PUSH10 0xBD7A64736F6C63430008 OR STOP CALLER ","sourceMap":"3446:382:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality.\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"Escrow":{"abi":[{"inputs":[],"name":"InvalidCaller","type":"error"},{"inputs":[],"name":"InvalidImmutables","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidTime","type":"error"},{"inputs":[],"name":"NativeTokenSendingFailure","type":"error"},{"inputs":[],"name":"SafeTransferFailed","type":"error"},{"anonymous":false,"inputs":[],"name":"EscrowCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRescued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROXY_BYTECODE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"rescueFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"FACTORY()":"2dd31000","PROXY_BYTECODE_HASH()":"34862b6a","RESCUE_DELAY()":"f56cd69c","cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"90d3252f","rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"4649088b","withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"23305703"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROXY_BYTECODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"details\":\"{IBaseEscrow-withdraw} and {IBaseEscrow-cancel} functions must be implemented in the derived contracts.\",\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The escrow can only be cancelled during the cancellation period. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\"}},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\"}}},\"title\":\"Abstract Escrow contract for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"FACTORY()\":{\"notice\":\"See {IBaseEscrow-FACTORY}.\"},\"PROXY_BYTECODE_HASH()\":{\"notice\":\"See {IEscrow-PROXY_BYTECODE_HASH}.\"},\"RESCUE_DELAY()\":{\"notice\":\"See {IBaseEscrow-RESCUE_DELAY}.\"},\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Cancels the escrow and returns tokens to a predetermined recipient.\"},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IBaseEscrow-rescueFunds}.\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to a predetermined recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"Escrow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"EscrowDst":{"abi":[{"inputs":[{"internalType":"uint32","name":"rescueDelay","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidCaller","type":"error"},{"inputs":[],"name":"InvalidImmutables","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidTime","type":"error"},{"inputs":[],"name":"NativeTokenSendingFailure","type":"error"},{"inputs":[],"name":"SafeTransferFailed","type":"error"},{"anonymous":false,"inputs":[],"name":"EscrowCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRescued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROXY_BYTECODE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"publicWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"rescueFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60e0346100ed57601f610b4538819003918201601f19168301916001600160401b038311848410176100f2578084926020946040528339810103126100ed575163ffffffff81168091036100ed573360a0526080526e5af43d82803e903d91602b57fd5bf360205230601152763d602d80600a3d3981f3363d3d373d3d3d363d730000003060881c17600052603760092060c052604051610a3c9081610109823960805181818160a80152610366015260a05181818161016101528181610330015281816104ee01526106c0015260c051818181610137015281816103060152818161047f01526106960152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b60009260e08435811c9283630af97558146105a15750826323305703146105125782632dd31000146104a257826334862b6a146104485782634649088b146102625750816390d3252f146100cf575063f56cd69c1461007457600080fd5b346100cb57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100cb57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b8383346100cb57610100807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261025e5773ffffffffffffffffffffffffffffffffffffffff91826064351691823303610236576055600b85928451818a8237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff81532016300361020e5761019a60e435610816565b42106101e65750906101b39160a43591608435166108f7565b6101bf60c43533610929565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b8490517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b8490517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b8582517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b8385913461025e576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261025e5783359373ffffffffffffffffffffffffffffffffffffffff90818616928387036104445760243592610100807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc360112610440578160a43516330361041857600b60559188518160448237208851907f00000000000000000000000000000000000000000000000000000000000000008a83015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036103f05761012435901c7f00000000000000000000000000000000000000000000000000000000000000000142106103c957506103bb817fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac959633906108f7565b82519182526020820152a180f35b83517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b5083517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b8387517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8780fd5b8580fd5b505050346100cb57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100cb57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b505050346100cb57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100cb576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b8385913461025e5761052336610606565b92909173ffffffffffffffffffffffffffffffffffffffff60608501351633036102365763ffffffff8185013580921c9160801c1681018091116105755742106101e65750906105729161066a565b80f35b6024856011887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85913461025e576105b136610606565b92909163ffffffff8185013580921c9160a01c1681018091116105755742106105df5750906105729161066a565b807f6f7eac2600000000000000000000000000000000000000000000000000000000869252fd5b906101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610665576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc60043593011261066557602490565b600080fd5b9061067860e0820135610816565b4210156107ec576040906055600b83516101009081858237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff81532073ffffffffffffffffffffffffffffffffffffffff90811630036107c3576000908482526020822060208401350361079a5760c083602095938361077d9460807f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b9a9801351690868401351690801560001461078457508180809260a0860135905af15061077361085f565b505b013533610929565b51908152a1565b90610795925060a08401359161096c565b610775565b600484517fabab6bd7000000000000000000000000000000000000000000000000000000008152fd5b600483517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b60046040517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b63ffffffff8160e01c9160c01c1681018091116108305790565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b3d156108f25767ffffffffffffffff903d8281116108c35760405192601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168401908111848210176108c35760405282523d6000602084013e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b606090565b73ffffffffffffffffffffffffffffffffffffffff169190826109205761091e9250610929565b565b61091e9261096c565b600080809381935af161093a61085f565b501561094257565b60046040517f8a0332d5000000000000000000000000000000000000000000000000000000008152fd5b916044602092600092604051917fa9059cbb0000000000000000000000000000000000000000000000000000000083526004830152602482015282855af190816109e3575b50156109b957565b60046040517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d156109fe5750600160005114601f3d11165b386109b1565b3b15156109f856fea26469706673582212201c4d019757ef2af9a0c9244570f1ac8b0712f3879d83227aa766537895b8446164736f6c63430008170033","opcodes":"PUSH1 0xE0 CALLVALUE PUSH2 0xED JUMPI PUSH1 0x1F PUSH2 0xB45 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xF2 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xED JUMPI MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xED JUMPI CALLER PUSH1 0xA0 MSTORE PUSH1 0x80 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x20 MSTORE ADDRESS PUSH1 0x11 MSTORE PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 ADDRESS PUSH1 0x88 SHR OR PUSH1 0x0 MSTORE PUSH1 0x37 PUSH1 0x9 KECCAK256 PUSH1 0xC0 MSTORE PUSH1 0x40 MLOAD PUSH2 0xA3C SWAP1 DUP2 PUSH2 0x109 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH1 0xA8 ADD MSTORE PUSH2 0x366 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x161 ADD MSTORE DUP2 DUP2 PUSH2 0x330 ADD MSTORE DUP2 DUP2 PUSH2 0x4EE ADD MSTORE PUSH2 0x6C0 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x137 ADD MSTORE DUP2 DUP2 PUSH2 0x306 ADD MSTORE DUP2 DUP2 PUSH2 0x47F ADD MSTORE PUSH2 0x696 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH1 0xE0 DUP5 CALLDATALOAD DUP2 SHR SWAP3 DUP4 PUSH4 0xAF97558 EQ PUSH2 0x5A1 JUMPI POP DUP3 PUSH4 0x23305703 EQ PUSH2 0x512 JUMPI DUP3 PUSH4 0x2DD31000 EQ PUSH2 0x4A2 JUMPI DUP3 PUSH4 0x34862B6A EQ PUSH2 0x448 JUMPI DUP3 PUSH4 0x4649088B EQ PUSH2 0x262 JUMPI POP DUP2 PUSH4 0x90D3252F EQ PUSH2 0xCF JUMPI POP PUSH4 0xF56CD69C EQ PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xCB JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xCB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xCB JUMPI PUSH2 0x100 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x25E JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x64 CALLDATALOAD AND SWAP2 DUP3 CALLER SUB PUSH2 0x236 JUMPI PUSH1 0x55 PUSH1 0xB DUP6 SWAP3 DUP5 MLOAD DUP2 DUP11 DUP3 CALLDATACOPY KECCAK256 DUP5 MLOAD SWAP1 PUSH32 0x0 DUP7 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x20E JUMPI PUSH2 0x19A PUSH1 0xE4 CALLDATALOAD PUSH2 0x816 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1E6 JUMPI POP SWAP1 PUSH2 0x1B3 SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD AND PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0xC4 CALLDATALOAD CALLER PUSH2 0x929 JUMP JUMPDEST PUSH32 0x6E3BE9294E58D10B9C8053CFD5E09871B67E442FE394D6B0870D336B9DF984A9 DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST DUP5 SWAP1 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP5 SWAP1 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP3 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP6 SWAP2 CALLVALUE PUSH2 0x25E JUMPI PUSH2 0x140 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x25E JUMPI DUP4 CALLDATALOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP7 AND SWAP3 DUP4 DUP8 SUB PUSH2 0x444 JUMPI PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x100 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC CALLDATASIZE ADD SLT PUSH2 0x440 JUMPI DUP2 PUSH1 0xA4 CALLDATALOAD AND CALLER SUB PUSH2 0x418 JUMPI PUSH1 0xB PUSH1 0x55 SWAP2 DUP9 MLOAD DUP2 PUSH1 0x44 DUP3 CALLDATACOPY KECCAK256 DUP9 MLOAD SWAP1 PUSH32 0x0 DUP11 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x3F0 JUMPI PUSH2 0x124 CALLDATALOAD SWAP1 SHR PUSH32 0x0 ADD TIMESTAMP LT PUSH2 0x3C9 JUMPI POP PUSH2 0x3BB DUP2 PUSH32 0xC4474C2790E13695F6D2B6F1D8E164290B55370F87A542FD7711ABE0A1BF40AC SWAP6 SWAP7 CALLER SWAP1 PUSH2 0x8F7 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP DUP4 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP8 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0xCB JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xCB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0xCB JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xCB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST DUP4 DUP6 SWAP2 CALLVALUE PUSH2 0x25E JUMPI PUSH2 0x523 CALLDATASIZE PUSH2 0x606 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 DUP6 ADD CALLDATALOAD AND CALLER SUB PUSH2 0x236 JUMPI PUSH4 0xFFFFFFFF DUP2 DUP6 ADD CALLDATALOAD DUP1 SWAP3 SHR SWAP2 PUSH1 0x80 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x575 JUMPI TIMESTAMP LT PUSH2 0x1E6 JUMPI POP SWAP1 PUSH2 0x572 SWAP2 PUSH2 0x66A JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x24 DUP6 PUSH1 0x11 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP6 SWAP2 CALLVALUE PUSH2 0x25E JUMPI PUSH2 0x5B1 CALLDATASIZE PUSH2 0x606 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH4 0xFFFFFFFF DUP2 DUP6 ADD CALLDATALOAD DUP1 SWAP3 SHR SWAP2 PUSH1 0xA0 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x575 JUMPI TIMESTAMP LT PUSH2 0x5DF JUMPI POP SWAP1 PUSH2 0x572 SWAP2 PUSH2 0x66A JUMP JUMPDEST DUP1 PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP7 SWAP3 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x120 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP4 ADD SLT PUSH2 0x665 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC PUSH1 0x4 CALLDATALOAD SWAP4 ADD SLT PUSH2 0x665 JUMPI PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x678 PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH2 0x816 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x40 SWAP1 PUSH1 0x55 PUSH1 0xB DUP4 MLOAD PUSH2 0x100 SWAP1 DUP2 DUP6 DUP3 CALLDATACOPY KECCAK256 DUP5 MLOAD SWAP1 PUSH32 0x0 DUP7 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND ADDRESS SUB PUSH2 0x7C3 JUMPI PUSH1 0x0 SWAP1 DUP5 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x20 DUP5 ADD CALLDATALOAD SUB PUSH2 0x79A JUMPI PUSH1 0xC0 DUP4 PUSH1 0x20 SWAP6 SWAP4 DUP4 PUSH2 0x77D SWAP5 PUSH1 0x80 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP11 SWAP9 ADD CALLDATALOAD AND SWAP1 DUP7 DUP5 ADD CALLDATALOAD AND SWAP1 DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x784 JUMPI POP DUP2 DUP1 DUP1 SWAP3 PUSH1 0xA0 DUP7 ADD CALLDATALOAD SWAP1 GAS CALL POP PUSH2 0x773 PUSH2 0x85F JUMP JUMPDEST POP JUMPDEST ADD CALLDATALOAD CALLER PUSH2 0x929 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST SWAP1 PUSH2 0x795 SWAP3 POP PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP2 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x4 DUP5 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 DUP4 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH1 0xE0 SHR SWAP2 PUSH1 0xC0 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x830 JUMPI SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x8F2 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 RETURNDATASIZE DUP3 DUP2 GT PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP5 ADD SWAP1 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x8C3 JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 DUP3 PUSH2 0x920 JUMPI PUSH2 0x91E SWAP3 POP PUSH2 0x929 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x91E SWAP3 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x93A PUSH2 0x85F JUMP JUMPDEST POP ISZERO PUSH2 0x942 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8A0332D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0x9E3 JUMPI JUMPDEST POP ISZERO PUSH2 0x9B9 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xFB7F507900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0x9FE JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0x9B1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0x9F8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0x4D ADD SWAP8 JUMPI 0xEF 0x2A 0xF9 LOG0 0xC9 0x24 GASLIMIT PUSH17 0xF1AC8B0712F3879D83227AA766537895B8 PREVRANDAO PUSH2 0x6473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"221736:3117:0:-:0;;;;;;;;;;;;;-1:-1:-1;;221736:3117:0;;;;-1:-1:-1;;;;;221736:3117:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208568:10;;;208627:26;;35891:488;221736:3117;35891:488;218327:4;35891:488;;;218327:4;35891:488;;;-1:-1:-1;35891:488:0;;;;218281:52;;221736:3117;;;;;;;;208627:26;221736:3117;;;;;;;;;;208568:10;221736:3117;;;;;;;;;;;;;;;;;;;;218281:52;221736:3117;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221736:3117:0;;;;;;-1:-1:-1;221736:3117:0;;;;;-1:-1:-1;221736:3117:0"},"deployedBytecode":{"functionDebugData":{"abi_decode_bytes32t_struct_Immutables_calldata":{"entryPoint":1542,"id":null,"parameterSlots":1,"returnSlots":2},"extract_returndata":{"entryPoint":2143,"id":null,"parameterSlots":0,"returnSlots":1},"fun_ethTransfer":{"entryPoint":2345,"id":8242,"parameterSlots":2,"returnSlots":0},"fun_get":{"entryPoint":2070,"id":3197,"parameterSlots":1,"returnSlots":1},"fun_safeTransfer":{"entryPoint":2412,"id":6745,"parameterSlots":3,"returnSlots":0},"fun_uniTransfer":{"entryPoint":2295,"id":8218,"parameterSlots":3,"returnSlots":0},"modifier_onlyBefore":{"entryPoint":1642,"id":8148,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"8057":[{"length":32,"start":168},{"length":32,"start":870}],"8062":[{"length":32,"start":353},{"length":32,"start":816},{"length":32,"start":1262},{"length":32,"start":1728}],"8784":[{"length":32,"start":311},{"length":32,"start":774},{"length":32,"start":1151},{"length":32,"start":1686}]},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b60009260e08435811c9283630af97558146105a15750826323305703146105125782632dd31000146104a257826334862b6a146104485782634649088b146102625750816390d3252f146100cf575063f56cd69c1461007457600080fd5b346100cb57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100cb57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b8383346100cb57610100807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261025e5773ffffffffffffffffffffffffffffffffffffffff91826064351691823303610236576055600b85928451818a8237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff81532016300361020e5761019a60e435610816565b42106101e65750906101b39160a43591608435166108f7565b6101bf60c43533610929565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b8490517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b8490517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b8582517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b8385913461025e576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261025e5783359373ffffffffffffffffffffffffffffffffffffffff90818616928387036104445760243592610100807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc360112610440578160a43516330361041857600b60559188518160448237208851907f00000000000000000000000000000000000000000000000000000000000000008a83015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036103f05761012435901c7f00000000000000000000000000000000000000000000000000000000000000000142106103c957506103bb817fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac959633906108f7565b82519182526020820152a180f35b83517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b5083517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b8387517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8780fd5b8580fd5b505050346100cb57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100cb57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b505050346100cb57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100cb576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b8385913461025e5761052336610606565b92909173ffffffffffffffffffffffffffffffffffffffff60608501351633036102365763ffffffff8185013580921c9160801c1681018091116105755742106101e65750906105729161066a565b80f35b6024856011887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85913461025e576105b136610606565b92909163ffffffff8185013580921c9160a01c1681018091116105755742106105df5750906105729161066a565b807f6f7eac2600000000000000000000000000000000000000000000000000000000869252fd5b906101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610665576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc60043593011261066557602490565b600080fd5b9061067860e0820135610816565b4210156107ec576040906055600b83516101009081858237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff81532073ffffffffffffffffffffffffffffffffffffffff90811630036107c3576000908482526020822060208401350361079a5760c083602095938361077d9460807f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b9a9801351690868401351690801560001461078457508180809260a0860135905af15061077361085f565b505b013533610929565b51908152a1565b90610795925060a08401359161096c565b610775565b600484517fabab6bd7000000000000000000000000000000000000000000000000000000008152fd5b600483517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b60046040517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b63ffffffff8160e01c9160c01c1681018091116108305790565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b3d156108f25767ffffffffffffffff903d8281116108c35760405192601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168401908111848210176108c35760405282523d6000602084013e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b606090565b73ffffffffffffffffffffffffffffffffffffffff169190826109205761091e9250610929565b565b61091e9261096c565b600080809381935af161093a61085f565b501561094257565b60046040517f8a0332d5000000000000000000000000000000000000000000000000000000008152fd5b916044602092600092604051917fa9059cbb0000000000000000000000000000000000000000000000000000000083526004830152602482015282855af190816109e3575b50156109b957565b60046040517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d156109fe5750600160005114601f3d11165b386109b1565b3b15156109f856fea26469706673582212201c4d019757ef2af9a0c9244570f1ac8b0712f3879d83227aa766537895b8446164736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH1 0xE0 DUP5 CALLDATALOAD DUP2 SHR SWAP3 DUP4 PUSH4 0xAF97558 EQ PUSH2 0x5A1 JUMPI POP DUP3 PUSH4 0x23305703 EQ PUSH2 0x512 JUMPI DUP3 PUSH4 0x2DD31000 EQ PUSH2 0x4A2 JUMPI DUP3 PUSH4 0x34862B6A EQ PUSH2 0x448 JUMPI DUP3 PUSH4 0x4649088B EQ PUSH2 0x262 JUMPI POP DUP2 PUSH4 0x90D3252F EQ PUSH2 0xCF JUMPI POP PUSH4 0xF56CD69C EQ PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xCB JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xCB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xCB JUMPI PUSH2 0x100 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x25E JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x64 CALLDATALOAD AND SWAP2 DUP3 CALLER SUB PUSH2 0x236 JUMPI PUSH1 0x55 PUSH1 0xB DUP6 SWAP3 DUP5 MLOAD DUP2 DUP11 DUP3 CALLDATACOPY KECCAK256 DUP5 MLOAD SWAP1 PUSH32 0x0 DUP7 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x20E JUMPI PUSH2 0x19A PUSH1 0xE4 CALLDATALOAD PUSH2 0x816 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1E6 JUMPI POP SWAP1 PUSH2 0x1B3 SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD AND PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0xC4 CALLDATALOAD CALLER PUSH2 0x929 JUMP JUMPDEST PUSH32 0x6E3BE9294E58D10B9C8053CFD5E09871B67E442FE394D6B0870D336B9DF984A9 DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST DUP5 SWAP1 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP5 SWAP1 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP3 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP6 SWAP2 CALLVALUE PUSH2 0x25E JUMPI PUSH2 0x140 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x25E JUMPI DUP4 CALLDATALOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP7 AND SWAP3 DUP4 DUP8 SUB PUSH2 0x444 JUMPI PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x100 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC CALLDATASIZE ADD SLT PUSH2 0x440 JUMPI DUP2 PUSH1 0xA4 CALLDATALOAD AND CALLER SUB PUSH2 0x418 JUMPI PUSH1 0xB PUSH1 0x55 SWAP2 DUP9 MLOAD DUP2 PUSH1 0x44 DUP3 CALLDATACOPY KECCAK256 DUP9 MLOAD SWAP1 PUSH32 0x0 DUP11 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x3F0 JUMPI PUSH2 0x124 CALLDATALOAD SWAP1 SHR PUSH32 0x0 ADD TIMESTAMP LT PUSH2 0x3C9 JUMPI POP PUSH2 0x3BB DUP2 PUSH32 0xC4474C2790E13695F6D2B6F1D8E164290B55370F87A542FD7711ABE0A1BF40AC SWAP6 SWAP7 CALLER SWAP1 PUSH2 0x8F7 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP DUP4 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP8 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0xCB JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xCB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0xCB JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xCB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST DUP4 DUP6 SWAP2 CALLVALUE PUSH2 0x25E JUMPI PUSH2 0x523 CALLDATASIZE PUSH2 0x606 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 DUP6 ADD CALLDATALOAD AND CALLER SUB PUSH2 0x236 JUMPI PUSH4 0xFFFFFFFF DUP2 DUP6 ADD CALLDATALOAD DUP1 SWAP3 SHR SWAP2 PUSH1 0x80 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x575 JUMPI TIMESTAMP LT PUSH2 0x1E6 JUMPI POP SWAP1 PUSH2 0x572 SWAP2 PUSH2 0x66A JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x24 DUP6 PUSH1 0x11 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP6 SWAP2 CALLVALUE PUSH2 0x25E JUMPI PUSH2 0x5B1 CALLDATASIZE PUSH2 0x606 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH4 0xFFFFFFFF DUP2 DUP6 ADD CALLDATALOAD DUP1 SWAP3 SHR SWAP2 PUSH1 0xA0 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x575 JUMPI TIMESTAMP LT PUSH2 0x5DF JUMPI POP SWAP1 PUSH2 0x572 SWAP2 PUSH2 0x66A JUMP JUMPDEST DUP1 PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP7 SWAP3 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x120 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP4 ADD SLT PUSH2 0x665 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC PUSH1 0x4 CALLDATALOAD SWAP4 ADD SLT PUSH2 0x665 JUMPI PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x678 PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH2 0x816 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x40 SWAP1 PUSH1 0x55 PUSH1 0xB DUP4 MLOAD PUSH2 0x100 SWAP1 DUP2 DUP6 DUP3 CALLDATACOPY KECCAK256 DUP5 MLOAD SWAP1 PUSH32 0x0 DUP7 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND ADDRESS SUB PUSH2 0x7C3 JUMPI PUSH1 0x0 SWAP1 DUP5 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x20 DUP5 ADD CALLDATALOAD SUB PUSH2 0x79A JUMPI PUSH1 0xC0 DUP4 PUSH1 0x20 SWAP6 SWAP4 DUP4 PUSH2 0x77D SWAP5 PUSH1 0x80 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP11 SWAP9 ADD CALLDATALOAD AND SWAP1 DUP7 DUP5 ADD CALLDATALOAD AND SWAP1 DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x784 JUMPI POP DUP2 DUP1 DUP1 SWAP3 PUSH1 0xA0 DUP7 ADD CALLDATALOAD SWAP1 GAS CALL POP PUSH2 0x773 PUSH2 0x85F JUMP JUMPDEST POP JUMPDEST ADD CALLDATALOAD CALLER PUSH2 0x929 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST SWAP1 PUSH2 0x795 SWAP3 POP PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP2 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x4 DUP5 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 DUP4 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH1 0xE0 SHR SWAP2 PUSH1 0xC0 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x830 JUMPI SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x8F2 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 RETURNDATASIZE DUP3 DUP2 GT PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP5 ADD SWAP1 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x8C3 JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 DUP3 PUSH2 0x920 JUMPI PUSH2 0x91E SWAP3 POP PUSH2 0x929 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x91E SWAP3 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x93A PUSH2 0x85F JUMP JUMPDEST POP ISZERO PUSH2 0x942 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8A0332D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0x9E3 JUMPI JUMPDEST POP ISZERO PUSH2 0x9B9 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xFB7F507900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0x9FE JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0x9B1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0x9F8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0x4D ADD SWAP8 JUMPI 0xEF 0x2A 0xF9 LOG0 0xC9 0x24 GASLIMIT PUSH17 0xF1AC8B0712F3879D83227AA766537895B8 PREVRANDAO PUSH2 0x6473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"221736:3117:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208447:37;221736:3117;;;;;;;;;;;;;;;;;;;;;;;;208745:16;221736:3117;722:37;208731:10;;;:36;208727:64;;93694:1647;;153642:195;;;;;;;;;93694:1647;;218625:19;;93694:1647;;;;;;;;218646:7;93694:1647;;;;;;;;218666:4;218596:75;218592:132;;223562:60;:20;221736:3117;223562:60;:::i;:::-;209177:15;:23;209173:49;;221736:3117;;223699:17;221736:3117;223699:17;221736:3117;;223651:16;221736:3117;722:37;223699:17;:::i;:::-;223752:24;;221736:3117;208731:10;223752:24;:::i;:::-;223792:17;;;;221736:3117;;209173:49;221736:3117;;;209209:13;;;;218592:132;221736:3117;;;218694:19;;;;208727:64;221736:3117;;;208776:15;;;;221736:3117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208745:16;221736:3117;722:37;208731:10;:36;208727:64;;93694:1647;;153642:195;;;;221736:3117;153642:195;;;93694:1647;;218625:19;;93694:1647;;;;;;;;218646:7;93694:1647;;;;;;;;218666:4;218596:75;218592:132;;209614:20;221736:3117;84254:3;;209647:12;221736:3117;209177:15;:23;209173:49;;208731:10;209708:6;208731:10;209730:27;208731:10;;;209708:6;;:::i;:::-;221736:3117;;;;;93694:1647;221736:3117;;;209730:27;221736:3117;;209173:49;221736:3117;;209209:13;;;;218592:132;221736:3117;;;218694:19;;;;208727:64;221736:3117;;;208776:15;;;;221736:3117;;;;;;;;;;;;;;;;;;;;;;;;;218234:99;221736:3117;;;;;;;;;;;;;;;;;;;;;208533:45;221736:3117;;;;;;;;;;;;;;:::i;:::-;208745:16;;;221736:3117;208745:16;;;221736:3117;722:37;208731:10;:36;208727:64;;84254:3;222355:20;;;221736:3117;84254:3;;;;221736:3117;84254:3;;;;;;;;;209177:15;:23;209173:49;;209232:1;;;;;:::i;:::-;221736:3117;;84254:3;221736:3117;;;;;;;;;;;;;;;;;;:::i;:::-;222937:20;;;84254:3;222937:20;;;221736:3117;84254:3;;;;221736:3117;84254:3;;;;;;;;;209177:15;:23;209173:49;;209232:1;;;;;:::i;209173:49::-;209209:13;;;;;;221736:3117;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;221736:3117:0;;209246:111;;223022:60;:20;;;221736:3117;223022:60;:::i;:::-;209294:15;:23;;209290:49;;153642:195;;93694:1647;;153642:195;;;;;;;;;93694:1647;;218625:19;;93694:1647;;;;;;;;218646:7;93694:1647;;;;;;;;;;;218666:4;218596:75;218592:132;;-1:-1:-1;210798:104:0;;;;93694:1647;210798:104;;93694:1647;209062:19;;221736:3117;209036:45;209032:73;;224786:24;224210:16;93694:1647;224210:16;;;224786:24;224210:16;;224826:18;224210:16;;;221736:3117;722:37;224255:16;;;;221736:3117;722:37;224291:19;;;224287:465;221736:3117;;;224638:17;;;;;;;;221736:3117;224622:39;;;;;;:::i;:::-;;224287:465;224786:24;221736:3117;224774:10;224786:24;:::i;:::-;221736:3117;;;;224826:18;209246:111::o;224287:465::-;224723:17;;;;;;;221736:3117;224723:17;;:::i;:::-;224287:465;;209032:73;209090:15;221736:3117;;209090:15;;;;218592:132;218694:19;221736:3117;;218694:19;;;;209290:49;209326:13;221736:3117;;209326:13;;;;85415:320;84254:3;;;;;221736:3117;84254:3;;;;;;;;;85415:320;:::o;84254:3::-;221736:3117;-1:-1:-1;221736:3117:0;;;;;-1:-1:-1;221736:3117:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221736:3117:0;;;;:::o;:::-;;-1:-1:-1;221736:3117:0;;;;;-1:-1:-1;221736:3117:0;;;;:::o;209849:233::-;221736:3117;;;209849:233;209937:19;221736:3117;;209989:6;;;;:::i;:::-;209849:233::o;209933:143::-;210058:6;;;:::i;210158:180::-;210245:28;210158:180;;;;;210245:28;;;;:::i;:::-;;210287:8;210283:48;;210158:180::o;210283:48::-;210304:27;221736:3117;;210304:27;;;;174150:229;;189629:604;;174150:229;-1:-1:-1;189629:604:0;;;;221736:3117;189629:604;;;;;;;;;;;;;;;;;;174150:229;174266:53;;174262:111;;174150:229::o;174262:111::-;189629:604;;221736:3117;174342:20;;;;189629:604;;-1:-1:-1;189629:604:0;;;;;;-1:-1:-1;189629:604:0;;;;;;;;;;;;;;;"},"methodIdentifiers":{"FACTORY()":"2dd31000","PROXY_BYTECODE_HASH()":"34862b6a","RESCUE_DELAY()":"f56cd69c","cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"90d3252f","publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"0af97558","rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"4649088b","withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"23305703"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rescueDelay\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROXY_BYTECODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"publicWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"details\":\"Funds are locked in at the time of contract deployment. For this taker calls the `EscrowFactory.createDstEscrow` function. To perform any action, the caller must provide the same Immutables values used to deploy the clone contract.\",\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The function works on the time interval highlighted with capital letters: ---- contract deployed --/-- finality --/-- private withdrawal --/-- public withdrawal --/-- PRIVATE CANCELLATION ----\"},\"publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The function works on the time intervals highlighted with capital letters: ---- contract deployed --/-- finality --/-- private withdrawal --/-- PUBLIC WITHDRAWAL --/-- private cancellation ----\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The function works on the time intervals highlighted with capital letters: ---- contract deployed --/-- finality --/-- PRIVATE WITHDRAWAL --/-- PUBLIC WITHDRAWAL --/-- private cancellation ----\"}},\"title\":\"Destination Escrow contract for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"FACTORY()\":{\"notice\":\"See {IBaseEscrow-FACTORY}.\"},\"PROXY_BYTECODE_HASH()\":{\"notice\":\"See {IEscrow-PROXY_BYTECODE_HASH}.\"},\"RESCUE_DELAY()\":{\"notice\":\"See {IBaseEscrow-RESCUE_DELAY}.\"},\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IBaseEscrow-cancel}.\"},\"publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IBaseEscrow-publicWithdraw}.\"},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IBaseEscrow-rescueFunds}.\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IBaseEscrow-withdraw}.\"}},\"notice\":\"Contract to initially lock funds and then unlock them with verification of the secret presented.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"EscrowDst\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"EscrowFactory":{"abi":[{"inputs":[{"internalType":"address","name":"limitOrderProtocol","type":"address"},{"internalType":"contract IERC20","name":"feeToken","type":"address"},{"internalType":"contract IERC20","name":"accessToken","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint32","name":"rescueDelaySrc","type":"uint32"},{"internalType":"uint32","name":"rescueDelayDst","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessDenied","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InsufficientEscrowBalance","type":"error"},{"inputs":[],"name":"InvalidCreationTime","type":"error"},{"inputs":[],"name":"InvalidPartialFill","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[],"name":"InvalidSecretsAmount","type":"error"},{"inputs":[],"name":"NotEnoughCredit","type":"error"},{"inputs":[],"name":"OnlyFeeBankAccess","type":"error"},{"inputs":[],"name":"OnlyLimitOrderProtocol","type":"error"},{"inputs":[],"name":"ResolverCanNotFillOrder","type":"error"},{"inputs":[],"name":"SafeTransferFromFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"escrow","type":"address"},{"indexed":false,"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"indexed":false,"internalType":"Address","name":"taker","type":"uint256"}],"name":"DstEscrowCreated","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"indexed":false,"internalType":"struct IBaseEscrow.Immutables","name":"srcImmutables","type":"tuple"},{"components":[{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}],"indexed":false,"internalType":"struct IEscrowFactory.DstImmutablesComplement","name":"dstImmutablesComplement","type":"tuple"}],"name":"SrcEscrowCreated","type":"event"},{"inputs":[],"name":"ESCROW_DST_IMPLEMENTATION","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ESCROW_SRC_IMPLEMENTATION","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_BANK","outputs":[{"internalType":"contract IFeeBank","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"addressOfEscrowDst","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"addressOfEscrowSrc","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"availableCredit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"dstImmutables","type":"tuple"},{"internalType":"uint256","name":"srcCancellationTimestamp","type":"uint256"}],"name":"createDstEscrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAvailableCredit","outputs":[{"internalType":"uint256","name":"allowance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"getMakingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"getTakingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"increaseAvailableCredit","outputs":[{"internalType":"uint256","name":"allowance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"lastValidated","outputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32","name":"leaf","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"postInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"preInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"takerInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":713,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint32_fromMemory":{"entryPoint":734,"id":null,"parameterSlots":1,"returnSlots":1},"fun_computeProxyBytecodeHash":{"entryPoint":null,"id":1059,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"61018034620002c4576001600160401b03601f62004f6438819003918201601f19168401919083831185841017620002ae578160c09286926040958652833981010312620002c4576200005283620002c9565b6200006060208501620002c9565b926200006e838601620002c9565b906200007d60608701620002c9565b926200009a60a06200009260808a01620002de565b9801620002de565b928160805285516112939788820198828a10868b1117620002ae576200238283393089526001600160a01b0390811660208a0152958616878901526000978190036060019088f08015620002a457851660a05260c05260e0528351610e0a8082019082821084831117620002865760209183916200415a833963ffffffff809a16815203019086f09586156200029a578361010097168752845192610b45808501938585109085111762000286579160209391859362003615853916815203019084f09283156200027b5750806101209316835262000202620001b982865116763d602d80600a3d3981f3363d3d373d3d3d363d73000000906e5af43d82803e903d91602b57fd5bf36020528060115260881c17600052603760092090565b91610140928352845116763d602d80600a3d3981f3363d3d373d3d3d363d73000000906e5af43d82803e903d91602b57fd5bf36020528060115260881c17600052603760092090565b9161016092835251926120919485620002f18639608051858181610b400152611872015260a0518581816109bf0152818161172c01526117c2015260c051856115b3015260e0518561065a015251848181610a86015261109401525183818161024e01526106080152518261010e015251816105970152f35b8251903d90823e3d90fd5b634e487b7160e01b88526041600452602488fd5b84513d87823e3d90fd5b86513d89823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b0382168203620002c457565b519063ffffffff82168203620002c45756fe60a080604052600436101561001357600080fd5b60006080526080513560e01c9081630986bdd514611843575080631d9671c3146117e65780632ce26aeb146117765780633ee5ef1f146116dc578063462ebde214610b125780635886216f14610aaa5780637040f17314610a3a57806385eda2de1461096f578063acf4ce5c1461091a578063adf38ba11461062c578063ba551177146105bc578063be58e91c14610553578063d7ff8a8014610473578063dea024e4146101575763fb6bd47e146100ca57600080fd5b3461015157610100807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101515761013360209160405181600482372030907f000000000000000000000000000000000000000000000000000000000000000090611f06565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b60805180fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601610120811261015157610100809112610151576084359073ffffffffffffffffffffffffffffffffffffffff8083168015929160c4358085610461575b340361043757604051936101ca85611ae7565b600435855260243594856020820152604435604082015260643597886060830152608082015260a081019260a435845260c08201524260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff60e43516178060e0830152610246610104359163ffffffff8160c01c169060e01c611ab1565b1161040d57207f00000000000000000000000000000000000000000000000000000000000000003447106103d657763d602d80600a3d3981f3363d3d373d3d3d363d73000000906e5af43d82803e903d91602b57fd5bf36020528060115260881c176000526037600934f59182169485156103ac57156102fe575b7fc30e111dcc74fddc2c3a4d98ffb97adec4485c0a687946bf5b22c2a99c7ff96d606086888760405192835260208301526040820152a160805180f35b516040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201526024810192909252604482015260805192939260209160649082855af19081610388575b501561035e57908380806102c1565b60046040517ff4059071000000000000000000000000000000000000000000000000000000008152fd5b90503d156103a4575060016080515114601f3d11165b8461034f565b3b151561039e565b60046040517fb06ebf3d000000000000000000000000000000000000000000000000000000008152fd5b604447604051907fcf4791810000000000000000000000000000000000000000000000000000000082526004820152346024820152fd5b60046040517ff4840e96000000000000000000000000000000000000000000000000000000008152fd5b60046040517f34f5151d000000000000000000000000000000000000000000000000000000008152fd5b61046e9060a43590611ab1565b6101b7565b3461015157610493610484366119c9565b95509350509495935050611b7e565b60c08301359162989680918201908183116105225760a0916104b491611a6f565b930135818102918183041490151715610522576104d2818484611c47565b9080156104f1576020936104e99309151590611ab1565b604051908152f35b7f4e487b71000000000000000000000000000000000000000000000000000000006080515260126004526024608051fd5b7f4e487b71000000000000000000000000000000000000000000000000000000006080515260116004526024608051fd5b3461015157610100807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101515761013360209160405181600482372030907f000000000000000000000000000000000000000000000000000000000000000090611f06565b34610151576080517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015157602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101515761063a3661191c565b50975050505050919073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036108f05761068991611e84565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff607dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff92839201013516604051926020936107468161071a85888301958690603e927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000091835260101b1660208201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282611b04565b5190209084357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1863603018112156101515767ffffffffffffffff939086018035858111610151576005918160051b360388820113610151576040888a013599013596604051898101917fffffffffffffffff0000000000000000000000000000000000000000000000008c60c01b168352896028830152602882526060820190828210908211176108c1576040959493955251902092608051925b82841061087d5750505050160361085357600184018094116105225760019283916040519561083087611acb565b865281860193845260805152526040608051209251835551910155608051608051f35b60046040517f09bde339000000000000000000000000000000000000000000000000000000008152fd5b92939192909184821b83018a013590818110156108ad5760805152895260016040608051205b9401929190610802565b9060805152895260016040608051206108a3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60046040517f4ca88867000000000000000000000000000000000000000000000000000000008152fd5b346101515760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015157600435608051526001602052604080608051206001815491015482519182526020820152f35b346101515760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610151576109a66118f9565b73ffffffffffffffffffffffffffffffffffffffff90817f0000000000000000000000000000000000000000000000000000000000000000163303610a105716608051526080516020526020604060805120610a056024358254611abe565b809155604051908152f35b60046040517fa4544199000000000000000000000000000000000000000000000000000000008152fd5b34610151576080517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015157602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101515760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101515773ffffffffffffffffffffffffffffffffffffffff610af66118f9565b1660805152608051602052602060406080512054604051908152f35b3461015157610b203661191c565b94919293979095989673ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036116b257857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60810111610522577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60860190877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5f88018310610522577f010000000000000000000000000000000000000000000000000000000000000080610c4e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5f8b017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608c018d611f3c565b351614610ca07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5f8a017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608b018c611f3c565b608051903560fb1c918061161e575b85600411610151577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8601600c84021161015157610cfa8884600c810260048801883560e01c611f77565b1561147e575b505060147ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc600c830286030111611201575b505050508585017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6001905060e08701357f400000000000000000000000000000000000000000000000000000000000000016156111e457358060f01c600281106111ba5760408051602081018c815260109490941b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001691810191909152610e1f9290610de281605e810161071a565b519020608051526001602052604060805120906020604051610e0381611acb565b6001845494858352015491829101529460a08a0135908b611dce565b156111905773ffffffffffffffffffffffffffffffffffffffff915b60405198610e488a611ae7565b8952602089015260208601356040890152166060870152606084013560808701528460a08701527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0828401013560801c60c08701524260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08486010135161760e087015260408401356080515073ffffffffffffffffffffffffffffffffffffffff81161560001461118a57506020840135905b604051938460a081011067ffffffffffffffff60a0870111176108c1577f0e534c62f0afd2fa0f0fa71198e8aa2d549f24daf2bb47de0d5486c7ce9288ca936101a09360a08701604052865260208601928352604086017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0828401013581527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060608801926fffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0828701013516845260808901940101358352604051938a51855260208b0151602086015260408b0151604086015260608b0151606086015260808b0151608086015260a08b015160a086015260c08b015160c086015260e08b015160e086015261010097518886015251610120850152516101408401525161016083015251610180820152a18320763d602d80600a3d3981f3363d3d373d3d3d363d730000007f00000000000000000000000000000000000000000000000000000000000000006e5af43d82803e903d91602b57fd5bf36020528060115260881c17600052603760096000f59273ffffffffffffffffffffffffffffffffffffffff8416156103ac5760c0843191015111928315611112575b5050506104375760805180f35b60209293507f70a08231000000000000000000000000000000000000000000000000000000006080515260045260246080519173ffffffffffffffffffffffffffffffffffffffff6060608051920135165afa60805151901560203d101761117d5710818080611105565b6040513d608051823e3d90fd5b90610f1b565b60046040517feab3a174000000000000000000000000000000000000000000000000000000008152fd5b60046040517f10d629d3000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff925035610e3b565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000600c82028381016004013582811694929160149088037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0110611461575b5050600c820285037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb8101907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01811161052257601411610151578260601c3b15610151576113f98e60e0938f8f946018916113606040519c8d9b8c9a8b9a7f462ebde2000000000000000000000000000000000000000000000000000000008c52803560048d0152602081013560248d0152604081013560448d0152606081013560648d0152608081013560848d015260a081013560a48d015260c081013560c48d0152013560e48b01526101e06101048b01526101e48a019161201c565b9461012488015273ffffffffffffffffffffffffffffffffffffffff8d166101448801526101648701528d6101848701528c6101a48701527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc868503016101c4870152600c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe76080519b8286029003019302010161201c565b03916080519060601c5af1801561117d57611418575b80808080610d32565b67ffffffffffffffff8111611430576040528861140f565b7f4e487b71000000000000000000000000000000000000000000000000000000006080515260416004526024608051fd5b600c8402870360140360040160031b82901b161692508e80611260565b42843560e01c118015611553575b6115295761149b575b80610d00565b80156114955773ffffffffffffffffffffffffffffffffffffffff871660805152608051602052604060805120548181106114ff5773ffffffffffffffffffffffffffffffffffffffff88166080515260805160205203604060805120558d611495565b60046040517fa7fd3792000000000000000000000000000000000000000000000000000000008152fd5b60046040517ff25114a6000000000000000000000000000000000000000000000000000000008152fd5b506040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8916600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561117d57608051916115ec575b501561148c565b90506020813d602011611616575b8161160760209383611b04565b810103126101515751386115e5565b3d91506115fa565b94505090507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60880160041161015157883560e01c66038d7ea4c680009080828102048214811517156105225761167e8d6116839360a08f01359302611a6f565b611b45565b9060048a01917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5c8a0194610caf565b60046040517fd25aa106000000000000000000000000000000000000000000000000000000008152fd5b346101515760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610151576117136118f9565b73ffffffffffffffffffffffffffffffffffffffff90817f0000000000000000000000000000000000000000000000000000000000000000163303610a105716608051526080516020526020604060805120602435815401809155604051908152f35b34610151576080517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015157602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610151576118056117f7366119c9565b955093505095935050611b7e565b906298968091828402938085048414901517156105225782018092116105225760209260a061183b6104e99460c0850135611a6f565b920135611c47565b34610151576118513661191c565b5050505050505050505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361189e5760805180f35b807fd25aa1060000000000000000000000000000000000000000000000000000000060049252fd5b9181601f840112156118f45782359167ffffffffffffffff83116118f457602083818601950101116118f457565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036118f457565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc81016101e081126118f457610100136118f45760049167ffffffffffffffff610104358181116118f45783611974916004016118c6565b9390939261012435926101443573ffffffffffffffffffffffffffffffffffffffff811681036118f45792610164359261018435926101a435926101c4359182116118f4576119c5916004016118c6565b9091565b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82016101c081126118f457610100136118f45760049167ffffffffffffffff90610104358281116118f45781611a23916004016118c6565b9390939261012435926101443573ffffffffffffffffffffffffffffffffffffffff811681036118f45792610164359261018435926101a4359182116118f4576119c5916004016118c6565b81810292918115918404141715611a8257565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908201809211611a8257565b91908203918211611a8257565b6040810190811067ffffffffffffffff8211176108c157604052565b610100810190811067ffffffffffffffff8211176108c157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176108c157604052565b8115611b4f570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90806003116118f457813560e81c816007116118f457600383013560e01c9080158015611c3f575b15611c285750506000915b81600b116118f457600781013560e01c82600e116118f457826011116118f4577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef611c159301916011810191600b600e83013560e81c92013560e81c810190611d0b565b81811115611c21570390565b5050600090565b620f424091611c38914802611b45565b0491611bb1565b508115611ba6565b91818302917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81850993838086109503948086039514611cfb5784831115611cdb579082910981600003821680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b82611cf45760125b634e487b716000526020526024601cfd5b6011611ce3565b505090611d089250611b45565b90565b9091939281421115600014611d21575050505090565b8293949192421015611dc457849291925b611d485750611d08935082039142900302611b45565b906003908582116118f457823560e81c906005928784116118f45784013560f01c81019485421115611da5575050907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb9193920194019384611d32565b925093611d089650809550849193500393429003029142030201611b45565b5050505050600090565b929190611de484611ddf8385611abe565b611ab1565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91828101908111611a82578361167e86611e1f93611a6f565b948103611e39575050505060028101809111611a82571490565b808303611e54575b5050505060018101809111611a82571490565b611e5e9083611abe565b908101908111611a8257611e759261167e91611a6f565b8114611c215738808080611e41565b91909160208310611efd578035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe063ffffffff8360c01c169260e01c94018411611ed3578101602001920390565b7f9605a0100000000000000000000000000000000000000000000000000000000060005260046000fd5b50600091508190565b60559173ffffffffffffffffffffffffffffffffffffffff93600b92604051926040840152602083015281520160ff8153201690565b90821015611f48570190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9192909369ffffffffffffffffffff16926000925b828410611f9e57505050505050600090565b600a908282116118f457600c918383116118f45787013560f01c0195803560b01c8603611fd15750505050505042101590565b95929394954284116120105701949360010192917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff49190910190611f8c565b50505050505050600090565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601376000858286010152011601019056fea26469706673582212202f17ae91968c2de07c002c6e349fcfe48881d1d9887927d72c71d0f9e7cdbc8964736f6c6343000817003360c03461013257601f61129338819003918201601f19168301916001600160401b03831184841017610137578084926060946040528339810103126101325780516001600160a01b0380821682036101325760208301519281841690818503610132576040015182811680910361013257801561011957600080546001600160a01b03198116831782556040519416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a31561010a575060a052608052604051611145908161014e82396080518181816102f90152818161091e01528181610dea0152610e75015260a0518181816102c60152818161071301528181610d8c0152610f4e0152f35b63d92e233d60e01b8152600490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c8063205c2878146108785780632e1a7d4d146108395780632f4f21e2146107f257806332d323a5146107885780635886216f1461068c578063715018a6146105f057806378e3214f1461044e5780638da5cb5b146103f957806397a2cb6414610232578063b6b55f25146101f3578063bfe917341461018a5763f2fde38b146100a557600080fd5b346101865760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610186576100dc6108bf565b906100e5611024565b73ffffffffffffffffffffffffffffffffffffffff8092169283156101575750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b5091346101f057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f0576024359067ffffffffffffffff82116101f057506020926101e16101e992369083016108e7565b913533610915565b9051908152f35b80fd5b5091346101f05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057506101e96020923533610e50565b50903461018657602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057823567ffffffffffffffff80821161018657366023830112156101865781850135908111610186576024943660248360051b850101116103f5579492916102aa611024565b8295839473ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016935b858810610323578a8a8a61031d82337f0000000000000000000000000000000000000000000000000000000000000000611075565b51908152f35b9091929394959698838a60051b830101358381168091036103f15790818c928a5260018084528b8b2054908c51947f5886216f000000000000000000000000000000000000000000000000000000008652838a8701528589818d5afa9283156103e7578f908d946103ab575b600196508d5252818c8c205503019901969594939291906102e8565b94958092939450813d83116103e0575b6103c58183610cda565b810103126103dc57908e600195949392519361038f565b8b80fd5b503d6103bb565b8d513d8e823e3d90fd5b8880fd5b8380fd5b50503461044a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b50903461018657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018657813573ffffffffffffffffffffffffffffffffffffffff8116908181036105ec57602435916104ab611024565b826104b4578580f35b80159081156105ce575b50156105ba575080471061059357838080809333611388f13d1561058e573d67ffffffffffffffff81116105625782519061052160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610cda565b81528460203d92013e5b1561053c5750505b38808080808580f35b517fb12d13eb000000000000000000000000000000000000000000000000000000008152fd5b6024856041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b61052b565b50517ff4d678b8000000000000000000000000000000000000000000000000000000008152fd5b9091506105c992503390611075565b610533565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee915014386104be565b8480fd5b83346101f057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057610627611024565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5091903461044a57602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018657836106c96108bf565b602473ffffffffffffffffffffffffffffffffffffffff9182865195869485937f5886216f00000000000000000000000000000000000000000000000000000000855216908301527f0000000000000000000000000000000000000000000000000000000000000000165afa92831561077d57809361074b575b505051908152f35b909192508382813d8311610776575b6107648183610cda565b810103126101f0575051903880610743565b503d61075a565b8251903d90823e3d90fd5b50346101865760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610186576107c06108bf565b926044359067ffffffffffffffff82116101f05750926107e86101e9926020953691016108e7565b9160243590610915565b50503461044a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a576020906101e96108306108bf565b60243590610e50565b5091346101f05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057506101e96020923533610d4a565b50503461044a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a576020906101e96108b66108bf565b60243590610d4a565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036108e257565b600080fd5b9181601f840112156108e25782359167ffffffffffffffff83116108e257602083818601950101116108e257565b604051909391927f0000000000000000000000000000000000000000000000000000000000000000919083600060648214610c22575093600094918286959493604814610b60578060e014610b27578061010014610aec5780606014610a1657610160146109cc578185926004927f9fd5a6cf0000000000000000000000000000000000000000000000000000000086528386013701925af15b156109c0576109bd91610e50565b90565b6040513d6000823e3d90fd5b610164935061016091507f2b67b5700000000000000000000000000000000000000000000000000000000083526004830137826e22d473030f116ddee9f6b43ac78ba35af16109af565b5060209150604090610164947f2b67b570000000000000000000000000000000000000000000000000000000008552336004860152602485015260148160508601377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff65ffffffffffff9080601484013560e01c0182166064870152601883013560e01c60848701523060a4870152601c83013560e01c011660c485015261010060e4850152816101048501528280820161012486013701610144830137826e22d473030f116ddee9f6b43ac78ba35af16109af565b5084915092610100610104947f8fcbaf0c00000000000000000000000000000000000000000000000000000000855260048501375af16109af565b508491509260e060e4947fd505accf00000000000000000000000000000000000000000000000000000000855260048501375af16109af565b50849150927f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610104947f8fcbaf0c00000000000000000000000000000000000000000000000000000000855233600486015230602486015260206008602883013592803560e01c60448901527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600482013560e01c016064890152600160848901528360ff1c601b0160a48901520160c48701371660e48401525af16109af565b945050908380937f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60e4947fd505accf00000000000000000000000000000000000000000000000000000000855233600486015230602486015260206024604483013592828160448a01377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8382013560e01c0160648901528360ff1c601b0160848901520160a48701371660c48401525af16109af565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610d1b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040517f85eda2de00000000000000000000000000000000000000000000000000000000815233600482015260248101839052600093929091602083604481887f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff165af1928315610e45578593610e10575b506040610e0e93953381526001602052208281540390557f0000000000000000000000000000000000000000000000000000000000000000611075565b565b92506020833d602011610e3d575b81610e2b60209383610cda565b810103126105ec579151916040610dd1565b3d9150610e1e565b6040513d87823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff91828216908115610ffa576064937f00000000000000000000000000000000000000000000000000000000000000006000604051907f23b872dd000000000000000000000000000000000000000000000000000000008252336004830152306024830152846044830152602097889282855af19081610fd7575b5015610fad576000928352600185526040808420805484019055517f3ee5ef1f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff94909416600485015260248401919091528391839160449183917f0000000000000000000000000000000000000000000000000000000000000000165af19182156109c057600092610f8357505090565b90809250813d8311610fa6575b610f9a8183610cda565b810103126108e2575190565b503d610f90565b60046040517ff4059071000000000000000000000000000000000000000000000000000000008152fd5b90503d15610ff25750600160005114601f3d11165b38610edf565b3b1515610fec565b60046040517fd92e233d000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361104557565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b916044602092600092604051917fa9059cbb0000000000000000000000000000000000000000000000000000000083526004830152602482015282855af190816110ec575b50156110c257565b60046040517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d156111075750600160005114601f3d11165b386110ba565b3b151561110156fea2646970667358221220552a3a83b37e5067be598c508f5e5724e322070b2fbdd787200276b277eaf18c64736f6c6343000817003360e0346100ed57601f610b4538819003918201601f19168301916001600160401b038311848410176100f2578084926020946040528339810103126100ed575163ffffffff81168091036100ed573360a0526080526e5af43d82803e903d91602b57fd5bf360205230601152763d602d80600a3d3981f3363d3d373d3d3d363d730000003060881c17600052603760092060c052604051610a3c9081610109823960805181818160a80152610366015260a05181818161016101528181610330015281816104ee01526106c0015260c051818181610137015281816103060152818161047f01526106960152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b60009260e08435811c9283630af97558146105a15750826323305703146105125782632dd31000146104a257826334862b6a146104485782634649088b146102625750816390d3252f146100cf575063f56cd69c1461007457600080fd5b346100cb57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100cb57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b8383346100cb57610100807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261025e5773ffffffffffffffffffffffffffffffffffffffff91826064351691823303610236576055600b85928451818a8237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff81532016300361020e5761019a60e435610816565b42106101e65750906101b39160a43591608435166108f7565b6101bf60c43533610929565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b8490517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b8490517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b8582517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b8385913461025e576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261025e5783359373ffffffffffffffffffffffffffffffffffffffff90818616928387036104445760243592610100807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc360112610440578160a43516330361041857600b60559188518160448237208851907f00000000000000000000000000000000000000000000000000000000000000008a83015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036103f05761012435901c7f00000000000000000000000000000000000000000000000000000000000000000142106103c957506103bb817fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac959633906108f7565b82519182526020820152a180f35b83517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b5083517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b8387517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8780fd5b8580fd5b505050346100cb57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100cb57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b505050346100cb57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100cb576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b8385913461025e5761052336610606565b92909173ffffffffffffffffffffffffffffffffffffffff60608501351633036102365763ffffffff8185013580921c9160801c1681018091116105755742106101e65750906105729161066a565b80f35b6024856011887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85913461025e576105b136610606565b92909163ffffffff8185013580921c9160a01c1681018091116105755742106105df5750906105729161066a565b807f6f7eac2600000000000000000000000000000000000000000000000000000000869252fd5b906101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610665576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc60043593011261066557602490565b600080fd5b9061067860e0820135610816565b4210156107ec576040906055600b83516101009081858237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff81532073ffffffffffffffffffffffffffffffffffffffff90811630036107c3576000908482526020822060208401350361079a5760c083602095938361077d9460807f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b9a9801351690868401351690801560001461078457508180809260a0860135905af15061077361085f565b505b013533610929565b51908152a1565b90610795925060a08401359161096c565b610775565b600484517fabab6bd7000000000000000000000000000000000000000000000000000000008152fd5b600483517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b60046040517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b63ffffffff8160e01c9160c01c1681018091116108305790565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b3d156108f25767ffffffffffffffff903d8281116108c35760405192601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168401908111848210176108c35760405282523d6000602084013e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b606090565b73ffffffffffffffffffffffffffffffffffffffff169190826109205761091e9250610929565b565b61091e9261096c565b600080809381935af161093a61085f565b501561094257565b60046040517f8a0332d5000000000000000000000000000000000000000000000000000000008152fd5b916044602092600092604051917fa9059cbb0000000000000000000000000000000000000000000000000000000083526004830152602482015282855af190816109e3575b50156109b957565b60046040517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d156109fe5750600160005114601f3d11165b386109b1565b3b15156109f856fea26469706673582212201c4d019757ef2af9a0c9244570f1ac8b0712f3879d83227aa766537895b8446164736f6c6343000817003360e0346100ed57601f610e0a38819003918201601f19168301916001600160401b038311848410176100f2578084926020946040528339810103126100ed575163ffffffff81168091036100ed573360a0526080526e5af43d82803e903d91602b57fd5bf360205230601152763d602d80600a3d3981f3363d3d373d3d3d363d730000003060881c17600052603760092060c052604051610d019081610109823960805181818160be01526104f9015260a05181818161066e015281816109cd01528181610a7e0152610b04015260c0518181816105ff015281816109a201528181610a530152610ad90152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b60009260e08435811c9283630af97558146107795750826323305703146106925782632dd310001461062257826334862b6a146105c85782634649088b1461045a5782636c10c0c8146102a457826390d3252f146101f5578263daff233e146100e557505063f56cd69c1461008a57600080fd5b346100e157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e157602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b90929150346101f1576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f15763ffffffff60e43580921c9160601c1681018091116101c557421061019f5782610141610a27565b61016c73ffffffffffffffffffffffffffffffffffffffff60a4359080604435169060843516610b34565b61017860c43533610bce565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b6024846011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8380fd5b509050346102a0576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102a05773ffffffffffffffffffffffffffffffffffffffff918260643516330361027a5761025460e435610916565b421061019f578361016c84610267610a27565b60a4359080604435169060843516610b34565b517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b848285346102a0576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102a05781359160243573ffffffffffffffffffffffffffffffffffffffff918282168203610456576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc360112610456578260a43516330361042f576101243561033f8161095f565b42106104075761034e90610916565b4210156103e05761035d610976565b84865260208620606435036103b95750916103a47f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b949260209460e4359160c43516610b34565b6103b16101043533610bce565b51908152a180f35b83517fabab6bd7000000000000000000000000000000000000000000000000000000008152fd5b83517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b5083517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b83517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b838591346102a0576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102a05783359073ffffffffffffffffffffffffffffffffffffffff908183168093036105c457602435916101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc3601126104565760a43516330361059c576104f1610976565b61012435901c7f0000000000000000000000000000000000000000000000000000000000000000014210610574577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac9394508115600014610564576105568133610bce565b82519182526020820152a180f35b61056f813384610b34565b610556565b8483517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b8584517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8480fd5b505050346100e157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e157602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b505050346100e157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e1576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b90929150346101f1576106a4366108b2565b91909373ffffffffffffffffffffffffffffffffffffffff91826060850135163303610751578301356106d68161095f565b4210610407576106e590610916565b4210156103e0576106f583610aae565b848652602086206020840135036103b95750916103b160c08361074960209660a07f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b99970135903390608085013516610b34565b013533610bce565b5083517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b93925090346105c45761078b366108b2565b9290948184013580921c63ffffffff8360201c16810180911161088657421061085f57506107b890610916565b4210156108385773ffffffffffffffffffffffffffffffffffffffff906107de83610aae565b848652602086206020840135036103b95750916103b160c08361074960209660a07f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b99970135908060608501351690608085013516610b34565b82517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b90507f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b6024886011867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b906101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610911576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc60043593011261091157602490565b600080fd5b63ffffffff8160e01c9160401c1681018091116109305790565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff8160e01c911681018091116109305790565b73ffffffffffffffffffffffffffffffffffffffff6055600b60405161010090816044823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036109fd57565b60046040517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff6055600b60405161010090816004823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036109fd57565b6055600b73ffffffffffffffffffffffffffffffffffffffff926040516101008092823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036109fd57565b916044602092600092604051917fa9059cbb0000000000000000000000000000000000000000000000000000000083526004830152602482015282855af19081610bab575b5015610b8157565b60046040517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d15610bc65750600160005114601f3d11165b38610b79565b3b1515610bc0565b60008080809481945af1903d15610cc55767ffffffffffffffff903d828111610c985760405192601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116840190811184821017610c6b57604052825260203d92013e5b15610c4157565b60046040517f8a0332d5000000000000000000000000000000000000000000000000000000008152fd5b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b50610c3a56fea26469706673582212205de98340a55562d97fa0fa479d70183ffd893bc618f5d3b0d8aaa9f73c56b74764736f6c63430008170033","opcodes":"PUSH2 0x180 CALLVALUE PUSH3 0x2C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1F PUSH3 0x4F64 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP5 ADD SWAP2 SWAP1 DUP4 DUP4 GT DUP6 DUP5 LT OR PUSH3 0x2AE JUMPI DUP2 PUSH1 0xC0 SWAP3 DUP7 SWAP3 PUSH1 0x40 SWAP6 DUP7 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x2C4 JUMPI PUSH3 0x52 DUP4 PUSH3 0x2C9 JUMP JUMPDEST PUSH3 0x60 PUSH1 0x20 DUP6 ADD PUSH3 0x2C9 JUMP JUMPDEST SWAP3 PUSH3 0x6E DUP4 DUP7 ADD PUSH3 0x2C9 JUMP JUMPDEST SWAP1 PUSH3 0x7D PUSH1 0x60 DUP8 ADD PUSH3 0x2C9 JUMP JUMPDEST SWAP3 PUSH3 0x9A PUSH1 0xA0 PUSH3 0x92 PUSH1 0x80 DUP11 ADD PUSH3 0x2DE JUMP JUMPDEST SWAP9 ADD PUSH3 0x2DE JUMP JUMPDEST SWAP3 DUP2 PUSH1 0x80 MSTORE DUP6 MLOAD PUSH2 0x1293 SWAP8 DUP9 DUP3 ADD SWAP9 DUP3 DUP11 LT DUP7 DUP12 GT OR PUSH3 0x2AE JUMPI PUSH3 0x2382 DUP4 CODECOPY ADDRESS DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP11 ADD MSTORE SWAP6 DUP7 AND DUP8 DUP10 ADD MSTORE PUSH1 0x0 SWAP8 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP9 CREATE DUP1 ISZERO PUSH3 0x2A4 JUMPI DUP6 AND PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0xE0 MSTORE DUP4 MLOAD PUSH2 0xE0A DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT DUP5 DUP4 GT OR PUSH3 0x286 JUMPI PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH3 0x415A DUP4 CODECOPY PUSH4 0xFFFFFFFF DUP1 SWAP11 AND DUP2 MSTORE SUB ADD SWAP1 DUP7 CREATE SWAP6 DUP7 ISZERO PUSH3 0x29A JUMPI DUP4 PUSH2 0x100 SWAP8 AND DUP8 MSTORE DUP5 MLOAD SWAP3 PUSH2 0xB45 DUP1 DUP6 ADD SWAP4 DUP6 DUP6 LT SWAP1 DUP6 GT OR PUSH3 0x286 JUMPI SWAP2 PUSH1 0x20 SWAP4 SWAP2 DUP6 SWAP4 PUSH3 0x3615 DUP6 CODECOPY AND DUP2 MSTORE SUB ADD SWAP1 DUP5 CREATE SWAP3 DUP4 ISZERO PUSH3 0x27B JUMPI POP DUP1 PUSH2 0x120 SWAP4 AND DUP4 MSTORE PUSH3 0x202 PUSH3 0x1B9 DUP3 DUP7 MLOAD AND PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 SWAP1 PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x11 MSTORE PUSH1 0x88 SHR OR PUSH1 0x0 MSTORE PUSH1 0x37 PUSH1 0x9 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x140 SWAP3 DUP4 MSTORE DUP5 MLOAD AND PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 SWAP1 PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x11 MSTORE PUSH1 0x88 SHR OR PUSH1 0x0 MSTORE PUSH1 0x37 PUSH1 0x9 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x160 SWAP3 DUP4 MSTORE MLOAD SWAP3 PUSH2 0x2091 SWAP5 DUP6 PUSH3 0x2F1 DUP7 CODECOPY PUSH1 0x80 MLOAD DUP6 DUP2 DUP2 PUSH2 0xB40 ADD MSTORE PUSH2 0x1872 ADD MSTORE PUSH1 0xA0 MLOAD DUP6 DUP2 DUP2 PUSH2 0x9BF ADD MSTORE DUP2 DUP2 PUSH2 0x172C ADD MSTORE PUSH2 0x17C2 ADD MSTORE PUSH1 0xC0 MLOAD DUP6 PUSH2 0x15B3 ADD MSTORE PUSH1 0xE0 MLOAD DUP6 PUSH2 0x65A ADD MSTORE MLOAD DUP5 DUP2 DUP2 PUSH2 0xA86 ADD MSTORE PUSH2 0x1094 ADD MSTORE MLOAD DUP4 DUP2 DUP2 PUSH2 0x24E ADD MSTORE PUSH2 0x608 ADD MSTORE MLOAD DUP3 PUSH2 0x10E ADD MSTORE MLOAD DUP2 PUSH2 0x597 ADD MSTORE RETURN JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x2C4 JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH3 0x2C4 JUMPI JUMP INVALID PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x986BDD5 EQ PUSH2 0x1843 JUMPI POP DUP1 PUSH4 0x1D9671C3 EQ PUSH2 0x17E6 JUMPI DUP1 PUSH4 0x2CE26AEB EQ PUSH2 0x1776 JUMPI DUP1 PUSH4 0x3EE5EF1F EQ PUSH2 0x16DC JUMPI DUP1 PUSH4 0x462EBDE2 EQ PUSH2 0xB12 JUMPI DUP1 PUSH4 0x5886216F EQ PUSH2 0xAAA JUMPI DUP1 PUSH4 0x7040F173 EQ PUSH2 0xA3A JUMPI DUP1 PUSH4 0x85EDA2DE EQ PUSH2 0x96F JUMPI DUP1 PUSH4 0xACF4CE5C EQ PUSH2 0x91A JUMPI DUP1 PUSH4 0xADF38BA1 EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0xBA551177 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xBE58E91C EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xD7FF8A80 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xDEA024E4 EQ PUSH2 0x157 JUMPI PUSH4 0xFB6BD47E EQ PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x100 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x133 PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD DUP2 PUSH1 0x4 DUP3 CALLDATACOPY KECCAK256 ADDRESS SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x80 MLOAD DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD PUSH2 0x120 DUP2 SLT PUSH2 0x151 JUMPI PUSH2 0x100 DUP1 SWAP2 SLT PUSH2 0x151 JUMPI PUSH1 0x84 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP1 ISZERO SWAP3 SWAP2 PUSH1 0xC4 CALLDATALOAD DUP1 DUP6 PUSH2 0x461 JUMPI JUMPDEST CALLVALUE SUB PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1CA DUP6 PUSH2 0x1AE7 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP6 MSTORE PUSH1 0x24 CALLDATALOAD SWAP5 DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD SWAP8 DUP9 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP3 PUSH1 0xA4 CALLDATALOAD DUP5 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE4 CALLDATALOAD AND OR DUP1 PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x246 PUSH2 0x104 CALLDATALOAD SWAP2 PUSH4 0xFFFFFFFF DUP2 PUSH1 0xC0 SHR AND SWAP1 PUSH1 0xE0 SHR PUSH2 0x1AB1 JUMP JUMPDEST GT PUSH2 0x40D JUMPI KECCAK256 PUSH32 0x0 CALLVALUE SELFBALANCE LT PUSH2 0x3D6 JUMPI PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 SWAP1 PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x11 MSTORE PUSH1 0x88 SHR OR PUSH1 0x0 MSTORE PUSH1 0x37 PUSH1 0x9 CALLVALUE CREATE2 SWAP2 DUP3 AND SWAP5 DUP6 ISZERO PUSH2 0x3AC JUMPI ISZERO PUSH2 0x2FE JUMPI JUMPDEST PUSH32 0xC30E111DCC74FDDC2C3A4D98FFB97ADEC4485C0A687946BF5B22C2A99C7FF96D PUSH1 0x60 DUP7 DUP9 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 MLOAD SWAP3 SWAP4 SWAP3 PUSH1 0x20 SWAP2 PUSH1 0x64 SWAP1 DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0x388 JUMPI JUMPDEST POP ISZERO PUSH2 0x35E JUMPI SWAP1 DUP4 DUP1 DUP1 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF405907100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0x3A4 JUMPI POP PUSH1 0x1 PUSH1 0x80 MLOAD MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST DUP5 PUSH2 0x34F JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0x39E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x44 SELFBALANCE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF4840E9600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x34F5151D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x46E SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x1B7 JUMP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x493 PUSH2 0x484 CALLDATASIZE PUSH2 0x19C9 JUMP JUMPDEST SWAP6 POP SWAP4 POP POP SWAP5 SWAP6 SWAP4 POP POP PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD CALLDATALOAD SWAP2 PUSH3 0x989680 SWAP2 DUP3 ADD SWAP1 DUP2 DUP4 GT PUSH2 0x522 JUMPI PUSH1 0xA0 SWAP2 PUSH2 0x4B4 SWAP2 PUSH2 0x1A6F JUMP JUMPDEST SWAP4 ADD CALLDATALOAD DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x522 JUMPI PUSH2 0x4D2 DUP2 DUP5 DUP5 PUSH2 0x1C47 JUMP JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP4 PUSH2 0x4E9 SWAP4 MULMOD ISZERO ISZERO SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MLOAD MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x80 MLOAD REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MLOAD MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x80 MLOAD REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x100 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x133 PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD DUP2 PUSH1 0x4 DUP3 CALLDATACOPY KECCAK256 ADDRESS SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x80 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x63A CALLDATASIZE PUSH2 0x191C JUMP JUMPDEST POP SWAP8 POP POP POP POP POP SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER SUB PUSH2 0x8F0 JUMPI PUSH2 0x689 SWAP2 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 SWAP3 ADD ADD CALLDATALOAD AND PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 SWAP4 PUSH2 0x746 DUP2 PUSH2 0x71A DUP6 DUP9 DUP4 ADD SWAP6 DUP7 SWAP1 PUSH1 0x3E SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 SWAP2 DUP4 MSTORE PUSH1 0x10 SHL AND PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1B04 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 DUP5 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP7 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x151 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 SWAP1 DUP7 ADD DUP1 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x151 JUMPI PUSH1 0x5 SWAP2 DUP2 PUSH1 0x5 SHL CALLDATASIZE SUB DUP9 DUP3 ADD SGT PUSH2 0x151 JUMPI PUSH1 0x40 DUP9 DUP11 ADD CALLDATALOAD SWAP10 ADD CALLDATALOAD SWAP7 PUSH1 0x40 MLOAD DUP10 DUP2 ADD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 DUP13 PUSH1 0xC0 SHL AND DUP4 MSTORE DUP10 PUSH1 0x28 DUP4 ADD MSTORE PUSH1 0x28 DUP3 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 DUP3 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x8C1 JUMPI PUSH1 0x40 SWAP6 SWAP5 SWAP4 SWAP6 MSTORE MLOAD SWAP1 KECCAK256 SWAP3 PUSH1 0x80 MLOAD SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x87D JUMPI POP POP POP POP AND SUB PUSH2 0x853 JUMPI PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x522 JUMPI PUSH1 0x1 SWAP3 DUP4 SWAP2 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x830 DUP8 PUSH2 0x1ACB JUMP JUMPDEST DUP7 MSTORE DUP2 DUP7 ADD SWAP4 DUP5 MSTORE PUSH1 0x80 MLOAD MSTORE MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x80 MLOAD PUSH1 0x80 MLOAD RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x9BDE33900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 DUP3 SHL DUP4 ADD DUP11 ADD CALLDATALOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x80 MLOAD MSTORE DUP10 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x802 JUMP JUMPDEST SWAP1 PUSH1 0x80 MLOAD MSTORE DUP10 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x8A3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x4CA8886700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x80 MLOAD KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x9A6 PUSH2 0x18F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0xA10 JUMPI AND PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0xA05 PUSH1 0x24 CALLDATALOAD DUP3 SLOAD PUSH2 0x1ABE JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA454419900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x80 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF6 PUSH2 0x18F9 JUMP JUMPDEST AND PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0xB20 CALLDATASIZE PUSH2 0x191C JUMP JUMPDEST SWAP5 SWAP2 SWAP3 SWAP4 SWAP8 SWAP1 SWAP6 SWAP9 SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER SUB PUSH2 0x16B2 JUMPI DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 DUP2 ADD GT PUSH2 0x522 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 DUP7 ADD SWAP1 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5F DUP9 ADD DUP4 LT PUSH2 0x522 JUMPI PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 DUP1 PUSH2 0xC4E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5F DUP12 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 DUP13 ADD DUP14 PUSH2 0x1F3C JUMP JUMPDEST CALLDATALOAD AND EQ PUSH2 0xCA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5F DUP11 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 DUP12 ADD DUP13 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x80 MLOAD SWAP1 CALLDATALOAD PUSH1 0xFB SHR SWAP2 DUP1 PUSH2 0x161E JUMPI JUMPDEST DUP6 PUSH1 0x4 GT PUSH2 0x151 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP7 ADD PUSH1 0xC DUP5 MUL GT PUSH2 0x151 JUMPI PUSH2 0xCFA DUP9 DUP5 PUSH1 0xC DUP2 MUL PUSH1 0x4 DUP9 ADD DUP9 CALLDATALOAD PUSH1 0xE0 SHR PUSH2 0x1F77 JUMP JUMPDEST ISZERO PUSH2 0x147E JUMPI JUMPDEST POP POP PUSH1 0x14 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0xC DUP4 MUL DUP7 SUB ADD GT PUSH2 0x1201 JUMPI JUMPDEST POP POP POP POP DUP6 DUP6 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 ADD SWAP1 POP PUSH1 0xE0 DUP8 ADD CALLDATALOAD PUSH32 0x4000000000000000000000000000000000000000000000000000000000000000 AND ISZERO PUSH2 0x11E4 JUMPI CALLDATALOAD DUP1 PUSH1 0xF0 SHR PUSH1 0x2 DUP2 LT PUSH2 0x11BA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP13 DUP2 MSTORE PUSH1 0x10 SWAP5 SWAP1 SWAP5 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xE1F SWAP3 SWAP1 PUSH2 0xDE2 DUP2 PUSH1 0x5E DUP2 ADD PUSH2 0x71A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x80 MLOAD MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0xE03 DUP2 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x1 DUP5 SLOAD SWAP5 DUP6 DUP4 MSTORE ADD SLOAD SWAP2 DUP3 SWAP2 ADD MSTORE SWAP5 PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP1 DUP12 PUSH2 0x1DCE JUMP JUMPDEST ISZERO PUSH2 0x1190 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 JUMPDEST PUSH1 0x40 MLOAD SWAP9 PUSH2 0xE48 DUP11 PUSH2 0x1AE7 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x40 DUP10 ADD MSTORE AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH1 0x80 DUP8 ADD MSTORE DUP5 PUSH1 0xA0 DUP8 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 DUP3 DUP5 ADD ADD CALLDATALOAD PUSH1 0x80 SHR PUSH1 0xC0 DUP8 ADD MSTORE TIMESTAMP PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP5 DUP7 ADD ADD CALLDATALOAD AND OR PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x80 MLOAD POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH1 0x0 EQ PUSH2 0x118A JUMPI POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH1 0xA0 DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 DUP8 ADD GT OR PUSH2 0x8C1 JUMPI PUSH32 0xE534C62F0AFD2FA0F0FA71198E8AA2D549F24DAF2BB47DE0D5486C7CE9288CA SWAP4 PUSH2 0x1A0 SWAP4 PUSH1 0xA0 DUP8 ADD PUSH1 0x40 MSTORE DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP7 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 DUP3 DUP5 ADD ADD CALLDATALOAD DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 PUSH1 0x60 DUP9 ADD SWAP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 DUP3 DUP8 ADD ADD CALLDATALOAD AND DUP5 MSTORE PUSH1 0x80 DUP10 ADD SWAP5 ADD ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP11 MLOAD DUP6 MSTORE PUSH1 0x20 DUP12 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP12 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP12 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP12 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP12 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP12 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 SWAP8 MLOAD DUP9 DUP7 ADD MSTORE MLOAD PUSH2 0x120 DUP6 ADD MSTORE MLOAD PUSH2 0x140 DUP5 ADD MSTORE MLOAD PUSH2 0x160 DUP4 ADD MSTORE MLOAD PUSH2 0x180 DUP3 ADD MSTORE LOG1 DUP4 KECCAK256 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 PUSH32 0x0 PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x11 MSTORE PUSH1 0x88 SHR OR PUSH1 0x0 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE2 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO PUSH2 0x3AC JUMPI PUSH1 0xC0 DUP5 BALANCE SWAP2 ADD MLOAD GT SWAP3 DUP4 ISZERO PUSH2 0x1112 JUMPI JUMPDEST POP POP POP PUSH2 0x437 JUMPI PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP3 SWAP4 POP PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MLOAD MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x80 MLOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 PUSH1 0x80 MLOAD SWAP3 ADD CALLDATALOAD AND GAS STATICCALL PUSH1 0x80 MLOAD MLOAD SWAP1 ISZERO PUSH1 0x20 RETURNDATASIZE LT OR PUSH2 0x117D JUMPI LT DUP2 DUP1 DUP1 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEAB3A17400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x10D629D300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 POP CALLDATALOAD PUSH2 0xE3B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0xC DUP3 MUL DUP4 DUP2 ADD PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 AND SWAP5 SWAP3 SWAP2 PUSH1 0x14 SWAP1 DUP9 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC ADD LT PUSH2 0x1461 JUMPI JUMPDEST POP POP PUSH1 0xC DUP3 MUL DUP6 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB DUP2 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC ADD DUP2 GT PUSH2 0x522 JUMPI PUSH1 0x14 GT PUSH2 0x151 JUMPI DUP3 PUSH1 0x60 SHR EXTCODESIZE ISZERO PUSH2 0x151 JUMPI PUSH2 0x13F9 DUP15 PUSH1 0xE0 SWAP4 DUP16 DUP16 SWAP5 PUSH1 0x18 SWAP2 PUSH2 0x1360 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP12 DUP13 SWAP11 DUP12 SWAP11 PUSH32 0x462EBDE200000000000000000000000000000000000000000000000000000000 DUP13 MSTORE DUP1 CALLDATALOAD PUSH1 0x4 DUP14 ADD MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x24 DUP14 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x44 DUP14 ADD MSTORE PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH1 0x64 DUP14 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x84 DUP14 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA4 DUP14 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC4 DUP14 ADD MSTORE ADD CALLDATALOAD PUSH1 0xE4 DUP12 ADD MSTORE PUSH2 0x1E0 PUSH2 0x104 DUP12 ADD MSTORE PUSH2 0x1E4 DUP11 ADD SWAP2 PUSH2 0x201C JUMP JUMPDEST SWAP5 PUSH2 0x124 DUP9 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND PUSH2 0x144 DUP9 ADD MSTORE PUSH2 0x164 DUP8 ADD MSTORE DUP14 PUSH2 0x184 DUP8 ADD MSTORE DUP13 PUSH2 0x1A4 DUP8 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP7 DUP6 SUB ADD PUSH2 0x1C4 DUP8 ADD MSTORE PUSH1 0xC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE7 PUSH1 0x80 MLOAD SWAP12 DUP3 DUP7 MUL SWAP1 SUB ADD SWAP4 MUL ADD ADD PUSH2 0x201C JUMP JUMPDEST SUB SWAP2 PUSH1 0x80 MLOAD SWAP1 PUSH1 0x60 SHR GAS CALL DUP1 ISZERO PUSH2 0x117D JUMPI PUSH2 0x1418 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH2 0xD32 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1430 JUMPI PUSH1 0x40 MSTORE DUP9 PUSH2 0x140F JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MLOAD MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x80 MLOAD REVERT JUMPDEST PUSH1 0xC DUP5 MUL DUP8 SUB PUSH1 0x14 SUB PUSH1 0x4 ADD PUSH1 0x3 SHL DUP3 SWAP1 SHL AND AND SWAP3 POP DUP15 DUP1 PUSH2 0x1260 JUMP JUMPDEST TIMESTAMP DUP5 CALLDATALOAD PUSH1 0xE0 SHR GT DUP1 ISZERO PUSH2 0x1553 JUMPI JUMPDEST PUSH2 0x1529 JUMPI PUSH2 0x149B JUMPI JUMPDEST DUP1 PUSH2 0xD00 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1495 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x14FF JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SSTORE DUP14 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA7FD379200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF25114A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x117D JUMPI PUSH1 0x80 MLOAD SWAP2 PUSH2 0x15EC JUMPI JUMPDEST POP ISZERO PUSH2 0x148C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1616 JUMPI JUMPDEST DUP2 PUSH2 0x1607 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B04 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x151 JUMPI MLOAD CODESIZE PUSH2 0x15E5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x15FA JUMP JUMPDEST SWAP5 POP POP SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 DUP9 ADD PUSH1 0x4 GT PUSH2 0x151 JUMPI DUP9 CALLDATALOAD PUSH1 0xE0 SHR PUSH7 0x38D7EA4C68000 SWAP1 DUP1 DUP3 DUP2 MUL DIV DUP3 EQ DUP2 ISZERO OR ISZERO PUSH2 0x522 JUMPI PUSH2 0x167E DUP14 PUSH2 0x1683 SWAP4 PUSH1 0xA0 DUP16 ADD CALLDATALOAD SWAP4 MUL PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x1B45 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP11 ADD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5C DUP11 ADD SWAP5 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD25AA10600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x1713 PUSH2 0x18F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0xA10 JUMPI AND PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH1 0x24 CALLDATALOAD DUP2 SLOAD ADD DUP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x80 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x1805 PUSH2 0x17F7 CALLDATASIZE PUSH2 0x19C9 JUMP JUMPDEST SWAP6 POP SWAP4 POP POP SWAP6 SWAP4 POP POP PUSH2 0x1B7E JUMP JUMPDEST SWAP1 PUSH3 0x989680 SWAP2 DUP3 DUP5 MUL SWAP4 DUP1 DUP6 DIV DUP5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x522 JUMPI DUP3 ADD DUP1 SWAP3 GT PUSH2 0x522 JUMPI PUSH1 0x20 SWAP3 PUSH1 0xA0 PUSH2 0x183B PUSH2 0x4E9 SWAP5 PUSH1 0xC0 DUP6 ADD CALLDATALOAD PUSH2 0x1A6F JUMP JUMPDEST SWAP3 ADD CALLDATALOAD PUSH2 0x1C47 JUMP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x1851 CALLDATASIZE PUSH2 0x191C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER SUB PUSH2 0x189E JUMPI PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST DUP1 PUSH32 0xD25AA10600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 SWAP3 MSTORE REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x18F4 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x18F4 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x18F4 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x18F4 JUMPI JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP2 ADD PUSH2 0x1E0 DUP2 SLT PUSH2 0x18F4 JUMPI PUSH2 0x100 SGT PUSH2 0x18F4 JUMPI PUSH1 0x4 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x104 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x18F4 JUMPI DUP4 PUSH2 0x1974 SWAP2 PUSH1 0x4 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 PUSH2 0x124 CALLDATALOAD SWAP3 PUSH2 0x144 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x18F4 JUMPI SWAP3 PUSH2 0x164 CALLDATALOAD SWAP3 PUSH2 0x184 CALLDATALOAD SWAP3 PUSH2 0x1A4 CALLDATALOAD SWAP3 PUSH2 0x1C4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x18F4 JUMPI PUSH2 0x19C5 SWAP2 PUSH1 0x4 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP3 ADD PUSH2 0x1C0 DUP2 SLT PUSH2 0x18F4 JUMPI PUSH2 0x100 SGT PUSH2 0x18F4 JUMPI PUSH1 0x4 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH2 0x104 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x18F4 JUMPI DUP2 PUSH2 0x1A23 SWAP2 PUSH1 0x4 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 PUSH2 0x124 CALLDATALOAD SWAP3 PUSH2 0x144 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x18F4 JUMPI SWAP3 PUSH2 0x164 CALLDATALOAD SWAP3 PUSH2 0x184 CALLDATALOAD SWAP3 PUSH2 0x1A4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x18F4 JUMPI PUSH2 0x19C5 SWAP2 PUSH1 0x4 ADD PUSH2 0x18C6 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1A82 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1A82 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1A82 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1B4F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x3 GT PUSH2 0x18F4 JUMPI DUP2 CALLDATALOAD PUSH1 0xE8 SHR DUP2 PUSH1 0x7 GT PUSH2 0x18F4 JUMPI PUSH1 0x3 DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x1C3F JUMPI JUMPDEST ISZERO PUSH2 0x1C28 JUMPI POP POP PUSH1 0x0 SWAP2 JUMPDEST DUP2 PUSH1 0xB GT PUSH2 0x18F4 JUMPI PUSH1 0x7 DUP2 ADD CALLDATALOAD PUSH1 0xE0 SHR DUP3 PUSH1 0xE GT PUSH2 0x18F4 JUMPI DUP3 PUSH1 0x11 GT PUSH2 0x18F4 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF PUSH2 0x1C15 SWAP4 ADD SWAP2 PUSH1 0x11 DUP2 ADD SWAP2 PUSH1 0xB PUSH1 0xE DUP4 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP3 ADD CALLDATALOAD PUSH1 0xE8 SHR DUP2 ADD SWAP1 PUSH2 0x1D0B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1C21 JUMPI SUB SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xF4240 SWAP2 PUSH2 0x1C38 SWAP2 BASEFEE MUL PUSH2 0x1B45 JUMP JUMPDEST DIV SWAP2 PUSH2 0x1BB1 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x1BA6 JUMP JUMPDEST SWAP2 DUP2 DUP4 MUL SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP6 MULMOD SWAP4 DUP4 DUP1 DUP7 LT SWAP6 SUB SWAP5 DUP1 DUP7 SUB SWAP6 EQ PUSH2 0x1CFB JUMPI DUP5 DUP4 GT ISZERO PUSH2 0x1CDB JUMPI SWAP1 DUP3 SWAP2 MULMOD DUP2 PUSH1 0x0 SUB DUP3 AND DUP1 SWAP3 DIV PUSH1 0x2 DUP1 DUP3 PUSH1 0x3 MUL XOR DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 SWAP3 MUL SWAP1 SUB MUL SWAP4 PUSH1 0x1 DUP4 DUP1 PUSH1 0x0 SUB DIV ADD SWAP1 DUP5 DUP4 GT SWAP1 SUB MUL SWAP3 SUB DIV OR MUL SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x1CF4 JUMPI PUSH1 0x12 JUMPDEST PUSH4 0x4E487B71 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x24 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x11 PUSH2 0x1CE3 JUMP JUMPDEST POP POP SWAP1 PUSH2 0x1D08 SWAP3 POP PUSH2 0x1B45 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 DUP2 TIMESTAMP GT ISZERO PUSH1 0x0 EQ PUSH2 0x1D21 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 SWAP4 SWAP5 SWAP2 SWAP3 TIMESTAMP LT ISZERO PUSH2 0x1DC4 JUMPI DUP5 SWAP3 SWAP2 SWAP3 JUMPDEST PUSH2 0x1D48 JUMPI POP PUSH2 0x1D08 SWAP4 POP DUP3 SUB SWAP2 TIMESTAMP SWAP1 SUB MUL PUSH2 0x1B45 JUMP JUMPDEST SWAP1 PUSH1 0x3 SWAP1 DUP6 DUP3 GT PUSH2 0x18F4 JUMPI DUP3 CALLDATALOAD PUSH1 0xE8 SHR SWAP1 PUSH1 0x5 SWAP3 DUP8 DUP5 GT PUSH2 0x18F4 JUMPI DUP5 ADD CALLDATALOAD PUSH1 0xF0 SHR DUP2 ADD SWAP5 DUP6 TIMESTAMP GT ISZERO PUSH2 0x1DA5 JUMPI POP POP SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP2 SWAP4 SWAP3 ADD SWAP5 ADD SWAP4 DUP5 PUSH2 0x1D32 JUMP JUMPDEST SWAP3 POP SWAP4 PUSH2 0x1D08 SWAP7 POP DUP1 SWAP6 POP DUP5 SWAP2 SWAP4 POP SUB SWAP4 TIMESTAMP SWAP1 SUB MUL SWAP2 TIMESTAMP SUB MUL ADD PUSH2 0x1B45 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x1DE4 DUP5 PUSH2 0x1DDF DUP4 DUP6 PUSH2 0x1ABE JUMP JUMPDEST PUSH2 0x1AB1 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1A82 JUMPI DUP4 PUSH2 0x167E DUP7 PUSH2 0x1E1F SWAP4 PUSH2 0x1A6F JUMP JUMPDEST SWAP5 DUP2 SUB PUSH2 0x1E39 JUMPI POP POP POP POP PUSH1 0x2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A82 JUMPI EQ SWAP1 JUMP JUMPDEST DUP1 DUP4 SUB PUSH2 0x1E54 JUMPI JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A82 JUMPI EQ SWAP1 JUMP JUMPDEST PUSH2 0x1E5E SWAP1 DUP4 PUSH2 0x1ABE JUMP JUMPDEST SWAP1 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1A82 JUMPI PUSH2 0x1E75 SWAP3 PUSH2 0x167E SWAP2 PUSH2 0x1A6F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C21 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1E41 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP4 LT PUSH2 0x1EFD JUMPI DUP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH4 0xFFFFFFFF DUP4 PUSH1 0xC0 SHR AND SWAP3 PUSH1 0xE0 SHR SWAP5 ADD DUP5 GT PUSH2 0x1ED3 JUMPI DUP2 ADD PUSH1 0x20 ADD SWAP3 SUB SWAP1 JUMP JUMPDEST PUSH32 0x9605A01000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 JUMP JUMPDEST PUSH1 0x55 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH1 0xB SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND SWAP1 JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x1F48 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 SWAP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP3 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1F9E JUMPI POP POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xA SWAP1 DUP3 DUP3 GT PUSH2 0x18F4 JUMPI PUSH1 0xC SWAP2 DUP4 DUP4 GT PUSH2 0x18F4 JUMPI DUP8 ADD CALLDATALOAD PUSH1 0xF0 SHR ADD SWAP6 DUP1 CALLDATALOAD PUSH1 0xB0 SHR DUP7 SUB PUSH2 0x1FD1 JUMPI POP POP POP POP POP POP TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST SWAP6 SWAP3 SWAP4 SWAP5 SWAP6 TIMESTAMP DUP5 GT PUSH2 0x2010 JUMPI ADD SWAP5 SWAP4 PUSH1 0x1 ADD SWAP3 SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1F8C JUMP JUMPDEST POP POP POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F OR 0xAE SWAP2 SWAP7 DUP13 0x2D 0xE0 PUSH29 0x2C6E349FCFE48881D1D9887927D72C71D0F9E7CDBC8964736F6C6343 STOP ADDMOD OR STOP CALLER PUSH1 0xC0 CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x1F PUSH2 0x1293 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x137 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x132 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x132 JUMPI PUSH1 0x20 DUP4 ADD MLOAD SWAP3 DUP2 DUP5 AND SWAP1 DUP2 DUP6 SUB PUSH2 0x132 JUMPI PUSH1 0x40 ADD MLOAD DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x132 JUMPI DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 ISZERO PUSH2 0x10A JUMPI POP PUSH1 0xA0 MSTORE PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1145 SWAP1 DUP2 PUSH2 0x14E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2F9 ADD MSTORE DUP2 DUP2 PUSH2 0x91E ADD MSTORE DUP2 DUP2 PUSH2 0xDEA ADD MSTORE PUSH2 0xE75 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2C6 ADD MSTORE DUP2 DUP2 PUSH2 0x713 ADD MSTORE DUP2 DUP2 PUSH2 0xD8C ADD MSTORE PUSH2 0xF4E ADD MSTORE RETURN JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x205C2878 EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x839 JUMPI DUP1 PUSH4 0x2F4F21E2 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0x32D323A5 EQ PUSH2 0x788 JUMPI DUP1 PUSH4 0x5886216F EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0x78E3214F EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x97A2CB64 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xBFE91734 EQ PUSH2 0x18A JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI PUSH2 0xDC PUSH2 0x8BF JUMP JUMPDEST SWAP1 PUSH2 0xE5 PUSH2 0x1024 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x157 JUMPI POP POP DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F0 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x1E1 PUSH2 0x1E9 SWAP3 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x8E7 JUMP JUMPDEST SWAP2 CALLDATALOAD CALLER PUSH2 0x915 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI POP PUSH2 0x1E9 PUSH1 0x20 SWAP3 CALLDATALOAD CALLER PUSH2 0xE50 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x186 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x186 JUMPI DUP2 DUP6 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x186 JUMPI PUSH1 0x24 SWAP5 CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD GT PUSH2 0x3F5 JUMPI SWAP5 SWAP3 SWAP2 PUSH2 0x2AA PUSH2 0x1024 JUMP JUMPDEST DUP3 SWAP6 DUP4 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND SWAP4 JUMPDEST DUP6 DUP9 LT PUSH2 0x323 JUMPI DUP11 DUP11 DUP11 PUSH2 0x31D DUP3 CALLER PUSH32 0x0 PUSH2 0x1075 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP9 DUP4 DUP11 PUSH1 0x5 SHL DUP4 ADD ADD CALLDATALOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x3F1 JUMPI SWAP1 DUP2 DUP13 SWAP3 DUP11 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE DUP12 DUP12 KECCAK256 SLOAD SWAP1 DUP13 MLOAD SWAP5 PUSH32 0x5886216F00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP4 DUP11 DUP8 ADD MSTORE DUP6 DUP10 DUP2 DUP14 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3E7 JUMPI DUP16 SWAP1 DUP14 SWAP5 PUSH2 0x3AB JUMPI JUMPDEST PUSH1 0x1 SWAP7 POP DUP14 MSTORE MSTORE DUP2 DUP13 DUP13 KECCAK256 SSTORE SUB ADD SWAP10 ADD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST SWAP5 SWAP6 DUP1 SWAP3 SWAP4 SWAP5 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3E0 JUMPI JUMPDEST PUSH2 0x3C5 DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3DC JUMPI SWAP1 DUP15 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 MLOAD SWAP4 PUSH2 0x38F JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3BB JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x186 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x5EC JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x4AB PUSH2 0x1024 JUMP JUMPDEST DUP3 PUSH2 0x4B4 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x5CE JUMPI JUMPDEST POP ISZERO PUSH2 0x5BA JUMPI POP DUP1 SELFBALANCE LT PUSH2 0x593 JUMPI DUP4 DUP1 DUP1 DUP1 SWAP4 CALLER PUSH2 0x1388 CALL RETURNDATASIZE ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x562 JUMPI DUP3 MLOAD SWAP1 PUSH2 0x521 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 MSTORE DUP5 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x53C JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST MLOAD PUSH32 0xB12D13EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH1 0x41 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH2 0x52B JUMP JUMPDEST POP MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x5C9 SWAP3 POP CALLER SWAP1 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP2 POP EQ CODESIZE PUSH2 0x4BE JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x1F0 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0x627 PUSH2 0x1024 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x44A JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI DUP4 PUSH2 0x6C9 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP7 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x5886216F00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND SWAP1 DUP4 ADD MSTORE PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x77D JUMPI DUP1 SWAP4 PUSH2 0x74B JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x776 JUMPI JUMPDEST PUSH2 0x764 DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1F0 JUMPI POP MLOAD SWAP1 CODESIZE DUP1 PUSH2 0x743 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x75A JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI PUSH2 0x7C0 PUSH2 0x8BF JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F0 JUMPI POP SWAP3 PUSH2 0x7E8 PUSH2 0x1E9 SWAP3 PUSH1 0x20 SWAP6 CALLDATASIZE SWAP2 ADD PUSH2 0x8E7 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x915 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1E9 PUSH2 0x830 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xE50 JUMP JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI POP PUSH2 0x1E9 PUSH1 0x20 SWAP3 CALLDATALOAD CALLER PUSH2 0xD4A JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1E9 PUSH2 0x8B6 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x8E2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x8E2 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x8E2 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x8E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP4 SWAP2 SWAP3 PUSH32 0x0 SWAP2 SWAP1 DUP4 PUSH1 0x0 PUSH1 0x64 DUP3 EQ PUSH2 0xC22 JUMPI POP SWAP4 PUSH1 0x0 SWAP5 SWAP2 DUP3 DUP7 SWAP6 SWAP5 SWAP4 PUSH1 0x48 EQ PUSH2 0xB60 JUMPI DUP1 PUSH1 0xE0 EQ PUSH2 0xB27 JUMPI DUP1 PUSH2 0x100 EQ PUSH2 0xAEC JUMPI DUP1 PUSH1 0x60 EQ PUSH2 0xA16 JUMPI PUSH2 0x160 EQ PUSH2 0x9CC JUMPI DUP2 DUP6 SWAP3 PUSH1 0x4 SWAP3 PUSH32 0x9FD5A6CF00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP4 DUP7 ADD CALLDATACOPY ADD SWAP3 GAS CALL JUMPDEST ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BD SWAP2 PUSH2 0xE50 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x164 SWAP4 POP PUSH2 0x160 SWAP2 POP PUSH32 0x2B67B57000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD CALLDATACOPY DUP3 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP PUSH1 0x20 SWAP2 POP PUSH1 0x40 SWAP1 PUSH2 0x164 SWAP5 PUSH32 0x2B67B57000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x14 DUP2 PUSH1 0x50 DUP7 ADD CALLDATACOPY PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF SWAP1 DUP1 PUSH1 0x14 DUP5 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD DUP3 AND PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x18 DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0x84 DUP8 ADD MSTORE ADDRESS PUSH1 0xA4 DUP8 ADD MSTORE PUSH1 0x1C DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD AND PUSH1 0xC4 DUP6 ADD MSTORE PUSH2 0x100 PUSH1 0xE4 DUP6 ADD MSTORE DUP2 PUSH2 0x104 DUP6 ADD MSTORE DUP3 DUP1 DUP3 ADD PUSH2 0x124 DUP7 ADD CALLDATACOPY ADD PUSH2 0x144 DUP4 ADD CALLDATACOPY DUP3 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH2 0x100 PUSH2 0x104 SWAP5 PUSH32 0x8FCBAF0C00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD CALLDATACOPY GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH1 0xE0 PUSH1 0xE4 SWAP5 PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD CALLDATACOPY GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x104 SWAP5 PUSH32 0x8FCBAF0C00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 PUSH1 0x8 PUSH1 0x28 DUP4 ADD CALLDATALOAD SWAP3 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0x44 DUP10 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD PUSH1 0x64 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x84 DUP10 ADD MSTORE DUP4 PUSH1 0xFF SHR PUSH1 0x1B ADD PUSH1 0xA4 DUP10 ADD MSTORE ADD PUSH1 0xC4 DUP8 ADD CALLDATACOPY AND PUSH1 0xE4 DUP5 ADD MSTORE GAS CALL PUSH2 0x9AF JUMP JUMPDEST SWAP5 POP POP SWAP1 DUP4 DUP1 SWAP4 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE4 SWAP5 PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 PUSH1 0x24 PUSH1 0x44 DUP4 ADD CALLDATALOAD SWAP3 DUP3 DUP2 PUSH1 0x44 DUP11 ADD CALLDATACOPY PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD PUSH1 0x64 DUP10 ADD MSTORE DUP4 PUSH1 0xFF SHR PUSH1 0x1B ADD PUSH1 0x84 DUP10 ADD MSTORE ADD PUSH1 0xA4 DUP8 ADD CALLDATACOPY AND PUSH1 0xC4 DUP5 ADD MSTORE GAS CALL PUSH2 0x9AF JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD1B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x85EDA2DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP4 PUSH1 0x44 DUP2 DUP9 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0xE45 JUMPI DUP6 SWAP4 PUSH2 0xE10 JUMPI JUMPDEST POP PUSH1 0x40 PUSH2 0xE0E SWAP4 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 DUP3 DUP2 SLOAD SUB SWAP1 SSTORE PUSH32 0x0 PUSH2 0x1075 JUMP JUMPDEST JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE3D JUMPI JUMPDEST DUP2 PUSH2 0xE2B PUSH1 0x20 SWAP4 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5EC JUMPI SWAP2 MLOAD SWAP2 PUSH1 0x40 PUSH2 0xDD1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0xFFA JUMPI PUSH1 0x64 SWAP4 PUSH32 0x0 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP5 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP3 DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0xFD7 JUMPI JUMPDEST POP ISZERO PUSH2 0xFAD JUMPI PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE MLOAD PUSH32 0x3EE5EF1F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xF83 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xFA6 JUMPI JUMPDEST PUSH2 0xF9A DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8E2 JUMPI MLOAD SWAP1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF405907100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0xFF2 JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0xEDF JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x1045 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0x10EC JUMPI JUMPDEST POP ISZERO PUSH2 0x10C2 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xFB7F507900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0x1107 JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0x10BA JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0x1101 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x2A GASPRICE DUP4 0xB3 PUSH31 0x5067BE598C508F5E5724E322070B2FBDD787200276B277EAF18C64736F6C63 NUMBER STOP ADDMOD OR STOP CALLER PUSH1 0xE0 CALLVALUE PUSH2 0xED JUMPI PUSH1 0x1F PUSH2 0xB45 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xF2 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xED JUMPI MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xED JUMPI CALLER PUSH1 0xA0 MSTORE PUSH1 0x80 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x20 MSTORE ADDRESS PUSH1 0x11 MSTORE PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 ADDRESS PUSH1 0x88 SHR OR PUSH1 0x0 MSTORE PUSH1 0x37 PUSH1 0x9 KECCAK256 PUSH1 0xC0 MSTORE PUSH1 0x40 MLOAD PUSH2 0xA3C SWAP1 DUP2 PUSH2 0x109 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH1 0xA8 ADD MSTORE PUSH2 0x366 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x161 ADD MSTORE DUP2 DUP2 PUSH2 0x330 ADD MSTORE DUP2 DUP2 PUSH2 0x4EE ADD MSTORE PUSH2 0x6C0 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x137 ADD MSTORE DUP2 DUP2 PUSH2 0x306 ADD MSTORE DUP2 DUP2 PUSH2 0x47F ADD MSTORE PUSH2 0x696 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH1 0xE0 DUP5 CALLDATALOAD DUP2 SHR SWAP3 DUP4 PUSH4 0xAF97558 EQ PUSH2 0x5A1 JUMPI POP DUP3 PUSH4 0x23305703 EQ PUSH2 0x512 JUMPI DUP3 PUSH4 0x2DD31000 EQ PUSH2 0x4A2 JUMPI DUP3 PUSH4 0x34862B6A EQ PUSH2 0x448 JUMPI DUP3 PUSH4 0x4649088B EQ PUSH2 0x262 JUMPI POP DUP2 PUSH4 0x90D3252F EQ PUSH2 0xCF JUMPI POP PUSH4 0xF56CD69C EQ PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xCB JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xCB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xCB JUMPI PUSH2 0x100 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x25E JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x64 CALLDATALOAD AND SWAP2 DUP3 CALLER SUB PUSH2 0x236 JUMPI PUSH1 0x55 PUSH1 0xB DUP6 SWAP3 DUP5 MLOAD DUP2 DUP11 DUP3 CALLDATACOPY KECCAK256 DUP5 MLOAD SWAP1 PUSH32 0x0 DUP7 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x20E JUMPI PUSH2 0x19A PUSH1 0xE4 CALLDATALOAD PUSH2 0x816 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1E6 JUMPI POP SWAP1 PUSH2 0x1B3 SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD AND PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0xC4 CALLDATALOAD CALLER PUSH2 0x929 JUMP JUMPDEST PUSH32 0x6E3BE9294E58D10B9C8053CFD5E09871B67E442FE394D6B0870D336B9DF984A9 DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST DUP5 SWAP1 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP5 SWAP1 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP3 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP6 SWAP2 CALLVALUE PUSH2 0x25E JUMPI PUSH2 0x140 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x25E JUMPI DUP4 CALLDATALOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP7 AND SWAP3 DUP4 DUP8 SUB PUSH2 0x444 JUMPI PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x100 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC CALLDATASIZE ADD SLT PUSH2 0x440 JUMPI DUP2 PUSH1 0xA4 CALLDATALOAD AND CALLER SUB PUSH2 0x418 JUMPI PUSH1 0xB PUSH1 0x55 SWAP2 DUP9 MLOAD DUP2 PUSH1 0x44 DUP3 CALLDATACOPY KECCAK256 DUP9 MLOAD SWAP1 PUSH32 0x0 DUP11 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x3F0 JUMPI PUSH2 0x124 CALLDATALOAD SWAP1 SHR PUSH32 0x0 ADD TIMESTAMP LT PUSH2 0x3C9 JUMPI POP PUSH2 0x3BB DUP2 PUSH32 0xC4474C2790E13695F6D2B6F1D8E164290B55370F87A542FD7711ABE0A1BF40AC SWAP6 SWAP7 CALLER SWAP1 PUSH2 0x8F7 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP DUP4 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP8 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0xCB JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xCB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0xCB JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xCB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST DUP4 DUP6 SWAP2 CALLVALUE PUSH2 0x25E JUMPI PUSH2 0x523 CALLDATASIZE PUSH2 0x606 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 DUP6 ADD CALLDATALOAD AND CALLER SUB PUSH2 0x236 JUMPI PUSH4 0xFFFFFFFF DUP2 DUP6 ADD CALLDATALOAD DUP1 SWAP3 SHR SWAP2 PUSH1 0x80 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x575 JUMPI TIMESTAMP LT PUSH2 0x1E6 JUMPI POP SWAP1 PUSH2 0x572 SWAP2 PUSH2 0x66A JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x24 DUP6 PUSH1 0x11 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP6 SWAP2 CALLVALUE PUSH2 0x25E JUMPI PUSH2 0x5B1 CALLDATASIZE PUSH2 0x606 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH4 0xFFFFFFFF DUP2 DUP6 ADD CALLDATALOAD DUP1 SWAP3 SHR SWAP2 PUSH1 0xA0 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x575 JUMPI TIMESTAMP LT PUSH2 0x5DF JUMPI POP SWAP1 PUSH2 0x572 SWAP2 PUSH2 0x66A JUMP JUMPDEST DUP1 PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP7 SWAP3 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x120 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP4 ADD SLT PUSH2 0x665 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC PUSH1 0x4 CALLDATALOAD SWAP4 ADD SLT PUSH2 0x665 JUMPI PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x678 PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH2 0x816 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x40 SWAP1 PUSH1 0x55 PUSH1 0xB DUP4 MLOAD PUSH2 0x100 SWAP1 DUP2 DUP6 DUP3 CALLDATACOPY KECCAK256 DUP5 MLOAD SWAP1 PUSH32 0x0 DUP7 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND ADDRESS SUB PUSH2 0x7C3 JUMPI PUSH1 0x0 SWAP1 DUP5 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x20 DUP5 ADD CALLDATALOAD SUB PUSH2 0x79A JUMPI PUSH1 0xC0 DUP4 PUSH1 0x20 SWAP6 SWAP4 DUP4 PUSH2 0x77D SWAP5 PUSH1 0x80 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP11 SWAP9 ADD CALLDATALOAD AND SWAP1 DUP7 DUP5 ADD CALLDATALOAD AND SWAP1 DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x784 JUMPI POP DUP2 DUP1 DUP1 SWAP3 PUSH1 0xA0 DUP7 ADD CALLDATALOAD SWAP1 GAS CALL POP PUSH2 0x773 PUSH2 0x85F JUMP JUMPDEST POP JUMPDEST ADD CALLDATALOAD CALLER PUSH2 0x929 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST SWAP1 PUSH2 0x795 SWAP3 POP PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP2 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x4 DUP5 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 DUP4 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH1 0xE0 SHR SWAP2 PUSH1 0xC0 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x830 JUMPI SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x8F2 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 RETURNDATASIZE DUP3 DUP2 GT PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP5 ADD SWAP1 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x8C3 JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 DUP3 PUSH2 0x920 JUMPI PUSH2 0x91E SWAP3 POP PUSH2 0x929 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x91E SWAP3 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x93A PUSH2 0x85F JUMP JUMPDEST POP ISZERO PUSH2 0x942 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8A0332D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0x9E3 JUMPI JUMPDEST POP ISZERO PUSH2 0x9B9 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xFB7F507900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0x9FE JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0x9B1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0x9F8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0x4D ADD SWAP8 JUMPI 0xEF 0x2A 0xF9 LOG0 0xC9 0x24 GASLIMIT PUSH17 0xF1AC8B0712F3879D83227AA766537895B8 PREVRANDAO PUSH2 0x6473 PUSH16 0x6C6343000817003360E0346100ED5760 0x1F PUSH2 0xE0A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xF2 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xED JUMPI MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xED JUMPI CALLER PUSH1 0xA0 MSTORE PUSH1 0x80 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x20 MSTORE ADDRESS PUSH1 0x11 MSTORE PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 ADDRESS PUSH1 0x88 SHR OR PUSH1 0x0 MSTORE PUSH1 0x37 PUSH1 0x9 KECCAK256 PUSH1 0xC0 MSTORE PUSH1 0x40 MLOAD PUSH2 0xD01 SWAP1 DUP2 PUSH2 0x109 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH1 0xBE ADD MSTORE PUSH2 0x4F9 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x66E ADD MSTORE DUP2 DUP2 PUSH2 0x9CD ADD MSTORE DUP2 DUP2 PUSH2 0xA7E ADD MSTORE PUSH2 0xB04 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x5FF ADD MSTORE DUP2 DUP2 PUSH2 0x9A2 ADD MSTORE DUP2 DUP2 PUSH2 0xA53 ADD MSTORE PUSH2 0xAD9 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH1 0xE0 DUP5 CALLDATALOAD DUP2 SHR SWAP3 DUP4 PUSH4 0xAF97558 EQ PUSH2 0x779 JUMPI POP DUP3 PUSH4 0x23305703 EQ PUSH2 0x692 JUMPI DUP3 PUSH4 0x2DD31000 EQ PUSH2 0x622 JUMPI DUP3 PUSH4 0x34862B6A EQ PUSH2 0x5C8 JUMPI DUP3 PUSH4 0x4649088B EQ PUSH2 0x45A JUMPI DUP3 PUSH4 0x6C10C0C8 EQ PUSH2 0x2A4 JUMPI DUP3 PUSH4 0x90D3252F EQ PUSH2 0x1F5 JUMPI DUP3 PUSH4 0xDAFF233E EQ PUSH2 0xE5 JUMPI POP POP PUSH4 0xF56CD69C EQ PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 POP CALLVALUE PUSH2 0x1F1 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F1 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE4 CALLDATALOAD DUP1 SWAP3 SHR SWAP2 PUSH1 0x60 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1C5 JUMPI TIMESTAMP LT PUSH2 0x19F JUMPI DUP3 PUSH2 0x141 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x16C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA4 CALLDATALOAD SWAP1 DUP1 PUSH1 0x44 CALLDATALOAD AND SWAP1 PUSH1 0x84 CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x178 PUSH1 0xC4 CALLDATALOAD CALLER PUSH2 0xBCE JUMP JUMPDEST PUSH32 0x6E3BE9294E58D10B9C8053CFD5E09871B67E442FE394D6B0870D336B9DF984A9 DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x2A0 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2A0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x64 CALLDATALOAD AND CALLER SUB PUSH2 0x27A JUMPI PUSH2 0x254 PUSH1 0xE4 CALLDATALOAD PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x19F JUMPI DUP4 PUSH2 0x16C DUP5 PUSH2 0x267 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 DUP1 PUSH1 0x44 CALLDATALOAD AND SWAP1 PUSH1 0x84 CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x2A0 JUMPI PUSH2 0x140 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2A0 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 AND DUP3 SUB PUSH2 0x456 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC CALLDATASIZE ADD SLT PUSH2 0x456 JUMPI DUP3 PUSH1 0xA4 CALLDATALOAD AND CALLER SUB PUSH2 0x42F JUMPI PUSH2 0x124 CALLDATALOAD PUSH2 0x33F DUP2 PUSH2 0x95F JUMP JUMPDEST TIMESTAMP LT PUSH2 0x407 JUMPI PUSH2 0x34E SWAP1 PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x35D PUSH2 0x976 JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x64 CALLDATALOAD SUB PUSH2 0x3B9 JUMPI POP SWAP2 PUSH2 0x3A4 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0xE4 CALLDATALOAD SWAP2 PUSH1 0xC4 CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0x104 CALLDATALOAD CALLER PUSH2 0xBCE JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP6 SWAP2 CALLVALUE PUSH2 0x2A0 JUMPI PUSH2 0x140 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2A0 JUMPI DUP4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x5C4 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC CALLDATASIZE ADD SLT PUSH2 0x456 JUMPI PUSH1 0xA4 CALLDATALOAD AND CALLER SUB PUSH2 0x59C JUMPI PUSH2 0x4F1 PUSH2 0x976 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP1 SHR PUSH32 0x0 ADD TIMESTAMP LT PUSH2 0x574 JUMPI PUSH32 0xC4474C2790E13695F6D2B6F1D8E164290B55370F87A542FD7711ABE0A1BF40AC SWAP4 SWAP5 POP DUP2 ISZERO PUSH1 0x0 EQ PUSH2 0x564 JUMPI PUSH2 0x556 DUP2 CALLER PUSH2 0xBCE JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0x56F DUP2 CALLER DUP5 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST DUP5 DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP5 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0xE1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0xE1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP3 SWAP2 POP CALLVALUE PUSH2 0x1F1 JUMPI PUSH2 0x6A4 CALLDATASIZE PUSH2 0x8B2 JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x60 DUP6 ADD CALLDATALOAD AND CALLER SUB PUSH2 0x751 JUMPI DUP4 ADD CALLDATALOAD PUSH2 0x6D6 DUP2 PUSH2 0x95F JUMP JUMPDEST TIMESTAMP LT PUSH2 0x407 JUMPI PUSH2 0x6E5 SWAP1 PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x6F5 DUP4 PUSH2 0xAAE JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x20 DUP5 ADD CALLDATALOAD SUB PUSH2 0x3B9 JUMPI POP SWAP2 PUSH2 0x3B1 PUSH1 0xC0 DUP4 PUSH2 0x749 PUSH1 0x20 SWAP7 PUSH1 0xA0 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP10 SWAP8 ADD CALLDATALOAD SWAP1 CALLER SWAP1 PUSH1 0x80 DUP6 ADD CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST ADD CALLDATALOAD CALLER PUSH2 0xBCE JUMP JUMPDEST POP DUP4 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP4 SWAP3 POP SWAP1 CALLVALUE PUSH2 0x5C4 JUMPI PUSH2 0x78B CALLDATASIZE PUSH2 0x8B2 JUMP JUMPDEST SWAP3 SWAP1 SWAP5 DUP2 DUP5 ADD CALLDATALOAD DUP1 SWAP3 SHR PUSH4 0xFFFFFFFF DUP4 PUSH1 0x20 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x886 JUMPI TIMESTAMP LT PUSH2 0x85F JUMPI POP PUSH2 0x7B8 SWAP1 PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x838 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH2 0x7DE DUP4 PUSH2 0xAAE JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x20 DUP5 ADD CALLDATALOAD SUB PUSH2 0x3B9 JUMPI POP SWAP2 PUSH2 0x3B1 PUSH1 0xC0 DUP4 PUSH2 0x749 PUSH1 0x20 SWAP7 PUSH1 0xA0 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP10 SWAP8 ADD CALLDATALOAD SWAP1 DUP1 PUSH1 0x60 DUP6 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP6 ADD CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST DUP3 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP9 PUSH1 0x11 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x120 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP4 ADD SLT PUSH2 0x911 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC PUSH1 0x4 CALLDATALOAD SWAP4 ADD SLT PUSH2 0x911 JUMPI PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH1 0xE0 SHR SWAP2 PUSH1 0x40 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x930 JUMPI SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH1 0xE0 SHR SWAP2 AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x930 JUMPI SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x55 PUSH1 0xB PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 DUP2 PUSH1 0x44 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x0 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x9FD JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x55 PUSH1 0xB PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 DUP2 PUSH1 0x4 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x0 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x9FD JUMPI JUMP JUMPDEST PUSH1 0x55 PUSH1 0xB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x40 MLOAD PUSH2 0x100 DUP1 SWAP3 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x0 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x9FD JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0xBAB JUMPI JUMPDEST POP ISZERO PUSH2 0xB81 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xFB7F507900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0xBC6 JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0xB79 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 SWAP5 DUP2 SWAP5 GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0xCC5 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 RETURNDATASIZE DUP3 DUP2 GT PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP5 ADD SWAP1 DUP2 GT DUP5 DUP3 LT OR PUSH2 0xC6B JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0xC41 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8A0332D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP PUSH2 0xC3A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xE9 DUP4 BLOCKHASH 0xA5 SSTORE PUSH3 0xD97FA0 STATICCALL SELFBALANCE SWAP14 PUSH17 0x183FFD893BC618F5D3B0D8AAA9F73C56B7 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"243087:754:0:-:0;;;;-1:-1:-1;;;;;243087:754:0;;;;;;;;;-1:-1:-1;;243087:754:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;193728:42;;243087:754;193728:42;243087:754;;219501:34;;;;;;;;;;;;;;;;;;219513:4;243087:754;;-1:-1:-1;;;;;243087:754:0;;;;;;;;;;;;;;-1:-1:-1;;219501:34:0;;;243087:754;219501:34;;-1:-1:-1;219501:34:0;;;;;243087:754;;;219490:45;243087:754;230912:27;211822:42;;243087:754;;243524:29;;;;;;;;;;;;;;243087:754;243524:29;;;;;;243087:754;;;;;;243524:29;;;;;;;;;;243488:66;;243087:754;;243488:66;;243087:754;;243600:29;;;;;;;;;;;;;;;;243087:754;243600:29;;;;;;;243087:754;;;243600:29;;;;;;;;;;243564:66;;;243087:754;;243564:66;;243768:64;243667;243087:754;;;;35891:488;35778:607;35891:488;;;;;;;;;;;;;;35778:607;;243667:64;243640:91;;;;;243087:754;;;35891:488;35778:607;35891:488;;;;;;;;;;;;;;35778:607;;243768:64;243741:91;;;;;243087:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;211822:42;243087:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;243600:29;243087:754;;;;;;;;;;243600:29;-1:-1:-1;;;243087:754:0;;;;;;;;243524:29;243087:754;;;;;;;;;219501:34;243087:754;;;;;;;;;219501:34;243087:754;;;-1:-1:-1;243087:754:0;;;;;-1:-1:-1;243087:754:0;;-1:-1:-1;243087:754:0;;;;;-1:-1:-1;;;;;243087:754:0;;;;;;:::o;:::-;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":6393,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":6342,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_struct_Order_calldatat_bytes_calldatat_bytes32t_addresst_uint256t_uint256t_bytes_calldata":{"entryPoint":6601,"id":null,"parameterSlots":1,"returnSlots":9},"abi_decode_struct_Order_calldatat_bytes_calldatat_bytes32t_addresst_uint256t_uint256t_uint256t_bytes_calldata":{"entryPoint":6428,"id":null,"parameterSlots":1,"returnSlots":10},"abi_encode_bytes_calldata":{"entryPoint":8220,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_bytes32_uint240":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_bytes_calldata":{"entryPoint":7996,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":6833,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":6767,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":6846,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":6916,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_24800":{"entryPoint":6859,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_24801":{"entryPoint":6887,"id":null,"parameterSlots":1,"returnSlots":0},"fun_computeAddress":{"entryPoint":7942,"id":3451,"parameterSlots":3,"returnSlots":1},"fun_get":{"entryPoint":7812,"id":6570,"parameterSlots":2,"returnSlots":2},"fun_getAuctionBump":{"entryPoint":7435,"id":7596,"parameterSlots":5,"returnSlots":1},"fun_getRateBump":{"entryPoint":7038,"id":7468,"parameterSlots":2,"returnSlots":1},"fun_isValidPartialFill":{"entryPoint":7630,"id":10251,"parameterSlots":5,"returnSlots":1},"fun_isWhitelisted":{"entryPoint":8055,"id":9570,"parameterSlots":5,"returnSlots":1},"fun_mulDiv":{"entryPoint":7239,"id":4669,"parameterSlots":3,"returnSlots":1},"wrapping_div_uint256":{"entryPoint":6981,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"7092":[{"length":32,"start":2880},{"length":32,"start":6258}],"8274":[{"length":32,"start":1626}],"8827":[{"length":32,"start":2495},{"length":32,"start":5932},{"length":32,"start":6082}],"9461":[{"length":32,"start":5555}],"9763":[{"length":32,"start":2694},{"length":32,"start":4244}],"9766":[{"length":32,"start":590},{"length":32,"start":1544}],"9768":[{"length":32,"start":270}],"9770":[{"length":32,"start":1431}]},"linkReferences":{},"object":"60a080604052600436101561001357600080fd5b60006080526080513560e01c9081630986bdd514611843575080631d9671c3146117e65780632ce26aeb146117765780633ee5ef1f146116dc578063462ebde214610b125780635886216f14610aaa5780637040f17314610a3a57806385eda2de1461096f578063acf4ce5c1461091a578063adf38ba11461062c578063ba551177146105bc578063be58e91c14610553578063d7ff8a8014610473578063dea024e4146101575763fb6bd47e146100ca57600080fd5b3461015157610100807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101515761013360209160405181600482372030907f000000000000000000000000000000000000000000000000000000000000000090611f06565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b60805180fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601610120811261015157610100809112610151576084359073ffffffffffffffffffffffffffffffffffffffff8083168015929160c4358085610461575b340361043757604051936101ca85611ae7565b600435855260243594856020820152604435604082015260643597886060830152608082015260a081019260a435845260c08201524260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff60e43516178060e0830152610246610104359163ffffffff8160c01c169060e01c611ab1565b1161040d57207f00000000000000000000000000000000000000000000000000000000000000003447106103d657763d602d80600a3d3981f3363d3d373d3d3d363d73000000906e5af43d82803e903d91602b57fd5bf36020528060115260881c176000526037600934f59182169485156103ac57156102fe575b7fc30e111dcc74fddc2c3a4d98ffb97adec4485c0a687946bf5b22c2a99c7ff96d606086888760405192835260208301526040820152a160805180f35b516040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201526024810192909252604482015260805192939260209160649082855af19081610388575b501561035e57908380806102c1565b60046040517ff4059071000000000000000000000000000000000000000000000000000000008152fd5b90503d156103a4575060016080515114601f3d11165b8461034f565b3b151561039e565b60046040517fb06ebf3d000000000000000000000000000000000000000000000000000000008152fd5b604447604051907fcf4791810000000000000000000000000000000000000000000000000000000082526004820152346024820152fd5b60046040517ff4840e96000000000000000000000000000000000000000000000000000000008152fd5b60046040517f34f5151d000000000000000000000000000000000000000000000000000000008152fd5b61046e9060a43590611ab1565b6101b7565b3461015157610493610484366119c9565b95509350509495935050611b7e565b60c08301359162989680918201908183116105225760a0916104b491611a6f565b930135818102918183041490151715610522576104d2818484611c47565b9080156104f1576020936104e99309151590611ab1565b604051908152f35b7f4e487b71000000000000000000000000000000000000000000000000000000006080515260126004526024608051fd5b7f4e487b71000000000000000000000000000000000000000000000000000000006080515260116004526024608051fd5b3461015157610100807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101515761013360209160405181600482372030907f000000000000000000000000000000000000000000000000000000000000000090611f06565b34610151576080517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015157602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101515761063a3661191c565b50975050505050919073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036108f05761068991611e84565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff607dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff92839201013516604051926020936107468161071a85888301958690603e927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000091835260101b1660208201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282611b04565b5190209084357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1863603018112156101515767ffffffffffffffff939086018035858111610151576005918160051b360388820113610151576040888a013599013596604051898101917fffffffffffffffff0000000000000000000000000000000000000000000000008c60c01b168352896028830152602882526060820190828210908211176108c1576040959493955251902092608051925b82841061087d5750505050160361085357600184018094116105225760019283916040519561083087611acb565b865281860193845260805152526040608051209251835551910155608051608051f35b60046040517f09bde339000000000000000000000000000000000000000000000000000000008152fd5b92939192909184821b83018a013590818110156108ad5760805152895260016040608051205b9401929190610802565b9060805152895260016040608051206108a3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60046040517f4ca88867000000000000000000000000000000000000000000000000000000008152fd5b346101515760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015157600435608051526001602052604080608051206001815491015482519182526020820152f35b346101515760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610151576109a66118f9565b73ffffffffffffffffffffffffffffffffffffffff90817f0000000000000000000000000000000000000000000000000000000000000000163303610a105716608051526080516020526020604060805120610a056024358254611abe565b809155604051908152f35b60046040517fa4544199000000000000000000000000000000000000000000000000000000008152fd5b34610151576080517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015157602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101515760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101515773ffffffffffffffffffffffffffffffffffffffff610af66118f9565b1660805152608051602052602060406080512054604051908152f35b3461015157610b203661191c565b94919293979095989673ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036116b257857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60810111610522577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60860190877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5f88018310610522577f010000000000000000000000000000000000000000000000000000000000000080610c4e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5f8b017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608c018d611f3c565b351614610ca07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5f8a017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608b018c611f3c565b608051903560fb1c918061161e575b85600411610151577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8601600c84021161015157610cfa8884600c810260048801883560e01c611f77565b1561147e575b505060147ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc600c830286030111611201575b505050508585017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6001905060e08701357f400000000000000000000000000000000000000000000000000000000000000016156111e457358060f01c600281106111ba5760408051602081018c815260109490941b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001691810191909152610e1f9290610de281605e810161071a565b519020608051526001602052604060805120906020604051610e0381611acb565b6001845494858352015491829101529460a08a0135908b611dce565b156111905773ffffffffffffffffffffffffffffffffffffffff915b60405198610e488a611ae7565b8952602089015260208601356040890152166060870152606084013560808701528460a08701527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0828401013560801c60c08701524260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08486010135161760e087015260408401356080515073ffffffffffffffffffffffffffffffffffffffff81161560001461118a57506020840135905b604051938460a081011067ffffffffffffffff60a0870111176108c1577f0e534c62f0afd2fa0f0fa71198e8aa2d549f24daf2bb47de0d5486c7ce9288ca936101a09360a08701604052865260208601928352604086017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0828401013581527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060608801926fffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0828701013516845260808901940101358352604051938a51855260208b0151602086015260408b0151604086015260608b0151606086015260808b0151608086015260a08b015160a086015260c08b015160c086015260e08b015160e086015261010097518886015251610120850152516101408401525161016083015251610180820152a18320763d602d80600a3d3981f3363d3d373d3d3d363d730000007f00000000000000000000000000000000000000000000000000000000000000006e5af43d82803e903d91602b57fd5bf36020528060115260881c17600052603760096000f59273ffffffffffffffffffffffffffffffffffffffff8416156103ac5760c0843191015111928315611112575b5050506104375760805180f35b60209293507f70a08231000000000000000000000000000000000000000000000000000000006080515260045260246080519173ffffffffffffffffffffffffffffffffffffffff6060608051920135165afa60805151901560203d101761117d5710818080611105565b6040513d608051823e3d90fd5b90610f1b565b60046040517feab3a174000000000000000000000000000000000000000000000000000000008152fd5b60046040517f10d629d3000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff925035610e3b565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000600c82028381016004013582811694929160149088037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0110611461575b5050600c820285037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb8101907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01811161052257601411610151578260601c3b15610151576113f98e60e0938f8f946018916113606040519c8d9b8c9a8b9a7f462ebde2000000000000000000000000000000000000000000000000000000008c52803560048d0152602081013560248d0152604081013560448d0152606081013560648d0152608081013560848d015260a081013560a48d015260c081013560c48d0152013560e48b01526101e06101048b01526101e48a019161201c565b9461012488015273ffffffffffffffffffffffffffffffffffffffff8d166101448801526101648701528d6101848701528c6101a48701527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc868503016101c4870152600c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe76080519b8286029003019302010161201c565b03916080519060601c5af1801561117d57611418575b80808080610d32565b67ffffffffffffffff8111611430576040528861140f565b7f4e487b71000000000000000000000000000000000000000000000000000000006080515260416004526024608051fd5b600c8402870360140360040160031b82901b161692508e80611260565b42843560e01c118015611553575b6115295761149b575b80610d00565b80156114955773ffffffffffffffffffffffffffffffffffffffff871660805152608051602052604060805120548181106114ff5773ffffffffffffffffffffffffffffffffffffffff88166080515260805160205203604060805120558d611495565b60046040517fa7fd3792000000000000000000000000000000000000000000000000000000008152fd5b60046040517ff25114a6000000000000000000000000000000000000000000000000000000008152fd5b506040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8916600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561117d57608051916115ec575b501561148c565b90506020813d602011611616575b8161160760209383611b04565b810103126101515751386115e5565b3d91506115fa565b94505090507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60880160041161015157883560e01c66038d7ea4c680009080828102048214811517156105225761167e8d6116839360a08f01359302611a6f565b611b45565b9060048a01917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5c8a0194610caf565b60046040517fd25aa106000000000000000000000000000000000000000000000000000000008152fd5b346101515760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610151576117136118f9565b73ffffffffffffffffffffffffffffffffffffffff90817f0000000000000000000000000000000000000000000000000000000000000000163303610a105716608051526080516020526020604060805120602435815401809155604051908152f35b34610151576080517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015157602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610151576118056117f7366119c9565b955093505095935050611b7e565b906298968091828402938085048414901517156105225782018092116105225760209260a061183b6104e99460c0850135611a6f565b920135611c47565b34610151576118513661191c565b5050505050505050505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361189e5760805180f35b807fd25aa1060000000000000000000000000000000000000000000000000000000060049252fd5b9181601f840112156118f45782359167ffffffffffffffff83116118f457602083818601950101116118f457565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036118f457565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc81016101e081126118f457610100136118f45760049167ffffffffffffffff610104358181116118f45783611974916004016118c6565b9390939261012435926101443573ffffffffffffffffffffffffffffffffffffffff811681036118f45792610164359261018435926101a435926101c4359182116118f4576119c5916004016118c6565b9091565b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82016101c081126118f457610100136118f45760049167ffffffffffffffff90610104358281116118f45781611a23916004016118c6565b9390939261012435926101443573ffffffffffffffffffffffffffffffffffffffff811681036118f45792610164359261018435926101a4359182116118f4576119c5916004016118c6565b81810292918115918404141715611a8257565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908201809211611a8257565b91908203918211611a8257565b6040810190811067ffffffffffffffff8211176108c157604052565b610100810190811067ffffffffffffffff8211176108c157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176108c157604052565b8115611b4f570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90806003116118f457813560e81c816007116118f457600383013560e01c9080158015611c3f575b15611c285750506000915b81600b116118f457600781013560e01c82600e116118f457826011116118f4577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef611c159301916011810191600b600e83013560e81c92013560e81c810190611d0b565b81811115611c21570390565b5050600090565b620f424091611c38914802611b45565b0491611bb1565b508115611ba6565b91818302917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81850993838086109503948086039514611cfb5784831115611cdb579082910981600003821680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b82611cf45760125b634e487b716000526020526024601cfd5b6011611ce3565b505090611d089250611b45565b90565b9091939281421115600014611d21575050505090565b8293949192421015611dc457849291925b611d485750611d08935082039142900302611b45565b906003908582116118f457823560e81c906005928784116118f45784013560f01c81019485421115611da5575050907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb9193920194019384611d32565b925093611d089650809550849193500393429003029142030201611b45565b5050505050600090565b929190611de484611ddf8385611abe565b611ab1565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91828101908111611a82578361167e86611e1f93611a6f565b948103611e39575050505060028101809111611a82571490565b808303611e54575b5050505060018101809111611a82571490565b611e5e9083611abe565b908101908111611a8257611e759261167e91611a6f565b8114611c215738808080611e41565b91909160208310611efd578035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe063ffffffff8360c01c169260e01c94018411611ed3578101602001920390565b7f9605a0100000000000000000000000000000000000000000000000000000000060005260046000fd5b50600091508190565b60559173ffffffffffffffffffffffffffffffffffffffff93600b92604051926040840152602083015281520160ff8153201690565b90821015611f48570190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9192909369ffffffffffffffffffff16926000925b828410611f9e57505050505050600090565b600a908282116118f457600c918383116118f45787013560f01c0195803560b01c8603611fd15750505050505042101590565b95929394954284116120105701949360010192917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff49190910190611f8c565b50505050505050600090565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601376000858286010152011601019056fea26469706673582212202f17ae91968c2de07c002c6e349fcfe48881d1d9887927d72c71d0f9e7cdbc8964736f6c63430008170033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x986BDD5 EQ PUSH2 0x1843 JUMPI POP DUP1 PUSH4 0x1D9671C3 EQ PUSH2 0x17E6 JUMPI DUP1 PUSH4 0x2CE26AEB EQ PUSH2 0x1776 JUMPI DUP1 PUSH4 0x3EE5EF1F EQ PUSH2 0x16DC JUMPI DUP1 PUSH4 0x462EBDE2 EQ PUSH2 0xB12 JUMPI DUP1 PUSH4 0x5886216F EQ PUSH2 0xAAA JUMPI DUP1 PUSH4 0x7040F173 EQ PUSH2 0xA3A JUMPI DUP1 PUSH4 0x85EDA2DE EQ PUSH2 0x96F JUMPI DUP1 PUSH4 0xACF4CE5C EQ PUSH2 0x91A JUMPI DUP1 PUSH4 0xADF38BA1 EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0xBA551177 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xBE58E91C EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xD7FF8A80 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xDEA024E4 EQ PUSH2 0x157 JUMPI PUSH4 0xFB6BD47E EQ PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x100 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x133 PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD DUP2 PUSH1 0x4 DUP3 CALLDATACOPY KECCAK256 ADDRESS SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x80 MLOAD DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD PUSH2 0x120 DUP2 SLT PUSH2 0x151 JUMPI PUSH2 0x100 DUP1 SWAP2 SLT PUSH2 0x151 JUMPI PUSH1 0x84 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP1 ISZERO SWAP3 SWAP2 PUSH1 0xC4 CALLDATALOAD DUP1 DUP6 PUSH2 0x461 JUMPI JUMPDEST CALLVALUE SUB PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1CA DUP6 PUSH2 0x1AE7 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP6 MSTORE PUSH1 0x24 CALLDATALOAD SWAP5 DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD SWAP8 DUP9 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP3 PUSH1 0xA4 CALLDATALOAD DUP5 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE4 CALLDATALOAD AND OR DUP1 PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x246 PUSH2 0x104 CALLDATALOAD SWAP2 PUSH4 0xFFFFFFFF DUP2 PUSH1 0xC0 SHR AND SWAP1 PUSH1 0xE0 SHR PUSH2 0x1AB1 JUMP JUMPDEST GT PUSH2 0x40D JUMPI KECCAK256 PUSH32 0x0 CALLVALUE SELFBALANCE LT PUSH2 0x3D6 JUMPI PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 SWAP1 PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x11 MSTORE PUSH1 0x88 SHR OR PUSH1 0x0 MSTORE PUSH1 0x37 PUSH1 0x9 CALLVALUE CREATE2 SWAP2 DUP3 AND SWAP5 DUP6 ISZERO PUSH2 0x3AC JUMPI ISZERO PUSH2 0x2FE JUMPI JUMPDEST PUSH32 0xC30E111DCC74FDDC2C3A4D98FFB97ADEC4485C0A687946BF5B22C2A99C7FF96D PUSH1 0x60 DUP7 DUP9 DUP8 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 MLOAD SWAP3 SWAP4 SWAP3 PUSH1 0x20 SWAP2 PUSH1 0x64 SWAP1 DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0x388 JUMPI JUMPDEST POP ISZERO PUSH2 0x35E JUMPI SWAP1 DUP4 DUP1 DUP1 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF405907100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0x3A4 JUMPI POP PUSH1 0x1 PUSH1 0x80 MLOAD MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST DUP5 PUSH2 0x34F JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0x39E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x44 SELFBALANCE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF4840E9600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x34F5151D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x46E SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x1B7 JUMP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x493 PUSH2 0x484 CALLDATASIZE PUSH2 0x19C9 JUMP JUMPDEST SWAP6 POP SWAP4 POP POP SWAP5 SWAP6 SWAP4 POP POP PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD CALLDATALOAD SWAP2 PUSH3 0x989680 SWAP2 DUP3 ADD SWAP1 DUP2 DUP4 GT PUSH2 0x522 JUMPI PUSH1 0xA0 SWAP2 PUSH2 0x4B4 SWAP2 PUSH2 0x1A6F JUMP JUMPDEST SWAP4 ADD CALLDATALOAD DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x522 JUMPI PUSH2 0x4D2 DUP2 DUP5 DUP5 PUSH2 0x1C47 JUMP JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP4 PUSH2 0x4E9 SWAP4 MULMOD ISZERO ISZERO SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MLOAD MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x80 MLOAD REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MLOAD MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x80 MLOAD REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x100 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x133 PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD DUP2 PUSH1 0x4 DUP3 CALLDATACOPY KECCAK256 ADDRESS SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x80 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x63A CALLDATASIZE PUSH2 0x191C JUMP JUMPDEST POP SWAP8 POP POP POP POP POP SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER SUB PUSH2 0x8F0 JUMPI PUSH2 0x689 SWAP2 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 SWAP3 ADD ADD CALLDATALOAD AND PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 SWAP4 PUSH2 0x746 DUP2 PUSH2 0x71A DUP6 DUP9 DUP4 ADD SWAP6 DUP7 SWAP1 PUSH1 0x3E SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 SWAP2 DUP4 MSTORE PUSH1 0x10 SHL AND PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1B04 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 DUP5 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP7 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x151 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 SWAP1 DUP7 ADD DUP1 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x151 JUMPI PUSH1 0x5 SWAP2 DUP2 PUSH1 0x5 SHL CALLDATASIZE SUB DUP9 DUP3 ADD SGT PUSH2 0x151 JUMPI PUSH1 0x40 DUP9 DUP11 ADD CALLDATALOAD SWAP10 ADD CALLDATALOAD SWAP7 PUSH1 0x40 MLOAD DUP10 DUP2 ADD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 DUP13 PUSH1 0xC0 SHL AND DUP4 MSTORE DUP10 PUSH1 0x28 DUP4 ADD MSTORE PUSH1 0x28 DUP3 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 DUP3 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x8C1 JUMPI PUSH1 0x40 SWAP6 SWAP5 SWAP4 SWAP6 MSTORE MLOAD SWAP1 KECCAK256 SWAP3 PUSH1 0x80 MLOAD SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x87D JUMPI POP POP POP POP AND SUB PUSH2 0x853 JUMPI PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x522 JUMPI PUSH1 0x1 SWAP3 DUP4 SWAP2 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x830 DUP8 PUSH2 0x1ACB JUMP JUMPDEST DUP7 MSTORE DUP2 DUP7 ADD SWAP4 DUP5 MSTORE PUSH1 0x80 MLOAD MSTORE MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x80 MLOAD PUSH1 0x80 MLOAD RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x9BDE33900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 DUP3 SHL DUP4 ADD DUP11 ADD CALLDATALOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x80 MLOAD MSTORE DUP10 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x802 JUMP JUMPDEST SWAP1 PUSH1 0x80 MLOAD MSTORE DUP10 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x8A3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x4CA8886700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x80 MLOAD KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x9A6 PUSH2 0x18F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0xA10 JUMPI AND PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0xA05 PUSH1 0x24 CALLDATALOAD DUP3 SLOAD PUSH2 0x1ABE JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA454419900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x80 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF6 PUSH2 0x18F9 JUMP JUMPDEST AND PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0xB20 CALLDATASIZE PUSH2 0x191C JUMP JUMPDEST SWAP5 SWAP2 SWAP3 SWAP4 SWAP8 SWAP1 SWAP6 SWAP9 SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER SUB PUSH2 0x16B2 JUMPI DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 DUP2 ADD GT PUSH2 0x522 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 DUP7 ADD SWAP1 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5F DUP9 ADD DUP4 LT PUSH2 0x522 JUMPI PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 DUP1 PUSH2 0xC4E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5F DUP12 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 DUP13 ADD DUP14 PUSH2 0x1F3C JUMP JUMPDEST CALLDATALOAD AND EQ PUSH2 0xCA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5F DUP11 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 DUP12 ADD DUP13 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x80 MLOAD SWAP1 CALLDATALOAD PUSH1 0xFB SHR SWAP2 DUP1 PUSH2 0x161E JUMPI JUMPDEST DUP6 PUSH1 0x4 GT PUSH2 0x151 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP7 ADD PUSH1 0xC DUP5 MUL GT PUSH2 0x151 JUMPI PUSH2 0xCFA DUP9 DUP5 PUSH1 0xC DUP2 MUL PUSH1 0x4 DUP9 ADD DUP9 CALLDATALOAD PUSH1 0xE0 SHR PUSH2 0x1F77 JUMP JUMPDEST ISZERO PUSH2 0x147E JUMPI JUMPDEST POP POP PUSH1 0x14 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0xC DUP4 MUL DUP7 SUB ADD GT PUSH2 0x1201 JUMPI JUMPDEST POP POP POP POP DUP6 DUP6 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 ADD SWAP1 POP PUSH1 0xE0 DUP8 ADD CALLDATALOAD PUSH32 0x4000000000000000000000000000000000000000000000000000000000000000 AND ISZERO PUSH2 0x11E4 JUMPI CALLDATALOAD DUP1 PUSH1 0xF0 SHR PUSH1 0x2 DUP2 LT PUSH2 0x11BA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP13 DUP2 MSTORE PUSH1 0x10 SWAP5 SWAP1 SWAP5 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xE1F SWAP3 SWAP1 PUSH2 0xDE2 DUP2 PUSH1 0x5E DUP2 ADD PUSH2 0x71A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x80 MLOAD MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0xE03 DUP2 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x1 DUP5 SLOAD SWAP5 DUP6 DUP4 MSTORE ADD SLOAD SWAP2 DUP3 SWAP2 ADD MSTORE SWAP5 PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP1 DUP12 PUSH2 0x1DCE JUMP JUMPDEST ISZERO PUSH2 0x1190 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 JUMPDEST PUSH1 0x40 MLOAD SWAP9 PUSH2 0xE48 DUP11 PUSH2 0x1AE7 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x40 DUP10 ADD MSTORE AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH1 0x80 DUP8 ADD MSTORE DUP5 PUSH1 0xA0 DUP8 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 DUP3 DUP5 ADD ADD CALLDATALOAD PUSH1 0x80 SHR PUSH1 0xC0 DUP8 ADD MSTORE TIMESTAMP PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP5 DUP7 ADD ADD CALLDATALOAD AND OR PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x80 MLOAD POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH1 0x0 EQ PUSH2 0x118A JUMPI POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH1 0xA0 DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 DUP8 ADD GT OR PUSH2 0x8C1 JUMPI PUSH32 0xE534C62F0AFD2FA0F0FA71198E8AA2D549F24DAF2BB47DE0D5486C7CE9288CA SWAP4 PUSH2 0x1A0 SWAP4 PUSH1 0xA0 DUP8 ADD PUSH1 0x40 MSTORE DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP7 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 DUP3 DUP5 ADD ADD CALLDATALOAD DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 PUSH1 0x60 DUP9 ADD SWAP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 DUP3 DUP8 ADD ADD CALLDATALOAD AND DUP5 MSTORE PUSH1 0x80 DUP10 ADD SWAP5 ADD ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP11 MLOAD DUP6 MSTORE PUSH1 0x20 DUP12 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP12 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP12 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP12 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP12 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP12 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 SWAP8 MLOAD DUP9 DUP7 ADD MSTORE MLOAD PUSH2 0x120 DUP6 ADD MSTORE MLOAD PUSH2 0x140 DUP5 ADD MSTORE MLOAD PUSH2 0x160 DUP4 ADD MSTORE MLOAD PUSH2 0x180 DUP3 ADD MSTORE LOG1 DUP4 KECCAK256 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 PUSH32 0x0 PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x11 MSTORE PUSH1 0x88 SHR OR PUSH1 0x0 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE2 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO PUSH2 0x3AC JUMPI PUSH1 0xC0 DUP5 BALANCE SWAP2 ADD MLOAD GT SWAP3 DUP4 ISZERO PUSH2 0x1112 JUMPI JUMPDEST POP POP POP PUSH2 0x437 JUMPI PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP3 SWAP4 POP PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MLOAD MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x80 MLOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 PUSH1 0x80 MLOAD SWAP3 ADD CALLDATALOAD AND GAS STATICCALL PUSH1 0x80 MLOAD MLOAD SWAP1 ISZERO PUSH1 0x20 RETURNDATASIZE LT OR PUSH2 0x117D JUMPI LT DUP2 DUP1 DUP1 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEAB3A17400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x10D629D300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 POP CALLDATALOAD PUSH2 0xE3B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0xC DUP3 MUL DUP4 DUP2 ADD PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 AND SWAP5 SWAP3 SWAP2 PUSH1 0x14 SWAP1 DUP9 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC ADD LT PUSH2 0x1461 JUMPI JUMPDEST POP POP PUSH1 0xC DUP3 MUL DUP6 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB DUP2 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC ADD DUP2 GT PUSH2 0x522 JUMPI PUSH1 0x14 GT PUSH2 0x151 JUMPI DUP3 PUSH1 0x60 SHR EXTCODESIZE ISZERO PUSH2 0x151 JUMPI PUSH2 0x13F9 DUP15 PUSH1 0xE0 SWAP4 DUP16 DUP16 SWAP5 PUSH1 0x18 SWAP2 PUSH2 0x1360 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP12 DUP13 SWAP11 DUP12 SWAP11 PUSH32 0x462EBDE200000000000000000000000000000000000000000000000000000000 DUP13 MSTORE DUP1 CALLDATALOAD PUSH1 0x4 DUP14 ADD MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x24 DUP14 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x44 DUP14 ADD MSTORE PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH1 0x64 DUP14 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x84 DUP14 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA4 DUP14 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC4 DUP14 ADD MSTORE ADD CALLDATALOAD PUSH1 0xE4 DUP12 ADD MSTORE PUSH2 0x1E0 PUSH2 0x104 DUP12 ADD MSTORE PUSH2 0x1E4 DUP11 ADD SWAP2 PUSH2 0x201C JUMP JUMPDEST SWAP5 PUSH2 0x124 DUP9 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND PUSH2 0x144 DUP9 ADD MSTORE PUSH2 0x164 DUP8 ADD MSTORE DUP14 PUSH2 0x184 DUP8 ADD MSTORE DUP13 PUSH2 0x1A4 DUP8 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP7 DUP6 SUB ADD PUSH2 0x1C4 DUP8 ADD MSTORE PUSH1 0xC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE7 PUSH1 0x80 MLOAD SWAP12 DUP3 DUP7 MUL SWAP1 SUB ADD SWAP4 MUL ADD ADD PUSH2 0x201C JUMP JUMPDEST SUB SWAP2 PUSH1 0x80 MLOAD SWAP1 PUSH1 0x60 SHR GAS CALL DUP1 ISZERO PUSH2 0x117D JUMPI PUSH2 0x1418 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH2 0xD32 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1430 JUMPI PUSH1 0x40 MSTORE DUP9 PUSH2 0x140F JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MLOAD MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x80 MLOAD REVERT JUMPDEST PUSH1 0xC DUP5 MUL DUP8 SUB PUSH1 0x14 SUB PUSH1 0x4 ADD PUSH1 0x3 SHL DUP3 SWAP1 SHL AND AND SWAP3 POP DUP15 DUP1 PUSH2 0x1260 JUMP JUMPDEST TIMESTAMP DUP5 CALLDATALOAD PUSH1 0xE0 SHR GT DUP1 ISZERO PUSH2 0x1553 JUMPI JUMPDEST PUSH2 0x1529 JUMPI PUSH2 0x149B JUMPI JUMPDEST DUP1 PUSH2 0xD00 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1495 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x14FF JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SSTORE DUP14 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA7FD379200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF25114A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x117D JUMPI PUSH1 0x80 MLOAD SWAP2 PUSH2 0x15EC JUMPI JUMPDEST POP ISZERO PUSH2 0x148C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1616 JUMPI JUMPDEST DUP2 PUSH2 0x1607 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B04 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x151 JUMPI MLOAD CODESIZE PUSH2 0x15E5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x15FA JUMP JUMPDEST SWAP5 POP POP SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 DUP9 ADD PUSH1 0x4 GT PUSH2 0x151 JUMPI DUP9 CALLDATALOAD PUSH1 0xE0 SHR PUSH7 0x38D7EA4C68000 SWAP1 DUP1 DUP3 DUP2 MUL DIV DUP3 EQ DUP2 ISZERO OR ISZERO PUSH2 0x522 JUMPI PUSH2 0x167E DUP14 PUSH2 0x1683 SWAP4 PUSH1 0xA0 DUP16 ADD CALLDATALOAD SWAP4 MUL PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x1B45 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP11 ADD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5C DUP11 ADD SWAP5 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD25AA10600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH2 0x1713 PUSH2 0x18F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0xA10 JUMPI AND PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH1 0x24 CALLDATALOAD DUP2 SLOAD ADD DUP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH1 0x80 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x151 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x1805 PUSH2 0x17F7 CALLDATASIZE PUSH2 0x19C9 JUMP JUMPDEST SWAP6 POP SWAP4 POP POP SWAP6 SWAP4 POP POP PUSH2 0x1B7E JUMP JUMPDEST SWAP1 PUSH3 0x989680 SWAP2 DUP3 DUP5 MUL SWAP4 DUP1 DUP6 DIV DUP5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x522 JUMPI DUP3 ADD DUP1 SWAP3 GT PUSH2 0x522 JUMPI PUSH1 0x20 SWAP3 PUSH1 0xA0 PUSH2 0x183B PUSH2 0x4E9 SWAP5 PUSH1 0xC0 DUP6 ADD CALLDATALOAD PUSH2 0x1A6F JUMP JUMPDEST SWAP3 ADD CALLDATALOAD PUSH2 0x1C47 JUMP JUMPDEST CALLVALUE PUSH2 0x151 JUMPI PUSH2 0x1851 CALLDATASIZE PUSH2 0x191C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER SUB PUSH2 0x189E JUMPI PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST DUP1 PUSH32 0xD25AA10600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 SWAP3 MSTORE REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x18F4 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x18F4 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x18F4 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x18F4 JUMPI JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP2 ADD PUSH2 0x1E0 DUP2 SLT PUSH2 0x18F4 JUMPI PUSH2 0x100 SGT PUSH2 0x18F4 JUMPI PUSH1 0x4 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x104 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x18F4 JUMPI DUP4 PUSH2 0x1974 SWAP2 PUSH1 0x4 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 PUSH2 0x124 CALLDATALOAD SWAP3 PUSH2 0x144 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x18F4 JUMPI SWAP3 PUSH2 0x164 CALLDATALOAD SWAP3 PUSH2 0x184 CALLDATALOAD SWAP3 PUSH2 0x1A4 CALLDATALOAD SWAP3 PUSH2 0x1C4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x18F4 JUMPI PUSH2 0x19C5 SWAP2 PUSH1 0x4 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP3 ADD PUSH2 0x1C0 DUP2 SLT PUSH2 0x18F4 JUMPI PUSH2 0x100 SGT PUSH2 0x18F4 JUMPI PUSH1 0x4 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH2 0x104 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x18F4 JUMPI DUP2 PUSH2 0x1A23 SWAP2 PUSH1 0x4 ADD PUSH2 0x18C6 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 PUSH2 0x124 CALLDATALOAD SWAP3 PUSH2 0x144 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x18F4 JUMPI SWAP3 PUSH2 0x164 CALLDATALOAD SWAP3 PUSH2 0x184 CALLDATALOAD SWAP3 PUSH2 0x1A4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x18F4 JUMPI PUSH2 0x19C5 SWAP2 PUSH1 0x4 ADD PUSH2 0x18C6 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1A82 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1A82 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1A82 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1B4F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x3 GT PUSH2 0x18F4 JUMPI DUP2 CALLDATALOAD PUSH1 0xE8 SHR DUP2 PUSH1 0x7 GT PUSH2 0x18F4 JUMPI PUSH1 0x3 DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x1C3F JUMPI JUMPDEST ISZERO PUSH2 0x1C28 JUMPI POP POP PUSH1 0x0 SWAP2 JUMPDEST DUP2 PUSH1 0xB GT PUSH2 0x18F4 JUMPI PUSH1 0x7 DUP2 ADD CALLDATALOAD PUSH1 0xE0 SHR DUP3 PUSH1 0xE GT PUSH2 0x18F4 JUMPI DUP3 PUSH1 0x11 GT PUSH2 0x18F4 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF PUSH2 0x1C15 SWAP4 ADD SWAP2 PUSH1 0x11 DUP2 ADD SWAP2 PUSH1 0xB PUSH1 0xE DUP4 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP3 ADD CALLDATALOAD PUSH1 0xE8 SHR DUP2 ADD SWAP1 PUSH2 0x1D0B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1C21 JUMPI SUB SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xF4240 SWAP2 PUSH2 0x1C38 SWAP2 BASEFEE MUL PUSH2 0x1B45 JUMP JUMPDEST DIV SWAP2 PUSH2 0x1BB1 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x1BA6 JUMP JUMPDEST SWAP2 DUP2 DUP4 MUL SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP6 MULMOD SWAP4 DUP4 DUP1 DUP7 LT SWAP6 SUB SWAP5 DUP1 DUP7 SUB SWAP6 EQ PUSH2 0x1CFB JUMPI DUP5 DUP4 GT ISZERO PUSH2 0x1CDB JUMPI SWAP1 DUP3 SWAP2 MULMOD DUP2 PUSH1 0x0 SUB DUP3 AND DUP1 SWAP3 DIV PUSH1 0x2 DUP1 DUP3 PUSH1 0x3 MUL XOR DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 SWAP3 MUL SWAP1 SUB MUL SWAP4 PUSH1 0x1 DUP4 DUP1 PUSH1 0x0 SUB DIV ADD SWAP1 DUP5 DUP4 GT SWAP1 SUB MUL SWAP3 SUB DIV OR MUL SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x1CF4 JUMPI PUSH1 0x12 JUMPDEST PUSH4 0x4E487B71 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x24 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x11 PUSH2 0x1CE3 JUMP JUMPDEST POP POP SWAP1 PUSH2 0x1D08 SWAP3 POP PUSH2 0x1B45 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 DUP2 TIMESTAMP GT ISZERO PUSH1 0x0 EQ PUSH2 0x1D21 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 SWAP4 SWAP5 SWAP2 SWAP3 TIMESTAMP LT ISZERO PUSH2 0x1DC4 JUMPI DUP5 SWAP3 SWAP2 SWAP3 JUMPDEST PUSH2 0x1D48 JUMPI POP PUSH2 0x1D08 SWAP4 POP DUP3 SUB SWAP2 TIMESTAMP SWAP1 SUB MUL PUSH2 0x1B45 JUMP JUMPDEST SWAP1 PUSH1 0x3 SWAP1 DUP6 DUP3 GT PUSH2 0x18F4 JUMPI DUP3 CALLDATALOAD PUSH1 0xE8 SHR SWAP1 PUSH1 0x5 SWAP3 DUP8 DUP5 GT PUSH2 0x18F4 JUMPI DUP5 ADD CALLDATALOAD PUSH1 0xF0 SHR DUP2 ADD SWAP5 DUP6 TIMESTAMP GT ISZERO PUSH2 0x1DA5 JUMPI POP POP SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP2 SWAP4 SWAP3 ADD SWAP5 ADD SWAP4 DUP5 PUSH2 0x1D32 JUMP JUMPDEST SWAP3 POP SWAP4 PUSH2 0x1D08 SWAP7 POP DUP1 SWAP6 POP DUP5 SWAP2 SWAP4 POP SUB SWAP4 TIMESTAMP SWAP1 SUB MUL SWAP2 TIMESTAMP SUB MUL ADD PUSH2 0x1B45 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x1DE4 DUP5 PUSH2 0x1DDF DUP4 DUP6 PUSH2 0x1ABE JUMP JUMPDEST PUSH2 0x1AB1 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1A82 JUMPI DUP4 PUSH2 0x167E DUP7 PUSH2 0x1E1F SWAP4 PUSH2 0x1A6F JUMP JUMPDEST SWAP5 DUP2 SUB PUSH2 0x1E39 JUMPI POP POP POP POP PUSH1 0x2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A82 JUMPI EQ SWAP1 JUMP JUMPDEST DUP1 DUP4 SUB PUSH2 0x1E54 JUMPI JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A82 JUMPI EQ SWAP1 JUMP JUMPDEST PUSH2 0x1E5E SWAP1 DUP4 PUSH2 0x1ABE JUMP JUMPDEST SWAP1 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1A82 JUMPI PUSH2 0x1E75 SWAP3 PUSH2 0x167E SWAP2 PUSH2 0x1A6F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C21 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1E41 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP4 LT PUSH2 0x1EFD JUMPI DUP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH4 0xFFFFFFFF DUP4 PUSH1 0xC0 SHR AND SWAP3 PUSH1 0xE0 SHR SWAP5 ADD DUP5 GT PUSH2 0x1ED3 JUMPI DUP2 ADD PUSH1 0x20 ADD SWAP3 SUB SWAP1 JUMP JUMPDEST PUSH32 0x9605A01000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 JUMP JUMPDEST PUSH1 0x55 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH1 0xB SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND SWAP1 JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x1F48 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 SWAP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP3 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1F9E JUMPI POP POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xA SWAP1 DUP3 DUP3 GT PUSH2 0x18F4 JUMPI PUSH1 0xC SWAP2 DUP4 DUP4 GT PUSH2 0x18F4 JUMPI DUP8 ADD CALLDATALOAD PUSH1 0xF0 SHR ADD SWAP6 DUP1 CALLDATALOAD PUSH1 0xB0 SHR DUP7 SUB PUSH2 0x1FD1 JUMPI POP POP POP POP POP POP TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST SWAP6 SWAP3 SWAP4 SWAP5 SWAP6 TIMESTAMP DUP5 GT PUSH2 0x2010 JUMPI ADD SWAP5 SWAP4 PUSH1 0x1 ADD SWAP3 SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1F8C JUMP JUMPDEST POP POP POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F OR 0xAE SWAP2 SWAP7 DUP13 0x2D 0xE0 PUSH29 0x2C6E349FCFE48881D1D9887927D72C71D0F9E7CDBC8964736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"243087:754:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;93227:49;243087:754;153642:195;243087:754;153642:195;;243087:754;153642:195;;;93270:4;241061:24;;93227:49;;:::i;:::-;243087:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;239810:19;243087:754;;;722:37;;;239909:19;;;243087:754;239868:27;243087:754;;239909:19;239905:86;;243087:754;240004:9;:25;240000:65;;243087:754;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;239810:19;243087:754;;;;;;;;;;;239868:27;243087:754;;;240200:15;243087:754;;84684:27;243087:754;;84654:57;84653:90;243087:754;;;;;85672:56;243087:754;;3941:3;243087:754;3941:3;239868:27;3941:3;243087:754;3941:3;243087:754;3941:3;85672:56;:::i;:::-;240345:87;240341:121;;154107:101;240566:25;240004:9;89207:21;:29;89203:123;;89378:479;;;243087:754;89378:479;;;;;;;243087:754;89378:479;;;240004:9;89378:479;243087:754;;;89870:22;;;89866:85;;240606:19;240602:119;;243087:754;240736:69;243087:754;;;;;;;;;;;;;;;;;240736:69;243087:754;;;;240602:119;243087:754;;171246:645;243087:754;171246:645;;240672:10;243087:754;171246:645;;;243087:754;171246:645;;;;;;243087:754;171246:645;;;171224:12;243087:754;;;;;;;;;171246:645;;;;;;;240602:119;171904:8;;171900:45;;240602:119;;;;;;171900:45;243087:754;;;171921:24;;;;171246:645;;-1:-1:-1;171246:645:0;;;;243087:754;;;;171246:645;;;;;;;;;;;;;;;;89866:85;243087:754;;;89915:25;;;;89203:123;243087:754;89286:21;243087:754;;89259:56;;;;243087:754;89259:56;;243087:754;240004:9;243087:754;;;;89259:56;240341:121;243087:754;;;240441:21;;;;240000:65;243087:754;;;240038:27;;;;239905:86;239944:36;243087:754;239960:20;243087:754;239944:36;;:::i;:::-;239905:86;;243087:754;;;;194752:23;243087:754;;;:::i;:::-;194752:23;;;;;;;;;;;:::i;:::-;194804:18;;;243087:754;193174:10;;;;;;;;;;;194866:18;194824:40;;;;:::i;:::-;194866:18;;243087:754;193174:10;;;;;;;;;;;;;;122370:25;;;;;:::i;:::-;122444;;;;;243087:754;122444:25;122370:104;122444:25;;:29;;122370:104;;:::i;:::-;243087:754;;;;;;122444:25;243087:754;;;;;;;;;;;193174:10;;243087:754;;193174:10;;243087:754;193174:10;;243087:754;;193174:10;243087:754;;;;;;;;;;;;93227:49;243087:754;153642:195;243087:754;153642:195;;243087:754;153642:195;;;93270:4;241342:24;;93227:49;;:::i;243087:754::-;;;;;;;;;;;;;;;;236160:50;243087:754;;;;;;;;;;;:::i;:::-;211680:21;;;;;;;;;243087:754;211680:21;243087:754;211666:10;:35;211662:87;;165153:49;;;:::i;:::-;243087:754;212623:187;243087:754;212623:187;;;;;243087:754;;;;212921:42;;;;;;;;;;;;243087:754;;;;;;;;;;;;;;;;;212921:42;;;;;;;;;:::i;:::-;243087:754;212911:53;;243087:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213083:13;;;243087:754;213099:20;;243087:754;;;;213059:61;;;243087:754;;;;;;;;;;;;;;213059:61;;243087:754;;;;;;;;;;;;;;;;;;;;213049:72;;100984:13;;;100979:134;100999:16;;;;;;243087:754;;;;;213145:49;213141:76;;243087:754;193174:10;;;;;;;243087:754;;;;;;;;;;:::i;:::-;;;213248:55;;;243087:754;;;;;;;;;;;;;;;;;;;;;;;;213141:76;243087:754;;;213203:14;;;;101017:3;243087:754;;;;;;;;;;;;;;;6418:5;;;;;;243087:754;;6747:119;;;243087:754;;;;6747:119;6418:61;101017:3;243087:754;100984:13;;;;;6418:61;243087:754;;;6747:119;;;243087:754;;;;6747:119;6418:61;;243087:754;;;;;;;;;;211662:87;243087:754;;;211724:14;;;;243087:754;;;;;;;;;;;;;;;;;;;;;;;;;;;211501:59;;243087:754;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;219375:8;;;243087:754;219353:10;:31;219349:63;;243087:754;;;;;;;;;;;;;220376:35;243087:754;;;;220376:35;:::i;:::-;243087:754;;;;;;;;;219349:63;243087:754;;;219393:19;;;;243087:754;;;;;;;;;;;;;;;;236040:50;243087:754;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;193475:21;;;;;;;;;243087:754;193475:21;243087:754;193461:10;:35;193457:72;;243087:754;;;;;;;;;;;237342:160;243087:754;;;;-1:-1:-1;243087:754:0;;;;4669:31;243087:754;;;;;;4669:31;;:::i;:::-;;:52;:74;5817:31;243087:754;;;;;;5817:31;;:::i;:::-;243087:754;;5817:31;;3941:3;;;243087:754;234440:195;;243087:754;;;;;;;;;234795:2;243087:754;;;;;234816:77;243087:754;;234795:2;243087:754;;;;;;;;;234816:77;:::i;:::-;234815:78;234811:364;;243087:754;;;196676:2;243087:754;234795:2;243087:754;;;;;196657:21;196653:238;;243087:754;-1:-1:-1;;;;237559:104:0;;;243087:754;237559:104;;-1:-1:-1;243087:754:0;237738:17;;243087:754;24894:8;29382:60;29381:67;24894:8;;243087:754;3941:3;237833;3941;237868:1;237854:15;;237850:50;;243087:754;;;237938:73;;;243087:754;;;;;;;;;;;;;;;;;238136:106;;237938:73;;243087:754;;;;237938:73;243087:754;237938:73;243087:754;237928:84;;243087:754;;;4698:1;237938:73;243087:754;;;;;;237938:73;243087:754;;;;;:::i;:::-;4698:1;243087:754;;;;;;3941:3;243087:754;3941:3;;;;243087:754;238193:18;3941:3;238193:18;;243087:754;238136:106;;;:::i;:::-;238135:107;238131:173;;243087:754;237700:682;;243087:754;;;;;;:::i;:::-;;;238545:11;238435:389;;243087:754;238545:11;;;243087:754;;238435:389;;243087:754;;238626:16;238435:389;;243087:754;238626:16;;;243087:754;238731:3;238435:389;;243087:754;238435:389;3941:3;238435:389;;243087:754;238705:22;237559:104;;;238705:22;243087:754;238731:3;3941;238435:389;;;243087:754;238797:15;243087:754;;84684:27;238759:23;237559:104;;;238759:23;243087:754;84654:57;84653:90;243087:754;238435:389;;243087:754;;238934:14;;243087:754;238934:65;;722:37;243087:754;722:37;;238934:34;:65;243087:754;;;238545:11;;;;243087:754;238934:65;;243087:754;;;;3941:3;243087:754;;;;3941:3;243087:754;;;;;;239221:50;243087:754;3941:3;243087:754;3941:3;243087:754;;;;;;238545:11;238889:316;;243087:754;;;;238889:316;;239054:22;237559:104;;;239054:22;243087:754;;;239170:24;238626:16;238889:316;;237559:104;3941:3;238705:22;237559:104;;;238705:22;243087:754;239105:42;243087:754;;238731:3;238889:316;;237559:104;;239170:24;243087:754;;;;;3941:3;;;243087:754;;238545:11;238435:389;;3941:3;238545:11;3941:3;;243087:754;;238435:389;;3941:3;243087:754;3941:3;;243087:754;238626:16;238435:389;;3941:3;238626:16;3941:3;;243087:754;238731:3;238435:389;;3941:3;238731;3941;;243087:754;3941:3;238435:389;;3941:3;;;;243087:754;238435:389;;;3941:3;238435:389;3941:3;;243087:754;;238435:389;;3941:3;243087:754;3941:3;;243087:754;3941:3;;;;;;243087:754;3941:3;;;;243087:754;3941:3;;;;243087:754;3941:3;;;;243087:754;3941:3;;;;243087:754;239221:50;154107:101;;89378:479;239367:25;89378:479;238545:11;89378:479;;;;;;;243087:754;89378:479;;;243087:754;89378:479;243087:754;;;;89870:22;89866:85;;238435:389;239407:14;;238435:389;;243087:754;-1:-1:-1;239407:112:0;;;;;238934:65;239403:177;;;;;243087:754;;;;239407:112;238545:11;243087:754;;;168506:25;243087:754;;168541:483;243087:754;168541:483;;243087:754;;;;238626:16;243087:754;;238626:16;;243087:754;722:37;168541:483;;243087:754;;168541:483;;;238545:11;168541:483;;;;;239452:67;239407:112;;;;;168541:483;243087:754;168541:483;;243087:754;;168541:483;;;;;238934:65;;;;238131:173;243087:754;;;238269:20;;;;237850:50;243087:754;;;237878:22;;;;237700:682;243087:754;;;;237700:682;;196653:238;243087:754;234795:2;243087:754;;;;;;;;;;;;;;196676:2;243087:754;;;;;;;;196653:238;-1:-1:-1;;234795:2:0;243087:754;;;;;;;;;;;;;;196676:2;243087:754;;;;;;196694:186;;;;243087:754;;;;;;;;;;;;196694:186;;;;;;;243087:754;196694:186;;243087:754;;;196694:186;;243087:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3941:3;243087:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;234795:2;243087:754;;;;;;;;;;;;;;;:::i;:::-;196694:186;243087:754;;;;;;196694:186;;;;;;;;196653:238;;;;;;;196694:186;243087:754;;;;;;;196694:186;;;243087:754;;;;;;;;;;;;;234795:2;243087:754;;;;196676:2;243087:754;;;4379:1;243087:754;;;;;;;-1:-1:-1;243087:754:0;;;;234811:364;234968:15;243087:754;;;;234954:29;:68;;;;234811:364;234950:106;;235074:87;;234811:364;;;;235074:87;220937:7;220933:262;235074:87;220933:262;243087:754;;;;;;;;;;;;;;;221030:22;;;221026:52;;243087:754;;;;;;;;;;193241:9;243087:754;;;;;220933:262;235074:87;;221026:52;243087:754;;;221061:17;;;;234950:106;243087:754;;;235031:25;;;;234954:68;243087:754;;;;234987:30;;243087:754;;;;234987:30;;243087:754;234987:30;:13;243087:754;234987:13;243087:754;234987:13;243087:754;234987:30;;;;;;;243087:754;;234987:30;;;234954:68;234987:35;;234954:68;;234987:30;;;;;;;;;;;;;;;;;:::i;:::-;;;243087:754;;;;;234987:30;;;;;;-1:-1:-1;234987:30:0;;234440:195;243087:754;;;;;;;;;;;;;;;;230622:4;193174:10;;;;;;;;;;;;;;232995:49;234544:18;232995:69;234544:18;3941:3;234544:18;;243087:754;193174:10;;232995:49;:::i;:::-;:69;:::i;:::-;243087:754;;;;;;;;234440:195;;;193457:72;243087:754;;;193505:24;;;;243087:754;;;;;;;;;;;;;:::i;:::-;;219375:8;;;243087:754;219353:10;:31;219349:63;;243087:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;219133:34;243087:754;;;;;;;;194187:23;243087:754;;;:::i;:::-;194187:23;;;;;;;;;;:::i;:::-;193174:10;;;;;;;;;;;;;;;;;;;;;;;;;243087:754;194288:18;194239;194288:46;194227:108;194288:18;;;;243087:754;194288:46;:::i;:::-;194239:18;;243087:754;194227:108;:::i;243087:754::-;;;;;;;:::i;:::-;193475:21;;;;;;;;;;243087:754;193475:21;243087:754;193461:10;:35;193457:72;;243087:754;;;;193457:72;193505:24;;243087:754;193505:24;;;243087:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;243087:754:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;243087:754:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;193174:10::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;243087:754::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;3941:3;243087:754;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;197567:872;;243087:754;197742:1;243087:754;;;;;;;;197818:1;243087:754;;;197742:1;243087:754;;;;;197854:20;;;:45;;;;197567:872;197854:120;;;;;197740:1;197854:120;;243087:754;198046:2;243087:754;;;197818:1;243087:754;;;;;;198144:2;243087:754;;;;198221:2;243087:754;;;;198262:90;243087:754;;;198221:2;243087:754;;;198046:2;198144;243087:754;;;;;;;;;;;;198262:90;;:::i;:::-;198373:21;;;;;;193241:9;197567:872;:::o;198373:49::-;;;197740:1;197567:872;:::o;197854:120::-;193241:9;197924:13;197906:50;197924:13;;243087:754;197906:50;:::i;:::-;243087:754;197854:120;;;:45;197878:21;;;197854:45;;117891:4223;;243087:754;;;118483:131;;;;;;;;;;;;;;;;118695:10;;118691:368;;119169:20;;;;119165:136;;119587:300;;;;193241:9;-1:-1:-1;193241:9:0;120106:31;;120151:375;;;120986:1;243087:754;;120967:1;243087:754;120966:21;243087:754;;;193241:9;;243087:754;;;;193241:9;;243087:754;;;;193241:9;;243087:754;;;;193241:9;;243087:754;;;;193241:9;;243087:754;;;;193241:9;;243087:754;120151:375;;;;-1:-1:-1;120151:375:0;;;119587:300;;;;;;243087:754;119587:300;;120151:375;120592:21;243087:754;117891:4223;:::o;119165:136::-;119221:16;;;34351:4;119221:64;35188:119;-1:-1:-1;35188:119:0;;;;;;119221:64;34256:4;119221:64;;118691:368;119025:19;;;;;;;:::i;:::-;119018:26;:::o;199186:1292::-;;;;;199394:15;;:35;;199390:185;199394:35;;;199449:22;;;;;:::o;199390:185::-;199394:15;;;;;;199496:36;;199492:83;;199390:185;;199646:41;199702:643;199709:26;;;193241:9;200365:96;193241:9;;;;199394:15;;193241:9;;243087:754;200365:96;:::i;199702:643::-;199817:1;;243087:754;;;;;;;;;;199918:1;;243087:754;;;;;;;;;;;;;199394:15;;;199944:32;;199940:230;;200187:30;;;243087:754;200187:30;200235:32;243087:754;;;;199702:643;;;;199940:230;193241:9;;;200007:144;193241:9;;;;;;;;;;199394:15;;193241:9;;243087:754;199394:15;;193241:9;243087:754;;200007:144;:::i;199492:83::-;199552:8;;;;;199559:1;199552:8;:::o;241901:955::-;;;;242167:56;:41;;;;;:::i;:::-;:56;:::i;:::-;243087:754;;;;;;;;;;;242166:76;;;:96;:76;;:::i;:96::-;242277:37;;;;;193174:10;;;;242419:1;193174:10;;;;;;;242401:37;242393:46;:::o;242273:522::-;242460:42;;;242456:339;;242273:522;;;;;242226:1;193174:10;;;;;;;242812:37;241901:955;:::o;242456:339::-;242634:41;;;;:::i;:::-;243087:754;;;;;;;;242633:81;:61;;;;:::i;:81::-;242732:38;;242728:56;;242456:339;;;;;;166197:529;;;;166327:4;166308:23;;166304:48;;166419:248;;32721:652;166419:248;32721:652;;;;;;;;166419:248;;32721:652;;;;;;166327:4;32721:652;;;;166197:529::o;32721:652::-;32685:26;-1:-1:-1;32721:652:0;;-1:-1:-1;32721:652:0;166304:48;-1:-1:-1;166340:8:0;;-1:-1:-1;166340:8:0;;166333:19::o;93526:1821::-;93694:1647;93526:1821;93694:1647;93526:1821;93694:1647;93526:1821;93694:1647;;;;;;;;;;;;;;;;;;;93526:1821;:::o;243087:754::-;;;;;;;;;:::o;:::-;;;;;;;;;;231726:801;;;;;243087:754;;231984:13;231996:1;231979:506;231999:17;;;;;;232498:12;;;;;;231996:1;231726:801;:::o;232018:3::-;232095:2;243087:754;;;;;;232160:2;243087:754;;;;;;;;;;;;;;;;;232210:43;;243087:754;;232299:15;;;;;;;-1:-1:-1;232284:30:0;232277:37;:::o;232206:221::-;232357:15;;;;;;232343:29;;232339:88;;243087:754;;231984:13;243087:754;;;231984:13;243087:754;;;;;;231984:13;;232339:88;232396:12;;;;;;;231996:1;232396:12;:::o;243087:754::-;;;;;;;;;;;;;;;-1:-1:-1;243087:754:0;;;;;;;;;;;:::o"},"methodIdentifiers":{"ESCROW_DST_IMPLEMENTATION()":"ba551177","ESCROW_SRC_IMPLEMENTATION()":"7040f173","FEE_BANK()":"2ce26aeb","addressOfEscrowDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"be58e91c","addressOfEscrowSrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"fb6bd47e","availableCredit(address)":"5886216f","createDstEscrow((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)":"dea024e4","decreaseAvailableCredit(address,uint256)":"85eda2de","getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)":"1d9671c3","getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)":"d7ff8a80","increaseAvailableCredit(address,uint256)":"3ee5ef1f","lastValidated(bytes32)":"acf4ce5c","postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"462ebde2","preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"0986bdd5","takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"adf38ba1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitOrderProtocol\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"accessToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"rescueDelaySrc\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"rescueDelayDst\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientEscrowBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCreationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPartialFill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecretsAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughCredit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyFeeBankAccess\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyLimitOrderProtocol\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ResolverCanNotFillOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFromFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"}],\"name\":\"DstEscrowCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"srcImmutables\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IEscrowFactory.DstImmutablesComplement\",\"name\":\"dstImmutablesComplement\",\"type\":\"tuple\"}],\"name\":\"SrcEscrowCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ESCROW_DST_IMPLEMENTATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ESCROW_SRC_IMPLEMENTATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_BANK\",\"outputs\":[{\"internalType\":\"contract IFeeBank\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"addressOfEscrowDst\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"addressOfEscrowSrc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"dstImmutables\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"srcCancellationTimestamp\",\"type\":\"uint256\"}],\"name\":\"createDstEscrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAvailableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"getMakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"getTakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAvailableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"lastValidated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"postInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"preInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"takerInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"events\":{\"DstEscrowCreated(address,bytes32,uint256)\":{\"params\":{\"escrow\":\"The address of the created escrow.\",\"hashlock\":\"The hash of the secret.\",\"taker\":\"The address of the taker.\"}},\"SrcEscrowCreated((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"dstImmutablesComplement\":\"Additional immutables related to the escrow contract on the destination chain.\",\"srcImmutables\":\"The immutables of the escrow contract that are used in deployment on the source chain.\"}}},\"kind\":\"dev\",\"methods\":{\"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"details\":\"Verifies the proof and stores the last validated index and hashed secret. Only Limit Order Protocol can call this function.\"}},\"title\":\"Escrow Factory contract\",\"version\":1},\"userdoc\":{\"events\":{\"DstEscrowCreated(address,bytes32,uint256)\":{\"notice\":\"Emitted on EscrowDst deployment.\"},\"SrcEscrowCreated((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Emitted on EscrowSrc deployment to recreate EscrowSrc and EscrowDst immutables off-chain.\"}},\"kind\":\"user\",\"methods\":{\"ESCROW_DST_IMPLEMENTATION()\":{\"notice\":\"See {IEscrowFactory-ESCROW_DST_IMPLEMENTATION}.\"},\"ESCROW_SRC_IMPLEMENTATION()\":{\"notice\":\"See {IEscrowFactory-ESCROW_SRC_IMPLEMENTATION}.\"},\"FEE_BANK()\":{\"notice\":\"See {IFeeBankCharger-feeBank}.\"},\"addressOfEscrowDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IEscrowFactory-addressOfEscrowDst}.\"},\"addressOfEscrowSrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IEscrowFactory-addressOfEscrowSrc}.\"},\"availableCredit(address)\":{\"notice\":\"See {IFeeBankCharger-availableCredit}.\"},\"createDstEscrow((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)\":{\"notice\":\"See {IEscrowFactory-createDstEscrow}.\"},\"decreaseAvailableCredit(address,uint256)\":{\"notice\":\"See {IFeeBankCharger-decreaseAvailableCredit}.\"},\"getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"notice\":\"See {IAmountGetter-getMakingAmount}\"},\"getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"notice\":\"See {IAmountGetter-getTakingAmount}\"},\"increaseAvailableCredit(address,uint256)\":{\"notice\":\"See {IFeeBankCharger-increaseAvailableCredit}.\"},\"lastValidated(bytes32)\":{\"notice\":\"See {IMerkleStorageInvalidator-lastValidated}.\"},\"postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"See {IPostInteraction-postInteraction}\"},\"preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"See {IPreInteraction-preInteraction}\"},\"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"See {ITakerInteraction-takerInteraction}.\"}},\"notice\":\"Contract to create escrow contracts for cross-chain atomic swap.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"EscrowFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"EscrowSrc":{"abi":[{"inputs":[{"internalType":"uint32","name":"rescueDelay","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidCaller","type":"error"},{"inputs":[],"name":"InvalidImmutables","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidTime","type":"error"},{"inputs":[],"name":"NativeTokenSendingFailure","type":"error"},{"inputs":[],"name":"SafeTransferFailed","type":"error"},{"anonymous":false,"inputs":[],"name":"EscrowCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRescued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROXY_BYTECODE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"publicCancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"publicWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"rescueFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"internalType":"address","name":"target","type":"address"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60e0346100ed57601f610e0a38819003918201601f19168301916001600160401b038311848410176100f2578084926020946040528339810103126100ed575163ffffffff81168091036100ed573360a0526080526e5af43d82803e903d91602b57fd5bf360205230601152763d602d80600a3d3981f3363d3d373d3d3d363d730000003060881c17600052603760092060c052604051610d019081610109823960805181818160be01526104f9015260a05181818161066e015281816109cd01528181610a7e0152610b04015260c0518181816105ff015281816109a201528181610a530152610ad90152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b60009260e08435811c9283630af97558146107795750826323305703146106925782632dd310001461062257826334862b6a146105c85782634649088b1461045a5782636c10c0c8146102a457826390d3252f146101f5578263daff233e146100e557505063f56cd69c1461008a57600080fd5b346100e157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e157602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b90929150346101f1576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f15763ffffffff60e43580921c9160601c1681018091116101c557421061019f5782610141610a27565b61016c73ffffffffffffffffffffffffffffffffffffffff60a4359080604435169060843516610b34565b61017860c43533610bce565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b6024846011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8380fd5b509050346102a0576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102a05773ffffffffffffffffffffffffffffffffffffffff918260643516330361027a5761025460e435610916565b421061019f578361016c84610267610a27565b60a4359080604435169060843516610b34565b517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b848285346102a0576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102a05781359160243573ffffffffffffffffffffffffffffffffffffffff918282168203610456576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc360112610456578260a43516330361042f576101243561033f8161095f565b42106104075761034e90610916565b4210156103e05761035d610976565b84865260208620606435036103b95750916103a47f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b949260209460e4359160c43516610b34565b6103b16101043533610bce565b51908152a180f35b83517fabab6bd7000000000000000000000000000000000000000000000000000000008152fd5b83517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b5083517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b83517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b838591346102a0576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102a05783359073ffffffffffffffffffffffffffffffffffffffff908183168093036105c457602435916101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc3601126104565760a43516330361059c576104f1610976565b61012435901c7f0000000000000000000000000000000000000000000000000000000000000000014210610574577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac9394508115600014610564576105568133610bce565b82519182526020820152a180f35b61056f813384610b34565b610556565b8483517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b8584517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8480fd5b505050346100e157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e157602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b505050346100e157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e1576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b90929150346101f1576106a4366108b2565b91909373ffffffffffffffffffffffffffffffffffffffff91826060850135163303610751578301356106d68161095f565b4210610407576106e590610916565b4210156103e0576106f583610aae565b848652602086206020840135036103b95750916103b160c08361074960209660a07f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b99970135903390608085013516610b34565b013533610bce565b5083517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b93925090346105c45761078b366108b2565b9290948184013580921c63ffffffff8360201c16810180911161088657421061085f57506107b890610916565b4210156108385773ffffffffffffffffffffffffffffffffffffffff906107de83610aae565b848652602086206020840135036103b95750916103b160c08361074960209660a07f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b99970135908060608501351690608085013516610b34565b82517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b90507f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b6024886011867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b906101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610911576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc60043593011261091157602490565b600080fd5b63ffffffff8160e01c9160401c1681018091116109305790565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff8160e01c911681018091116109305790565b73ffffffffffffffffffffffffffffffffffffffff6055600b60405161010090816044823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036109fd57565b60046040517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff6055600b60405161010090816004823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036109fd57565b6055600b73ffffffffffffffffffffffffffffffffffffffff926040516101008092823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036109fd57565b916044602092600092604051917fa9059cbb0000000000000000000000000000000000000000000000000000000083526004830152602482015282855af19081610bab575b5015610b8157565b60046040517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d15610bc65750600160005114601f3d11165b38610b79565b3b1515610bc0565b60008080809481945af1903d15610cc55767ffffffffffffffff903d828111610c985760405192601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116840190811184821017610c6b57604052825260203d92013e5b15610c4157565b60046040517f8a0332d5000000000000000000000000000000000000000000000000000000008152fd5b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b50610c3a56fea26469706673582212205de98340a55562d97fa0fa479d70183ffd893bc618f5d3b0d8aaa9f73c56b74764736f6c63430008170033","opcodes":"PUSH1 0xE0 CALLVALUE PUSH2 0xED JUMPI PUSH1 0x1F PUSH2 0xE0A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xF2 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xED JUMPI MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xED JUMPI CALLER PUSH1 0xA0 MSTORE PUSH1 0x80 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x20 MSTORE ADDRESS PUSH1 0x11 MSTORE PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 ADDRESS PUSH1 0x88 SHR OR PUSH1 0x0 MSTORE PUSH1 0x37 PUSH1 0x9 KECCAK256 PUSH1 0xC0 MSTORE PUSH1 0x40 MLOAD PUSH2 0xD01 SWAP1 DUP2 PUSH2 0x109 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH1 0xBE ADD MSTORE PUSH2 0x4F9 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x66E ADD MSTORE DUP2 DUP2 PUSH2 0x9CD ADD MSTORE DUP2 DUP2 PUSH2 0xA7E ADD MSTORE PUSH2 0xB04 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x5FF ADD MSTORE DUP2 DUP2 PUSH2 0x9A2 ADD MSTORE DUP2 DUP2 PUSH2 0xA53 ADD MSTORE PUSH2 0xAD9 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH1 0xE0 DUP5 CALLDATALOAD DUP2 SHR SWAP3 DUP4 PUSH4 0xAF97558 EQ PUSH2 0x779 JUMPI POP DUP3 PUSH4 0x23305703 EQ PUSH2 0x692 JUMPI DUP3 PUSH4 0x2DD31000 EQ PUSH2 0x622 JUMPI DUP3 PUSH4 0x34862B6A EQ PUSH2 0x5C8 JUMPI DUP3 PUSH4 0x4649088B EQ PUSH2 0x45A JUMPI DUP3 PUSH4 0x6C10C0C8 EQ PUSH2 0x2A4 JUMPI DUP3 PUSH4 0x90D3252F EQ PUSH2 0x1F5 JUMPI DUP3 PUSH4 0xDAFF233E EQ PUSH2 0xE5 JUMPI POP POP PUSH4 0xF56CD69C EQ PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 POP CALLVALUE PUSH2 0x1F1 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F1 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE4 CALLDATALOAD DUP1 SWAP3 SHR SWAP2 PUSH1 0x60 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1C5 JUMPI TIMESTAMP LT PUSH2 0x19F JUMPI DUP3 PUSH2 0x141 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x16C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA4 CALLDATALOAD SWAP1 DUP1 PUSH1 0x44 CALLDATALOAD AND SWAP1 PUSH1 0x84 CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x178 PUSH1 0xC4 CALLDATALOAD CALLER PUSH2 0xBCE JUMP JUMPDEST PUSH32 0x6E3BE9294E58D10B9C8053CFD5E09871B67E442FE394D6B0870D336B9DF984A9 DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x2A0 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2A0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x64 CALLDATALOAD AND CALLER SUB PUSH2 0x27A JUMPI PUSH2 0x254 PUSH1 0xE4 CALLDATALOAD PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x19F JUMPI DUP4 PUSH2 0x16C DUP5 PUSH2 0x267 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 DUP1 PUSH1 0x44 CALLDATALOAD AND SWAP1 PUSH1 0x84 CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x2A0 JUMPI PUSH2 0x140 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2A0 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 AND DUP3 SUB PUSH2 0x456 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC CALLDATASIZE ADD SLT PUSH2 0x456 JUMPI DUP3 PUSH1 0xA4 CALLDATALOAD AND CALLER SUB PUSH2 0x42F JUMPI PUSH2 0x124 CALLDATALOAD PUSH2 0x33F DUP2 PUSH2 0x95F JUMP JUMPDEST TIMESTAMP LT PUSH2 0x407 JUMPI PUSH2 0x34E SWAP1 PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x35D PUSH2 0x976 JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x64 CALLDATALOAD SUB PUSH2 0x3B9 JUMPI POP SWAP2 PUSH2 0x3A4 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0xE4 CALLDATALOAD SWAP2 PUSH1 0xC4 CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0x104 CALLDATALOAD CALLER PUSH2 0xBCE JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP6 SWAP2 CALLVALUE PUSH2 0x2A0 JUMPI PUSH2 0x140 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2A0 JUMPI DUP4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x5C4 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC CALLDATASIZE ADD SLT PUSH2 0x456 JUMPI PUSH1 0xA4 CALLDATALOAD AND CALLER SUB PUSH2 0x59C JUMPI PUSH2 0x4F1 PUSH2 0x976 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP1 SHR PUSH32 0x0 ADD TIMESTAMP LT PUSH2 0x574 JUMPI PUSH32 0xC4474C2790E13695F6D2B6F1D8E164290B55370F87A542FD7711ABE0A1BF40AC SWAP4 SWAP5 POP DUP2 ISZERO PUSH1 0x0 EQ PUSH2 0x564 JUMPI PUSH2 0x556 DUP2 CALLER PUSH2 0xBCE JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0x56F DUP2 CALLER DUP5 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST DUP5 DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP5 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0xE1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0xE1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP3 SWAP2 POP CALLVALUE PUSH2 0x1F1 JUMPI PUSH2 0x6A4 CALLDATASIZE PUSH2 0x8B2 JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x60 DUP6 ADD CALLDATALOAD AND CALLER SUB PUSH2 0x751 JUMPI DUP4 ADD CALLDATALOAD PUSH2 0x6D6 DUP2 PUSH2 0x95F JUMP JUMPDEST TIMESTAMP LT PUSH2 0x407 JUMPI PUSH2 0x6E5 SWAP1 PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x6F5 DUP4 PUSH2 0xAAE JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x20 DUP5 ADD CALLDATALOAD SUB PUSH2 0x3B9 JUMPI POP SWAP2 PUSH2 0x3B1 PUSH1 0xC0 DUP4 PUSH2 0x749 PUSH1 0x20 SWAP7 PUSH1 0xA0 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP10 SWAP8 ADD CALLDATALOAD SWAP1 CALLER SWAP1 PUSH1 0x80 DUP6 ADD CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST ADD CALLDATALOAD CALLER PUSH2 0xBCE JUMP JUMPDEST POP DUP4 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP4 SWAP3 POP SWAP1 CALLVALUE PUSH2 0x5C4 JUMPI PUSH2 0x78B CALLDATASIZE PUSH2 0x8B2 JUMP JUMPDEST SWAP3 SWAP1 SWAP5 DUP2 DUP5 ADD CALLDATALOAD DUP1 SWAP3 SHR PUSH4 0xFFFFFFFF DUP4 PUSH1 0x20 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x886 JUMPI TIMESTAMP LT PUSH2 0x85F JUMPI POP PUSH2 0x7B8 SWAP1 PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x838 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH2 0x7DE DUP4 PUSH2 0xAAE JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x20 DUP5 ADD CALLDATALOAD SUB PUSH2 0x3B9 JUMPI POP SWAP2 PUSH2 0x3B1 PUSH1 0xC0 DUP4 PUSH2 0x749 PUSH1 0x20 SWAP7 PUSH1 0xA0 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP10 SWAP8 ADD CALLDATALOAD SWAP1 DUP1 PUSH1 0x60 DUP6 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP6 ADD CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST DUP3 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP9 PUSH1 0x11 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x120 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP4 ADD SLT PUSH2 0x911 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC PUSH1 0x4 CALLDATALOAD SWAP4 ADD SLT PUSH2 0x911 JUMPI PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH1 0xE0 SHR SWAP2 PUSH1 0x40 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x930 JUMPI SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH1 0xE0 SHR SWAP2 AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x930 JUMPI SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x55 PUSH1 0xB PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 DUP2 PUSH1 0x44 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x0 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x9FD JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x55 PUSH1 0xB PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 DUP2 PUSH1 0x4 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x0 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x9FD JUMPI JUMP JUMPDEST PUSH1 0x55 PUSH1 0xB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x40 MLOAD PUSH2 0x100 DUP1 SWAP3 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x0 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x9FD JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0xBAB JUMPI JUMPDEST POP ISZERO PUSH2 0xB81 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xFB7F507900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0xBC6 JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0xB79 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 SWAP5 DUP2 SWAP5 GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0xCC5 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 RETURNDATASIZE DUP3 DUP2 GT PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP5 ADD SWAP1 DUP2 GT DUP5 DUP3 LT OR PUSH2 0xC6B JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0xC41 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8A0332D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP PUSH2 0xC3A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xE9 DUP4 BLOCKHASH 0xA5 SSTORE PUSH3 0xD97FA0 STATICCALL SELFBALANCE SWAP14 PUSH17 0x183FFD893BC618F5D3B0D8AAA9F73C56B7 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"225399:4412:0:-:0;;;;;;;;;;;;;-1:-1:-1;;225399:4412:0;;;;-1:-1:-1;;;;;225399:4412:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208568:10;;;208627:26;;35891:488;225399:4412;35891:488;218327:4;35891:488;;;218327:4;35891:488;;;-1:-1:-1;35891:488:0;;;;218281:52;;225399:4412;;;;;;;;208627:26;225399:4412;;;;;;;;;;208568:10;225399:4412;;;;;;;;;;;;;;;;;;;;218281:52;225399:4412;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;225399:4412:0;;;;;;-1:-1:-1;225399:4412:0;;;;;-1:-1:-1;225399:4412:0"},"deployedBytecode":{"functionDebugData":{"abi_decode_bytes32t_struct_Immutables_calldata":{"entryPoint":2226,"id":null,"parameterSlots":1,"returnSlots":2},"fun_ethTransfer":{"entryPoint":3022,"id":8242,"parameterSlots":2,"returnSlots":0},"fun_get":{"entryPoint":2326,"id":3197,"parameterSlots":1,"returnSlots":1},"fun_get_9512":{"entryPoint":2399,"id":3197,"parameterSlots":1,"returnSlots":1},"fun_safeTransfer":{"entryPoint":2868,"id":6745,"parameterSlots":3,"returnSlots":0},"fun_validateImmutables":{"entryPoint":2734,"id":8815,"parameterSlots":1,"returnSlots":0},"fun_validateImmutables_9515":{"entryPoint":2422,"id":8815,"parameterSlots":0,"returnSlots":0},"fun_validateImmutables_9521":{"entryPoint":2599,"id":8815,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"8057":[{"length":32,"start":190},{"length":32,"start":1273}],"8062":[{"length":32,"start":1646},{"length":32,"start":2509},{"length":32,"start":2686},{"length":32,"start":2820}],"8784":[{"length":32,"start":1535},{"length":32,"start":2466},{"length":32,"start":2643},{"length":32,"start":2777}]},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b60009260e08435811c9283630af97558146107795750826323305703146106925782632dd310001461062257826334862b6a146105c85782634649088b1461045a5782636c10c0c8146102a457826390d3252f146101f5578263daff233e146100e557505063f56cd69c1461008a57600080fd5b346100e157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e157602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b90929150346101f1576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f15763ffffffff60e43580921c9160601c1681018091116101c557421061019f5782610141610a27565b61016c73ffffffffffffffffffffffffffffffffffffffff60a4359080604435169060843516610b34565b61017860c43533610bce565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b6024846011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8380fd5b509050346102a0576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102a05773ffffffffffffffffffffffffffffffffffffffff918260643516330361027a5761025460e435610916565b421061019f578361016c84610267610a27565b60a4359080604435169060843516610b34565b517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b848285346102a0576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102a05781359160243573ffffffffffffffffffffffffffffffffffffffff918282168203610456576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc360112610456578260a43516330361042f576101243561033f8161095f565b42106104075761034e90610916565b4210156103e05761035d610976565b84865260208620606435036103b95750916103a47f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b949260209460e4359160c43516610b34565b6103b16101043533610bce565b51908152a180f35b83517fabab6bd7000000000000000000000000000000000000000000000000000000008152fd5b83517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b5083517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b83517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b838591346102a0576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102a05783359073ffffffffffffffffffffffffffffffffffffffff908183168093036105c457602435916101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc3601126104565760a43516330361059c576104f1610976565b61012435901c7f0000000000000000000000000000000000000000000000000000000000000000014210610574577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac9394508115600014610564576105568133610bce565b82519182526020820152a180f35b61056f813384610b34565b610556565b8483517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b8584517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b8480fd5b505050346100e157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e157602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b505050346100e157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e1576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b90929150346101f1576106a4366108b2565b91909373ffffffffffffffffffffffffffffffffffffffff91826060850135163303610751578301356106d68161095f565b4210610407576106e590610916565b4210156103e0576106f583610aae565b848652602086206020840135036103b95750916103b160c08361074960209660a07f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b99970135903390608085013516610b34565b013533610bce565b5083517f48f5c3ed000000000000000000000000000000000000000000000000000000008152fd5b93925090346105c45761078b366108b2565b9290948184013580921c63ffffffff8360201c16810180911161088657421061085f57506107b890610916565b4210156108385773ffffffffffffffffffffffffffffffffffffffff906107de83610aae565b848652602086206020840135036103b95750916103b160c08361074960209660a07f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b99970135908060608501351690608085013516610b34565b82517f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b90507f6f7eac26000000000000000000000000000000000000000000000000000000008152fd5b6024886011867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b906101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610911576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc60043593011261091157602490565b600080fd5b63ffffffff8160e01c9160401c1681018091116109305790565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff8160e01c911681018091116109305790565b73ffffffffffffffffffffffffffffffffffffffff6055600b60405161010090816044823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036109fd57565b60046040517fa269484a000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff6055600b60405161010090816004823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036109fd57565b6055600b73ffffffffffffffffffffffffffffffffffffffff926040516101008092823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036109fd57565b916044602092600092604051917fa9059cbb0000000000000000000000000000000000000000000000000000000083526004830152602482015282855af19081610bab575b5015610b8157565b60046040517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d15610bc65750600160005114601f3d11165b38610b79565b3b1515610bc0565b60008080809481945af1903d15610cc55767ffffffffffffffff903d828111610c985760405192601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116840190811184821017610c6b57604052825260203d92013e5b15610c4157565b60046040517f8a0332d5000000000000000000000000000000000000000000000000000000008152fd5b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b50610c3a56fea26469706673582212205de98340a55562d97fa0fa479d70183ffd893bc618f5d3b0d8aaa9f73c56b74764736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH1 0xE0 DUP5 CALLDATALOAD DUP2 SHR SWAP3 DUP4 PUSH4 0xAF97558 EQ PUSH2 0x779 JUMPI POP DUP3 PUSH4 0x23305703 EQ PUSH2 0x692 JUMPI DUP3 PUSH4 0x2DD31000 EQ PUSH2 0x622 JUMPI DUP3 PUSH4 0x34862B6A EQ PUSH2 0x5C8 JUMPI DUP3 PUSH4 0x4649088B EQ PUSH2 0x45A JUMPI DUP3 PUSH4 0x6C10C0C8 EQ PUSH2 0x2A4 JUMPI DUP3 PUSH4 0x90D3252F EQ PUSH2 0x1F5 JUMPI DUP3 PUSH4 0xDAFF233E EQ PUSH2 0xE5 JUMPI POP POP PUSH4 0xF56CD69C EQ PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 POP CALLVALUE PUSH2 0x1F1 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F1 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE4 CALLDATALOAD DUP1 SWAP3 SHR SWAP2 PUSH1 0x60 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1C5 JUMPI TIMESTAMP LT PUSH2 0x19F JUMPI DUP3 PUSH2 0x141 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x16C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA4 CALLDATALOAD SWAP1 DUP1 PUSH1 0x44 CALLDATALOAD AND SWAP1 PUSH1 0x84 CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x178 PUSH1 0xC4 CALLDATALOAD CALLER PUSH2 0xBCE JUMP JUMPDEST PUSH32 0x6E3BE9294E58D10B9C8053CFD5E09871B67E442FE394D6B0870D336B9DF984A9 DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x2A0 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2A0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x64 CALLDATALOAD AND CALLER SUB PUSH2 0x27A JUMPI PUSH2 0x254 PUSH1 0xE4 CALLDATALOAD PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x19F JUMPI DUP4 PUSH2 0x16C DUP5 PUSH2 0x267 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 DUP1 PUSH1 0x44 CALLDATALOAD AND SWAP1 PUSH1 0x84 CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x2A0 JUMPI PUSH2 0x140 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2A0 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 AND DUP3 SUB PUSH2 0x456 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC CALLDATASIZE ADD SLT PUSH2 0x456 JUMPI DUP3 PUSH1 0xA4 CALLDATALOAD AND CALLER SUB PUSH2 0x42F JUMPI PUSH2 0x124 CALLDATALOAD PUSH2 0x33F DUP2 PUSH2 0x95F JUMP JUMPDEST TIMESTAMP LT PUSH2 0x407 JUMPI PUSH2 0x34E SWAP1 PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x35D PUSH2 0x976 JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x64 CALLDATALOAD SUB PUSH2 0x3B9 JUMPI POP SWAP2 PUSH2 0x3A4 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0xE4 CALLDATALOAD SWAP2 PUSH1 0xC4 CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0x104 CALLDATALOAD CALLER PUSH2 0xBCE JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP6 SWAP2 CALLVALUE PUSH2 0x2A0 JUMPI PUSH2 0x140 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2A0 JUMPI DUP4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x5C4 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC CALLDATASIZE ADD SLT PUSH2 0x456 JUMPI PUSH1 0xA4 CALLDATALOAD AND CALLER SUB PUSH2 0x59C JUMPI PUSH2 0x4F1 PUSH2 0x976 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP1 SHR PUSH32 0x0 ADD TIMESTAMP LT PUSH2 0x574 JUMPI PUSH32 0xC4474C2790E13695F6D2B6F1D8E164290B55370F87A542FD7711ABE0A1BF40AC SWAP4 SWAP5 POP DUP2 ISZERO PUSH1 0x0 EQ PUSH2 0x564 JUMPI PUSH2 0x556 DUP2 CALLER PUSH2 0xBCE JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0x56F DUP2 CALLER DUP5 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST DUP5 DUP4 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP5 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0xE1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0xE1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP3 SWAP2 POP CALLVALUE PUSH2 0x1F1 JUMPI PUSH2 0x6A4 CALLDATASIZE PUSH2 0x8B2 JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x60 DUP6 ADD CALLDATALOAD AND CALLER SUB PUSH2 0x751 JUMPI DUP4 ADD CALLDATALOAD PUSH2 0x6D6 DUP2 PUSH2 0x95F JUMP JUMPDEST TIMESTAMP LT PUSH2 0x407 JUMPI PUSH2 0x6E5 SWAP1 PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x6F5 DUP4 PUSH2 0xAAE JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x20 DUP5 ADD CALLDATALOAD SUB PUSH2 0x3B9 JUMPI POP SWAP2 PUSH2 0x3B1 PUSH1 0xC0 DUP4 PUSH2 0x749 PUSH1 0x20 SWAP7 PUSH1 0xA0 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP10 SWAP8 ADD CALLDATALOAD SWAP1 CALLER SWAP1 PUSH1 0x80 DUP6 ADD CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST ADD CALLDATALOAD CALLER PUSH2 0xBCE JUMP JUMPDEST POP DUP4 MLOAD PUSH32 0x48F5C3ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP4 SWAP3 POP SWAP1 CALLVALUE PUSH2 0x5C4 JUMPI PUSH2 0x78B CALLDATASIZE PUSH2 0x8B2 JUMP JUMPDEST SWAP3 SWAP1 SWAP5 DUP2 DUP5 ADD CALLDATALOAD DUP1 SWAP3 SHR PUSH4 0xFFFFFFFF DUP4 PUSH1 0x20 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x886 JUMPI TIMESTAMP LT PUSH2 0x85F JUMPI POP PUSH2 0x7B8 SWAP1 PUSH2 0x916 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x838 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH2 0x7DE DUP4 PUSH2 0xAAE JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x20 DUP5 ADD CALLDATALOAD SUB PUSH2 0x3B9 JUMPI POP SWAP2 PUSH2 0x3B1 PUSH1 0xC0 DUP4 PUSH2 0x749 PUSH1 0x20 SWAP7 PUSH1 0xA0 PUSH32 0xCE781A18C10C8289803C7C4CFD532D797113C4B41C9701FFAD7D0A632AC555B SWAP10 SWAP8 ADD CALLDATALOAD SWAP1 DUP1 PUSH1 0x60 DUP6 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP6 ADD CALLDATALOAD AND PUSH2 0xB34 JUMP JUMPDEST DUP3 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP9 PUSH1 0x11 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x120 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP4 ADD SLT PUSH2 0x911 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC PUSH1 0x4 CALLDATALOAD SWAP4 ADD SLT PUSH2 0x911 JUMPI PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH1 0xE0 SHR SWAP2 PUSH1 0x40 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x930 JUMPI SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH1 0xE0 SHR SWAP2 AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x930 JUMPI SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x55 PUSH1 0xB PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 DUP2 PUSH1 0x44 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x0 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x9FD JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA269484A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x55 PUSH1 0xB PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 DUP2 PUSH1 0x4 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x0 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x9FD JUMPI JUMP JUMPDEST PUSH1 0x55 PUSH1 0xB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x40 MLOAD PUSH2 0x100 DUP1 SWAP3 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x0 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 AND ADDRESS SUB PUSH2 0x9FD JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0xBAB JUMPI JUMPDEST POP ISZERO PUSH2 0xB81 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xFB7F507900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0xBC6 JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0xB79 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 SWAP5 DUP2 SWAP5 GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0xCC5 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 RETURNDATASIZE DUP3 DUP2 GT PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP5 ADD SWAP1 DUP2 GT DUP5 DUP3 LT OR PUSH2 0xC6B JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0xC41 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8A0332D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP PUSH2 0xC3A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xE9 DUP4 BLOCKHASH 0xA5 SSTORE PUSH3 0xD97FA0 STATICCALL SELFBALANCE SWAP14 PUSH17 0x183FFD893BC618F5D3B0D8AAA9F73C56B7 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"225399:4412:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208447:37;225399:4412;;;;;;;;;;;;;;;;;;;;;;84254:3;228558:20;225399:4412;84254:3;;;;225399:4412;84254:3;;;;;;;;;209177:15;:23;209173:49;;208914:10;;;:::i;:::-;229692:17;225399:4412;229692:17;225399:4412;;;229668:16;225399:4412;722:37;225399:4412;229631:16;225399:4412;722:37;229692:17;:::i;:::-;229745:24;;225399:4412;229733:10;229745:24;:::i;:::-;229785:17;;;;225399:4412;;209173:49;225399:4412;209209:13;;;;84254:3;225399:4412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208745:16;225399:4412;722:37;208731:10;:36;208727:64;;228047:60;:20;225399:4412;228047:60;:::i;:::-;209177:15;:23;209173:49;;208914:10;229692:17;208914:10;;;:::i;:::-;229692:17;225399:4412;;;229668:16;225399:4412;722:37;225399:4412;229631:16;225399:4412;722:37;229692:17;:::i;208727:64::-;225399:4412;208776:15;;;;225399:4412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208745:16;225399:4412;722:37;208731:10;:36;208727:64;;226767:20;225399:4412;226767:58;;;:::i;:::-;209177:15;:23;209173:49;;226846:60;;;:::i;:::-;209177:15;209294:23;;209290:49;;208914:10;;:::i;:::-;210798:104;;;225399:4412;210798:104;;209062:19;225399:4412;209036:45;209032:73;;225399:4412;;229222:17;229315:18;225399:4412;;;;229222:17;225399:4412;;229177:16;225399:4412;722:37;229222:17;:::i;:::-;229275:24;;225399:4412;208731:10;229275:24;:::i;:::-;225399:4412;;;;229315:18;225399:4412;;209032:73;225399:4412;;209090:15;;;;209290:49;225399:4412;;209326:13;;;;209173:49;225399:4412;;;209209:13;;;;208727:64;225399:4412;;208776:15;;;;225399:4412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208745:16;225399:4412;722:37;208731:10;:36;208727:64;;208914:10;;:::i;:::-;209614:20;225399:4412;84254:3;;209647:12;225399:4412;209177:15;:23;209173:49;;209730:27;209937:19;;;;;209933:143;225399:4412;;;209989:6;208731:10;;209989:6;:::i;:::-;225399:4412;;;;;;;;;209730:27;225399:4412;;209933:143;210058:6;208731:10;;210058:6;;:::i;:::-;209933:143;;209173:49;225399:4412;;;209209:13;;;;208727:64;225399:4412;;;208776:15;;;;225399:4412;;;;;;;;;;;;;;;;;;;;;218234:99;225399:4412;;;;;;;;;;;;;;;;;;;;;208533:45;225399:4412;;;;;;;;;;;;;;;:::i;:::-;;;;;208745:16;;;;;225399:4412;722:37;208731:10;:36;208727:64;;226096:20;;225399:4412;226096:58;;;:::i;:::-;209177:15;:23;209173:49;;226175:60;;;:::i;:::-;209177:15;209294:23;;209290:49;;208914:10;;;:::i;:::-;210798:104;;;;;;;209062:19;;225399:4412;209036:45;209032:73;;229222:17;;229275:24;;229222:17;;210798:104;229222:17;;229315:18;229222:17;;;225399:4412;208731:10;;229177:16;;;;225399:4412;722:37;229222:17;:::i;:::-;229275:24;225399:4412;208731:10;229275:24;:::i;208727:64::-;225399:4412;;;208776:15;;;;225399:4412;;;;;;;;;;;:::i;:::-;227396:20;;;;;;225399:4412;84254:3;;;;;85592:2;84254:3;;;;;;;;;209177:15;:23;209173:49;;227481:60;;;;:::i;:::-;209177:15;209294:23;;209290:49;;225399:4412;208914:10;;;;:::i;:::-;210798:104;;;85592:2;210798:104;;85592:2;209062:19;;225399:4412;209036:45;209032:73;;229222:17;;229275:24;;229222:17;;85592:2;229222:17;;229315:18;229222:17;;;225399:4412;227577:16;;;;;225399:4412;722:37;229177:16;;;;225399:4412;722:37;229222:17;:::i;209290:49::-;225399:4412;;209326:13;;;;209173:49;209209:13;;;;;;84254:3;225399:4412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;225399:4412:0;;85415:320;84254:3;;;;;225399:4412;84254:3;;;;;;;;;85415:320;:::o;84254:3::-;225399:4412;-1:-1:-1;225399:4412:0;;;;;-1:-1:-1;225399:4412:0;85415:320;84254:3;;;;;;;;;;;;;85415:320;:::o;218448:282::-;93694:1647;;;153642:195;;;;;225399:4412;153642:195;;;;93694:1647;218625:19;;153642:195;93694:1647;;;;;;;218646:7;93694:1647;;;;;;;;218666:4;218596:75;218592:132;;218448:282::o;218592:132::-;218694:19;153642:195;225399:4412;218694:19;;;;218448:282;93694:1647;;;153642:195;;;;;225399:4412;153642:195;;;;93694:1647;218625:19;;153642:195;93694:1647;;;;;;;218646:7;93694:1647;;;;;;;;218666:4;218596:75;218592:132;;218448:282::o;:::-;93694:1647;;;218448:282;153642:195;;;;;;;;;93694:1647;218625:19;;153642:195;93694:1647;;;;;;;218646:7;93694:1647;;;;;;;;218666:4;218596:75;218592:132;;218448:282::o;174150:229::-;;189629:604;;174150:229;-1:-1:-1;189629:604:0;;;;225399:4412;189629:604;;;;;;;;;;;;;;;;;;174150:229;174266:53;;174262:111;;174150:229::o;174262:111::-;189629:604;;225399:4412;174342:20;;;;189629:604;;-1:-1:-1;189629:604:0;;;;;;-1:-1:-1;189629:604:0;;;;;;;;;;;;;;;;210158:180;210245:28;;;;;;;;;225399:4412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;210287:8;210283:48;;210158:180::o;210283:48::-;210304:27;225399:4412;;210304:27;;;;225399:4412;;;;;;;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{"FACTORY()":"2dd31000","PROXY_BYTECODE_HASH()":"34862b6a","RESCUE_DELAY()":"f56cd69c","cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"90d3252f","publicCancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"daff233e","publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"0af97558","rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"4649088b","withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"23305703","withdrawTo(bytes32,address,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"6c10c0c8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rescueDelay\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROXY_BYTECODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"publicCancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"publicWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"details\":\"Funds are locked in at the time of contract deployment. For this Limit Order Protocol calls the `EscrowFactory.postInteraction` function. To perform any action, the caller must provide the same Immutables values used to deploy the clone contract.\",\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The function works on the time intervals highlighted with capital letters: ---- contract deployed --/-- finality --/-- private withdrawal --/-- public withdrawal --/-- --/-- PRIVATE CANCELLATION --/-- PUBLIC CANCELLATION ----\"},\"publicCancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The function works on the time intervals highlighted with capital letters: ---- contract deployed --/-- finality --/-- private withdrawal --/-- public withdrawal --/-- --/-- private cancellation --/-- PUBLIC CANCELLATION ----\"},\"publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The function works on the time interval highlighted with capital letters: ---- contract deployed --/-- finality --/-- private withdrawal --/-- PUBLIC WITHDRAWAL --/-- --/-- private cancellation --/-- public cancellation ----\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The function works on the time interval highlighted with capital letters: ---- contract deployed --/-- finality --/-- PRIVATE WITHDRAWAL --/-- PUBLIC WITHDRAWAL --/-- --/-- private cancellation --/-- public cancellation ----\"},\"withdrawTo(bytes32,address,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The function works on the time interval highlighted with capital letters: ---- contract deployed --/-- finality --/-- PRIVATE WITHDRAWAL --/-- PUBLIC WITHDRAWAL --/-- --/-- private cancellation --/-- public cancellation ----\"}},\"title\":\"Source Escrow contract for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"FACTORY()\":{\"notice\":\"See {IBaseEscrow-FACTORY}.\"},\"PROXY_BYTECODE_HASH()\":{\"notice\":\"See {IEscrow-PROXY_BYTECODE_HASH}.\"},\"RESCUE_DELAY()\":{\"notice\":\"See {IBaseEscrow-RESCUE_DELAY}.\"},\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IBaseEscrow-cancel}.\"},\"publicCancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IEscrowSrc-publicCancel}.\"},\"publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IEscrowSrc-publicWithdraw}.\"},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IBaseEscrow-rescueFunds}.\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IBaseEscrow-withdraw}.\"},\"withdrawTo(bytes32,address,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"See {IEscrowSrc-withdrawTo}.\"}},\"notice\":\"Contract to initially lock funds and then unlock them with verification of the secret presented.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"EscrowSrc\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"ExtensionLib_0":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212208996777f90184aace6359164912d45779748bce6ba3b38995f67752b2b90d71664736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 SWAP7 PUSH24 0x7F90184AACE6359164912D45779748BCE6BA3B38995F6775 0x2B 0x2B SWAP1 0xD7 AND PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"4136:1742:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212208996777f90184aace6359164912d45779748bce6ba3b38995f67752b2b90d71664736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 SWAP7 PUSH24 0x7F90184AACE6359164912D45779748BCE6BA3B38995F6775 0x2B 0x2B SWAP1 0xD7 AND PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"4136:1742:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Extension Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library to retrieve data from the bitmap.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"ExtensionLib_0\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"ExtensionLib_1":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122058ad0c6283df8352ea7b75ab9dfba4c75ab86010a0b106c0873d253cd2c257d564736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xAD 0xC PUSH3 0x83DF83 MSTORE 0xEA PUSH28 0x75AB9DFBA4C75AB86010A0B106C0873D253CD2C257D564736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"161540:5188:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122058ad0c6283df8352ea7b75ab9dfba4c75ab86010a0b106c0873d253cd2c257d564736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xAD 0xC PUSH3 0x83DF83 MSTORE 0xEA PUSH28 0x75AB9DFBA4C75AB86010A0B106C0873D253CD2C257D564736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"161540:5188:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"ExtensionLib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for retrieving extensions information for the IOrderMixin Interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"ExtensionLib_1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"FeeBank":{"abi":[{"inputs":[{"internalType":"contract IFeeBankCharger","name":"charger","type":"address"},{"internalType":"contract IERC20","name":"feeToken","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"SafeTransferFailed","type":"error"},{"inputs":[],"name":"SafeTransferFromFailed","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"availableCredit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositFor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"permit","type":"bytes"}],"name":"depositForWithPermit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"permit","type":"bytes"}],"name":"depositWithPermit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"gatherFees","outputs":[{"internalType":"uint256","name":"totalAccountFees","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rescueFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60c03461013257601f61129338819003918201601f19168301916001600160401b03831184841017610137578084926060946040528339810103126101325780516001600160a01b0380821682036101325760208301519281841690818503610132576040015182811680910361013257801561011957600080546001600160a01b03198116831782556040519416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a31561010a575060a052608052604051611145908161014e82396080518181816102f90152818161091e01528181610dea0152610e75015260a0518181816102c60152818161071301528181610d8c0152610f4e0152f35b63d92e233d60e01b8152600490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c8063205c2878146108785780632e1a7d4d146108395780632f4f21e2146107f257806332d323a5146107885780635886216f1461068c578063715018a6146105f057806378e3214f1461044e5780638da5cb5b146103f957806397a2cb6414610232578063b6b55f25146101f3578063bfe917341461018a5763f2fde38b146100a557600080fd5b346101865760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610186576100dc6108bf565b906100e5611024565b73ffffffffffffffffffffffffffffffffffffffff8092169283156101575750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b5091346101f057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f0576024359067ffffffffffffffff82116101f057506020926101e16101e992369083016108e7565b913533610915565b9051908152f35b80fd5b5091346101f05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057506101e96020923533610e50565b50903461018657602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057823567ffffffffffffffff80821161018657366023830112156101865781850135908111610186576024943660248360051b850101116103f5579492916102aa611024565b8295839473ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016935b858810610323578a8a8a61031d82337f0000000000000000000000000000000000000000000000000000000000000000611075565b51908152f35b9091929394959698838a60051b830101358381168091036103f15790818c928a5260018084528b8b2054908c51947f5886216f000000000000000000000000000000000000000000000000000000008652838a8701528589818d5afa9283156103e7578f908d946103ab575b600196508d5252818c8c205503019901969594939291906102e8565b94958092939450813d83116103e0575b6103c58183610cda565b810103126103dc57908e600195949392519361038f565b8b80fd5b503d6103bb565b8d513d8e823e3d90fd5b8880fd5b8380fd5b50503461044a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b50903461018657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018657813573ffffffffffffffffffffffffffffffffffffffff8116908181036105ec57602435916104ab611024565b826104b4578580f35b80159081156105ce575b50156105ba575080471061059357838080809333611388f13d1561058e573d67ffffffffffffffff81116105625782519061052160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610cda565b81528460203d92013e5b1561053c5750505b38808080808580f35b517fb12d13eb000000000000000000000000000000000000000000000000000000008152fd5b6024856041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b61052b565b50517ff4d678b8000000000000000000000000000000000000000000000000000000008152fd5b9091506105c992503390611075565b610533565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee915014386104be565b8480fd5b83346101f057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057610627611024565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5091903461044a57602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018657836106c96108bf565b602473ffffffffffffffffffffffffffffffffffffffff9182865195869485937f5886216f00000000000000000000000000000000000000000000000000000000855216908301527f0000000000000000000000000000000000000000000000000000000000000000165afa92831561077d57809361074b575b505051908152f35b909192508382813d8311610776575b6107648183610cda565b810103126101f0575051903880610743565b503d61075a565b8251903d90823e3d90fd5b50346101865760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610186576107c06108bf565b926044359067ffffffffffffffff82116101f05750926107e86101e9926020953691016108e7565b9160243590610915565b50503461044a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a576020906101e96108306108bf565b60243590610e50565b5091346101f05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057506101e96020923533610d4a565b50503461044a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a576020906101e96108b66108bf565b60243590610d4a565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036108e257565b600080fd5b9181601f840112156108e25782359167ffffffffffffffff83116108e257602083818601950101116108e257565b604051909391927f0000000000000000000000000000000000000000000000000000000000000000919083600060648214610c22575093600094918286959493604814610b60578060e014610b27578061010014610aec5780606014610a1657610160146109cc578185926004927f9fd5a6cf0000000000000000000000000000000000000000000000000000000086528386013701925af15b156109c0576109bd91610e50565b90565b6040513d6000823e3d90fd5b610164935061016091507f2b67b5700000000000000000000000000000000000000000000000000000000083526004830137826e22d473030f116ddee9f6b43ac78ba35af16109af565b5060209150604090610164947f2b67b570000000000000000000000000000000000000000000000000000000008552336004860152602485015260148160508601377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff65ffffffffffff9080601484013560e01c0182166064870152601883013560e01c60848701523060a4870152601c83013560e01c011660c485015261010060e4850152816101048501528280820161012486013701610144830137826e22d473030f116ddee9f6b43ac78ba35af16109af565b5084915092610100610104947f8fcbaf0c00000000000000000000000000000000000000000000000000000000855260048501375af16109af565b508491509260e060e4947fd505accf00000000000000000000000000000000000000000000000000000000855260048501375af16109af565b50849150927f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610104947f8fcbaf0c00000000000000000000000000000000000000000000000000000000855233600486015230602486015260206008602883013592803560e01c60448901527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600482013560e01c016064890152600160848901528360ff1c601b0160a48901520160c48701371660e48401525af16109af565b945050908380937f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60e4947fd505accf00000000000000000000000000000000000000000000000000000000855233600486015230602486015260206024604483013592828160448a01377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8382013560e01c0160648901528360ff1c601b0160848901520160a48701371660c48401525af16109af565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610d1b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040517f85eda2de00000000000000000000000000000000000000000000000000000000815233600482015260248101839052600093929091602083604481887f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff165af1928315610e45578593610e10575b506040610e0e93953381526001602052208281540390557f0000000000000000000000000000000000000000000000000000000000000000611075565b565b92506020833d602011610e3d575b81610e2b60209383610cda565b810103126105ec579151916040610dd1565b3d9150610e1e565b6040513d87823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff91828216908115610ffa576064937f00000000000000000000000000000000000000000000000000000000000000006000604051907f23b872dd000000000000000000000000000000000000000000000000000000008252336004830152306024830152846044830152602097889282855af19081610fd7575b5015610fad576000928352600185526040808420805484019055517f3ee5ef1f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff94909416600485015260248401919091528391839160449183917f0000000000000000000000000000000000000000000000000000000000000000165af19182156109c057600092610f8357505090565b90809250813d8311610fa6575b610f9a8183610cda565b810103126108e2575190565b503d610f90565b60046040517ff4059071000000000000000000000000000000000000000000000000000000008152fd5b90503d15610ff25750600160005114601f3d11165b38610edf565b3b1515610fec565b60046040517fd92e233d000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361104557565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b916044602092600092604051917fa9059cbb0000000000000000000000000000000000000000000000000000000083526004830152602482015282855af190816110ec575b50156110c257565b60046040517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d156111075750600160005114601f3d11165b386110ba565b3b151561110156fea2646970667358221220552a3a83b37e5067be598c508f5e5724e322070b2fbdd787200276b277eaf18c64736f6c63430008170033","opcodes":"PUSH1 0xC0 CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x1F PUSH2 0x1293 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x137 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x132 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x132 JUMPI PUSH1 0x20 DUP4 ADD MLOAD SWAP3 DUP2 DUP5 AND SWAP1 DUP2 DUP6 SUB PUSH2 0x132 JUMPI PUSH1 0x40 ADD MLOAD DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x132 JUMPI DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 ISZERO PUSH2 0x10A JUMPI POP PUSH1 0xA0 MSTORE PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1145 SWAP1 DUP2 PUSH2 0x14E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2F9 ADD MSTORE DUP2 DUP2 PUSH2 0x91E ADD MSTORE DUP2 DUP2 PUSH2 0xDEA ADD MSTORE PUSH2 0xE75 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2C6 ADD MSTORE DUP2 DUP2 PUSH2 0x713 ADD MSTORE DUP2 DUP2 PUSH2 0xD8C ADD MSTORE PUSH2 0xF4E ADD MSTORE RETURN JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x205C2878 EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x839 JUMPI DUP1 PUSH4 0x2F4F21E2 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0x32D323A5 EQ PUSH2 0x788 JUMPI DUP1 PUSH4 0x5886216F EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0x78E3214F EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x97A2CB64 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xBFE91734 EQ PUSH2 0x18A JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI PUSH2 0xDC PUSH2 0x8BF JUMP JUMPDEST SWAP1 PUSH2 0xE5 PUSH2 0x1024 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x157 JUMPI POP POP DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F0 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x1E1 PUSH2 0x1E9 SWAP3 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x8E7 JUMP JUMPDEST SWAP2 CALLDATALOAD CALLER PUSH2 0x915 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI POP PUSH2 0x1E9 PUSH1 0x20 SWAP3 CALLDATALOAD CALLER PUSH2 0xE50 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x186 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x186 JUMPI DUP2 DUP6 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x186 JUMPI PUSH1 0x24 SWAP5 CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD GT PUSH2 0x3F5 JUMPI SWAP5 SWAP3 SWAP2 PUSH2 0x2AA PUSH2 0x1024 JUMP JUMPDEST DUP3 SWAP6 DUP4 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND SWAP4 JUMPDEST DUP6 DUP9 LT PUSH2 0x323 JUMPI DUP11 DUP11 DUP11 PUSH2 0x31D DUP3 CALLER PUSH32 0x0 PUSH2 0x1075 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP9 DUP4 DUP11 PUSH1 0x5 SHL DUP4 ADD ADD CALLDATALOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x3F1 JUMPI SWAP1 DUP2 DUP13 SWAP3 DUP11 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE DUP12 DUP12 KECCAK256 SLOAD SWAP1 DUP13 MLOAD SWAP5 PUSH32 0x5886216F00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP4 DUP11 DUP8 ADD MSTORE DUP6 DUP10 DUP2 DUP14 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3E7 JUMPI DUP16 SWAP1 DUP14 SWAP5 PUSH2 0x3AB JUMPI JUMPDEST PUSH1 0x1 SWAP7 POP DUP14 MSTORE MSTORE DUP2 DUP13 DUP13 KECCAK256 SSTORE SUB ADD SWAP10 ADD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST SWAP5 SWAP6 DUP1 SWAP3 SWAP4 SWAP5 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3E0 JUMPI JUMPDEST PUSH2 0x3C5 DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3DC JUMPI SWAP1 DUP15 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 MLOAD SWAP4 PUSH2 0x38F JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3BB JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x186 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x5EC JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x4AB PUSH2 0x1024 JUMP JUMPDEST DUP3 PUSH2 0x4B4 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x5CE JUMPI JUMPDEST POP ISZERO PUSH2 0x5BA JUMPI POP DUP1 SELFBALANCE LT PUSH2 0x593 JUMPI DUP4 DUP1 DUP1 DUP1 SWAP4 CALLER PUSH2 0x1388 CALL RETURNDATASIZE ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x562 JUMPI DUP3 MLOAD SWAP1 PUSH2 0x521 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 MSTORE DUP5 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x53C JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST MLOAD PUSH32 0xB12D13EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH1 0x41 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH2 0x52B JUMP JUMPDEST POP MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x5C9 SWAP3 POP CALLER SWAP1 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP2 POP EQ CODESIZE PUSH2 0x4BE JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x1F0 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0x627 PUSH2 0x1024 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x44A JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI DUP4 PUSH2 0x6C9 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP7 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x5886216F00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND SWAP1 DUP4 ADD MSTORE PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x77D JUMPI DUP1 SWAP4 PUSH2 0x74B JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x776 JUMPI JUMPDEST PUSH2 0x764 DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1F0 JUMPI POP MLOAD SWAP1 CODESIZE DUP1 PUSH2 0x743 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x75A JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI PUSH2 0x7C0 PUSH2 0x8BF JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F0 JUMPI POP SWAP3 PUSH2 0x7E8 PUSH2 0x1E9 SWAP3 PUSH1 0x20 SWAP6 CALLDATASIZE SWAP2 ADD PUSH2 0x8E7 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x915 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1E9 PUSH2 0x830 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xE50 JUMP JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI POP PUSH2 0x1E9 PUSH1 0x20 SWAP3 CALLDATALOAD CALLER PUSH2 0xD4A JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1E9 PUSH2 0x8B6 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x8E2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x8E2 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x8E2 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x8E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP4 SWAP2 SWAP3 PUSH32 0x0 SWAP2 SWAP1 DUP4 PUSH1 0x0 PUSH1 0x64 DUP3 EQ PUSH2 0xC22 JUMPI POP SWAP4 PUSH1 0x0 SWAP5 SWAP2 DUP3 DUP7 SWAP6 SWAP5 SWAP4 PUSH1 0x48 EQ PUSH2 0xB60 JUMPI DUP1 PUSH1 0xE0 EQ PUSH2 0xB27 JUMPI DUP1 PUSH2 0x100 EQ PUSH2 0xAEC JUMPI DUP1 PUSH1 0x60 EQ PUSH2 0xA16 JUMPI PUSH2 0x160 EQ PUSH2 0x9CC JUMPI DUP2 DUP6 SWAP3 PUSH1 0x4 SWAP3 PUSH32 0x9FD5A6CF00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP4 DUP7 ADD CALLDATACOPY ADD SWAP3 GAS CALL JUMPDEST ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BD SWAP2 PUSH2 0xE50 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x164 SWAP4 POP PUSH2 0x160 SWAP2 POP PUSH32 0x2B67B57000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD CALLDATACOPY DUP3 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP PUSH1 0x20 SWAP2 POP PUSH1 0x40 SWAP1 PUSH2 0x164 SWAP5 PUSH32 0x2B67B57000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x14 DUP2 PUSH1 0x50 DUP7 ADD CALLDATACOPY PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF SWAP1 DUP1 PUSH1 0x14 DUP5 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD DUP3 AND PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x18 DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0x84 DUP8 ADD MSTORE ADDRESS PUSH1 0xA4 DUP8 ADD MSTORE PUSH1 0x1C DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD AND PUSH1 0xC4 DUP6 ADD MSTORE PUSH2 0x100 PUSH1 0xE4 DUP6 ADD MSTORE DUP2 PUSH2 0x104 DUP6 ADD MSTORE DUP3 DUP1 DUP3 ADD PUSH2 0x124 DUP7 ADD CALLDATACOPY ADD PUSH2 0x144 DUP4 ADD CALLDATACOPY DUP3 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH2 0x100 PUSH2 0x104 SWAP5 PUSH32 0x8FCBAF0C00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD CALLDATACOPY GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH1 0xE0 PUSH1 0xE4 SWAP5 PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD CALLDATACOPY GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x104 SWAP5 PUSH32 0x8FCBAF0C00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 PUSH1 0x8 PUSH1 0x28 DUP4 ADD CALLDATALOAD SWAP3 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0x44 DUP10 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD PUSH1 0x64 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x84 DUP10 ADD MSTORE DUP4 PUSH1 0xFF SHR PUSH1 0x1B ADD PUSH1 0xA4 DUP10 ADD MSTORE ADD PUSH1 0xC4 DUP8 ADD CALLDATACOPY AND PUSH1 0xE4 DUP5 ADD MSTORE GAS CALL PUSH2 0x9AF JUMP JUMPDEST SWAP5 POP POP SWAP1 DUP4 DUP1 SWAP4 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE4 SWAP5 PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 PUSH1 0x24 PUSH1 0x44 DUP4 ADD CALLDATALOAD SWAP3 DUP3 DUP2 PUSH1 0x44 DUP11 ADD CALLDATACOPY PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD PUSH1 0x64 DUP10 ADD MSTORE DUP4 PUSH1 0xFF SHR PUSH1 0x1B ADD PUSH1 0x84 DUP10 ADD MSTORE ADD PUSH1 0xA4 DUP8 ADD CALLDATACOPY AND PUSH1 0xC4 DUP5 ADD MSTORE GAS CALL PUSH2 0x9AF JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD1B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x85EDA2DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP4 PUSH1 0x44 DUP2 DUP9 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0xE45 JUMPI DUP6 SWAP4 PUSH2 0xE10 JUMPI JUMPDEST POP PUSH1 0x40 PUSH2 0xE0E SWAP4 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 DUP3 DUP2 SLOAD SUB SWAP1 SSTORE PUSH32 0x0 PUSH2 0x1075 JUMP JUMPDEST JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE3D JUMPI JUMPDEST DUP2 PUSH2 0xE2B PUSH1 0x20 SWAP4 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5EC JUMPI SWAP2 MLOAD SWAP2 PUSH1 0x40 PUSH2 0xDD1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0xFFA JUMPI PUSH1 0x64 SWAP4 PUSH32 0x0 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP5 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP3 DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0xFD7 JUMPI JUMPDEST POP ISZERO PUSH2 0xFAD JUMPI PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE MLOAD PUSH32 0x3EE5EF1F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xF83 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xFA6 JUMPI JUMPDEST PUSH2 0xF9A DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8E2 JUMPI MLOAD SWAP1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF405907100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0xFF2 JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0xEDF JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x1045 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0x10EC JUMPI JUMPDEST POP ISZERO PUSH2 0x10C2 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xFB7F507900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0x1107 JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0x10BA JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0x1101 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x2A GASPRICE DUP4 0xB3 PUSH31 0x5067BE598C508F5E5724E322070B2FBDD787200276B277EAF18C64736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"213668:4132:0:-:0;;;;;;;;;;;;;-1:-1:-1;;213668:4132:0;;;;-1:-1:-1;;;;;213668:4132:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;213668:4132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;108971:26;;108967:95;;-1:-1:-1;213668:4132:0;;-1:-1:-1;;;;;;213668:4132:0;;;;;;;;;;;110750:40;;-1:-1:-1;110750:40:0;214073:31;214069:57;;214136:18;;;214164:21;;213668:4132;;;;;;;;214164:21;213668:4132;;;;;;;;;;;;;;;;;;;;214136:18;213668:4132;;;;;;;;;;;;;;;;;;;;;214069:57;-1:-1:-1;;;214113:13:0;;;;;108967:95;213668:4132;;-1:-1:-1;;;109020:31:0;;-1:-1:-1;109020:31:0;;;213668:4132;;;109020:31;213668:4132;-1:-1:-1;213668:4132:0;;;;;;-1:-1:-1;213668:4132:0;;;;;-1:-1:-1;213668:4132:0"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2239,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":2279,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"finalize_allocation":{"entryPoint":3290,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":4132,"id":4122,"parameterSlots":0,"returnSlots":0},"fun_depositFor":{"entryPoint":3664,"id":8707,"parameterSlots":2,"returnSlots":1},"fun_depositForWithPermit":{"entryPoint":2325,"id":8560,"parameterSlots":4,"returnSlots":1},"fun_safeTransfer":{"entryPoint":4213,"id":6745,"parameterSlots":3,"returnSlots":0},"fun_withdrawTo":{"entryPoint":3402,"id":8741,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"8430":[{"length":32,"start":761},{"length":32,"start":2334},{"length":32,"start":3562},{"length":32,"start":3701}],"8433":[{"length":32,"start":710},{"length":32,"start":1811},{"length":32,"start":3468},{"length":32,"start":3918}]},"linkReferences":{},"object":"6040608081526004908136101561001557600080fd5b600091823560e01c8063205c2878146108785780632e1a7d4d146108395780632f4f21e2146107f257806332d323a5146107885780635886216f1461068c578063715018a6146105f057806378e3214f1461044e5780638da5cb5b146103f957806397a2cb6414610232578063b6b55f25146101f3578063bfe917341461018a5763f2fde38b146100a557600080fd5b346101865760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610186576100dc6108bf565b906100e5611024565b73ffffffffffffffffffffffffffffffffffffffff8092169283156101575750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b5091346101f057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f0576024359067ffffffffffffffff82116101f057506020926101e16101e992369083016108e7565b913533610915565b9051908152f35b80fd5b5091346101f05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057506101e96020923533610e50565b50903461018657602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057823567ffffffffffffffff80821161018657366023830112156101865781850135908111610186576024943660248360051b850101116103f5579492916102aa611024565b8295839473ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016935b858810610323578a8a8a61031d82337f0000000000000000000000000000000000000000000000000000000000000000611075565b51908152f35b9091929394959698838a60051b830101358381168091036103f15790818c928a5260018084528b8b2054908c51947f5886216f000000000000000000000000000000000000000000000000000000008652838a8701528589818d5afa9283156103e7578f908d946103ab575b600196508d5252818c8c205503019901969594939291906102e8565b94958092939450813d83116103e0575b6103c58183610cda565b810103126103dc57908e600195949392519361038f565b8b80fd5b503d6103bb565b8d513d8e823e3d90fd5b8880fd5b8380fd5b50503461044a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b50903461018657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018657813573ffffffffffffffffffffffffffffffffffffffff8116908181036105ec57602435916104ab611024565b826104b4578580f35b80159081156105ce575b50156105ba575080471061059357838080809333611388f13d1561058e573d67ffffffffffffffff81116105625782519061052160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610cda565b81528460203d92013e5b1561053c5750505b38808080808580f35b517fb12d13eb000000000000000000000000000000000000000000000000000000008152fd5b6024856041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b61052b565b50517ff4d678b8000000000000000000000000000000000000000000000000000000008152fd5b9091506105c992503390611075565b610533565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee915014386104be565b8480fd5b83346101f057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057610627611024565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5091903461044a57602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018657836106c96108bf565b602473ffffffffffffffffffffffffffffffffffffffff9182865195869485937f5886216f00000000000000000000000000000000000000000000000000000000855216908301527f0000000000000000000000000000000000000000000000000000000000000000165afa92831561077d57809361074b575b505051908152f35b909192508382813d8311610776575b6107648183610cda565b810103126101f0575051903880610743565b503d61075a565b8251903d90823e3d90fd5b50346101865760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610186576107c06108bf565b926044359067ffffffffffffffff82116101f05750926107e86101e9926020953691016108e7565b9160243590610915565b50503461044a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a576020906101e96108306108bf565b60243590610e50565b5091346101f05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057506101e96020923533610d4a565b50503461044a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a576020906101e96108b66108bf565b60243590610d4a565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036108e257565b600080fd5b9181601f840112156108e25782359167ffffffffffffffff83116108e257602083818601950101116108e257565b604051909391927f0000000000000000000000000000000000000000000000000000000000000000919083600060648214610c22575093600094918286959493604814610b60578060e014610b27578061010014610aec5780606014610a1657610160146109cc578185926004927f9fd5a6cf0000000000000000000000000000000000000000000000000000000086528386013701925af15b156109c0576109bd91610e50565b90565b6040513d6000823e3d90fd5b610164935061016091507f2b67b5700000000000000000000000000000000000000000000000000000000083526004830137826e22d473030f116ddee9f6b43ac78ba35af16109af565b5060209150604090610164947f2b67b570000000000000000000000000000000000000000000000000000000008552336004860152602485015260148160508601377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff65ffffffffffff9080601484013560e01c0182166064870152601883013560e01c60848701523060a4870152601c83013560e01c011660c485015261010060e4850152816101048501528280820161012486013701610144830137826e22d473030f116ddee9f6b43ac78ba35af16109af565b5084915092610100610104947f8fcbaf0c00000000000000000000000000000000000000000000000000000000855260048501375af16109af565b508491509260e060e4947fd505accf00000000000000000000000000000000000000000000000000000000855260048501375af16109af565b50849150927f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610104947f8fcbaf0c00000000000000000000000000000000000000000000000000000000855233600486015230602486015260206008602883013592803560e01c60448901527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600482013560e01c016064890152600160848901528360ff1c601b0160a48901520160c48701371660e48401525af16109af565b945050908380937f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60e4947fd505accf00000000000000000000000000000000000000000000000000000000855233600486015230602486015260206024604483013592828160448a01377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8382013560e01c0160648901528360ff1c601b0160848901520160a48701371660c48401525af16109af565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610d1b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040517f85eda2de00000000000000000000000000000000000000000000000000000000815233600482015260248101839052600093929091602083604481887f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff165af1928315610e45578593610e10575b506040610e0e93953381526001602052208281540390557f0000000000000000000000000000000000000000000000000000000000000000611075565b565b92506020833d602011610e3d575b81610e2b60209383610cda565b810103126105ec579151916040610dd1565b3d9150610e1e565b6040513d87823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff91828216908115610ffa576064937f00000000000000000000000000000000000000000000000000000000000000006000604051907f23b872dd000000000000000000000000000000000000000000000000000000008252336004830152306024830152846044830152602097889282855af19081610fd7575b5015610fad576000928352600185526040808420805484019055517f3ee5ef1f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff94909416600485015260248401919091528391839160449183917f0000000000000000000000000000000000000000000000000000000000000000165af19182156109c057600092610f8357505090565b90809250813d8311610fa6575b610f9a8183610cda565b810103126108e2575190565b503d610f90565b60046040517ff4059071000000000000000000000000000000000000000000000000000000008152fd5b90503d15610ff25750600160005114601f3d11165b38610edf565b3b1515610fec565b60046040517fd92e233d000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361104557565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b916044602092600092604051917fa9059cbb0000000000000000000000000000000000000000000000000000000083526004830152602482015282855af190816110ec575b50156110c257565b60046040517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d156111075750600160005114601f3d11165b386110ba565b3b151561110156fea2646970667358221220552a3a83b37e5067be598c508f5e5724e322070b2fbdd787200276b277eaf18c64736f6c63430008170033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x205C2878 EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x839 JUMPI DUP1 PUSH4 0x2F4F21E2 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0x32D323A5 EQ PUSH2 0x788 JUMPI DUP1 PUSH4 0x5886216F EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0x78E3214F EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x97A2CB64 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xBFE91734 EQ PUSH2 0x18A JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI PUSH2 0xDC PUSH2 0x8BF JUMP JUMPDEST SWAP1 PUSH2 0xE5 PUSH2 0x1024 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x157 JUMPI POP POP DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F0 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x1E1 PUSH2 0x1E9 SWAP3 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x8E7 JUMP JUMPDEST SWAP2 CALLDATALOAD CALLER PUSH2 0x915 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI POP PUSH2 0x1E9 PUSH1 0x20 SWAP3 CALLDATALOAD CALLER PUSH2 0xE50 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x186 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x186 JUMPI DUP2 DUP6 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x186 JUMPI PUSH1 0x24 SWAP5 CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD GT PUSH2 0x3F5 JUMPI SWAP5 SWAP3 SWAP2 PUSH2 0x2AA PUSH2 0x1024 JUMP JUMPDEST DUP3 SWAP6 DUP4 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND SWAP4 JUMPDEST DUP6 DUP9 LT PUSH2 0x323 JUMPI DUP11 DUP11 DUP11 PUSH2 0x31D DUP3 CALLER PUSH32 0x0 PUSH2 0x1075 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP9 DUP4 DUP11 PUSH1 0x5 SHL DUP4 ADD ADD CALLDATALOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x3F1 JUMPI SWAP1 DUP2 DUP13 SWAP3 DUP11 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE DUP12 DUP12 KECCAK256 SLOAD SWAP1 DUP13 MLOAD SWAP5 PUSH32 0x5886216F00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP4 DUP11 DUP8 ADD MSTORE DUP6 DUP10 DUP2 DUP14 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3E7 JUMPI DUP16 SWAP1 DUP14 SWAP5 PUSH2 0x3AB JUMPI JUMPDEST PUSH1 0x1 SWAP7 POP DUP14 MSTORE MSTORE DUP2 DUP13 DUP13 KECCAK256 SSTORE SUB ADD SWAP10 ADD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST SWAP5 SWAP6 DUP1 SWAP3 SWAP4 SWAP5 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3E0 JUMPI JUMPDEST PUSH2 0x3C5 DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3DC JUMPI SWAP1 DUP15 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 MLOAD SWAP4 PUSH2 0x38F JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3BB JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x186 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x5EC JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x4AB PUSH2 0x1024 JUMP JUMPDEST DUP3 PUSH2 0x4B4 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x5CE JUMPI JUMPDEST POP ISZERO PUSH2 0x5BA JUMPI POP DUP1 SELFBALANCE LT PUSH2 0x593 JUMPI DUP4 DUP1 DUP1 DUP1 SWAP4 CALLER PUSH2 0x1388 CALL RETURNDATASIZE ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x562 JUMPI DUP3 MLOAD SWAP1 PUSH2 0x521 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 MSTORE DUP5 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x53C JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST MLOAD PUSH32 0xB12D13EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH1 0x41 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH2 0x52B JUMP JUMPDEST POP MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x5C9 SWAP3 POP CALLER SWAP1 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP2 POP EQ CODESIZE PUSH2 0x4BE JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x1F0 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0x627 PUSH2 0x1024 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x44A JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI DUP4 PUSH2 0x6C9 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP7 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x5886216F00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND SWAP1 DUP4 ADD MSTORE PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x77D JUMPI DUP1 SWAP4 PUSH2 0x74B JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x776 JUMPI JUMPDEST PUSH2 0x764 DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1F0 JUMPI POP MLOAD SWAP1 CODESIZE DUP1 PUSH2 0x743 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x75A JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI PUSH2 0x7C0 PUSH2 0x8BF JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F0 JUMPI POP SWAP3 PUSH2 0x7E8 PUSH2 0x1E9 SWAP3 PUSH1 0x20 SWAP6 CALLDATASIZE SWAP2 ADD PUSH2 0x8E7 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x915 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1E9 PUSH2 0x830 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xE50 JUMP JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI POP PUSH2 0x1E9 PUSH1 0x20 SWAP3 CALLDATALOAD CALLER PUSH2 0xD4A JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1E9 PUSH2 0x8B6 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x8E2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x8E2 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x8E2 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x8E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP4 SWAP2 SWAP3 PUSH32 0x0 SWAP2 SWAP1 DUP4 PUSH1 0x0 PUSH1 0x64 DUP3 EQ PUSH2 0xC22 JUMPI POP SWAP4 PUSH1 0x0 SWAP5 SWAP2 DUP3 DUP7 SWAP6 SWAP5 SWAP4 PUSH1 0x48 EQ PUSH2 0xB60 JUMPI DUP1 PUSH1 0xE0 EQ PUSH2 0xB27 JUMPI DUP1 PUSH2 0x100 EQ PUSH2 0xAEC JUMPI DUP1 PUSH1 0x60 EQ PUSH2 0xA16 JUMPI PUSH2 0x160 EQ PUSH2 0x9CC JUMPI DUP2 DUP6 SWAP3 PUSH1 0x4 SWAP3 PUSH32 0x9FD5A6CF00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP4 DUP7 ADD CALLDATACOPY ADD SWAP3 GAS CALL JUMPDEST ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BD SWAP2 PUSH2 0xE50 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x164 SWAP4 POP PUSH2 0x160 SWAP2 POP PUSH32 0x2B67B57000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD CALLDATACOPY DUP3 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP PUSH1 0x20 SWAP2 POP PUSH1 0x40 SWAP1 PUSH2 0x164 SWAP5 PUSH32 0x2B67B57000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x14 DUP2 PUSH1 0x50 DUP7 ADD CALLDATACOPY PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF SWAP1 DUP1 PUSH1 0x14 DUP5 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD DUP3 AND PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x18 DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0x84 DUP8 ADD MSTORE ADDRESS PUSH1 0xA4 DUP8 ADD MSTORE PUSH1 0x1C DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD AND PUSH1 0xC4 DUP6 ADD MSTORE PUSH2 0x100 PUSH1 0xE4 DUP6 ADD MSTORE DUP2 PUSH2 0x104 DUP6 ADD MSTORE DUP3 DUP1 DUP3 ADD PUSH2 0x124 DUP7 ADD CALLDATACOPY ADD PUSH2 0x144 DUP4 ADD CALLDATACOPY DUP3 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH2 0x100 PUSH2 0x104 SWAP5 PUSH32 0x8FCBAF0C00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD CALLDATACOPY GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH1 0xE0 PUSH1 0xE4 SWAP5 PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD CALLDATACOPY GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x104 SWAP5 PUSH32 0x8FCBAF0C00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 PUSH1 0x8 PUSH1 0x28 DUP4 ADD CALLDATALOAD SWAP3 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0x44 DUP10 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD PUSH1 0x64 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x84 DUP10 ADD MSTORE DUP4 PUSH1 0xFF SHR PUSH1 0x1B ADD PUSH1 0xA4 DUP10 ADD MSTORE ADD PUSH1 0xC4 DUP8 ADD CALLDATACOPY AND PUSH1 0xE4 DUP5 ADD MSTORE GAS CALL PUSH2 0x9AF JUMP JUMPDEST SWAP5 POP POP SWAP1 DUP4 DUP1 SWAP4 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE4 SWAP5 PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 PUSH1 0x24 PUSH1 0x44 DUP4 ADD CALLDATALOAD SWAP3 DUP3 DUP2 PUSH1 0x44 DUP11 ADD CALLDATACOPY PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD PUSH1 0x64 DUP10 ADD MSTORE DUP4 PUSH1 0xFF SHR PUSH1 0x1B ADD PUSH1 0x84 DUP10 ADD MSTORE ADD PUSH1 0xA4 DUP8 ADD CALLDATACOPY AND PUSH1 0xC4 DUP5 ADD MSTORE GAS CALL PUSH2 0x9AF JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD1B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x85EDA2DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP4 PUSH1 0x44 DUP2 DUP9 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0xE45 JUMPI DUP6 SWAP4 PUSH2 0xE10 JUMPI JUMPDEST POP PUSH1 0x40 PUSH2 0xE0E SWAP4 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 DUP3 DUP2 SLOAD SUB SWAP1 SSTORE PUSH32 0x0 PUSH2 0x1075 JUMP JUMPDEST JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE3D JUMPI JUMPDEST DUP2 PUSH2 0xE2B PUSH1 0x20 SWAP4 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5EC JUMPI SWAP2 MLOAD SWAP2 PUSH1 0x40 PUSH2 0xDD1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0xFFA JUMPI PUSH1 0x64 SWAP4 PUSH32 0x0 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP5 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP3 DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0xFD7 JUMPI JUMPDEST POP ISZERO PUSH2 0xFAD JUMPI PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE MLOAD PUSH32 0x3EE5EF1F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xF83 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xFA6 JUMPI JUMPDEST PUSH2 0xF9A DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8E2 JUMPI MLOAD SWAP1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF405907100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0xFF2 JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0xEDF JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x1045 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0x10EC JUMPI JUMPDEST POP ISZERO PUSH2 0x10C2 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xFB7F507900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0x1107 JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0x10BA JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0x1101 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x2A GASPRICE DUP4 0xB3 PUSH31 0x5067BE598C508F5E5724E322070B2FBDD787200276B277EAF18C64736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"213668:4132:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;109198:62;;;:::i;:::-;213668:4132;;;;110325:22;;;110321:91;;213668:4132;;;;;;;;;;;;110750:40;;;;213668:4132;;110321:91;213668:4132;;;;;110370:31;;;;;;213668:4132;110370:31;213668:4132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;214945:48;213668:4132;;;;;;:::i;:::-;;;214966:10;214945:48;:::i;:::-;213668:4132;;;;;;;;;;;;;;;;;;;;;;;214530:31;213668:4132;;;214542:10;214530:31;:::i;213668:4132::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;109198:62;;;;;:::i;:::-;109252:1;216103:13;;213668:4132;;216303:8;;213668:4132;216098:445;216118:18;;;;;;216586:10;;;216598:16;216586:10;;216562;216598:16;:::i;:::-;213668:4132;;;;;216138:3;213668:4132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;216303:33;213668:4132;216303:33;;;;;;213668:4132;216303:33;;;;;;;;;;;;;;;;;216138:3;213668:4132;;;;;;;;;;;;;216138:3;213668:4132;216103:13;;;;;;;;;216303:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;213668:4132;;;;;;;;;;;;216303:33;;;213668:4132;;;;216303:33;;;;;;213668:4132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;109198:62;;;:::i;:::-;202507:10;202503:438;;213668:4132;;;202503:438;201524:22;;:47;;;;;202503:438;-1:-1:-1;202537:12:0;;;202573:21;;;:30;202569:64;;217771:10;;;;;;201105:4;202737:52;201105:4;;;;;;;;;;213668:4132;;;201105:4;213668:4132;;;;;;201105:4;;;:::i;:::-;;;;213668:4132;201105:4;;;;;202811:8;202807:40;;202533:398;;;202503:438;;;;;213668:4132;;;202807:40;213668:4132;202828:19;;;;201105:4;213668:4132;;;;;;;;;201105:4;;;202569:64;213668:4132;;202612:21;;;;202533:398;217771:10;;;202886:30;217771:10;;;202886:30;;:::i;:::-;202533:398;;201524:47;201161:42;201550:21;;;201524:47;;;213668:4132;;;;;;;;;;;;;;;;109198:62;;:::i;:::-;213668:4132;;;;;;;;;;110750:40;;;;213668:4132;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;214352:33;;;;;213668:4132;214352:33;;213668:4132;214352:33;;;213668:4132;214352:8;213668:4132;214352:33;;;;;;;;;;;213668:4132;;;;;;;;214352:33;;;;;;;;;;;;;;;;;;:::i;:::-;;;213668:4132;;;;;;214352:33;;;;;;;;;;;213668:4132;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;214729:28;213668:4132;;:::i;:::-;;;214729:28;;:::i;213668:4132::-;;;;;;;;;;;;;;215446:31;213668:4132;;;215458:10;215446:31;:::i;213668:4132::-;;;;;;;;;;;;;;;215645:28;213668:4132;;:::i;:::-;;;215645:28;;:::i;213668:4132::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;215074:232::-;181790:6950;;215074:232;;;;215225:10;;181790:6950;215074:232;-1:-1:-1;181790:6950:0;;;;;-1:-1:-1;;;;;;;;;;181790:6950:0;-1:-1:-1;;;;181790:6950:0;-1:-1:-1;;;;181790:6950:0;-1:-1:-1;;;;181790:6950:0;-1:-1:-1;;;181790:6950:0;-1:-1:-1;;;181790:6950:0;;;;;181750:30;181790:6950;;;;;;;;;;;178025:52;178021:90;;215271:28;;;:::i;:::-;215074:232;:::o;178021:90::-;181790:6950;213668:4132;;-1:-1:-1;213668:4132:0;;;;;181790:6950;;;;;;;181685:24;181790:6950;;;;;;;;;;;;;;;;;;;;;181685:24;181790:6950;;178043:10;181790:6950;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;178063:4;181790:6950;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;181620:30;181790:6950;;;;;;;;;;;;;;;;;;;181555:28;181790:6950;;;;;;;;;;;;;;;;;;;181620:30;181790:6950;;178043:10;181790:6950;;;;178063:4;181790:6950;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;181555:28;181790:6950;;178043:10;181790:6950;;;;178063:4;181790:6950;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213668:4132;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;217093:386;213668:4132;;;217228:52;;217261:10;217228:52;;;213668:4132;;;;;;;-1:-1:-1;;217093:386:0;213668:4132;;217228:52;213668:4132;;;-1:-1:-1;217228:8:0;213668:4132;;217228:52;;;;;;;;;;;217093:386;217205:75;213668:4132;217465:6;217205:75;217261:10;;213668:4132;;217314:16;217228:52;213668:4132;;;;;;;;217432:10;217465:6;:::i;:::-;217093:386::o;217228:52::-;;;;;;;;;;;;;;;;;:::i;:::-;;;213668:4132;;;;;;;;217228:52;;;;;-1:-1:-1;217228:52:0;;;213668:4132;;;;;;;;;216628:459;213668:4132;;;;;216744:21;;;216740:47;;171246:645;216797:10;;216763:1;171246:645;;;213668:4132;171246:645;;216825:10;171246:645;;;;216845:4;171246:645;;;;;;;;;;;;;;;;;;;;;216628:459;171904:8;;171900:45;;216763:1;213668:4132;;;216893:16;213668:4132;;171246:645;213668:4132;;;;;;;;;;;217031:49;;213668:4132;;;;;171246:645;217031:49;;213668:4132;;;;;;;;;;;;;;;;217031:8;213668:4132;217031:49;;;;;;;216763:1;217031:49;;;217008:72;;216628:459;:::o;217031:49::-;;;;;;;;;;;;;;;;:::i;:::-;;;213668:4132;;;;;216628:459;:::o;217031:49::-;;;;;171900:45;171246:645;;213668:4132;171921:24;;;;171246:645;;-1:-1:-1;171246:645:0;;;;;;216763:1;171246:645;;;;;;;;;;;;;;;;216740:47;216774:13;213668:4132;;216774:13;;;;109494:162;213668:4132;109408:6;213668:4132;;2873:10;109553:23;109549:101;;109494:162::o;109549:101::-;213668:4132;;;109599:40;;;2873:10;109599:40;;;213668:4132;109599:40;174150:229;;189629:604;;174150:229;-1:-1:-1;189629:604:0;;;;213668:4132;189629:604;;;;;;;;;;;;;;;;;;174150:229;174266:53;;174262:111;;174150:229::o;174262:111::-;189629:604;;213668:4132;174342:20;;;;189629:604;;-1:-1:-1;189629:604:0;;;;;;-1:-1:-1;189629:604:0;;;;;;;;;;;;;;;"},"methodIdentifiers":{"availableCredit(address)":"5886216f","deposit(uint256)":"b6b55f25","depositFor(address,uint256)":"2f4f21e2","depositForWithPermit(address,uint256,bytes)":"32d323a5","depositWithPermit(uint256,bytes)":"bfe91734","gatherFees(address[])":"97a2cb64","owner()":"8da5cb5b","renounceOwnership()":"715018a6","rescueFunds(address,uint256)":"78e3214f","transferOwnership(address)":"f2fde38b","withdraw(uint256)":"2e1a7d4d","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFeeBankCharger\",\"name\":\"charger\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFromFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"}],\"name\":\"depositForWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"}],\"name\":\"depositWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"gatherFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAccountFees\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"FeeBank is coupled with FeeBankCharger to actually charge fees.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"gatherFees(address[])\":{\"params\":{\"accounts\":\"Accounts whose commissions are being withdrawn.\"},\"returns\":{\"totalAccountFees\":\"The total amount of accounts commissions.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"rescueFunds(address,uint256)\":{\"params\":{\"amount\":\"amount to retrieve\",\"token\":\"ERC20 token to retrieve\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"FeeBank\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"availableCredit(address)\":{\"notice\":\"See {IFeeBank-availableCredit}.\"},\"deposit(uint256)\":{\"notice\":\"See {IFeeBank-deposit}.\"},\"depositFor(address,uint256)\":{\"notice\":\"See {IFeeBank-depositFor}.\"},\"depositForWithPermit(address,uint256,bytes)\":{\"notice\":\"See {IFeeBank-depositForWithPermit}.\"},\"depositWithPermit(uint256,bytes)\":{\"notice\":\"See {IFeeBank-depositWithPermit}.\"},\"gatherFees(address[])\":{\"notice\":\"Admin method returns commissions spent by users.\"},\"rescueFunds(address,uint256)\":{\"notice\":\"Retrieves funds accidently sent directly to the contract address\"},\"withdraw(uint256)\":{\"notice\":\"See {IFeeBank-withdraw}.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"See {IFeeBank-withdrawTo}.\"}},\"notice\":\"FeeBank contract introduces a credit system for paying fees. A user can deposit tokens to the FeeBank contract, obtain credits and then use them to pay fees.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"FeeBank\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"FeeBankCharger":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"feeToken","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"NotEnoughCredit","type":"error"},{"inputs":[],"name":"OnlyFeeBankAccess","type":"error"},{"inputs":[],"name":"FEE_BANK","outputs":[{"internalType":"contract IFeeBank","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"availableCredit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAvailableCredit","outputs":[{"internalType":"uint256","name":"allowance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"increaseAvailableCredit","outputs":[{"internalType":"uint256","name":"allowance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0346100e4576116ae906001600160401b03601f38849003908101601f1916830190828211848310176100ce57808491604096879485528339810103126100e45781516001600160a01b0392838216918290036100e457602001518381168091036100e45784519261129391828501918211858310176100ce57606093859361041b85393083526020830152868201520301906000f080156100c357166080525161033190816100ea8239608051818181609e015281816101f901526102af0152f35b82513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604090808252600436101561001557600080fd5b600090813560e01c9081632ce26aeb14610265575080633ee5ef1f146101a85780635886216f14610143576385eda2de1461004f57600080fd5b3461014057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610140576100856102d3565b73ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361011757168152806020528181209182549160243583039283116100ea5750816020935551908152f35b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526011600452fd5b600484517fa4544199000000000000000000000000000000000000000000000000000000008152fd5b80fd5b5090346101a45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4578060209273ffffffffffffffffffffffffffffffffffffffff6101956102d3565b16815280845220549051908152f35b5080fd5b5090346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576101e06102d3565b73ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361023c57928291602094168152808452209060243582540180925551908152f35b600483517fa4544199000000000000000000000000000000000000000000000000000000008152fd5b9050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a45760209073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102f657565b600080fdfea2646970667358221220f7115bdb71ec2d33dab4482785cceb141561d7c9fec85a137ee244560077f26264736f6c6343000817003360c03461013257601f61129338819003918201601f19168301916001600160401b03831184841017610137578084926060946040528339810103126101325780516001600160a01b0380821682036101325760208301519281841690818503610132576040015182811680910361013257801561011957600080546001600160a01b03198116831782556040519416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a31561010a575060a052608052604051611145908161014e82396080518181816102f90152818161091e01528181610dea0152610e75015260a0518181816102c60152818161071301528181610d8c0152610f4e0152f35b63d92e233d60e01b8152600490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c8063205c2878146108785780632e1a7d4d146108395780632f4f21e2146107f257806332d323a5146107885780635886216f1461068c578063715018a6146105f057806378e3214f1461044e5780638da5cb5b146103f957806397a2cb6414610232578063b6b55f25146101f3578063bfe917341461018a5763f2fde38b146100a557600080fd5b346101865760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610186576100dc6108bf565b906100e5611024565b73ffffffffffffffffffffffffffffffffffffffff8092169283156101575750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b5091346101f057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f0576024359067ffffffffffffffff82116101f057506020926101e16101e992369083016108e7565b913533610915565b9051908152f35b80fd5b5091346101f05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057506101e96020923533610e50565b50903461018657602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057823567ffffffffffffffff80821161018657366023830112156101865781850135908111610186576024943660248360051b850101116103f5579492916102aa611024565b8295839473ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016935b858810610323578a8a8a61031d82337f0000000000000000000000000000000000000000000000000000000000000000611075565b51908152f35b9091929394959698838a60051b830101358381168091036103f15790818c928a5260018084528b8b2054908c51947f5886216f000000000000000000000000000000000000000000000000000000008652838a8701528589818d5afa9283156103e7578f908d946103ab575b600196508d5252818c8c205503019901969594939291906102e8565b94958092939450813d83116103e0575b6103c58183610cda565b810103126103dc57908e600195949392519361038f565b8b80fd5b503d6103bb565b8d513d8e823e3d90fd5b8880fd5b8380fd5b50503461044a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b50903461018657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018657813573ffffffffffffffffffffffffffffffffffffffff8116908181036105ec57602435916104ab611024565b826104b4578580f35b80159081156105ce575b50156105ba575080471061059357838080809333611388f13d1561058e573d67ffffffffffffffff81116105625782519061052160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610cda565b81528460203d92013e5b1561053c5750505b38808080808580f35b517fb12d13eb000000000000000000000000000000000000000000000000000000008152fd5b6024856041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b61052b565b50517ff4d678b8000000000000000000000000000000000000000000000000000000008152fd5b9091506105c992503390611075565b610533565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee915014386104be565b8480fd5b83346101f057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057610627611024565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5091903461044a57602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018657836106c96108bf565b602473ffffffffffffffffffffffffffffffffffffffff9182865195869485937f5886216f00000000000000000000000000000000000000000000000000000000855216908301527f0000000000000000000000000000000000000000000000000000000000000000165afa92831561077d57809361074b575b505051908152f35b909192508382813d8311610776575b6107648183610cda565b810103126101f0575051903880610743565b503d61075a565b8251903d90823e3d90fd5b50346101865760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610186576107c06108bf565b926044359067ffffffffffffffff82116101f05750926107e86101e9926020953691016108e7565b9160243590610915565b50503461044a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a576020906101e96108306108bf565b60243590610e50565b5091346101f05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f057506101e96020923533610d4a565b50503461044a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261044a576020906101e96108b66108bf565b60243590610d4a565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036108e257565b600080fd5b9181601f840112156108e25782359167ffffffffffffffff83116108e257602083818601950101116108e257565b604051909391927f0000000000000000000000000000000000000000000000000000000000000000919083600060648214610c22575093600094918286959493604814610b60578060e014610b27578061010014610aec5780606014610a1657610160146109cc578185926004927f9fd5a6cf0000000000000000000000000000000000000000000000000000000086528386013701925af15b156109c0576109bd91610e50565b90565b6040513d6000823e3d90fd5b610164935061016091507f2b67b5700000000000000000000000000000000000000000000000000000000083526004830137826e22d473030f116ddee9f6b43ac78ba35af16109af565b5060209150604090610164947f2b67b570000000000000000000000000000000000000000000000000000000008552336004860152602485015260148160508601377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff65ffffffffffff9080601484013560e01c0182166064870152601883013560e01c60848701523060a4870152601c83013560e01c011660c485015261010060e4850152816101048501528280820161012486013701610144830137826e22d473030f116ddee9f6b43ac78ba35af16109af565b5084915092610100610104947f8fcbaf0c00000000000000000000000000000000000000000000000000000000855260048501375af16109af565b508491509260e060e4947fd505accf00000000000000000000000000000000000000000000000000000000855260048501375af16109af565b50849150927f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610104947f8fcbaf0c00000000000000000000000000000000000000000000000000000000855233600486015230602486015260206008602883013592803560e01c60448901527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600482013560e01c016064890152600160848901528360ff1c601b0160a48901520160c48701371660e48401525af16109af565b945050908380937f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60e4947fd505accf00000000000000000000000000000000000000000000000000000000855233600486015230602486015260206024604483013592828160448a01377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8382013560e01c0160648901528360ff1c601b0160848901520160a48701371660c48401525af16109af565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610d1b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040517f85eda2de00000000000000000000000000000000000000000000000000000000815233600482015260248101839052600093929091602083604481887f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff165af1928315610e45578593610e10575b506040610e0e93953381526001602052208281540390557f0000000000000000000000000000000000000000000000000000000000000000611075565b565b92506020833d602011610e3d575b81610e2b60209383610cda565b810103126105ec579151916040610dd1565b3d9150610e1e565b6040513d87823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff91828216908115610ffa576064937f00000000000000000000000000000000000000000000000000000000000000006000604051907f23b872dd000000000000000000000000000000000000000000000000000000008252336004830152306024830152846044830152602097889282855af19081610fd7575b5015610fad576000928352600185526040808420805484019055517f3ee5ef1f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff94909416600485015260248401919091528391839160449183917f0000000000000000000000000000000000000000000000000000000000000000165af19182156109c057600092610f8357505090565b90809250813d8311610fa6575b610f9a8183610cda565b810103126108e2575190565b503d610f90565b60046040517ff4059071000000000000000000000000000000000000000000000000000000008152fd5b90503d15610ff25750600160005114601f3d11165b38610edf565b3b1515610fec565b60046040517fd92e233d000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361104557565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b916044602092600092604051917fa9059cbb0000000000000000000000000000000000000000000000000000000083526004830152602482015282855af190816110ec575b50156110c257565b60046040517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d156111075750600160005114601f3d11165b386110ba565b3b151561110156fea2646970667358221220552a3a83b37e5067be598c508f5e5724e322070b2fbdd787200276b277eaf18c64736f6c63430008170033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH2 0xE4 JUMPI PUSH2 0x16AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1F CODESIZE DUP5 SWAP1 SUB SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP1 DUP3 DUP3 GT DUP5 DUP4 LT OR PUSH2 0xCE JUMPI DUP1 DUP5 SWAP2 PUSH1 0x40 SWAP7 DUP8 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xE4 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP3 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0xE4 JUMPI PUSH1 0x20 ADD MLOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xE4 JUMPI DUP5 MLOAD SWAP3 PUSH2 0x1293 SWAP2 DUP3 DUP6 ADD SWAP2 DUP3 GT DUP6 DUP4 LT OR PUSH2 0xCE JUMPI PUSH1 0x60 SWAP4 DUP6 SWAP4 PUSH2 0x41B DUP6 CODECOPY ADDRESS DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE DUP7 DUP3 ADD MSTORE SUB ADD SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH2 0xC3 JUMPI AND PUSH1 0x80 MSTORE MLOAD PUSH2 0x331 SWAP1 DUP2 PUSH2 0xEA DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH1 0x9E ADD MSTORE DUP2 DUP2 PUSH2 0x1F9 ADD MSTORE PUSH2 0x2AF ADD MSTORE RETURN JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2CE26AEB EQ PUSH2 0x265 JUMPI POP DUP1 PUSH4 0x3EE5EF1F EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5886216F EQ PUSH2 0x143 JUMPI PUSH4 0x85EDA2DE EQ PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x140 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH2 0x85 PUSH2 0x2D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x117 JUMPI AND DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 SUB SWAP3 DUP4 GT PUSH2 0xEA JUMPI POP DUP2 PUSH1 0x20 SWAP4 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x4 DUP5 MLOAD PUSH32 0xA454419900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x195 PUSH2 0x2D3 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH2 0x1E0 PUSH2 0x2D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x23C JUMPI SWAP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 SLOAD ADD DUP1 SWAP3 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 DUP4 MLOAD PUSH32 0xA454419900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2F6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 GT JUMPDEST 0xDB PUSH18 0xEC2D33DAB4482785CCEB141561D7C9FEC85A SGT PUSH31 0xE244560077F26264736F6C6343000817003360C03461013257601F61129338 DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x137 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x132 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x132 JUMPI PUSH1 0x20 DUP4 ADD MLOAD SWAP3 DUP2 DUP5 AND SWAP1 DUP2 DUP6 SUB PUSH2 0x132 JUMPI PUSH1 0x40 ADD MLOAD DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x132 JUMPI DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 ISZERO PUSH2 0x10A JUMPI POP PUSH1 0xA0 MSTORE PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1145 SWAP1 DUP2 PUSH2 0x14E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2F9 ADD MSTORE DUP2 DUP2 PUSH2 0x91E ADD MSTORE DUP2 DUP2 PUSH2 0xDEA ADD MSTORE PUSH2 0xE75 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2C6 ADD MSTORE DUP2 DUP2 PUSH2 0x713 ADD MSTORE DUP2 DUP2 PUSH2 0xD8C ADD MSTORE PUSH2 0xF4E ADD MSTORE RETURN JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x205C2878 EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x839 JUMPI DUP1 PUSH4 0x2F4F21E2 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0x32D323A5 EQ PUSH2 0x788 JUMPI DUP1 PUSH4 0x5886216F EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0x78E3214F EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x97A2CB64 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xBFE91734 EQ PUSH2 0x18A JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI PUSH2 0xDC PUSH2 0x8BF JUMP JUMPDEST SWAP1 PUSH2 0xE5 PUSH2 0x1024 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x157 JUMPI POP POP DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F0 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x1E1 PUSH2 0x1E9 SWAP3 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x8E7 JUMP JUMPDEST SWAP2 CALLDATALOAD CALLER PUSH2 0x915 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI POP PUSH2 0x1E9 PUSH1 0x20 SWAP3 CALLDATALOAD CALLER PUSH2 0xE50 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x186 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x186 JUMPI DUP2 DUP6 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x186 JUMPI PUSH1 0x24 SWAP5 CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD GT PUSH2 0x3F5 JUMPI SWAP5 SWAP3 SWAP2 PUSH2 0x2AA PUSH2 0x1024 JUMP JUMPDEST DUP3 SWAP6 DUP4 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND SWAP4 JUMPDEST DUP6 DUP9 LT PUSH2 0x323 JUMPI DUP11 DUP11 DUP11 PUSH2 0x31D DUP3 CALLER PUSH32 0x0 PUSH2 0x1075 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP9 DUP4 DUP11 PUSH1 0x5 SHL DUP4 ADD ADD CALLDATALOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x3F1 JUMPI SWAP1 DUP2 DUP13 SWAP3 DUP11 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE DUP12 DUP12 KECCAK256 SLOAD SWAP1 DUP13 MLOAD SWAP5 PUSH32 0x5886216F00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP4 DUP11 DUP8 ADD MSTORE DUP6 DUP10 DUP2 DUP14 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3E7 JUMPI DUP16 SWAP1 DUP14 SWAP5 PUSH2 0x3AB JUMPI JUMPDEST PUSH1 0x1 SWAP7 POP DUP14 MSTORE MSTORE DUP2 DUP13 DUP13 KECCAK256 SSTORE SUB ADD SWAP10 ADD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST SWAP5 SWAP6 DUP1 SWAP3 SWAP4 SWAP5 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3E0 JUMPI JUMPDEST PUSH2 0x3C5 DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3DC JUMPI SWAP1 DUP15 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 MLOAD SWAP4 PUSH2 0x38F JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3BB JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x186 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x5EC JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x4AB PUSH2 0x1024 JUMP JUMPDEST DUP3 PUSH2 0x4B4 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x5CE JUMPI JUMPDEST POP ISZERO PUSH2 0x5BA JUMPI POP DUP1 SELFBALANCE LT PUSH2 0x593 JUMPI DUP4 DUP1 DUP1 DUP1 SWAP4 CALLER PUSH2 0x1388 CALL RETURNDATASIZE ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x562 JUMPI DUP3 MLOAD SWAP1 PUSH2 0x521 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 MSTORE DUP5 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x53C JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST MLOAD PUSH32 0xB12D13EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH1 0x41 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH2 0x52B JUMP JUMPDEST POP MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x5C9 SWAP3 POP CALLER SWAP1 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP2 POP EQ CODESIZE PUSH2 0x4BE JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x1F0 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0x627 PUSH2 0x1024 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x44A JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI DUP4 PUSH2 0x6C9 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP7 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x5886216F00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND SWAP1 DUP4 ADD MSTORE PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x77D JUMPI DUP1 SWAP4 PUSH2 0x74B JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x776 JUMPI JUMPDEST PUSH2 0x764 DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1F0 JUMPI POP MLOAD SWAP1 CODESIZE DUP1 PUSH2 0x743 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x75A JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x186 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x186 JUMPI PUSH2 0x7C0 PUSH2 0x8BF JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F0 JUMPI POP SWAP3 PUSH2 0x7E8 PUSH2 0x1E9 SWAP3 PUSH1 0x20 SWAP6 CALLDATASIZE SWAP2 ADD PUSH2 0x8E7 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x915 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1E9 PUSH2 0x830 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xE50 JUMP JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x1F0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI POP PUSH2 0x1E9 PUSH1 0x20 SWAP3 CALLDATALOAD CALLER PUSH2 0xD4A JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x44A JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x44A JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1E9 PUSH2 0x8B6 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x8E2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x8E2 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x8E2 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x8E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP4 SWAP2 SWAP3 PUSH32 0x0 SWAP2 SWAP1 DUP4 PUSH1 0x0 PUSH1 0x64 DUP3 EQ PUSH2 0xC22 JUMPI POP SWAP4 PUSH1 0x0 SWAP5 SWAP2 DUP3 DUP7 SWAP6 SWAP5 SWAP4 PUSH1 0x48 EQ PUSH2 0xB60 JUMPI DUP1 PUSH1 0xE0 EQ PUSH2 0xB27 JUMPI DUP1 PUSH2 0x100 EQ PUSH2 0xAEC JUMPI DUP1 PUSH1 0x60 EQ PUSH2 0xA16 JUMPI PUSH2 0x160 EQ PUSH2 0x9CC JUMPI DUP2 DUP6 SWAP3 PUSH1 0x4 SWAP3 PUSH32 0x9FD5A6CF00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP4 DUP7 ADD CALLDATACOPY ADD SWAP3 GAS CALL JUMPDEST ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BD SWAP2 PUSH2 0xE50 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x164 SWAP4 POP PUSH2 0x160 SWAP2 POP PUSH32 0x2B67B57000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD CALLDATACOPY DUP3 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP PUSH1 0x20 SWAP2 POP PUSH1 0x40 SWAP1 PUSH2 0x164 SWAP5 PUSH32 0x2B67B57000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x14 DUP2 PUSH1 0x50 DUP7 ADD CALLDATACOPY PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH6 0xFFFFFFFFFFFF SWAP1 DUP1 PUSH1 0x14 DUP5 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD DUP3 AND PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x18 DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0x84 DUP8 ADD MSTORE ADDRESS PUSH1 0xA4 DUP8 ADD MSTORE PUSH1 0x1C DUP4 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD AND PUSH1 0xC4 DUP6 ADD MSTORE PUSH2 0x100 PUSH1 0xE4 DUP6 ADD MSTORE DUP2 PUSH2 0x104 DUP6 ADD MSTORE DUP3 DUP1 DUP3 ADD PUSH2 0x124 DUP7 ADD CALLDATACOPY ADD PUSH2 0x144 DUP4 ADD CALLDATACOPY DUP3 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH2 0x100 PUSH2 0x104 SWAP5 PUSH32 0x8FCBAF0C00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD CALLDATACOPY GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH1 0xE0 PUSH1 0xE4 SWAP5 PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD CALLDATACOPY GAS CALL PUSH2 0x9AF JUMP JUMPDEST POP DUP5 SWAP2 POP SWAP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x104 SWAP5 PUSH32 0x8FCBAF0C00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 PUSH1 0x8 PUSH1 0x28 DUP4 ADD CALLDATALOAD SWAP3 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH1 0x44 DUP10 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD PUSH1 0x64 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x84 DUP10 ADD MSTORE DUP4 PUSH1 0xFF SHR PUSH1 0x1B ADD PUSH1 0xA4 DUP10 ADD MSTORE ADD PUSH1 0xC4 DUP8 ADD CALLDATACOPY AND PUSH1 0xE4 DUP5 ADD MSTORE GAS CALL PUSH2 0x9AF JUMP JUMPDEST SWAP5 POP POP SWAP1 DUP4 DUP1 SWAP4 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE4 SWAP5 PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 PUSH1 0x24 PUSH1 0x44 DUP4 ADD CALLDATALOAD SWAP3 DUP3 DUP2 PUSH1 0x44 DUP11 ADD CALLDATACOPY PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 SHR ADD PUSH1 0x64 DUP10 ADD MSTORE DUP4 PUSH1 0xFF SHR PUSH1 0x1B ADD PUSH1 0x84 DUP10 ADD MSTORE ADD PUSH1 0xA4 DUP8 ADD CALLDATACOPY AND PUSH1 0xC4 DUP5 ADD MSTORE GAS CALL PUSH2 0x9AF JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD1B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x85EDA2DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP4 PUSH1 0x44 DUP2 DUP9 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0xE45 JUMPI DUP6 SWAP4 PUSH2 0xE10 JUMPI JUMPDEST POP PUSH1 0x40 PUSH2 0xE0E SWAP4 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 DUP3 DUP2 SLOAD SUB SWAP1 SSTORE PUSH32 0x0 PUSH2 0x1075 JUMP JUMPDEST JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE3D JUMPI JUMPDEST DUP2 PUSH2 0xE2B PUSH1 0x20 SWAP4 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5EC JUMPI SWAP2 MLOAD SWAP2 PUSH1 0x40 PUSH2 0xDD1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0xFFA JUMPI PUSH1 0x64 SWAP4 PUSH32 0x0 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP5 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP3 DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0xFD7 JUMPI JUMPDEST POP ISZERO PUSH2 0xFAD JUMPI PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE MLOAD PUSH32 0x3EE5EF1F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xF83 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xFA6 JUMPI JUMPDEST PUSH2 0xF9A DUP2 DUP4 PUSH2 0xCDA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8E2 JUMPI MLOAD SWAP1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF405907100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0xFF2 JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0xEDF JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x1045 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP3 DUP6 GAS CALL SWAP1 DUP2 PUSH2 0x10EC JUMPI JUMPDEST POP ISZERO PUSH2 0x10C2 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xFB7F507900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP RETURNDATASIZE ISZERO PUSH2 0x1107 JUMPI POP PUSH1 0x1 PUSH1 0x0 MLOAD EQ PUSH1 0x1F RETURNDATASIZE GT AND JUMPDEST CODESIZE PUSH2 0x10BA JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO PUSH2 0x1101 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x2A GASPRICE DUP4 0xB3 PUSH31 0x5067BE598C508F5E5724E322070B2FBDD787200276B277EAF18C64736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"218961:2242:0:-:0;;;;;;-1:-1:-1;;;;;218961:2242:0;;;;;;;;-1:-1:-1;;218961:2242:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;218961:2242:0;;;;;;;;;;;;;;;;;;;;;;;;219501:34;;;;;;;;;;;;;;218961:2242;219501:34;;;;;;219513:4;218961:2242;;;;;;;;;;219501:34;;;-1:-1:-1;219501:34:0;;;;;218961:2242;219490:45;;218961:2242;;;;;;;219490:45;218961:2242;;;;;;;;;;;;;;;;219501:34;218961:2242;;;-1:-1:-1;218961:2242:0;;;;;219501:34;218961:2242;;;-1:-1:-1;218961:2242:0;;;;;-1:-1:-1;218961:2242:0;;-1:-1:-1;218961:2242:0;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":723,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"8827":[{"length":32,"start":158},{"length":32,"start":505},{"length":32,"start":687}]},"linkReferences":{},"object":"6080604090808252600436101561001557600080fd5b600090813560e01c9081632ce26aeb14610265575080633ee5ef1f146101a85780635886216f14610143576385eda2de1461004f57600080fd5b3461014057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610140576100856102d3565b73ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361011757168152806020528181209182549160243583039283116100ea5750816020935551908152f35b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526011600452fd5b600484517fa4544199000000000000000000000000000000000000000000000000000000008152fd5b80fd5b5090346101a45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4578060209273ffffffffffffffffffffffffffffffffffffffff6101956102d3565b16815280845220549051908152f35b5080fd5b5090346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576101e06102d3565b73ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361023c57928291602094168152808452209060243582540180925551908152f35b600483517fa4544199000000000000000000000000000000000000000000000000000000008152fd5b9050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a45760209073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102f657565b600080fdfea2646970667358221220f7115bdb71ec2d33dab4482785cceb141561d7c9fec85a137ee244560077f26264736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2CE26AEB EQ PUSH2 0x265 JUMPI POP DUP1 PUSH4 0x3EE5EF1F EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5886216F EQ PUSH2 0x143 JUMPI PUSH4 0x85EDA2DE EQ PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x140 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x140 JUMPI PUSH2 0x85 PUSH2 0x2D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x117 JUMPI AND DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 SUB SWAP3 DUP4 GT PUSH2 0xEA JUMPI POP DUP2 PUSH1 0x20 SWAP4 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x4 DUP5 MLOAD PUSH32 0xA454419900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x195 PUSH2 0x2D3 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH2 0x1E0 PUSH2 0x2D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x23C JUMPI SWAP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 SLOAD ADD DUP1 SWAP3 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 DUP4 MLOAD PUSH32 0xA454419900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2F6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 GT JUMPDEST 0xDB PUSH18 0xEC2D33DAB4482785CCEB141561D7C9FEC85A SGT PUSH31 0xE244560077F26264736F6C6343000817003300000000000000000000000000 ","sourceMap":"218961:2242:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;219375:8;;;218961:2242;219353:10;:31;219349:63;;218961:2242;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;219349:63;218961:2242;;;219393:19;;;;218961:2242;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;219375:8;;;218961:2242;219353:10;:31;219349:63;;218961:2242;;;;;;;;;;;;;;;;;;;;;;;;;;219349:63;218961:2242;;;219393:19;;;;218961:2242;;;;;;;;;;;;;;219133:34;218961:2242;219133:34;218961:2242;;;;;;;;;;;;;;;:::o;:::-;;;"},"methodIdentifiers":{"FEE_BANK()":"2ce26aeb","availableCredit(address)":"5886216f","decreaseAvailableCredit(address,uint256)":"85eda2de","increaseAvailableCredit(address,uint256)":"3ee5ef1f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotEnoughCredit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyFeeBankAccess\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FEE_BANK\",\"outputs\":[{\"internalType\":\"contract IFeeBank\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAvailableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAvailableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"FeeBankCharger\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"FEE_BANK()\":{\"notice\":\"See {IFeeBankCharger-feeBank}.\"},\"availableCredit(address)\":{\"notice\":\"See {IFeeBankCharger-availableCredit}.\"},\"decreaseAvailableCredit(address,uint256)\":{\"notice\":\"See {IFeeBankCharger-decreaseAvailableCredit}.\"},\"increaseAvailableCredit(address,uint256)\":{\"notice\":\"See {IFeeBankCharger-increaseAvailableCredit}.\"}},\"notice\":\"FeeBankCharger contract implements logic to increase or decrease users' credits in FeeBank.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"FeeBankCharger\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220fa6d42fa0d8a69a01b8fb7611d94bf8348c9b6977b2c0fea52164042d5a22a3164736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL PUSH14 0x42FA0D8A69A01B8FB7611D94BF83 BASEFEE 0xC9 0xB6 SWAP8 PUSH28 0x2C0FEA52164042D5A22A3164736F6C63430008170033000000000000 ","sourceMap":"6034:840:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220fa6d42fa0d8a69a01b8fb7611d94bf8348c9b6977b2c0fea52164042d5a22a3164736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL PUSH14 0x42FA0D8A69A01B8FB7611D94BF83 BASEFEE 0xC9 0xB6 SWAP8 PUSH28 0x2C0FEA52164042D5A22A3164736F6C63430008170033000000000000 ","sourceMap":"6034:840:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library of standard hash functions.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"Hashes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IAmountGetter":{"abi":[{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"getMakingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"getTakingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)":"1d9671c3","getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)":"d7ff8a80"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"getMakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"getTakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"params\":{\"extension\":\"Order extension data\",\"extraData\":\"Extra data\",\"order\":\"Order being processed\",\"orderHash\":\"Hash of the order being processed\",\"remainingMakingAmount\":\"Order remaining making amount\",\"taker\":\"Taker address\",\"takingAmount\":\"Actual taking amount\"}},\"getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"params\":{\"extension\":\"Order extension data\",\"extraData\":\"Extra data\",\"makingAmount\":\"Actual taking amount\",\"order\":\"Order being processed\",\"orderHash\":\"Hash of the order being processed\",\"remainingMakingAmount\":\"Order remaining making amount\",\"taker\":\"Taker address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"notice\":\"View method that gets called to determine the actual making amount\"},\"getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"notice\":\"View method that gets called to determine the actual making amount\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IAmountGetter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IBaseEscrow":{"abi":[{"inputs":[],"name":"InvalidCaller","type":"error"},{"inputs":[],"name":"InvalidImmutables","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidTime","type":"error"},{"inputs":[],"name":"NativeTokenSendingFailure","type":"error"},{"anonymous":false,"inputs":[],"name":"EscrowCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRescued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"rescueFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"FACTORY()":"2dd31000","RESCUE_DELAY()":"f56cd69c","cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"90d3252f","rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"4649088b","withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"23305703"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The escrow can only be cancelled during the cancellation period. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\"}},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Funds can only be rescued by the taker after the rescue delay.\",\"params\":{\"amount\":\"The amount of tokens to rescue.\",\"immutables\":\"The immutables of the escrow contract.\",\"token\":\"The address of the token to rescue. Zero address for native token.\"}},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\"}}},\"title\":\"Base Escrow interface for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"FACTORY()\":{\"notice\":\"Returns the address of the factory that created the escrow.\"},\"RESCUE_DELAY()\":{\"notice\":\"Returns the delay for rescuing funds from the escrow.\"},\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Cancels the escrow and returns tokens to a predetermined recipient.\"},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Rescues funds from the escrow.\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to a predetermined recipient.\"}},\"notice\":\"Interface implies locking funds initially and then unlocking them with verification of the secret presented.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IBaseEscrow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IDaiLikePermit":{"abi":[{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bool","name":"allowed","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)":"8fcbaf0c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Dai-like permit function allowing token spending via signatures.\",\"kind\":\"dev\",\"methods\":{\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"params\":{\"allowed\":\"True to allow, false to disallow spending.\",\"expiry\":\"Time when the permit expires.\",\"holder\":\"Token holder's address.\",\"nonce\":\"Current nonce of the holder.\",\"spender\":\"Spender's address.\",\"v\":\", r, s Signature components.\"}}},\"title\":\"IDaiLikePermit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"notice\":\"Approves spending of tokens via off-chain signatures.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IDaiLikePermit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IERC20MetadataUppercase":{"abi":[{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SYMBOL","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"NAME()":"a3f4df7e","SYMBOL()":"f76f8d78"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for ERC20 token metadata with uppercase naming convention.\",\"kind\":\"dev\",\"methods\":{\"NAME()\":{\"returns\":{\"_0\":\"Token name.\"}},\"SYMBOL()\":{\"returns\":{\"_0\":\"Token symbol.\"}}},\"title\":\"IERC20MetadataUppercase\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"NAME()\":{\"notice\":\"Gets the token name.\"},\"SYMBOL()\":{\"notice\":\"Gets the token symbol.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IERC20MetadataUppercase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IERC7597Permit":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"permit(address,address,uint256,uint256,bytes)":"9fd5a6cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A new extension for ERC-2612 permit, which has already been added to USDC v2.2.\",\"kind\":\"dev\",\"methods\":{\"permit(address,address,uint256,uint256,bytes)\":{\"details\":\"Signature bytes can be used for both EOA wallets and contract wallets.\",\"params\":{\"deadline\":\"The time at which the signature expires (unixtime).\",\"owner\":\"Token owner's address (Authorizer).\",\"signature\":\"Unstructured bytes signature signed by an EOA wallet or a contract wallet.\",\"spender\":\"Spender's address.\",\"value\":\"Amount of allowance.\"}}},\"title\":\"IERC7597Permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"permit(address,address,uint256,uint256,bytes)\":{\"notice\":\"Update allowance with a signed permit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IERC7597Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IEscrow":{"abi":[{"inputs":[],"name":"InvalidCaller","type":"error"},{"inputs":[],"name":"InvalidImmutables","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidTime","type":"error"},{"inputs":[],"name":"NativeTokenSendingFailure","type":"error"},{"anonymous":false,"inputs":[],"name":"EscrowCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRescued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROXY_BYTECODE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"rescueFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"FACTORY()":"2dd31000","PROXY_BYTECODE_HASH()":"34862b6a","RESCUE_DELAY()":"f56cd69c","cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"90d3252f","rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"4649088b","withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"23305703"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROXY_BYTECODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The escrow can only be cancelled during the cancellation period. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\"}},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Funds can only be rescued by the taker after the rescue delay.\",\"params\":{\"amount\":\"The amount of tokens to rescue.\",\"immutables\":\"The immutables of the escrow contract.\",\"token\":\"The address of the token to rescue. Zero address for native token.\"}},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\"}}},\"title\":\"Escrow interface for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"FACTORY()\":{\"notice\":\"Returns the address of the factory that created the escrow.\"},\"PROXY_BYTECODE_HASH()\":{\"notice\":\"Returns the bytecode hash of the proxy contract.\"},\"RESCUE_DELAY()\":{\"notice\":\"Returns the delay for rescuing funds from the escrow.\"},\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Cancels the escrow and returns tokens to a predetermined recipient.\"},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Rescues funds from the escrow.\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to a predetermined recipient.\"}},\"notice\":\"Interface implies locking funds initially and then unlocking them with verification of the secret presented.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IEscrow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IEscrowDst":{"abi":[{"inputs":[],"name":"InvalidCaller","type":"error"},{"inputs":[],"name":"InvalidImmutables","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidTime","type":"error"},{"inputs":[],"name":"NativeTokenSendingFailure","type":"error"},{"anonymous":false,"inputs":[],"name":"EscrowCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRescued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROXY_BYTECODE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"publicWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"rescueFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"FACTORY()":"2dd31000","PROXY_BYTECODE_HASH()":"34862b6a","RESCUE_DELAY()":"f56cd69c","cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"90d3252f","publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"0af97558","rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"4649088b","withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"23305703"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROXY_BYTECODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"publicWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The escrow can only be cancelled during the cancellation period. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\"}},\"publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\"}},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Funds can only be rescued by the taker after the rescue delay.\",\"params\":{\"amount\":\"The amount of tokens to rescue.\",\"immutables\":\"The immutables of the escrow contract.\",\"token\":\"The address of the token to rescue. Zero address for native token.\"}},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\"}}},\"title\":\"Destination Escrow interface for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"FACTORY()\":{\"notice\":\"Returns the address of the factory that created the escrow.\"},\"PROXY_BYTECODE_HASH()\":{\"notice\":\"Returns the bytecode hash of the proxy contract.\"},\"RESCUE_DELAY()\":{\"notice\":\"Returns the delay for rescuing funds from the escrow.\"},\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Cancels the escrow and returns tokens to a predetermined recipient.\"},\"publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to maker\"},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Rescues funds from the escrow.\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to a predetermined recipient.\"}},\"notice\":\"Interface implies withdrawing funds initially and then unlocking them with verification of the secret presented.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IEscrowDst\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IEscrowFactory":{"abi":[{"inputs":[],"name":"InsufficientEscrowBalance","type":"error"},{"inputs":[],"name":"InvalidCreationTime","type":"error"},{"inputs":[],"name":"InvalidPartialFill","type":"error"},{"inputs":[],"name":"InvalidSecretsAmount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"escrow","type":"address"},{"indexed":false,"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"indexed":false,"internalType":"Address","name":"taker","type":"uint256"}],"name":"DstEscrowCreated","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"indexed":false,"internalType":"struct IBaseEscrow.Immutables","name":"srcImmutables","type":"tuple"},{"components":[{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}],"indexed":false,"internalType":"struct IEscrowFactory.DstImmutablesComplement","name":"dstImmutablesComplement","type":"tuple"}],"name":"SrcEscrowCreated","type":"event"},{"inputs":[],"name":"ESCROW_DST_IMPLEMENTATION","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ESCROW_SRC_IMPLEMENTATION","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"addressOfEscrowDst","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"addressOfEscrowSrc","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"dstImmutables","type":"tuple"},{"internalType":"uint256","name":"srcCancellationTimestamp","type":"uint256"}],"name":"createDstEscrow","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ESCROW_DST_IMPLEMENTATION()":"ba551177","ESCROW_SRC_IMPLEMENTATION()":"7040f173","addressOfEscrowDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"be58e91c","addressOfEscrowSrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"fb6bd47e","createDstEscrow((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)":"dea024e4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientEscrowBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCreationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPartialFill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecretsAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"}],\"name\":\"DstEscrowCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"srcImmutables\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IEscrowFactory.DstImmutablesComplement\",\"name\":\"dstImmutablesComplement\",\"type\":\"tuple\"}],\"name\":\"SrcEscrowCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ESCROW_DST_IMPLEMENTATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ESCROW_SRC_IMPLEMENTATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"addressOfEscrowDst\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"addressOfEscrowSrc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"dstImmutables\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"srcCancellationTimestamp\",\"type\":\"uint256\"}],\"name\":\"createDstEscrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"events\":{\"DstEscrowCreated(address,bytes32,uint256)\":{\"params\":{\"escrow\":\"The address of the created escrow.\",\"hashlock\":\"The hash of the secret.\",\"taker\":\"The address of the taker.\"}},\"SrcEscrowCreated((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"dstImmutablesComplement\":\"Additional immutables related to the escrow contract on the destination chain.\",\"srcImmutables\":\"The immutables of the escrow contract that are used in deployment on the source chain.\"}}},\"kind\":\"dev\",\"methods\":{\"addressOfEscrowDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"immutables\":\"The immutable arguments used to compute salt for escrow deployment.\"},\"returns\":{\"_0\":\"The computed address of the escrow.\"}},\"addressOfEscrowSrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"immutables\":\"The immutable arguments used to compute salt for escrow deployment.\"},\"returns\":{\"_0\":\"The computed address of the escrow.\"}},\"createDstEscrow((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)\":{\"details\":\"The caller must send the safety deposit in the native token along with the function call and approve the destination token to be transferred to the created escrow.\",\"params\":{\"dstImmutables\":\"The immutables of the escrow contract that are used in deployment.\",\"srcCancellationTimestamp\":\"The start of the cancellation period for the source chain.\"}}},\"title\":\"Escrow Factory interface for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"DstEscrowCreated(address,bytes32,uint256)\":{\"notice\":\"Emitted on EscrowDst deployment.\"},\"SrcEscrowCreated((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Emitted on EscrowSrc deployment to recreate EscrowSrc and EscrowDst immutables off-chain.\"}},\"kind\":\"user\",\"methods\":{\"ESCROW_DST_IMPLEMENTATION()\":{\"notice\":\"Returns the address of implementation on the destination chain.\"},\"ESCROW_SRC_IMPLEMENTATION()\":{\"notice\":\"Returns the address of implementation on the source chain.\"},\"addressOfEscrowDst((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Returns the deterministic address of the destination escrow based on the salt.\"},\"addressOfEscrowSrc((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Returns the deterministic address of the source escrow based on the salt.\"},\"createDstEscrow((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256),uint256)\":{\"notice\":\"Creates a new escrow contract for taker on the destination chain.\"}},\"notice\":\"Interface to deploy escrow contracts for the destination chain and to get the deterministic address of escrow on both chains.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IEscrowFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IEscrowSrc":{"abi":[{"inputs":[],"name":"InvalidCaller","type":"error"},{"inputs":[],"name":"InvalidImmutables","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidTime","type":"error"},{"inputs":[],"name":"NativeTokenSendingFailure","type":"error"},{"anonymous":false,"inputs":[],"name":"EscrowCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRescued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROXY_BYTECODE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"publicCancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"publicWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"rescueFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"internalType":"address","name":"target","type":"address"},{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}],"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"FACTORY()":"2dd31000","PROXY_BYTECODE_HASH()":"34862b6a","RESCUE_DELAY()":"f56cd69c","cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"90d3252f","publicCancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"daff233e","publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"0af97558","rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"4649088b","withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"23305703","withdrawTo(bytes32,address,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"6c10c0c8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROXY_BYTECODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"publicCancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"publicWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The escrow can only be cancelled during the cancellation period. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\"}},\"publicCancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The escrow can only be cancelled during the public cancellation period. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\"}},\"publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the public withdrawal period and with secret with hash matches the hashlock.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\"}},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Funds can only be rescued by the taker after the rescue delay.\",\"params\":{\"amount\":\"The amount of tokens to rescue.\",\"immutables\":\"The immutables of the escrow contract.\",\"token\":\"The address of the token to rescue. Zero address for native token.\"}},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\"}},\"withdrawTo(bytes32,address,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\",\"target\":\"The address to withdraw the funds to.\"}}},\"title\":\"Source Escrow interface for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"FACTORY()\":{\"notice\":\"Returns the address of the factory that created the escrow.\"},\"PROXY_BYTECODE_HASH()\":{\"notice\":\"Returns the bytecode hash of the proxy contract.\"},\"RESCUE_DELAY()\":{\"notice\":\"Returns the delay for rescuing funds from the escrow.\"},\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Cancels the escrow and returns tokens to a predetermined recipient.\"},\"publicCancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Cancels the escrow and returns tokens to the maker.\"},\"publicWithdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to the taker.\"},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Rescues funds from the escrow.\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to a predetermined recipient.\"},\"withdrawTo(bytes32,address,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to a specified target.\"}},\"notice\":\"Interface implies locking funds initially and then unlocking them with verification of the secret presented.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IEscrowSrc\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IFeeBank":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"availableCredit","outputs":[{"internalType":"uint256","name":"availableCredit","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"totalAvailableCredit","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositFor","outputs":[{"internalType":"uint256","name":"totalAvailableCredit","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"permit","type":"bytes"}],"name":"depositForWithPermit","outputs":[{"internalType":"uint256","name":"totalAvailableCredit","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"permit","type":"bytes"}],"name":"depositWithPermit","outputs":[{"internalType":"uint256","name":"totalAvailableCredit","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"totalAvailableCredit","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[{"internalType":"uint256","name":"totalAvailableCredit","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"availableCredit(address)":"5886216f","deposit(uint256)":"b6b55f25","depositFor(address,uint256)":"2f4f21e2","depositForWithPermit(address,uint256,bytes)":"32d323a5","depositWithPermit(uint256,bytes)":"bfe91734","withdraw(uint256)":"2e1a7d4d","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"availableCredit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAvailableCredit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAvailableCredit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"}],\"name\":\"depositForWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAvailableCredit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"}],\"name\":\"depositWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAvailableCredit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAvailableCredit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAvailableCredit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"availableCredit(address)\":{\"params\":{\"account\":\"The address of the account for which the available credit is being queried.\"},\"returns\":{\"availableCredit\":\"The available credit of the queried account.\"}},\"deposit(uint256)\":{\"params\":{\"amount\":\"The amount of credit to be added to the caller's account.\"},\"returns\":{\"totalAvailableCredit\":\"The updated available credit of the caller's account.\"}},\"depositFor(address,uint256)\":{\"params\":{\"account\":\"The address of the account for which the available credit is being increased.\",\"amount\":\"The amount of credit to be added to the account.\"},\"returns\":{\"totalAvailableCredit\":\"The updated available credit of the specified account.\"}},\"depositForWithPermit(address,uint256,bytes)\":{\"params\":{\"account\":\"The address of the account for which the available credit is being increased.\",\"amount\":\"The amount of credit to be added to the account.\",\"permit\":\"The permit data authorizing the transaction.\"},\"returns\":{\"totalAvailableCredit\":\"The updated available credit of the specified account.\"}},\"depositWithPermit(uint256,bytes)\":{\"params\":{\"amount\":\"The amount of credit to be added to the caller's account.\",\"permit\":\"The permit data authorizing the transaction.\"},\"returns\":{\"totalAvailableCredit\":\"The updated available credit of the caller's account.\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"The amount of credit to be withdrawn from the caller's account.\"},\"returns\":{\"totalAvailableCredit\":\"The updated available credit of the caller's account.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"account\":\"The address of the account to which the credit is being withdrawn.\",\"amount\":\"The amount of credit to be withdrawn.\"},\"returns\":{\"totalAvailableCredit\":\"The updated available credit of the caller's account.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"availableCredit(address)\":{\"notice\":\"Returns the available credit for a given account in the FeeBank contract.\"},\"deposit(uint256)\":{\"notice\":\"Increases the caller's available credit by the specified amount.\"},\"depositFor(address,uint256)\":{\"notice\":\"Increases the specified account's available credit by the specified amount.\"},\"depositForWithPermit(address,uint256,bytes)\":{\"notice\":\"Increases the specified account's available credit by a specified amount with permit.\"},\"depositWithPermit(uint256,bytes)\":{\"notice\":\"Increases the caller's available credit by a specified amount with permit.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws a specified amount of credit from the caller's account.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraws a specified amount of credit to the specified account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IFeeBank\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IFeeBankCharger":{"abi":[{"inputs":[],"name":"FEE_BANK","outputs":[{"internalType":"contract IFeeBank","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"availableCredit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAvailableCredit","outputs":[{"internalType":"uint256","name":"allowance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"increaseAvailableCredit","outputs":[{"internalType":"uint256","name":"allowance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"FEE_BANK()":"2ce26aeb","availableCredit(address)":"5886216f","decreaseAvailableCredit(address,uint256)":"85eda2de","increaseAvailableCredit(address,uint256)":"3ee5ef1f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FEE_BANK\",\"outputs\":[{\"internalType\":\"contract IFeeBank\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAvailableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAvailableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"FEE_BANK()\":{\"returns\":{\"_0\":\"The instance of the FeeBank contract.\"}},\"availableCredit(address)\":{\"params\":{\"account\":\"The address of the account for which the available credit is being queried.\"},\"returns\":{\"_0\":\"The available credit of the queried account.\"}},\"decreaseAvailableCredit(address,uint256)\":{\"params\":{\"account\":\"The address of the account for which the available credit is being decreased.\",\"amount\":\"The amount by which the available credit will be decreased.\"},\"returns\":{\"allowance\":\"The updated available credit of the specified account.\"}},\"increaseAvailableCredit(address,uint256)\":{\"params\":{\"account\":\"The address of the account for which the available credit is being increased.\",\"amount\":\"The amount by which the available credit will be increased.\"},\"returns\":{\"allowance\":\"The updated available credit of the specified account.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"FEE_BANK()\":{\"notice\":\"Returns the instance of the FeeBank contract.\"},\"availableCredit(address)\":{\"notice\":\"Returns the available credit for a given account.\"},\"decreaseAvailableCredit(address,uint256)\":{\"notice\":\"Decreases the available credit of a given account by a specified amount.\"},\"increaseAvailableCredit(address,uint256)\":{\"notice\":\"Increases the available credit of a given account by a specified amount.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IFeeBankCharger\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IMerkleStorageInvalidator":{"abi":[{"inputs":[],"name":"AccessDenied","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"lastValidated","outputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"lastValidated(bytes32)":"acf4ce5c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"lastValidated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"kind\":\"dev\",\"methods\":{\"lastValidated(bytes32)\":{\"params\":{\"key\":\"Hash of concatenated order hash and 30 bytes of root hash.\"},\"returns\":{\"index\":\"Index of the last validated hashed secret.\",\"secretHash\":\"Last validated hashed secret.\"}}},\"title\":\"Merkle Storage Invalidator interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"lastValidated(bytes32)\":{\"notice\":\"Returns the index of the last validated hashed secret and the hashed secret itself.\"}},\"notice\":\"Interface to invalidate hashed secrets from an order that supports multiple fills.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IMerkleStorageInvalidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IOrderMixin":{"abi":[{"inputs":[],"name":"BadSignature","type":"error"},{"inputs":[],"name":"EpochManagerAndBitInvalidatorsAreIncompatible","type":"error"},{"inputs":[],"name":"InvalidPermit2Transfer","type":"error"},{"inputs":[],"name":"InvalidatedOrder","type":"error"},{"inputs":[],"name":"MakingAmountTooLow","type":"error"},{"inputs":[],"name":"MismatchArraysLengths","type":"error"},{"inputs":[],"name":"OrderExpired","type":"error"},{"inputs":[],"name":"OrderIsNotSuitableForMassInvalidation","type":"error"},{"inputs":[],"name":"PartialFillNotAllowed","type":"error"},{"inputs":[],"name":"PredicateIsNotTrue","type":"error"},{"inputs":[],"name":"PrivateOrder","type":"error"},{"inputs":[],"name":"ReentrancyDetected","type":"error"},{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"res","type":"bytes"}],"name":"SimulationResults","type":"error"},{"inputs":[],"name":"SwapWithZeroAmount","type":"error"},{"inputs":[],"name":"TakingAmountExceeded","type":"error"},{"inputs":[],"name":"TakingAmountTooHigh","type":"error"},{"inputs":[],"name":"TransferFromMakerToTakerFailed","type":"error"},{"inputs":[],"name":"TransferFromTakerToMakerFailed","type":"error"},{"inputs":[],"name":"WrongSeriesNonce","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"maker","type":"address"},{"indexed":false,"internalType":"uint256","name":"slotIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"slotValue","type":"uint256"}],"name":"BitInvalidatorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"OrderCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"remainingAmount","type":"uint256"}],"name":"OrderFilled","type":"event"},{"inputs":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"uint256","name":"slot","type":"uint256"}],"name":"bitInvalidatorForOrder","outputs":[{"internalType":"uint256","name":"result","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"},{"internalType":"uint256","name":"additionalMask","type":"uint256"}],"name":"bitsInvalidateForOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"MakerTraits[]","name":"makerTraits","type":"uint256[]"},{"internalType":"bytes32[]","name":"orderHashes","type":"bytes32[]"}],"name":"cancelOrders","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"TakerTraits","name":"takerTraits","type":"uint256"}],"name":"fillContractOrder","outputs":[{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"TakerTraits","name":"takerTraits","type":"uint256"},{"internalType":"bytes","name":"args","type":"bytes"}],"name":"fillContractOrderArgs","outputs":[{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"TakerTraits","name":"takerTraits","type":"uint256"}],"name":"fillOrder","outputs":[{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"TakerTraits","name":"takerTraits","type":"uint256"},{"internalType":"bytes","name":"args","type":"bytes"}],"name":"fillOrderArgs","outputs":[{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"}],"name":"hashOrder","outputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"rawRemainingInvalidatorForOrder","outputs":[{"internalType":"uint256","name":"remainingRaw","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"remainingInvalidatorForOrder","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"simulate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"bitInvalidatorForOrder(address,uint256)":"143e86a7","bitsInvalidateForOrder(uint256,uint256)":"05b1ea03","cancelOrder(uint256,bytes32)":"b68fb020","cancelOrders(uint256[],bytes32[])":"89e7c650","fillContractOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256)":"cc713a04","fillContractOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256,bytes)":"56a75868","fillOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256)":"9fda64bd","fillOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256,bytes)":"f497df75","hashOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))":"802b2ef1","rawRemainingInvalidatorForOrder(address,bytes32)":"c2a40753","remainingInvalidatorForOrder(address,bytes32)":"435b9789","simulate(address,bytes)":"bd61951d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BadSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EpochManagerAndBitInvalidatorsAreIncompatible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermit2Transfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidatedOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MakingAmountTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchArraysLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderIsNotSuitableForMassInvalidation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PartialFillNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PredicateIsNotTrue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrivateOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyDetected\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"res\",\"type\":\"bytes\"}],\"name\":\"SimulationResults\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapWithZeroAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TakingAmountExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TakingAmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromMakerToTakerFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromTakerToMakerFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongSeriesNonce\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotValue\",\"type\":\"uint256\"}],\"name\":\"BitInvalidatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remainingAmount\",\"type\":\"uint256\"}],\"name\":\"OrderFilled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"bitInvalidatorForOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"additionalMask\",\"type\":\"uint256\"}],\"name\":\"bitsInvalidateForOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"MakerTraits[]\",\"name\":\"makerTraits\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"orderHashes\",\"type\":\"bytes32[]\"}],\"name\":\"cancelOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"TakerTraits\",\"name\":\"takerTraits\",\"type\":\"uint256\"}],\"name\":\"fillContractOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"TakerTraits\",\"name\":\"takerTraits\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"fillContractOrderArgs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"TakerTraits\",\"name\":\"takerTraits\",\"type\":\"uint256\"}],\"name\":\"fillOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"TakerTraits\",\"name\":\"takerTraits\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"fillOrderArgs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"hashOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"rawRemainingInvalidatorForOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remainingRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"remainingInvalidatorForOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"simulate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BitInvalidatorUpdated(address,uint256,uint256)\":{\"params\":{\"maker\":\"Maker address\",\"slotIndex\":\"Slot index that was updated\",\"slotValue\":\"New slot value\"}},\"OrderCancelled(bytes32)\":{\"params\":{\"orderHash\":\"Hash of the order\"}},\"OrderFilled(bytes32,uint256)\":{\"params\":{\"orderHash\":\"Hash of the order\",\"remainingAmount\":\"Amount of the maker asset that remains to be filled\"}}},\"kind\":\"dev\",\"methods\":{\"bitInvalidatorForOrder(address,uint256)\":{\"params\":{\"maker\":\"Maker address\",\"slot\":\"Slot number to return bitmask for\"},\"returns\":{\"result\":\"Each bit represents whether corresponding was already invalidated\"}},\"bitsInvalidateForOrder(uint256,uint256)\":{\"params\":{\"additionalMask\":\"Additional bitmask to invalidate orders\",\"makerTraits\":\"Order makerTraits\"}},\"cancelOrder(uint256,bytes32)\":{\"params\":{\"makerTraits\":\"Order makerTraits\",\"orderHash\":\"Hash of the order to cancel\"}},\"cancelOrders(uint256[],bytes32[])\":{\"params\":{\"makerTraits\":\"Orders makerTraits\",\"orderHashes\":\"Hashes of the orders to cancel\"}},\"fillContractOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256)\":{\"details\":\"See tests for examples\",\"params\":{\"amount\":\"Taker amount to fill\",\"order\":\"Order quote to fill\",\"signature\":\"Signature to confirm quote ownership\",\"takerTraits\":\"Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\"},\"returns\":{\"makingAmount\":\"Actual amount transferred from maker to taker\",\"orderHash\":\"Hash of the filled order\",\"takingAmount\":\"Actual amount transferred from taker to maker\"}},\"fillContractOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256,bytes)\":{\"details\":\"See tests for examples\",\"params\":{\"amount\":\"Taker amount to fill\",\"args\":\"Arguments that are used by the taker (target, extension, interaction, permit)\",\"order\":\"Order quote to fill\",\"signature\":\"Signature to confirm quote ownership\",\"takerTraits\":\"Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\"},\"returns\":{\"makingAmount\":\"Actual amount transferred from maker to taker\",\"orderHash\":\"Hash of the filled order\",\"takingAmount\":\"Actual amount transferred from taker to maker\"}},\"fillOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256)\":{\"params\":{\"amount\":\"Taker amount to fill\",\"order\":\"Order quote to fill\",\"r\":\"R component of signature\",\"takerTraits\":\"Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\",\"vs\":\"VS component of signature\"},\"returns\":{\"makingAmount\":\"Actual amount transferred from maker to taker\",\"orderHash\":\"Hash of the filled order\",\"takingAmount\":\"Actual amount transferred from taker to maker\"}},\"fillOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256,bytes)\":{\"params\":{\"amount\":\"Taker amount to fill\",\"args\":\"Arguments that are used by the taker (target, extension, interaction, permit)\",\"order\":\"Order quote to fill\",\"r\":\"R component of signature\",\"takerTraits\":\"Specifies threshold as maximum allowed takingAmount when takingAmount is zero, otherwise specifies minimum allowed makingAmount. The 2nd (0 based index) highest bit specifies whether taker wants to skip maker's permit.\",\"vs\":\"VS component of signature\"},\"returns\":{\"makingAmount\":\"Actual amount transferred from maker to taker\",\"orderHash\":\"Hash of the filled order\",\"takingAmount\":\"Actual amount transferred from taker to maker\"}},\"hashOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"order\":\"Order\"},\"returns\":{\"orderHash\":\"Hash of the order\"}},\"rawRemainingInvalidatorForOrder(address,bytes32)\":{\"params\":{\"orderHash\":\"Hash of the order\"},\"returns\":{\"remainingRaw\":\"Inverse of the remaining amount of the order if order was filled at least once, otherwise 0\"}},\"remainingInvalidatorForOrder(address,bytes32)\":{\"params\":{\"orderHash\":\"Hash of the order\"},\"returns\":{\"remaining\":\"Remaining amount of the order\"}},\"simulate(address,bytes)\":{\"details\":\"The function always reverts and returns the simulation results in revert data.\",\"params\":{\"data\":\"Data that will be passed to delegatee\",\"target\":\"Addresses that will be delegated\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BitInvalidatorUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when order with `useBitInvalidator` gets cancelled\"},\"OrderCancelled(bytes32)\":{\"notice\":\"Emitted when order without `useBitInvalidator` gets cancelled\"},\"OrderFilled(bytes32,uint256)\":{\"notice\":\"Emitted when order gets filled\"}},\"kind\":\"user\",\"methods\":{\"bitInvalidatorForOrder(address,uint256)\":{\"notice\":\"Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\"},\"bitsInvalidateForOrder(uint256,uint256)\":{\"notice\":\"Cancels all quotes of the maker (works for bit-invalidating orders only)\"},\"cancelOrder(uint256,bytes32)\":{\"notice\":\"Cancels order's quote\"},\"cancelOrders(uint256[],bytes32[])\":{\"notice\":\"Cancels orders' quotes\"},\"fillContractOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256)\":{\"notice\":\"Same as `fillOrder` but uses contract-based signatures.\"},\"fillContractOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,uint256,uint256,bytes)\":{\"notice\":\"Same as `fillContractOrder` but allows to specify arguments that are used by the taker.\"},\"fillOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256)\":{\"notice\":\"Fills order's quote, fully or partially (whichever is possible).\"},\"fillOrderArgs((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes32,bytes32,uint256,uint256,bytes)\":{\"notice\":\"Same as `fillOrder` but allows to specify arguments that are used by the taker.\"},\"hashOrder((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Returns order hash, hashed with limit order protocol contract EIP712\"},\"rawRemainingInvalidatorForOrder(address,bytes32)\":{\"notice\":\"Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\"},\"remainingInvalidatorForOrder(address,bytes32)\":{\"notice\":\"Returns bitmask for double-spend invalidators based on lowest byte of order.info and filled quotes\"},\"simulate(address,bytes)\":{\"notice\":\"Delegates execution to custom implementation. Could be used to validate if `transferFrom` works properly\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IOrderMixin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IPermit2":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"components":[{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IPermit2.PackedAllowance","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IPermit2.PermitDetails","name":"details","type":"tuple"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IPermit2.PermitSingle","name":"permitSingle","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address,address)":"927da105","permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)":"2b67b570","transferFrom(address,address,uint160,address)":"36c78516"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IPermit2.PackedAllowance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IPermit2.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IPermit2.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for a flexible permit system that extends ERC20 tokens to support permits in tokens lacking native permit functionality.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"params\":{\"spender\":\"The spender's address.\",\"token\":\"The token address.\",\"user\":\"The token owner's address.\"},\"returns\":{\"_0\":\"The packed allowance details.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"params\":{\"owner\":\"The token owner's address.\",\"permitSingle\":\"Struct containing the permit details.\",\"signature\":\"The signature proving the owner authorized the permit.\"}},\"transferFrom(address,address,uint160,address)\":{\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"spender\":\"The address authorized to spend the tokens.\",\"token\":\"The address of the token being transferred.\",\"user\":\"The token owner's address.\"}}},\"title\":\"IPermit2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"Retrieves the allowance details between a token owner and spender.\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Issues a permit for spending tokens via a signed authorization.\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Executes a token transfer from one address to another.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IPermit2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IPostInteraction":{"abi":[{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"postInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"462ebde2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"postInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"params\":{\"extension\":\"Order extension data\",\"extraData\":\"Extra data\",\"makingAmount\":\"Actual making amount\",\"order\":\"Order being processed\",\"orderHash\":\"Hash of the order being processed\",\"remainingMakingAmount\":\"Order remaining making amount\",\"taker\":\"Taker address\",\"takingAmount\":\"Actual taking amount\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Callback method that gets called after all fund transfers\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IPostInteraction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IPreInteraction":{"abi":[{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"preInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"0986bdd5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"preInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"params\":{\"extension\":\"Order extension data\",\"extraData\":\"Extra data\",\"makingAmount\":\"Actual making amount\",\"order\":\"Order being processed\",\"orderHash\":\"Hash of the order being processed\",\"remainingMakingAmount\":\"Order remaining making amount\",\"taker\":\"Taker address\",\"takingAmount\":\"Actual taking amount\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Callback method that gets called before any funds transfers\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IPreInteraction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"ITakerInteraction":{"abi":[{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"takerInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"adf38ba1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"takerInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"details\":\"This callback allows to interactively handle maker aseets to produce takers assets, doesn't supports ETH as taker assets\",\"params\":{\"extension\":\"Order extension data\",\"extraData\":\"Extra data\",\"makingAmount\":\"Actual making amount\",\"order\":\"Order being processed\",\"orderHash\":\"Hash of the order being processed\",\"remainingMakingAmount\":\"Order remaining making amount\",\"taker\":\"Taker address\",\"takingAmount\":\"Actual taking amount\"}}},\"title\":\"Interface for interactor which acts after `maker -> taker` transfer but before `taker -> maker` transfer.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Callback method that gets called after maker fund transfer but before taker fund transfer\"}},\"notice\":\"The order filling steps are `preInteraction` =>` Transfer \\\"maker -> taker\\\"` => **`Interaction`** => `Transfer \\\"taker -> maker\\\"` => `postInteraction`\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"ITakerInteraction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for wrapper as WETH-like token.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256)\":{\"params\":{\"amount\":\"Amount of wrapped tokens to withdraw.\"}}},\"title\":\"IWETH\",\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,uint256)\":{\"notice\":\"Emitted when Ether is deposited to get wrapper tokens.\"},\"Withdrawal(address,uint256)\":{\"notice\":\"Emitted when wrapper tokens is withdrawn as Ether.\"}},\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Deposit Ether to get wrapper tokens.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw wrapped tokens as Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"IWETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"ImmutablesLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122070e1df75091c14479acc77facf4ae482b1720d65c1b111b957b2c08103c6508564736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xE1DF75091C14479ACC77FACF4AE482B172 0xD PUSH6 0xC1B111B957B2 0xC0 DUP2 SUB 0xC6 POP DUP6 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"153294:922:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122070e1df75091c14479acc77facf4ae482b1720d65c1b111b957b2c08103c6508564736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xE1DF75091C14479ACC77FACF4AE482B172 0xD PUSH6 0xC1B111B957B2 0xC0 DUP2 SUB 0xC6 POP DUP6 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"153294:922:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for escrow immutables.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"ImmutablesLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"MakerTraitsLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b30dd952df7e2ee7769a026d6bed7a321d8b40fbf2bcc4a3a52f3b68dbe1559164736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xD 0xD9 MSTORE 0xDF PUSH31 0x2EE7769A026D6BED7A321D8B40FBF2BCC4A3A52F3B68DBE1559164736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"24228:7005:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b30dd952df7e2ee7769a026d6bed7a321d8b40fbf2bcc4a3a52f3b68dbe1559164736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xD 0xD9 MSTORE 0xDF PUSH31 0x2EE7769A026D6BED7A321D8B40FBF2BCC4A3A52F3B68DBE1559164736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"24228:7005:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The MakerTraits type is a uint256 and different parts of the number are used to encode different traits. High bits are used for flags 255 bit `NO_PARTIAL_FILLS_FLAG`          - if set, the order does not allow partial fills 254 bit `ALLOW_MULTIPLE_FILLS_FLAG`      - if set, the order permits multiple fills 253 bit                                  - unused 252 bit `PRE_INTERACTION_CALL_FLAG`      - if set, the order requires pre-interaction call 251 bit `POST_INTERACTION_CALL_FLAG`     - if set, the order requires post-interaction call 250 bit `NEED_CHECK_EPOCH_MANAGER_FLAG`  - if set, the order requires to check the epoch manager 249 bit `HAS_EXTENSION_FLAG`             - if set, the order has extension(s) 248 bit `USE_PERMIT2_FLAG`               - if set, the order uses permit2 247 bit `UNWRAP_WETH_FLAG`               - if set, the order requires to unwrap WETH Low 200 bits are used for allowed sender, expiration, nonceOrEpoch, and series uint80 last 10 bytes of allowed sender address (0 if any) uint40 expiration timestamp (0 if none) uint40 nonce or epoch uint40 series\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MakerTraitsLib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library to manage and check MakerTraits, which are used to encode the maker's preferences for an order in a single uint256.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"MakerTraitsLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122061a7ee727fe809b4c1dfe2a40935a0379c4af3eab32df8369f21f89357f2f12764736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xA7EE PUSH19 0x7FE809B4C1DFE2A40935A0379C4AF3EAB32DF8 CALLDATASIZE SWAP16 0x21 0xF8 SWAP4 JUMPI CALLCODE CALL 0x27 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"113883:26664:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122061a7ee727fe809b4c1dfe2a40935a0379c4af3eab32df8369f21f89357f2f12764736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xA7EE PUSH19 0x7FE809B4C1DFE2A40935A0379C4AF3EAB32DF8 CALLDATASIZE SWAP16 0x21 0xF8 SWAP4 JUMPI CALLCODE CALL 0x27 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"113883:26664:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220578078721a9faeb57075d43193ff80754c0412a73908471f9cf66ab08a23da9164736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI DUP1 PUSH25 0x721A9FAEB57075D43193FF80754C0412A73908471F9CF66AB0 DUP11 0x23 0xDA SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"99289:8421:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220578078721a9faeb57075d43193ff80754c0412a73908471f9cf66ab08a23da9164736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI DUP1 PUSH25 0x721A9FAEB57075D43193FF80754C0412A73908471F9CF66AB0 DUP11 0x23 0xDA SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"99289:8421:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"MerkleStorageInvalidator":{"abi":[{"inputs":[{"internalType":"address","name":"limitOrderProtocol","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessDenied","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"lastValidated","outputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32","name":"leaf","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"takerInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a03461006957601f61058e38819003918201601f19168301916001600160401b0383118484101761006e5780849260209460405283398101031261006957516001600160a01b038116810361006957608052604051610509908161008582396080518160d50152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c908163acf4ce5c14610384575063adf38ba11461003b57600080fd5b3461037c577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36016101e08112610380576101001361037c5767ffffffffffffffff90610104358281116103785761009690369086016103d3565b73ffffffffffffffffffffffffffffffffffffffff92916101443584811603610374576101c435858111610370576100d190369089016103d3565b50937f0000000000000000000000000000000000000000000000000000000000000000163303610348577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff609161012691610451565b010135917dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff92825191602092838101906101243582527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00008460101b1686820152603e815261019181610406565b5190209181357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18336030181121561034457820195863591888311610340576005928060051b3603878a011361033c578a908888870135960135998951898101907fffffffffffffffff0000000000000000000000000000000000000000000000008960c01b1682528c60288201526028815261022d81610406565b519020958a845b8486106103055750505050505081169116036102dd57600181018091116102b15783519586850190811187821017610285578452855281850193845285528490528320915182555160019091015580f35b60248860418b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60248760118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8784517f09bde339000000000000000000000000000000000000000000000000000000008152fd5b85988c849596976001951b87010135908181106000146103315782528c52205b96019291908a8e610234565b9082528c5220610325565b8a80fd5b8980fd5b8880fd5b8683517f4ca88867000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8580fd5b8380fd5b5080fd5b8280fd5b905082843461037c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037c579083913581528060205220600181549101549082526020820152f35b9181601f840112156104015782359167ffffffffffffffff8311610401576020838186019501011161040157565b600080fd5b6060810190811067ffffffffffffffff82111761042257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b919091602083106104ca578035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe063ffffffff8360c01c169260e01c940184116104a0578101602001920390565b7f9605a0100000000000000000000000000000000000000000000000000000000060005260046000fd5b5060009150819056fea26469706673582212208deb4f84672a58d3350ac3738d63e3e7db0034718d78dd88d6b5f847d332f9a864736f6c63430008170033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH2 0x69 JUMPI PUSH1 0x1F PUSH2 0x58E CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x6E JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x69 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x69 JUMPI PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x509 SWAP1 DUP2 PUSH2 0x85 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH1 0xD5 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xACF4CE5C EQ PUSH2 0x384 JUMPI POP PUSH4 0xADF38BA1 EQ PUSH2 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x37C JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD PUSH2 0x1E0 DUP2 SLT PUSH2 0x380 JUMPI PUSH2 0x100 SGT PUSH2 0x37C JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH2 0x104 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x378 JUMPI PUSH2 0x96 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x3D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP2 PUSH2 0x144 CALLDATALOAD DUP5 DUP2 AND SUB PUSH2 0x374 JUMPI PUSH2 0x1C4 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x370 JUMPI PUSH2 0xD1 SWAP1 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x3D3 JUMP JUMPDEST POP SWAP4 PUSH32 0x0 AND CALLER SUB PUSH2 0x348 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 SWAP2 PUSH2 0x126 SWAP2 PUSH2 0x451 JUMP JUMPDEST ADD ADD CALLDATALOAD SWAP2 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP3 MLOAD SWAP2 PUSH1 0x20 SWAP3 DUP4 DUP2 ADD SWAP1 PUSH2 0x124 CALLDATALOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 DUP5 PUSH1 0x10 SHL AND DUP7 DUP3 ADD MSTORE PUSH1 0x3E DUP2 MSTORE PUSH2 0x191 DUP2 PUSH2 0x406 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 DUP2 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP4 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x344 JUMPI DUP3 ADD SWAP6 DUP7 CALLDATALOAD SWAP2 DUP9 DUP4 GT PUSH2 0x340 JUMPI PUSH1 0x5 SWAP3 DUP1 PUSH1 0x5 SHL CALLDATASIZE SUB DUP8 DUP11 ADD SGT PUSH2 0x33C JUMPI DUP11 SWAP1 DUP9 DUP9 DUP8 ADD CALLDATALOAD SWAP7 ADD CALLDATALOAD SWAP10 DUP10 MLOAD DUP10 DUP2 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 DUP10 PUSH1 0xC0 SHL AND DUP3 MSTORE DUP13 PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x28 DUP2 MSTORE PUSH2 0x22D DUP2 PUSH2 0x406 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP6 DUP11 DUP5 JUMPDEST DUP5 DUP7 LT PUSH2 0x305 JUMPI POP POP POP POP POP POP DUP2 AND SWAP2 AND SUB PUSH2 0x2DD JUMPI PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2B1 JUMPI DUP4 MLOAD SWAP6 DUP7 DUP6 ADD SWAP1 DUP2 GT DUP8 DUP3 LT OR PUSH2 0x285 JUMPI DUP5 MSTORE DUP6 MSTORE DUP2 DUP6 ADD SWAP4 DUP5 MSTORE DUP6 MSTORE DUP5 SWAP1 MSTORE DUP4 KECCAK256 SWAP2 MLOAD DUP3 SSTORE MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP9 PUSH1 0x41 DUP12 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP8 DUP5 MLOAD PUSH32 0x9BDE33900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 SWAP9 DUP13 DUP5 SWAP6 SWAP7 SWAP8 PUSH1 0x1 SWAP6 SHL DUP8 ADD ADD CALLDATALOAD SWAP1 DUP2 DUP2 LT PUSH1 0x0 EQ PUSH2 0x331 JUMPI DUP3 MSTORE DUP13 MSTORE KECCAK256 JUMPDEST SWAP7 ADD SWAP3 SWAP2 SWAP1 DUP11 DUP15 PUSH2 0x234 JUMP JUMPDEST SWAP1 DUP3 MSTORE DUP13 MSTORE KECCAK256 PUSH2 0x325 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP4 MLOAD PUSH32 0x4CA8886700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP DUP3 DUP5 CALLVALUE PUSH2 0x37C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37C JUMPI SWAP1 DUP4 SWAP2 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD SWAP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x401 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x401 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x401 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x422 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP4 LT PUSH2 0x4CA JUMPI DUP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH4 0xFFFFFFFF DUP4 PUSH1 0xC0 SHR AND SWAP3 PUSH1 0xE0 SHR SWAP5 ADD DUP5 GT PUSH2 0x4A0 JUMPI DUP2 ADD PUSH1 0x20 ADD SWAP3 SUB SWAP1 JUMP JUMPDEST PUSH32 0x9605A01000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xEB 0x4F DUP5 PUSH8 0x2A58D3350AC3738D PUSH4 0xE3E7DB00 CALLVALUE PUSH18 0x8D78DD88D6B5F847D332F9A864736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"211222:2090:0:-:0;;;;;;;;;;;;;-1:-1:-1;;211222:2090:0;;;;-1:-1:-1;;;;;211222:2090:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;211222:2090:0;;;;;;211822:42;;211222:2090;;;;;;;;211822:42;211222:2090;;;;;;;-1:-1:-1;211222:2090:0;;;;;;-1:-1:-1;211222:2090:0;;;;;-1:-1:-1;211222:2090:0"},"deployedBytecode":{"functionDebugData":{"abi_decode_bytes_calldata":{"entryPoint":979,"id":null,"parameterSlots":2,"returnSlots":2},"finalize_allocation":{"entryPoint":1030,"id":null,"parameterSlots":1,"returnSlots":0},"fun_get":{"entryPoint":1105,"id":6570,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"8274":[{"length":32,"start":213}]},"linkReferences":{},"object":"60806040908082526004918236101561001757600080fd5b600091823560e01c908163acf4ce5c14610384575063adf38ba11461003b57600080fd5b3461037c577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36016101e08112610380576101001361037c5767ffffffffffffffff90610104358281116103785761009690369086016103d3565b73ffffffffffffffffffffffffffffffffffffffff92916101443584811603610374576101c435858111610370576100d190369089016103d3565b50937f0000000000000000000000000000000000000000000000000000000000000000163303610348577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff609161012691610451565b010135917dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff92825191602092838101906101243582527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00008460101b1686820152603e815261019181610406565b5190209181357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18336030181121561034457820195863591888311610340576005928060051b3603878a011361033c578a908888870135960135998951898101907fffffffffffffffff0000000000000000000000000000000000000000000000008960c01b1682528c60288201526028815261022d81610406565b519020958a845b8486106103055750505050505081169116036102dd57600181018091116102b15783519586850190811187821017610285578452855281850193845285528490528320915182555160019091015580f35b60248860418b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60248760118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8784517f09bde339000000000000000000000000000000000000000000000000000000008152fd5b85988c849596976001951b87010135908181106000146103315782528c52205b96019291908a8e610234565b9082528c5220610325565b8a80fd5b8980fd5b8880fd5b8683517f4ca88867000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8580fd5b8380fd5b5080fd5b8280fd5b905082843461037c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037c579083913581528060205220600181549101549082526020820152f35b9181601f840112156104015782359167ffffffffffffffff8311610401576020838186019501011161040157565b600080fd5b6060810190811067ffffffffffffffff82111761042257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b919091602083106104ca578035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe063ffffffff8360c01c169260e01c940184116104a0578101602001920390565b7f9605a0100000000000000000000000000000000000000000000000000000000060005260046000fd5b5060009150819056fea26469706673582212208deb4f84672a58d3350ac3738d63e3e7db0034718d78dd88d6b5f847d332f9a864736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xACF4CE5C EQ PUSH2 0x384 JUMPI POP PUSH4 0xADF38BA1 EQ PUSH2 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x37C JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD PUSH2 0x1E0 DUP2 SLT PUSH2 0x380 JUMPI PUSH2 0x100 SGT PUSH2 0x37C JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH2 0x104 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x378 JUMPI PUSH2 0x96 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x3D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP2 PUSH2 0x144 CALLDATALOAD DUP5 DUP2 AND SUB PUSH2 0x374 JUMPI PUSH2 0x1C4 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x370 JUMPI PUSH2 0xD1 SWAP1 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x3D3 JUMP JUMPDEST POP SWAP4 PUSH32 0x0 AND CALLER SUB PUSH2 0x348 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60 SWAP2 PUSH2 0x126 SWAP2 PUSH2 0x451 JUMP JUMPDEST ADD ADD CALLDATALOAD SWAP2 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP3 MLOAD SWAP2 PUSH1 0x20 SWAP3 DUP4 DUP2 ADD SWAP1 PUSH2 0x124 CALLDATALOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 DUP5 PUSH1 0x10 SHL AND DUP7 DUP3 ADD MSTORE PUSH1 0x3E DUP2 MSTORE PUSH2 0x191 DUP2 PUSH2 0x406 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 DUP2 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP4 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x344 JUMPI DUP3 ADD SWAP6 DUP7 CALLDATALOAD SWAP2 DUP9 DUP4 GT PUSH2 0x340 JUMPI PUSH1 0x5 SWAP3 DUP1 PUSH1 0x5 SHL CALLDATASIZE SUB DUP8 DUP11 ADD SGT PUSH2 0x33C JUMPI DUP11 SWAP1 DUP9 DUP9 DUP8 ADD CALLDATALOAD SWAP7 ADD CALLDATALOAD SWAP10 DUP10 MLOAD DUP10 DUP2 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 DUP10 PUSH1 0xC0 SHL AND DUP3 MSTORE DUP13 PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x28 DUP2 MSTORE PUSH2 0x22D DUP2 PUSH2 0x406 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP6 DUP11 DUP5 JUMPDEST DUP5 DUP7 LT PUSH2 0x305 JUMPI POP POP POP POP POP POP DUP2 AND SWAP2 AND SUB PUSH2 0x2DD JUMPI PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2B1 JUMPI DUP4 MLOAD SWAP6 DUP7 DUP6 ADD SWAP1 DUP2 GT DUP8 DUP3 LT OR PUSH2 0x285 JUMPI DUP5 MSTORE DUP6 MSTORE DUP2 DUP6 ADD SWAP4 DUP5 MSTORE DUP6 MSTORE DUP5 SWAP1 MSTORE DUP4 KECCAK256 SWAP2 MLOAD DUP3 SSTORE MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 DUP9 PUSH1 0x41 DUP12 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP8 DUP5 MLOAD PUSH32 0x9BDE33900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 SWAP9 DUP13 DUP5 SWAP6 SWAP7 SWAP8 PUSH1 0x1 SWAP6 SHL DUP8 ADD ADD CALLDATALOAD SWAP1 DUP2 DUP2 LT PUSH1 0x0 EQ PUSH2 0x331 JUMPI DUP3 MSTORE DUP13 MSTORE KECCAK256 JUMPDEST SWAP7 ADD SWAP3 SWAP2 SWAP1 DUP11 DUP15 PUSH2 0x234 JUMP JUMPDEST SWAP1 DUP3 MSTORE DUP13 MSTORE KECCAK256 PUSH2 0x325 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP4 MLOAD PUSH32 0x4CA8886700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP DUP3 DUP5 CALLVALUE PUSH2 0x37C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37C JUMPI SWAP1 DUP4 SWAP2 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD SWAP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x401 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x401 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x401 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x422 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP4 LT PUSH2 0x4CA JUMPI DUP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH4 0xFFFFFFFF DUP4 PUSH1 0xC0 SHR AND SWAP3 PUSH1 0xE0 SHR SWAP5 ADD DUP5 GT PUSH2 0x4A0 JUMPI DUP2 ADD PUSH1 0x20 ADD SWAP3 SUB SWAP1 JUMP JUMPDEST PUSH32 0x9605A01000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xEB 0x4F DUP5 PUSH8 0x2A58D3350AC3738D PUSH4 0xE3E7DB00 CALLVALUE PUSH18 0x8D78DD88D6B5F847D332F9A864736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"211222:2090:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;211222:2090:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;211680:21;;;211222:2090;211666:10;:35;211662:87;;212623:187;165153:49;;;;:::i;:::-;212623:187;;211222:2090;;;;;;212921:42;;;;;;211222:2090;;;;;;;;;;;;;;212921:42;;;;;;:::i;:::-;211222:2090;212911:53;;211222:2090;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213083:13;;;;;;211222:2090;213099:20;;211222:2090;;;;213059:61;;;211222:2090;;;;;;;;;;;;;;213059:61;;;;;:::i;:::-;211222:2090;213049:72;;100984:13;;;100999:16;;;;;;211222:2090;;;;;;;;;;213145:49;213141:76;;211222:2090;;;;;;;;;;;;;;;;;;;;;;;;;;;213248:55;;;211222:2090;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213141:76;211222:2090;;;213203:14;;;;101017:3;211222:2090;;;;;;;;;;;;;;6418:61;:5;;;:61;:5;;;6747:119;;;;;6418:61;101017:3;211222:2090;100984:13;;;;;;;6418:61;6747:119;;;;;;6418:61;;211222:2090;;;;;;;;;;;;211662:87;211222:2090;;;211724:14;;;;211222:2090;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;211501:59;;211222:2090;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;166197:529;;;;166327:4;166308:23;;166304:48;;166419:248;;32721:652;166419:248;32721:652;;;;;;;;166419:248;;32721:652;;;;;;166327:4;32721:652;;;;166197:529::o;32721:652::-;32685:26;-1:-1:-1;32721:652:0;;-1:-1:-1;32721:652:0;166304:48;-1:-1:-1;166340:8:0;;-1:-1:-1;166340:8:0;;166333:19::o"},"methodIdentifiers":{"lastValidated(bytes32)":"acf4ce5c","takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"adf38ba1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitOrderProtocol\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"lastValidated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"takerInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"kind\":\"dev\",\"methods\":{\"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"details\":\"Verifies the proof and stores the last validated index and hashed secret. Only Limit Order Protocol can call this function.\"}},\"title\":\"Merkle Storage Invalidator contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"lastValidated(bytes32)\":{\"notice\":\"See {IMerkleStorageInvalidator-lastValidated}.\"},\"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"See {ITakerInteraction-takerInteraction}.\"}},\"notice\":\"Contract to invalidate hashed secrets from an order that supports multiple fills.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"MerkleStorageInvalidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"OffsetsLib":{"abi":[{"inputs":[],"name":"OffsetOutOfBounds","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212200637c834e89f6c3f75210105918757ace4ba0134001cc393240f6a3a0475f5bd64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD CALLDATACOPY 0xC8 CALLVALUE 0xE8 SWAP16 PUSH13 0x3F75210105918757ACE4BA0134 STOP SHR 0xC3 SWAP4 0x24 0xF PUSH11 0x3A0475F5BD64736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"31460:1921:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212200637c834e89f6c3f75210105918757ace4ba0134001cc393240f6a3a0475f5bd64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD CALLDATACOPY 0xC8 CALLVALUE 0xE8 SWAP16 PUSH13 0x3F75210105918757ACE4BA0134 STOP SHR 0xC3 SWAP4 0x24 0xF PUSH11 0x3A0475F5BD64736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"31460:1921:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OffsetOutOfBounds\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"A library for retrieving values by offsets from a concatenated calldata.\",\"errors\":{\"OffsetOutOfBounds()\":[{\"details\":\"Error to be thrown when the offset is out of bounds.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"OffsetsLib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"OffsetsLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212209c1289888efd606df5496395abc739fb5e50233ad4f4534c80b450bb86ab20cd64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 SLT DUP10 DUP9 DUP15 REVERT PUSH1 0x6D CREATE2 0x49 PUSH4 0x95ABC739 0xFB 0x5E POP 0x23 GASPRICE 0xD4 DELEGATECALL MSTORE8 0x4C DUP1 0xB4 POP 0xBB DUP7 0xAB KECCAK256 0xCD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"33973:1342:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212209c1289888efd606df5496395abc739fb5e50233ad4f4534c80b450bb86ab20cd64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 SLT DUP10 DUP9 DUP15 REVERT PUSH1 0x6D CREATE2 0x49 PUSH4 0x95ABC739 0xFB 0x5E POP 0x23 GASPRICE 0xD4 DELEGATECALL MSTORE8 0x4C DUP1 0xB4 POP 0xBB DUP7 0xAB KECCAK256 0xCD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"33973:1342:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"ProxyHashLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220bd7485d64373689a2d433ac09e535c89943ce9be949770a87c4e674c0993a18064736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD PUSH21 0x85D64373689A2D433AC09E535C89943CE9BE949770 0xA8 PUSH29 0x4E674C0993A18064736F6C634300081700330000000000000000000000 ","sourceMap":"35504:883:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220bd7485d64373689a2d433ac09e535c89943ce9be949770a87c4e674c0993a18064736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD PUSH21 0x85D64373689A2D433AC09E535C89943CE9BE949770 0xA8 PUSH29 0x4E674C0993A18064736F6C634300081700330000000000000000000000 ","sourceMap":"35504:883:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library to compute the hash of the proxy bytecode.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"ProxyHashLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"ResolverValidationExtension":{"abi":[{"inputs":[],"name":"NotEnoughCredit","type":"error"},{"inputs":[],"name":"OnlyFeeBankAccess","type":"error"},{"inputs":[],"name":"OnlyLimitOrderProtocol","type":"error"},{"inputs":[],"name":"ResolverCanNotFillOrder","type":"error"},{"inputs":[],"name":"FEE_BANK","outputs":[{"internalType":"contract IFeeBank","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"availableCredit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAvailableCredit","outputs":[{"internalType":"uint256","name":"allowance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"getMakingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"getTakingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"increaseAvailableCredit","outputs":[{"internalType":"uint256","name":"allowance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"postInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}],"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"preInteraction","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"FEE_BANK()":"2ce26aeb","availableCredit(address)":"5886216f","decreaseAvailableCredit(address,uint256)":"85eda2de","getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)":"1d9671c3","getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)":"d7ff8a80","increaseAvailableCredit(address,uint256)":"3ee5ef1f","postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"462ebde2","preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"0986bdd5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotEnoughCredit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyFeeBankAccess\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyLimitOrderProtocol\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ResolverCanNotFillOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FEE_BANK\",\"outputs\":[{\"internalType\":\"contract IFeeBank\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAvailableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"getMakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"getTakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAvailableCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"postInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"preInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Resolver Validation Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"FEE_BANK()\":{\"notice\":\"See {IFeeBankCharger-feeBank}.\"},\"availableCredit(address)\":{\"notice\":\"See {IFeeBankCharger-availableCredit}.\"},\"decreaseAvailableCredit(address,uint256)\":{\"notice\":\"See {IFeeBankCharger-decreaseAvailableCredit}.\"},\"getMakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"notice\":\"See {IAmountGetter-getMakingAmount}\"},\"getTakingAmount((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,bytes)\":{\"notice\":\"See {IAmountGetter-getTakingAmount}\"},\"increaseAvailableCredit(address,uint256)\":{\"notice\":\"See {IFeeBankCharger-increaseAvailableCredit}.\"},\"postInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"See {IPostInteraction-postInteraction}\"},\"preInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"See {IPreInteraction-preInteraction}\"}},\"notice\":\"This abstract contract combines functionalities to enhance security and compliance in the order execution process. Ensures that only transactions from whitelisted resolvers or resolvers who own specific accessToken are processed within the post-interaction phase of order execution. Additionally, it allows charging a fee to resolvers in the `postInteraction` method, providing a mechanism for resolver fee management.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"ResolverValidationExtension\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"RevertReasonForwarder":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ffe599b3e8533d93df3ac944dd1f3df7d4dee7a4071e0d515652b8e2574a58aa64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xE5 SWAP10 0xB3 0xE8 MSTORE8 RETURNDATASIZE SWAP4 0xDF GASPRICE 0xC9 PREVRANDAO 0xDD 0x1F RETURNDATASIZE 0xF7 0xD4 0xDE 0xE7 LOG4 SMOD 0x1E 0xD MLOAD JUMP MSTORE 0xB8 0xE2 JUMPI 0x4A PC 0xAA PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"36632:1192:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ffe599b3e8533d93df3ac944dd1f3df7d4dee7a4071e0d515652b8e2574a58aa64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xE5 SWAP10 0xB3 0xE8 MSTORE8 RETURNDATASIZE SWAP4 0xDF GASPRICE 0xC9 PREVRANDAO 0xDD 0x1F RETURNDATASIZE 0xF7 0xD4 0xDE 0xE7 LOG4 SMOD 0x1E 0xD MLOAD JUMP MSTORE 0xB8 0xE2 JUMPI 0x4A PC 0xAA PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"36632:1192:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"RevertReasonForwarder\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides utilities for forwarding and retrieving revert reasons from failed external calls.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"RevertReasonForwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122086b318b26c455589b4df402edca04d2ca7aa53535e69c7fcaaee02b05fe00e1864736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xB3 XOR 0xB2 PUSH13 0x455589B4DF402EDCA04D2CA7AA MSTORE8 MSTORE8 0x5E PUSH10 0xC7FCAAEE02B05FE00E18 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"38633:34200:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122086b318b26c455589b4df402edca04d2ca7aa53535e69c7fcaaee02b05fe00e1864736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xB3 XOR 0xB2 PUSH13 0x455589B4DF402EDCA04D2CA7AA MSTORE8 MSTORE8 0x5E PUSH10 0xC7FCAAEE02B05FE00E18 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"38633:34200:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"SafeERC20":{"abi":[{"inputs":[],"name":"ForceApproveFailed","type":"error"},{"inputs":[],"name":"Permit2TransferAmountTooHigh","type":"error"},{"inputs":[],"name":"SafeDecreaseAllowanceFailed","type":"error"},{"inputs":[],"name":"SafeIncreaseAllowanceFailed","type":"error"},{"inputs":[],"name":"SafePermitBadLength","type":"error"},{"inputs":[],"name":"SafeTransferFailed","type":"error"},{"inputs":[],"name":"SafeTransferFromFailed","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122007b18e5644a03f9271b814631ba0e0be28f5d74a1c10bd760768bdb0844d000064736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xB1 DUP15 JUMP PREVRANDAO LOG0 EXTCODEHASH SWAP3 PUSH18 0xB814631BA0E0BE28F5D74A1C10BD760768BD 0xB0 DUP5 0x4D STOP STOP PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"167189:25595:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122007b18e5644a03f9271b814631ba0e0be28f5d74a1c10bd760768bdb0844d000064736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xB1 DUP15 JUMP PREVRANDAO LOG0 EXTCODEHASH SWAP3 PUSH18 0xB814631BA0E0BE28F5D74A1C10BD760768BD 0xB0 DUP5 0x4D STOP STOP PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"167189:25595:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ForceApproveFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permit2TransferAmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeDecreaseAllowanceFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeIncreaseAllowanceFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafePermitBadLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeTransferFromFailed\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Implements efficient safe methods for ERC20 interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Compared to the standard ERC20, this implementation offers several enhancements: 1. more gas-efficient, providing significant savings in transaction costs. 2. support for different permit implementations 3. forceApprove functionality 4. support for WETH deposit and withdraw\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"StringUtil":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122039f3cb05db88262c02f48ed5fdc55c7a9a30da6e61bdd4432e70f24e7c8fbea864736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY RETURN 0xCB SDIV 0xDB DUP9 0x26 0x2C MUL DELEGATECALL DUP15 0xD5 REVERT 0xC5 0x5C PUSH27 0x9A30DA6E61BDD4432E70F24E7C8FBEA864736F6C63430008170033 ","sourceMap":"73007:4242:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122039f3cb05db88262c02f48ed5fdc55c7a9a30da6e61bdd4432e70f24e7c8fbea864736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY RETURN 0xCB SDIV 0xDB DUP9 0x26 0x2C MUL DELEGATECALL DUP15 0xD5 REVERT 0xC5 0x5C PUSH27 0x9A30DA6E61BDD4432E70F24E7C8FBEA864736F6C63430008170033 ","sourceMap":"73007:4242:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library with gas-efficient string operations.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"StringUtil\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"StringUtil\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"TakerTraitsLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206a0b13229797b763c26969162badb2c92135c45a9297dcff77fd8962c486902664736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xB13229797B763C2696916 0x2B 0xAD 0xB2 0xC9 0x21 CALLDATALOAD 0xC4 GAS SWAP3 SWAP8 0xDC SELFDESTRUCT PUSH24 0xFD8962C486902664736F6C63430008170033000000000000 ","sourceMap":"78592:4048:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206a0b13229797b763c26969162badb2c92135c45a9297dcff77fd8962c486902664736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xB13229797B763C2696916 0x2B 0xAD 0xB2 0xC9 0x21 CALLDATALOAD 0xC4 GAS SWAP3 SWAP8 0xDC SELFDESTRUCT PUSH24 0xFD8962C486902664736F6C63430008170033000000000000 ","sourceMap":"78592:4048:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The TakerTraits are structured as follows: High bits are used for flags 255 bit `_MAKER_AMOUNT_FLAG`           - If set, the taking amount is calculated based on making amount, otherwise making amount is calculated based on taking amount. 254 bit `_UNWRAP_WETH_FLAG`            - If set, the WETH will be unwrapped into ETH before sending to taker. 253 bit `_SKIP_ORDER_PERMIT_FLAG`      - If set, the order skips maker's permit execution. 252 bit `_USE_PERMIT2_FLAG`            - If set, the order uses the permit2 function for authorization. 251 bit `_ARGS_HAS_TARGET`             - If set, then first 20 bytes of args are treated as target address for maker\\u2019s funds transfer. 224-247 bits `ARGS_EXTENSION_LENGTH`   - The length of the extension calldata in the args. 200-223 bits `ARGS_INTERACTION_LENGTH` - The length of the interaction calldata in the args. 0-184 bits                             - The threshold amount (the maximum amount a taker agrees to give in exchange for a making amount).\",\"kind\":\"dev\",\"methods\":{},\"title\":\"TakerTraitsLib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library to manage and check TakerTraits, which are used to encode the taker's preferences for an order in a single uint256.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"TakerTraitsLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"TimelocksLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122013be938c504d479ad651b89039fb55972929317f4dadb59351efcfba7097318a64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xBE SWAP4 DUP13 POP 0x4D SELFBALANCE SWAP11 0xD6 MLOAD 0xB8 SWAP1 CODECOPY 0xFB SSTORE SWAP8 0x29 0x29 BALANCE PUSH32 0x4DADB59351EFCFBA7097318A64736F6C63430008170033000000000000000000 ","sourceMap":"83855:1882:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122013be938c504d479ad651b89039fb55972929317f4dadb59351efcfba7097318a64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xBE SWAP4 DUP13 POP 0x4D SELFBALANCE SWAP11 0xD6 MLOAD 0xB8 SWAP1 CODECOPY 0xFB SSTORE SWAP8 0x29 0x29 BALANCE PUSH32 0x4DADB59351EFCFBA7097318A64736F6C63430008170033000000000000000000 ","sourceMap":"83855:1882:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Timelocks library for compact storage of timelocks in a uint256.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"TimelocksLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"},"UniERC20":{"abi":[{"inputs":[],"name":"ApproveCalledOnETH","type":"error"},{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"FromIsNotSender","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"NotEnoughValue","type":"error"},{"inputs":[],"name":"ToIsNotThis","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212208795d4991c60ab4ec1f6658a3641e4dfec94b8feb2eae6d61957339dc7574a5d64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 SWAP6 0xD4 SWAP10 SHR PUSH1 0xAB 0x4E 0xC1 0xF6 PUSH6 0x8A3641E4DFEC SWAP5 0xB8 INVALID 0xB2 0xEA 0xE6 0xD6 NOT JUMPI CALLER SWAP14 0xC7 JUMPI 0x4A 0x5D PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"200823:7063:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212208795d4991c60ab4ec1f6658a3641e4dfec94b8feb2eae6d61957339dc7574a5d64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 SWAP6 0xD4 SWAP10 SHR PUSH1 0xAB 0x4E 0xC1 0xF6 PUSH6 0x8A3641E4DFEC SWAP5 0xB8 INVALID 0xB2 0xEA 0xE6 0xD6 NOT JUMPI CALLER SWAP14 0xC7 JUMPI 0x4A 0x5D PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"200823:7063:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApproveCalledOnETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FromIsNotSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ToIsNotThis\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Library to abstract the handling of ETH and ERC20 tokens, enabling unified interaction with both. It allows usage of ETH as ERC20. Utilizes SafeERC20 for ERC20 interactions and provides additional utility functions.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"UniERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowFactory.sol\":\"UniERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/escrow/EscrowFactory.sol\":{\"keccak256\":\"0x00aed9bf5e4400ffa5cee16ea161c2e356b4271c1294e23f1106224e9bdd3887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e39d7547895ae351304b751b7d87ae312d4ac69c91a123ee497fb70d57e1c\",\"dweb:/ipfs/Qmcpo95pck1meLxFZn8cA89MADMQXrxVWscpCgVF5efMgY\"]}},\"version\":1}"}}}}}